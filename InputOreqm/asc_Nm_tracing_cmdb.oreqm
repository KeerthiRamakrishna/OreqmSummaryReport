<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_Nm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_4.0.3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_R21-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_Nm_EBExtensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_test_Manual_TestSpec.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 19:38:02 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_Nm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_4.0.3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_AUTOSAR_SWS_NetworkManagementInterface_R21-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_requirements_Nm_EBExtensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_Native/asc_Nm_test_Manual_TestSpec.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">
    <specobject>
      <id>Nm.ASR403.ECUC_Nm_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name: NmStandardBusType
        Parameter Type: Enumeration
        Parent Containers: NmStandardBusNmConfig,
        Description: Identifies the bus type of the channel for standard AUTOSAR &lt;BusNm&gt;s and is used
        to determine which set of API calls to be called by Nm for the &lt;BusNm&gt;s.
        Introduction: Note: The Ethernet bus' NM is UdpNm
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Enumeration Literal: NM_BUSNM_CANNM, AUTOSAR_ECUC
        Enumeration Literal: NM_BUSNM_FRNM, AUTOSAR_ECUC
        Enumeration Literal: NM_BUSNM_LINNM, AUTOSAR_ECUC
        Enumeration Literal: NM_BUSNM_UDPNM, AUTOSAR_ECUC
      </description>
      <comment>
        DEVIATION: The bus type "NM_BUSNM_LINNM" is not supported yet.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ECUC_Nm_00220</srcid><srcstatus/><internalId>35</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.BusTypeLINNM</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.ECUC_Nm_00222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name: NmShutdownDelayTimer
        Parameter Type: FloatValue
        Parent Containers: NmChannelConfig,
        Description: This parameter defines the time in seconds which the NM Coordination algorithm
        shall delay the release of this channel with.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
        Max-Value: Inf (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_501</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30016</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30017</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NotRemovedConfigurationParameters</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Nm Interface module shall provide the following header files: Nm.h (for declaration of
        provided interface functions) Nm_Cbk.h (for declaration of provided call-back functions) Nm_Cfg.
        h (for pre-compile time configurable parameters) NmStack_Types.h (type definitions for the Nm
        Stack, see chapter Type definitions)
      </description>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00123.1</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00123.2</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00123.3</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        The following header files will be included within the Nm Interface module: Std_Types.h (for
        AUTOSAR standard types)Note: Platform_Types.h (for platform specific types) and Compiler.h (for
        compiler specific language extensions) are indirectly included via AUTOSAR standard types.
        MemMap.h (for memory abstraction) SchM_Nm.h (for interfaces with the BSW Scheduler) ComM_Nm.h (
        for Communication Manager callback functions)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00124.1</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00124.2</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00124.3</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00124.4</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00124.5</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of Nm_NetworkRequest: This function is only available if NmPassiveModeEnabled is
        set to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00130</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of Nm_NetworkRelease: This function is only available if NmPassiveModeEnabled is
        set to FALSE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00132</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        The function Nm_GetVersionInfo shall return the version information of this module. The version
        information includes: Module Id Vendor Id Vendor specific version numbers (BSW00407). Hint: If
        source code for caller and callee of this function is available this function should be
        realized as a macro. The macro should be defined in the modules header file.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1339</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32081</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of Nm_GetVersionInfo: This function is only available if NmVersionInfoApi is set
        to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1321</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        The actions of the coordination algorithm shall not be limited to the main function of Nm (
        Nm_MainFunction()). Rationale: No limitation of the implementation. Note: The Nm Coordinator
        algorithm is allowed to perform required actions directly on any indications/callbacks (except
        for evaluating timers). Timers should/could be initiated inside callbacks. The main function
        should perform timer-evaluation and trigger expired timers. The main function should perform
        coordination initiation evaluation and initiate timers if they are not already initiated.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_713</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1688</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        When the coordination algorithm is started, a shutdown timer shall be activated for all
        currently awake networks in the coordination cluster. Each timer shall be configured with the
        default shutdown time for that network given by the configuration parameter
        NmShutdownDelayTimer.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_441</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30016</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30017</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name: Nm_RepeatMessageIndication Syntax: void Nm_RepeatMessageIndication(ÿÿÿ const
        NetworkHandleType nmNetworkHandle) Service ID[hex]: 0x1a Sync/Async: Synchronous Reentrancy:
        Reentrant Parameters (in): nmNetworkHandle Identification of the NM-channel Parameters (inout)
        None Parameters (out): None Return value: None Description: Service to indicate that an NM
        message with set Repeat Message Request Bit has been received.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_369</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmDevErrorDetect is set, all function calls containing a
        NetworkHandleType parameter shall raise the error NM_E_HANDLE_UNDEF if the network parameter is
        not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_492</srcid><srcstatus/><internalId>443</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_598</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_684</srcid><srcstatus/><internalId>453</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_767</srcid><srcstatus/><internalId>457</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_827</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_869</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_917</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_970</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1014</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1054</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1097</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1145</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1197</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1247</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1293</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1373</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1430</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1518</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1578</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1625</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1665</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1720</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1775</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1834</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1940</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2266</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00244</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        All NM networks configured to be part of a coordinated cluster of the NM coordinator
        functionality shall have the corresponding Bus NM configured to be able to actively send out NM
        messages (e.g. CANNM_PASSIVE_MODE_ENABLED = false). As a result of this configuration
        restriction, all BusNm used by the coordinator functionality of the Nm module shall provide the
        API &lt;BusNm&gt;_NetworkRequest(
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/Nm_Cfg.c_267</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Nm module shall perform Inter Module Checks to avoid integration of incompatible files. The
        imported included files shall be checked by preprocessing directives. The following version
        numbers shall be verified: &lt;MODULENAME&gt;_AR_RELEASE_MAJOR_VERSION &lt;MODULENAME&gt;
        _AR_RELEASE_MINOR_VERSION
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00246.VersionCheck</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ Nm_4_0_3.xml</source>
      <version>1</version>
      <description>
        In case an API is called with NULL-pointer as parameter, the API service shall return
        immediately without any further action, beside reporting NM_E_PARAM_POINTER.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_923</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_976</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1020</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1103</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1151</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1203</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1252</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1299</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1305</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1333</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1630</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>Nm.ASR403.SWS_Nm_00001_PI</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The standardized common published parameters as required by BSW00402 in the General Requirements on Basic
        Software Modules [2] shall be published within the header file of this module and need to be provided in the
        BSW Module Description. The according module abbreviation can be found in the List of Basic Software Modules
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32082</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>Nm.ECUC_Nm_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmGlobalConfig
        Parent Container:
          Nm
        Description:
          This container contains all global configuration parameters of the Nm
          Interface.
        Configuration Parameters:
          NmEcucPartitionRef
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_976</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmChannelConfig
        Parent Container:
          Nm
        Description:
          This container contains the configuration (parameters) of the bus
          channel(s). The channel parameter shall be harmonized within the
          whole communication stack.
        Configuration Parameters:
          NmActiveCoordinator, NmChannelSleepMaster, NmComUserDataSupport,
          NmCoordClusterIndex, NmDynamicPncToChannelMappingEnabled,
          NmPassiveModeEnabled, NmStateReportEnabled, NmSynchronizingNetwork,
          NmComMChannelRef, NmStateReportSignalRef
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_80</srcid><srcstatus/><internalId>562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmGlobalConstants
        Parent Container:
          NmGlobalConfig
        Description:
          -
        Configuration Parameters:
          NmNumberOfChannels
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1022</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmGlobalProperties
        Parent Container:
          NmGlobalConfig
        Description:
          -
        Configuration Parameters:
          NmCycletimeMainFunction, NmDevErrorDetect, NmVersionInfoApi
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1803</srcid><srcstatus/><internalId>596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmGlobalFeatures
        Parent Container:
          NmGlobalConfig
        Description:
          -
        Configuration Parameters:
          NmBusSynchronizationEnabled, NmCarWakeUpCallout, NmCarWakeUpRxEnabled,
          NmComControlEnabled, NmCoordinatorSupportEnabled, NmCoordinatorSyncSupport,
          NmDynamicPncToChannelMappingSupport, NmGlobalCoordinatorTime,
          NmPduRxIndicationEnabled, NmRemoteSleepIndEnabled, NmStateChangeIndEnabled,
          NmSynchronizedPncShutdownEnabled, NmUserDataEnabled
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1080</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmNumberOfChannels
        Parent Container:
          NmGlobalConstants
        Description:
          Number of NM channels allowed within one ECU.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          1 .. 255
        Default Value:
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
        Included Containers:
          -
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1035</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmDevErrorDetect
        Parent Container:
          NmGlobalProperties
        Description:
          Switches the development error detection and notification on or off.
          true: detection and notification is enabled.
          false: detection and notification is disabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1844</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_StateChangeNotification_Off</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmVersionInfoApi
        Parent Container:
          NmGlobalProperties
        Description:
          Pre-processor switch for enabling Version Info API support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
        Included Containers:
          -
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1872</srcid><srcstatus/><internalId>599</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCycletimeMainFunction
        Parent Container:
          NmGlobalProperties
        Description:
          The period between successive calls to the Main Function of the NM
          Interface in seconds.
        Multiplicity:
          0..1
        Type:
          EcucFloatParamDef
        Range:
          ]0 .. INF[
        Default Value:
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If NmCoordinatorSupportEnabled is set to TRUE, then
          the NmCycletimeMainFunction shall be configured.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1816</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmCycletimeMainFunction.Multiplicity</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCoordinatorSupportEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling NM Coordinator support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: Only valid if at least one NM channel exists which has
          NmPassiveModeEnabled set to FALSE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1313</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmRemoteSleepIndEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling Remote Sleep Indication support.
          This feature is required for a Gateway or Nm Coordinator functionality.
          Note that this feature should not be used if all NM channels have
          Passive Mode enabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If NmCoordinatorSupportEnabled == TRUE then
          NmRemoteSleepIndEnabled = TRUE
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1599</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmRemoteSleepIndEnabledDependency</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmBusSynchronizationEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling bus synchronization support of the
          &lt;BusNm&gt;&gt;s. This feature is required for NM Coordinator nodes only.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: This parameter must be enabled if
          NmCoordinatorSupportEnabled is enabled.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1150</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmBusSynchronizationEnabledDependency</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmComControlEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling the Communication Control support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1269</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmUserDataEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling User Data support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
        Included Containers:
          -
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1769</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmPduRxIndicationEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling the PDU Rx Indication.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1474</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmStateChangeIndEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Pre-processor switch for enabling the Network Management state
          change notification.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: NmStateChangeIndEnabled = TRUE
          if NmDynamicPncToChannelMappingEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1651</srcid><srcstatus/><internalId>593</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmStateChangeIndEnabledDependency</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmComMChannelRef
        Parent Container:
          NmChannelConfig
        Description:
          Reference to the corresponding ComM Channel.
        Multiplicity:
          1
        Type:
          Symbolic name reference to ComMChannel
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_643</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmBusType
        Parent Container:
          NmChannelConfig
        Description:
          -
        Configuration Parameters:
          -
        Container Choices:
          Container Name          Multiplicity      Scope/Dependency
          NmGenericBusNmConfig    0..1
          NmStandardBusNmConfig   0..1
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_817</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmGenericBusNmPrefix
        Parent Container:
          NmGenericBusNmConfig
        Description:
          The prefix which identifies the generic &lt;BusNm&gt;. This will be used to
          determine the API name to be called by Nm for the provided interfaces
          of the &lt;BusNm&gt;. This string will used for the module prefix before the
          "_" character in the API call name.
        Multiplicity:
          1
        Type:
          EcucStringParamDef
        Default Value:
          Regular Expression
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_842</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmStandardBusType
        Parent Container:
          NmStandardBusNmConfig
        Description:
          Identifies the bus type of the channel for standard AUTOSAR
          &lt;BusNm&gt;s and is used to determine which set of API calls to be called
          by Nm for the &lt;BusNm&gt;s. Note: The Ethernet bus’ NM is UdpNm !
        Multiplicity:
          1
        Type:
          EcucEnumerationParamDef
        Range:
          NM_BUSNM_CANNM      CAN bus
          NM_BUSNM_FRNM       FlexRay bus
          NM_BUSNM_J1939NM    J1939 bus (address claiming)
          NM_BUSNM_LOCALNM    Local Bus (e.g. LIN bus)
          NM_BUSNM_UDPNM      Ethernet bus (using UDP)
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: Configuring value to NM_BUSNM_LOCALNM is only
          allowed if NmCoordClusterIndex for the corresponding channel is
          defined (i.e channel is coordinated).
        Included Containers:
          -
      </description>
      <comment>
        DEVIATION: The bus type "NM_BUSNM_LINNM" is not supported yet.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_955</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmStandardBusTypeValueAndDependency</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCoordClusterIndex
        Parent Container:
          NmChannelConfig
        Description:
          If this parameter is undefined for a channel, the corresponding bus
          does not belong to an NM coordination cluster.
        Multiplicity:
          0..1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 255
        Default Value:
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If NmCoordClusterIndex is defined than
          NmPassiveModeEnabled has to be FALSE for this channel.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_259</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmSynchronizingNetwork
        Parent Container:
          NmChannelConfig
        Description:
          If this parameter is true, then this network is a synchronizing network
          for the NM coordination cluster which it belongs to. The network is
          expected to call Nm_SynchronizationPoint() at regular intervals.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If the parameter NmCoordClusterIndex is not defined,
          this parameter is not valid. Only one network can be configured as
          synchronizing network (NmSynchronizingNetwork = TRUE) per
          coordination cluster (same NmCoordClusterIndex value per channel).
          NmSynchronizingNetwork can only be set to true if
          NmActiveCoordinator is true for all networks which have the same
          NmCoordClusterIndex.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_592</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SynchronizingNetwork_2</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmSynchronizingNetworkDependency</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmGenericBusNmConfig
        Parent Container:
          NmBusType
        Description:
          -
        Configuration Parameters:
          NmGenericBusNmPrefix, NmGenericBusNmShutdownTime
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_838</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          NmStandardBusNmConfig
        Parent Container:
          NmBusType
        Description:
          -
        Configuration Parameters:
          NmStandardBusType
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_919</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmChannelSleepMaster
        Parent Container:
          NmChannelConfig
        Description:
          This parameter shall be set to indicate if the sleep of this network can
          be absolutely decided by the local node only and that no other nodes
          can oppose that decision.
          If this parameter is set to TRUE, the Nm shall assume that the channel
          is always ready to go to sleep and that no calls to
          Nm_RemoteSleepIndication or Nm_RemoteSleepCancellation will be
          made from the &lt;BusNm&gt; representing this channel.
          If this parameter is set to FALSE, the Nm shall not assume that the
          network is ready to sleep until a call has been made to
          Nm_RemoteSleepCancellation.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If the parameter NmCoordClusterIndex is not defined,
          this parameter is not valid.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_148</srcid><srcstatus/><internalId>563</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30048</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30052</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_NM_ShutdownSleepMasterOn</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmStateReportEnabled
        Parent Container:
          NmChannelConfig
        Description:
          Specifies if the NMS shall be set for the corresponding network. false:
          No NMS shall be set true: The NMS shall be set
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: only available if NmStatChangeIndEnabled and
          NmComUserDataSupport are configured to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_544</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_StateChangeIndication</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_NM_StateChangeIndicationDetON</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_StateChangeNotification_Off</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmStateReportSignalRef
        Parent Container:
          NmChannelConfig
        Description:
          Reference to the signal for setting the NMS by calling
          Com_SendSignal for the respective channel.
        Multiplicity:
          0..1
        Type:
          Symbolic name reference to ComSignal
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: Signal must be configured in COM. Only available if
          NmStateReportEnabled == true
        Included Containers:
          Container Name    Multiplicity    Scope / Dependency
          NmBusType         1
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_725</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCarWakeUpCallout
        Parent Container:
          NmGlobalFeatures
        Description:
          Name of the callout function to be called if Nm_CarWakeUpIndication()
          is called. If this parameter is not configured, the Nm will call
          BswM_Nm_CarWakeUpIndication.
        Multiplicity:
          0..1
        Type:
          EcucFunctionNameDef
        Default Value:
          Regular Expression
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: only available if NmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_205</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutDefined</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00235</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCarWakeUpRxEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Enables or disables CWU detection. FALSE - CarWakeUp not
          supported TRUE - CarWakeUp supported
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2248</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutDefined</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutNotDefined</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmActiveCoordinator
        Parent Container:
          NmChannelConfig
        Description:
          This parameter indicates whether a NM channel - part of a Nm
          Coordination cluster - will be coordinated actively
          (NmActiveCoordinator = TRUE) or passively (NmActiveCoordinator =
          FALSE).
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default Value:
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: If the NmCoordinatorSyncSupport is set to true this
          feature is available. Only one channel per Coordination cluster can
          have NmActiveCoordinator = FALSE. This parameter is mandatory if
          this channel belongs to a Coordination cluster (see
          ECUC_Nm_00221). Value cannot be set to FALSE in case
          BusNmType is set to NM_BUSNM_LOCALNM (i.e. no passive
          coordination for this type).
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmGlobalCoordinatorTime
        Parent Container:
          NmGlobalFeatures
        Description:
          This parameter defines the maximum shutdown time of a connected
          and coordinated NM-Cluster. Note:This includes nested connections.
        Multiplicity:
          0..1
        Type:
          EcucFloatParamDef
        Range:
          [0 .. INF]
        Default Value:
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: NmGlobalCoordinatorTime shall only be valid if
          NmCoordinatorSupportEnabled is TRUE.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The coordination algorithm shall be able to handle a topology where several coordinated busses
        are connected to one NM Coordinator.
      </description>
      <comment>
        This requirement is informational only. It is a general requirement.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        As long as the node implementing the NM Coordinator is not ready to go to sleep on at least one
        of the busses in a coordination cluster (i.e. that it has actively requested the network), the
        NM Coordinator shall ensure that the network is requested on all currently active busses in
        that coordination cluster.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30004</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30005</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2033</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        As long as at least one bus in the coordination cluster is not ready to sleep (i.e. because
        another node than the NM Coordinator is requesting that bus), the NM Coordinator shall still
        ensure that the network is requested on all currently active busses in that coordination
        cluster even if the local ECU itself is ready to go to sleep on all busses of that coordination
        cluster.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2033</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30004</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30005</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Nm shall convert generic function calls from the ComM to bus specific functions of the bus
        specific NM layer.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.SWS_Nm_00031</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00032</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00046</srcid><srcstatus/><internalId>68</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Nm shall convert callback functions called by the bus specific NM layers to generic
        callbacks to the ComM.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.SWS_Nm_00154</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00156</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00159</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00162</srcid><srcstatus/><internalId>106</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        A scheduled main function shall only contain logic related to the NM Coordinator functionality.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_275</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00028</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        All callbacks of the Nm shall assume that they can run either in task or in interrupt context.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_Init
        Syntax
        void Nm_Init (const Nm_ConfigType* ConfigPtr)
        Service ID [hex] | 0x00
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | ConfigPtr | Pointer to the selected configuration set.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Initializes the NM Interface.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_230</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InitializationFunction</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_PassiveStartUp
        Syntax
        Std_ReturnType Nm_PassiveStartUp (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x01
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Passive start of network management has
        failed NetworkHandle does not exist (development only)Module not yet initialized (development
        only)
        Description | This function calls the &lt;BusNm&gt;_PassiveStartUp function in case NmBusType is not
        set to NM_BUSNM_LOCALNM (e.g. CanNm_PassiveStartUp function is called for NM_BUSNM_CANNM)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_468</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_CanNm</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_FrNm</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_UdpNm</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30009</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30051</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_NetworkRequest
        Syntax
        Std_ReturnType Nm_NetworkRequest (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x02
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Requesting of bus communication has
        failed NetworkHandle does not exist (development only)Module not yet initialized (development
        only)
        Description | This function calls the &lt;BusNm&gt;_NetworkRequest (e.g. CanNm_NetworkRequest
        function is called if channel is configured as CAN) function in case NmBusType is not set to
        NM_BUSNM_LOCALNM.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_577</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30006</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30007</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30020</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30021</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30050</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_DisableCommunication
        Syntax
        Std_ReturnType Nm_DisableCommunication (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x04
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Disabling of NM PDU transmission
        ability has failed. NetworkHandle does not exist (development only)Module not yet initialized (
        development only)
        Description | Disables the NM PDU transmission ability. For that purpose &lt;BusNm&gt;
        _DisableCommunication shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM (e.g.
        CanNm_DisableCommunication function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_807</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_EnableCommunication
        Syntax
        Std_ReturnType Nm_EnableCommunication (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x05
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Enabling of NM PDU transmission ability
        has failed. NetworkHandle does not exist (development only)Module not yet initialized (
        development only)
        Description | Enables the NM PDU transmission ability. For that purpose &lt;BusNm&gt;
        _EnableCommunication shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.g.
        CanNm_EnableCommunication function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_849</srcid><srcstatus/><internalId>465</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_SetUserData
        Syntax
        Std_ReturnType Nm_SetUserData (NetworkHandleType NetworkHandle, const uint8* nmUserDataPtr)
        Service ID [hex] | 0x06
        Sync/Async | Synchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        nmUserDataPtr | User data for the next transmitted NM message
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Setting of user data has failed
        NetworkHandle does not exist (development only)Module not yet initialized (development only)
        Description | Set user data for NM messages transmitted next on the bus. For that purpose &lt;
        BusNm&gt;_SetUserData shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.g.
        CanNm_SetUserData function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_896</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetUserData
        Syntax
        Std_ReturnType Nm_GetUserData (NetworkHandleType NetworkHandle, uint8* nmUserDataPtr)
        Service ID [hex] | 0x07
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmUserDataPtr | Pointer where user data out of the last successfully
        received NM message shall be copied to
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of user data has failed
        NetworkHandle does not exist (development only)Module not yet initialized (development only)
        Description | Get user data out of the last successfully received NM message. For that purpose
        BusNm&gt;_GetUserData shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.g.
        CanNm_GetUserData function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_949</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetPduData
        Syntax
        Std_ReturnType Nm_GetPduData (NetworkHandleType NetworkHandle, uint8* nmPduData)
        Service ID [hex] | 0x08
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmPduData | Pointer where NM PDU shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of NM PDU data has failed
        NetworkHandle does not exist (development only)Module not yet initialized (development only)
        Description | Get the whole PDU data out of the most recently received NM message. For that
        purpose &lt;BusNm&gt;_GetPduData shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.
        g. CanNm_GetPduData function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_993</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_RepeatMessageRequest
        Syntax
        Std_ReturnType Nm_RepeatMessageRequest (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x09
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Setting of Repeat Message Request Bit
        has failed NetworkHandle does not exist (development only)Module not yet initialized (
        development only)
        Description | Set Repeat Message Request Bit for NM messages transmitted next on the bus. For
        that purpose &lt;BusNm&gt;_RepeatMessageRequest shall be called in case NmBusType is not set to
        NM_BUSNM_LOCALNM. (e.g. CanNm_RepeatMessageRequest function is called if channel is configured
        as CAN). This will force all nodes on the bus to transmit NM messages so that they can be
        identified.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1034</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetNodeIdentifier
        Syntax
        Std_ReturnType Nm_GetNodeIdentifier (NetworkHandleType NetworkHandle, uint8* nmNodeIdPtr)
        Service ID [hex] | 0x0a
        Sync/Async | Synchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmNodeIdPtr | Pointer where node identifier out of the last successfully
        received NM-message shall be copied to
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of the node identifier out of
        the last received NM-message has failed NetworkHandle does not exist (development only)Module
        not yet initialized (development only)
        Description | Get node identifier out of the last successfully received NM-message. The
        function &lt;BusNm&gt;_GetNodeIdentifier shall be called in case NmBusType is not set to
        NM_BUSNM_LOCALNM. (e.g. CanNm_GetNodeIdentifier function is called if channel is configured as
        CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1076</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetLocalNodeIdentifier
        Syntax
        Std_ReturnType Nm_GetLocalNodeIdentifier (NetworkHandleType NetworkHandle, uint8* nmNodeIdPtr)
        Service ID [hex] | 0x0b
        Sync/Async | Synchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmNodeIdPtr | Pointer where node identifier of the local node shall be
        copied to
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of the node identifier of the
        local node has failed NetworkHandle does not exist (development only)Module not yet initialized
        development only)
        Description | Get node identifier configured for the local node. For that purpose &lt;BusNm&gt;
        _GetLocalNodeIdentifier shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.g.
        CanNm_GetLocalNodeIdentifier function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1124</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_CheckRemoteSleepIndication
        Syntax
        Std_ReturnType Nm_CheckRemoteSleepIndication (NetworkHandleType nmNetworkHandle, boolean*
        nmRemoteSleepIndPtr)
        Service ID [hex] | 0x0d
        Sync/Async | Synchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmRemoteSleepIndPtr | Pointer where check result of remote sleep indication
        shall be copied to
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Checking of remote sleep indication
        bits has failed NetworkHandle does not exist (development only)Module not yet initialized (
        development only)
        Description | Check if remote sleep indication takes place or not. For that purpose &lt;BusNm&gt;
        _CheckRemoteSleepIndication shall be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (
        e.g. CanNm_CheckRemoteSleepIndication function is called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1176</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetState
        Syntax
        Std_ReturnType Nm_GetState (NetworkHandleType nmNetworkHandle, Nm_StateType* nmStatePtr,
        Nm_ModeType* nmModePtr)
        Service ID [hex] | 0x0e
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | nmStatePtr | Pointer where state of the network management shall be copied
        to
        nmModePtr | Pointer to the location where the mode of the network management shall be copied to
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of NM state has failed
        NetworkHandle does not exist (development only)Module not yet initialized (development only)
        Description | Returns the state of the network management. The function &lt;BusNm&gt;_GetState shall
        be called in case NmBusType is not set to NM_BUSNM_LOCALNM. (e.g. CanNm_GetState function is
        called if channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1271</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_GetVersionInfo
        Syntax
        void Nm_GetVersionInfo (Std_VersionInfoType* nmVerInfoPtr)
        Service ID [hex] | 0x0f
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | nmVerInfoPtr | Pointer to where to store the version information of this
        module.
        Return value | None
        Description | This service returns the version information of this module.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1323</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_32081</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_NetworkRelease
        Syntax
        Std_ReturnType Nm_NetworkRelease (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x03
        Sync/Async | Asynchronous
        Reentrancy | Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Releasing of bus communication has
        failed NetworkHandle does not exist (development only)Module not yet initialized (development
        only)
        Description | This function calls the &lt;BusNm&gt;_NetworkRelease bus specific function in case
        NmBusType is not set to NM_BUSNM_LOCALNM (e.g. CanNm_NetworkRelease function is called if
        channel is configured as CAN)
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_663</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_CanNm</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_FrNm</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_UdpNm</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Callouts_GenericNm</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30044</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30001</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30002</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30003</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30004</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30005</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30018</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30019</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30020</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30021</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30022</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30023</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30027</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00051</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM Coordinator shall be able to coordinate busses running the official AUTOSAR bus specific
        NMs as well as all other generic bus NMs implementing the required functionality, callbacks and
        interfaces.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM Interface configuration shall provide the parameter NmGlobalFeatures.
        NmCoordinatorSupportEnabled to define if the support of the NM Coordinator functionality is
        present or not.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1313</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00091</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Base functionality of Nm may be implemented completely or partly using macros.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_PduRxIndication
        Syntax
        void Nm_PduRxIndication (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x15
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that a NM message has been received.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_351</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_StateChangeNotification
        Syntax
        void Nm_StateChangeNotification (NetworkHandleType nmNetworkHandle, Nm_StateType
        nmPreviousState, Nm_StateType nmCurrentState)
        Service ID [hex] | 0x16
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        nmPreviousState | Previous state of the NM-channel
        nmCurrentState | Current (new) state of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the state of the lower layer &lt;BusNm&gt; has changed.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1802</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_StateChangeIndication</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00117</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Module | Header File | Imported Type
        Com | Com.h | Com_SignalIdType
        ComStack_Types | ComStack_Types.h | NetworkHandleType
        ComStack_Types.h | PNCHandleType
        Std | Std_Types.h | Std_ReturnType
        Std_Types.h | Std_VersionInfoType
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_MainFunction
        Syntax
        void Nm_MainFunction (void)
        Description | This function implements the processes of the NM Interface, which need a fix
        cyclic scheduling.
        Available via | SchM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_275</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30016</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30039</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30017</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30001</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30002</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30003</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30004</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30005</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30006</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30007</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_CanNm</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_FrNm</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_UdpNm</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30009</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30026</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        API Function | Header File | Description
        ComM_Nm_BusSleepMode | ComM_Nm.h | Notification that the network management has entered Bus-
        Sleep Mode. This callback function should perform a transition of the hardware and transceiver
        to bus-sleep mode.
        ComM_Nm_ForwardSynchronizedPncShutdown | ComM_Nm.h | If an ECU in role of an intermediate PNC
        coordinator receives a PN shutdown message via a &lt;Bus&gt;Nm, then ComM is immediately indicated
        via ComM_Nm_ForwardSynchronizedPncShutdown to forward the request for a synchronized PNC
        shutdown of the affected PNCs. Therefore, ComM will immediately release the affected PNC state
        machines and forward the PN information to the affected ComM Channels and the corresponding NM
        channels, respectively. Note: This supports a nearly synchronized PNC shutdown across the PN
        topology from the top-level PNC coordinator down to the subordinated PNC node. Tags:atp.Status=
        draft
        ComM_Nm_NetworkMode | ComM_Nm.h | Notification that the network management has entered Network
        Mode.
        ComM_Nm_NetworkStartIndication | ComM_Nm.h | Indication that a NM-message has been received in
        the Bus Sleep Mode, what indicates that some nodes in the network have already entered the
        Network Mode.
        ComM_Nm_PrepareBusSleepMode | ComM_Nm.h | Notification that the network management has entered
        Prepare Bus-Sleep Mode. Reentrancy: Reentrant (but not for the same NM-Channel)
        ComM_Nm_RestartIndication | ComM_Nm.h | If NmIf has started to shut down the coordinated busses,
        AND not all coordinated busses have indicated bus sleep state, AND on at least on one of the
        coordinated busses NM is restarted, THEN the NM Interface shall call the callback function
        ComM_Nm_RestartIndication with the nmNetworkHandle of the channels which have already indicated
        bus sleep state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.SWS_Nm_00154</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00156</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00159</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>Nm.SWS_Nm_00162</srcid><srcstatus/><internalId>106</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        In case the main function is called before the Nm has been initialized, the main function shall
        immediately return without yielding an error.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_291</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The following header files shall be included by the Nm Interface module:
        Std_Types.h (for AUTOSAR standard types) Note: Platform_Types.h (for platform specific types)
        and Compiler.h (for compiler specific language extensions) are indirectly included via AUTOSAR
        standard types.
        ComM_Nm.h (for Communication Manager callback functions)
        BswM_Nm.h (If the BswM is used for CarWakeup-functionalitiy)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmRequiredHeaderFiles</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00127</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_Init: This service function has to be called after the initialization of the
        respective bus interface.
      </description>
      <comment>
        This requirement is not applicable as it is a requirement for the system
        designer/integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00128</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_PassiveStartUp: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00129</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_NetworkRequest: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_NetworkRequest is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmDevErrorDetect is set to TRUE then it shall raise the error NM_E_INVALID_CHANNEL
        in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_605</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.Nm_NetworkRequestCallOnPassiveChannel</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00131</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_NetworkRelease: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_NetworkRelease is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_691</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.Nm_NetworkReleaseCallOnPassiveChannel</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00133</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_DisableCommunication: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_DisableCommunication: This function is only available if
        NmComControlEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_612</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_908</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmStandardBusTypeUdpNm</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00135</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_EnableCommunication: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_EnableCommunication: This function is only available if NmGlobalFeatures.
        NmComControlEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_612</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_908</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_804</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmStandardBusTypeUdpNm</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00137</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_SetUserData: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_SetUserData: This function is only available if NmUserDataEnabled is
        set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_487</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_755</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_893</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00139</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_GetUserData: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_GetUserData: This function is only available if NmUserDataEnabled is
        set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_487</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_755</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_946</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00141</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_GetPduData: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00143</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_RepeatMessageRequest: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00145</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_GetNodeIdentifier: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00147</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_GetLocalNodeIdentifier: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00149</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_CheckRemoteSleepIndication: The &lt;BusNm&gt; and the Nm itself are initialized
        correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_CheckRemoteSleepIndication: This function is only available if
        NmGlobalFeatures.NmRemoteSleepIndEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_573</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_852</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1174</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00151</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of Nm_GetState: The &lt;BusNm&gt; and the Nm itself are initialized correctly.
      </description>
      <comment>
        This requirement is not applicable. It is a requirement for the other
        modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_NetworkStartIndication
        Syntax
        void Nm_NetworkStartIndication (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x11
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that a NM-message has been received in the Bus-Sleep Mode, what
        indicates that some nodes in the network have already entered the Network Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1354</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30010</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The indication through callback function Nm_NetworkStartIndication: shall be forwarded to ComM
        by calling the ComM_Nm_NetworkStartIndication.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1404</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32075</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30045</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30010</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_NetworkMode
        Syntax
        void Nm_NetworkMode (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x12
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has entered Network Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1411</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30052</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30013</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The indication through callback function Nm_NetworkMode: shall be forwarded to ComM by calling
        the ComM_Nm_NetworkMode.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1492</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32075</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30045</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30052</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30013</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_PrepareBusSleepMode
        Syntax
        void Nm_PrepareBusSleepMode (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x13
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has entered Prepare Bus-Sleep Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1559</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The indication through callback function Nm_PrepareBusSleepMode: shall be forwarded to ComM by
        calling ComM_Nm_PrepareBusSleepMode.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1598</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32075</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30045</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_BusSleepMode
        Syntax
        void Nm_BusSleepMode (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x14
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has entered Bus-Sleep Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1499</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30053</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30040</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30022</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The indication through callback function Nm_BusSleepMode: shall be forwarded to ComM by calling
        the ComM_Nm_BusSleepMode.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1552</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_32075</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30045</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30053</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30043</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_PduRxIndication: This function is only available if NmGlobalFeatures.
        NmPduRxIndicationEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_347</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_StateChangeNotification: This function is only available if
        NmGlobalFeatures.NmStateChangeIndEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_385</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        API Function | Header File | Description
        BswM_Nm_CarWakeUpIndication | BswM_Nm.h | Function called by Nm to indicate a CarWakeup.
        CanNm_PassiveStartUp | CanNm.h | Passive startup of the AUTOSAR CAN NM. It triggers the
        transition from Bus-Sleep Mode or Prepare Bus Sleep Mode to the Network Mode in Repeat Message
        State. Caveats: CanNm is initialized correctly.
        CanNm_PnLearningRequest | CanNm.h | Set Repeat Message Request Bit and Partial Network Learning
        Bit for NM messages transmitted next on the bus. This will force all nodes to enter the PNC
        Learning Phase. This is needed for the optional Dynamic PNC-to-channel-mapping feature. Tags:
        atp.Status=draft
        CanNm_RequestSynchronizedPncShutdown | CanNm.h | Requests transmission of a NM-PDU with PNSR
        bit set to 1 (PN shutdown message) Tags:atp.Status=draft
        Com_SendSignal | Com.h | The service Com_SendSignal updates the signal object identified by
        SignalId with the signal referenced by the SignalDataPtr parameter.
        ComM_Nm_PncLearningBitIndication | ComM_Nm.h | Service to indicate that an NM message with set
        PNC Learning Bit has been received. Tags:atp.Status=draft
        ComM_Nm_RepeatMessageLeftIndication | ComM_Nm.h | Notification that the state of all &lt;BusNm&gt;
        has left RepeatMessage. This interface is used to indicate by the optional Dynamic PNC-to-
        channel-mapping feature to indicate that learning phase ends. Tags:atp.Status=draft
        Det_ReportError | Det.h | Service to report development errors.
        FrNm_PassiveStartUp | FrNm.h | Initiates the Passive Startup of the FlexRay NM.
        FrNm_PnLearningRequest | FrNm.h | Set Repeat Message Request Bit and Partial Network Learning
        Bit for NM messages transmitted next on the bus. This will force all nodes to enter the PNC
        Learning Phase. This is needed for the optional Dynamic PNC-to-channel-mapping feature. Tags:
        atp.Status=draft
        FrNm_RequestSynchronizedPncShutdown | FrNm.h | Requests transmission of a NM-PDU with PNSR bit
        set to 1 (PN shutdown message) Tags:atp.Status=draft
        J1939Nm_PassiveStartUp | J1939Nm.h | Passive startup of the NM. It triggers the transition from
        Bus-Sleep Mode to the Network Mode without requesting the network.
        UdpNm_PassiveStartUp | UdpNm.h | Passive startup of the AUTOSAR UdpNm. It triggers the
        transition from Bus-Sleep Mode or Prepare Bus Sleep Mode to the Network Mode in Repeat Message
        State. Caveats: UdpNm is initialized correctly.
        UdpNm_PnLearningRequest | UdpNm.h | Set Repeat Message Request Bit and Partial Network Learning
        Bit for NM messages transmitted next on the bus. This will force all nodes on the bus to enter
        the PNC Learning Phase. This is needed for the optional Dynamic PNC-to-channel-mapping feature.
        Tags:atp.Status=draft
        UdpNm_RequestSynchronizedPncShutdown | UdpNm.h | Requests transmission of a NM-PDU with PNSR
        bit set to 1 (PN shutdown message) Tags:atp.Status=draft
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_13</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_18</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_23</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_28</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_15</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Nm_Int.h_11</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_52</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_58</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to configure multiple NM coordination clusters that shall be coordinated
        independently.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_310</srcid><srcstatus/><internalId>380</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30006</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30007</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30009</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Each bus shall belong to zero or one NM coordination cluster.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_259</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Shutdown shall only be coordinated on the presently awake networks of a coordination cluster.
        Networks that are already in ''bus-sleep mode`` shall still be monitored but not coordinated.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_302</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30048</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_NM_ShutdownSleepMasterOn</srcid><srcstatus/><internalId>651</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SynchronizingNetwork_2</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When all networks of a coordination cluster are either ready to go to sleep or already in ''bus-
        sleep mode`` the NM Coordinator shall start the coordinated shutdown on all awake networks. The
        NM Coordinator shall evaluate continuously if the coordinated shutdown can be started.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00171</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the configuration parameter NmChannelConfig.NmSynchronizingNetwork is TRUE for any of the
        busses in a coordination cluster, the coordination shutdown shall be delayed until a network
        that is configured as synchronizing network for this coordination cluster invoked
        Nm_SynchronizationPoint.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1785</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SynchronizingNetwork_2</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Release_After_Release_1</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Release_After_Release_2</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If not all conditions to start the coordinated shutdown have been met, or if the coordinated
        shutdown has already been started (but not aborted), calls to Nm_SynchronizationPoint shall be
        ignored.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00173.1</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00173.2</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the configuration parameter NmChannelConfig.NmSynchronizingNetwork is FALSE for all of the
        presently awake busses in a coordination cluster, the timers shall be started after all
        shutdown conditions have been met, without waiting for a call to Nm_SynchronizationPoint(). (
        see also SWS_Nm_00172)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_441</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30016</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the coordinated shutdown is started, a shutdown delay timer shall be activated for each
        currently awake channel in the coordination cluster. Each timer shall be set to
        NmGlobalFeatures.NmGlobalCoordinatorTime. In case NmBusType is not set to NM_BUSNM_LOCALNM
        additionally the shutdown time of the specific channel TSHUTDOWN_CHANNEL shall be subtracted.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatedShutdownStart</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When a shutdown timer expires for a network, Nm shall in case BusNmType is not set to
        NM_BUSNM_LOCALNM release the network by calling the &lt;BusNm&gt;_RequestBusSynchronization followed
        by &lt;BusNm&gt;_NetworkRelease. In case BusNmType is set to NM_BUSNM_LOCALNM Nm shall inform ComM
        about shutdown by calling ComM_Nm_BusSleepMode(
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_324</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30028</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30029</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70001</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.ShutdownTimerExpire</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Nm shall keep track of all networks that have been released but have not yet reported ''bus-
        sleep mode``. If the shutdown is aborted, these networks shall still be considered active
        networks.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2195</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30023</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30049</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if any network in that NM Coordination Cluster,
        indicates Nm_RemoteSleepCancellation or
        indicates Nm_NetworkMode or
        indicates Nm_CoordReadyToSleepCancellation
        or the ComM request one of the networks with Nm_NetworkRequestor Nm_PassiveStartUp.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00181.NetworkMode</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00181.NetworkRequest</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NMCoordReadyToSleepCancelation</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the coordinated shutdown is aborted, NM Coordinator shall call ComM_Nm_RestartIndication for
        all networks that already indicated ''bus sleep`
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2187</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30039</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30036</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30037</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30054</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30055</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the coordinated shutdown is aborted, NM Coordinator shall in case BusNmType is not set
        NM_BUSNM_LOCALNM request the network from the &lt;busNm's&gt; for the networks that have not
        indicated ''bus sleep``. In case BusNmType is set to NM_BUSNM_LOCALNM Nm shall inform ComM
        about network startup by calling ComM_Nm_NetworkMode(
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2195</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30036</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Get_State_E_NOT_OK</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>TS_NM_ShutdownAbort</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30023</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.AbortShutdownLocalNmBusType</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the coordination algorithm has been aborted, all conditions that guard the initiation of the
        coordinated shutdown shall be evaluated again.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_403</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2139</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30039</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30023</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_RemoteSleepIndication
        Syntax
        void Nm_RemoteSleepIndication (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x17
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has detected that all other nodes on the
        network are ready to enter Bus-Sleep Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1646</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30039</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30004</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30005</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30027</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_RemoteSleepCancellation
        Syntax
        void Nm_RemoteSleepCancellation (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x18
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has detected that not all other nodes on
        the network are longer ready to enter Bus-Sleep Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1701</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30039</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_SynchronizationPoint
        Syntax
        void Nm_SynchronizationPoint (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x19
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification to the NM Coordinator functionality that this is a suitable point in
        time to initiate the coordinated shutdown on.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1759</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a bus of a coordination cluster has the parameter NmChannelConfig.NmChannelSleepMaster set
        to TRUE, the NM Coordinator shall consider that bus ready to sleep at all times and shall not
        await an invocation of Nm_RemoteSleepIndication from that bus before starting shutdown of that
        network.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2047</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30048</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_NM_ShutdownSleepMasterOn</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_RepeatMessageIndication
        Syntax
        void Nm_RepeatMessageIndication (NetworkHandleType nmNetworkHandle, boolean pnLearningBitSet)
        Service ID [hex] | 0x1a
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        pnLearningBitSet | TRUE if also the Partial Network Learning Bit was received, FALSE otherwise
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Service to indicate that an NM message with set Repeat Message Re- quest Bit has
        been received. This is needed for node detection and the Dynamic PNC-to-channel-mapping feature.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ASR403.SWS_Nm_00230</srcid><srcstatus/><internalId>10</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value
        API service used without Nm interface initialization | NM_E_UNINIT | 0x00
        API Service called with wrong parameter but not with NULL-pointer | NM_E_INVALID_CHANNEL | 0x01
        API service called with a NULL pointer | NM_E_PARAM_POINTER | 0x02
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_TxTimeoutException
        Syntax
        void Nm_TxTimeoutException (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x1b
        Sync/Async | Asynchronous
        Reentrancy | Reentrant
        Parameters (in) | nmNetworkHandle
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Service to indicate that an attempt to send an NM message failed.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_295</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00235</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a coordinated shutdown has been aborted and Nm receives E_NOT_OK on a &lt;BusNm&gt;_NetworkRequest,
        that network shall not be considered awake when the conditions for initiating a coordinated
        shutdown are evaluated again.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NetworkRequestErrorOnCoordinatedShutdownAbort</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a coordinated shutdown has been initiated and Nm receives E_NOT_OK on a &lt;BusNm&gt;
        _NetworkRelease, the shutdown shall be immediately aborted. For all networks that have not
        entered ''bus-sleep mode``, Nm shall request the networks. This includes the network that
        indicated an error for &lt;BusNm&gt;_NetworkRelease. As soon as this has been done, the conditions
        for initiating coordinated shutdown can be evaluated again. This applies also to networks that
        were not actively participating in the current coordinated shutdown.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00236.1</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00236.2</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NoNetworkRequestForOwnNetwork</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_SetUserData: If NmGlobalFeatures.NmComUserDataSupport is TRUE the API
        Nm_SetUserData shall not be available.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmSetUserDataAvailable</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Nm Interface shall optionally include the header file of Default Error Tracer (depending on
        the pre-processor switch NmDevErrorDetect, see ECUC_Nm_00203)
        Det.h for service of the Default Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Int.h_11</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the ComM calls Nm_PassiveStartUp() for a network that is part of a coordinated cluster of
        networks, the Nm coordinator functionality shall treat this call as if the ComM had called
        Nm_NetworkRequest(). In case BusNmType is not set to NM_BUSNM_LOCALNM the Nm shall forward a
        call of &lt;BusNm&gt;_NetworkRequest to the lower layer and accordingly, the network shall be counted
        as requested by the NM coordinator.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_536</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_CanNm</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_FrNm</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_UdpNm</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_GenericNm</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30009</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30051</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatedNmPassiveStartUp</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The code file structure shall not be defined within this specification completely. At this
        point it shall be pointed out that the code-file structure shall include the following files
        named:
      </description>
      <comment>
        Link-time configuration is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00247</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CodeFileStructure</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.NoLinkTimeSupport</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If NmChannelConfig.NmStateReportEnabled is set to TRUE and NmChannelConfig.
        NmStateReportSignalRef is configured, when one of the state transitions mentioned in Table  "
        tab_3a_NetworkManagementStates"
        Bit | Value | Name | Description
        0 | 1 | NM_RM_BSM | NM in state RepeatMessage (transition from BusSleepMode)
        1 | 2 | NM_RM_PBSM | NM in state RepeatMessage (transition from PrepareBusSleepMode)
        2 | 4 | NM_NO_RM | NM in state NormalOperation (transition from RepeatMessage)
        3 | 8 | NM_NO_RS | NM in state NormalOperation (transition from ReadySleep)
        4 | 16 | NM_RM_RS | NM in state RepeatMessage (transition from ReadySleep)
        5 | 32 | NM_RM_NO | NM in state RepeatMessage (transition from NormalOperation)
        occur, Nm_StateChangeNotification shall call Com_SendSignal(uint8, Com_SignalIdType, const void*
        for the signal referenced by NmChannelConfig.NmStateReportSignalRef with the value according to
        Table  "tab_3a_NetworkManagementStates"
        Bit | Value | Name | Description
        0 | 1 | NM_RM_BSM | NM in state RepeatMessage (transition from BusSleepMode)
        1 | 2 | NM_RM_PBSM | NM in state RepeatMessage (transition from PrepareBusSleepMode)
        2 | 4 | NM_NO_RM | NM in state NormalOperation (transition from RepeatMessage)
        3 | 8 | NM_NO_RS | NM in state NormalOperation (transition from ReadySleep)
        4 | 16 | NM_RM_RS | NM in state RepeatMessage (transition from ReadySleep)
        5 | 32 | NM_RM_NO | NM in state RepeatMessage (transition from NormalOperation)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1841</srcid><srcstatus/><internalId>537</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_StateChangeIndication</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_NM_StateChangeIndicationDetON</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00250</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_CarWakeUpIndication
        Syntax
        void Nm_CarWakeUpIndication (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x1d
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | nmChannelHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This function is called by a &lt;Bus&gt;Nm to indicate reception of a CWU request.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2250</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutDefined</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutNotDefined</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00251</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_CarWakeUpIndication: Optional If NmGlobalFeatures.NmCarWakeUpRxEnabled is
        TRUE, The Nm shall provide the API Nm_CarWakeUpIndication.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2250</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the &lt;bus&gt;Nm calls Nm_CarWakeUpIndication and NmGlobalFeatures.NmCarWakeUpCallout is defined,
        the NM Interface shall call the callout function defined by NmGlobalFeatures.NmCarWakeUpCallout
        with nmNetworkHandle as parameter.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_205</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutDefined</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00254</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_CoordReadyToSleepIndication
        Syntax
        void Nm_CoordReadyToSleepIndication (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x1e
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | nmChannelHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Sets an indication, when the NM Coordinator Sleep Ready bit in the Control Bit
        Vector is set
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_312</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_CoordReadyToSleepIndication: Optional If NmGlobalFeatures.
        NmCoordinatorSyncSupport is set to TRUE, the Nm shall provide the API
        Nm_CoordReadyToSleepIndication.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_308</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM-Coordinator shall support two or more NM-Coordinators connected to the same NM Cluster.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        On its passively coordinated channels a NM-Coordinator shall send Nm messages only if the node
        has a network management request pending or a connected network which is coordinated actively
        by that NM Coordinator is not ready to sleep.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_CoordReadyToSleepIndication is received on a passively coordinated channel the
        NmCoordinator shall set the NMCoordinatorSleepReady bit to SET (1) via API call to &lt;BusNm&gt;
        _SetSleepReadyBit on all actively coordinated channels.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00262</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM Coordinator shall start coordinated shutdown after the Sleep Ready Bit with SET status
        has been requested.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00267</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        NM Coordinator shall set the NMCoordinatorSleepReady bit to UNSET (0) via API call to &lt;BusNm&gt;
        _SetSleepReadyBit on all actively coordinated channels if the coordinated shutdown has been
        aborted for any reason.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00999</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is informational only on BSW requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmGenericBusNmShutdownTime
        Parent Container:
          NmGenericBusNmConfig
        Description:
          This parameter shall be used to calculate shutdown delay time.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0 .. INF]
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
        Included Containers:
          -
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.MissingConfigParameters</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmCoordinatorSyncSupport
        Parent Container:
          NmGlobalFeatures
        Description:
          Enables/disables the coordinator synchronisation support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: NmCoordinatorSyncSupport shall only be valid if
          NmCoordinatorSupportEnabled is TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00259</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM Coordinator shall set the NMcoordinatorSleepReady bit in the NM message via &lt;BusNm&gt;
        _SetSleepReadyBit to the value 1 at his actively coordinated channels, IF all nodes of the NM
        Coordination cluster are ready to sleep (RemoteSleepIndication) AND IF NmChannelConfig.
        NmSynchronizingNetwork is enabled a Nm_SynchronizationPoint() call has been received on the
        corresponding channel AND If all channels of this NM Coordination cluster are configured as
        NmChannelConfig.NmActiveCoordinator == TRUE. AND If the NmBusType is not configured to
        NM_BUSNM_LOCALNM.
      </description>
      <comment>
        Coordination of nested sub-busses is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00272</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_CoordReadyToSleepCancellation
        Syntax
        void Nm_CoordReadyToSleepCancellation (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x1f
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | nmChannelHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Cancels an indication, when the NM Coordinator Sleep Ready bit in the Control Bit
        Vector is set back to 0.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NMCoordReadyToSleepCancelation</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00273</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_CoordReadyToSleepCancellation: Optional If NmGlobalFeatures.
        NmCoordinatorSyncSupport is set to TRUE, the Nm shall provide the API
        Nm_CoordReadyToSleepCancellation.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NMCoordReadyToSleepCancelation</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00274</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | Nm_ModeType
        Kind | Enumeration
        Range | NM_MODE_BUS_SLEEP | -- | Bus-Sleep Mode
        NM_MODE_PREPARE_BUS_SLEEP | -- | Prepare-Bus Sleep Mode
        NM_MODE_SYNCHRONIZE | -- | Synchronize Mode
        NM_MODE_NETWORK | -- | Network Mode
        Description | Operational modes of the network management.
        Available via | NmStack_types.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_20</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_27</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_34</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_41</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_47</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | Nm_StateType
        Kind | Enumeration
        Range | NM_STATE_UNINIT | 0x00 | Uninitialized State
        NM_STATE_BUS_SLEEP | 0x01 | Bus-Sleep State
        NM_STATE_PREPARE_BUS_SLEEP | 0x02 | Prepare-Bus State
        NM_STATE_READY_SLEEP | 0x03 | Ready Sleep State
        NM_STATE_NORMAL_OPERATION | 0x04 | Normal Operation State
        NM_STATE_REPEAT_MESSAGE | 0x05 | Repeat Message State
        NM_STATE_SYNCHRONIZE | 0x06 | Synchronize State
        NM_STATE_OFFLINE | 0x07 | Offline State
        Description | States of the network management state machine.
        Available via | NmStack_types.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_55</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_61</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_67</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_73</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_79</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_85</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_91</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_97</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_103</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00276</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | Nm_BusNmType
        Kind | Enumeration
        Range | NM_BUSNM_CANNM | -- | CAN NM type
        NM_BUSNM_FRNM | -- | FR NM type
        NM_BUSNM_UDPNM | -- | UDP NM type
        NM_BUSNM_GENERICNM | -- | Generic NM type
        NM_BUSNM_UNDEF | -- | NM type undefined; it shall be defined as FFh
        NM_BUSNM_J1939NM | -- | SAE J1939 NM type (address claiming)
        NM_BUSNM_LOCALNM | -- | Local NM Type
        Description | BusNm Type
        Available via | NmStack_types.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_112</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_119</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_126</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_133</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_140</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_147</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_153</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmBusNmTypeValues</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_RemoteSleepIndication: This function is only available if NmGlobalFeatures.
        NmRemoteSleepIndEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1643</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.RemoteSleepAvailableFunctions</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of Nm_RemoteSleepCancellation: This function is only available if
        NmGlobalFeatures.NmRemoteSleepIndEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1643</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.RemoteSleepAvailableFunctions</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00279</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If NmGlobalFeatures.NmCoordinatorSupportEnabled is set to TRUE, the Nm_MainFunction API shall
        be available.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmMainFunctionAlwaysAvailable</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The functionality of coordinating nested sub busses shall be available if the NmGlobalFeatures.
        NmCoordinatorSyncSupport parameter is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00271</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_CoordReadyToSleepCancellation is received on a passively coordinated channel the
        NmCoordinator shall set the NMCoordinatorSleepReady bit to UNSET (0) via API call to &lt;BusNm&gt;
        _SetSleepReadyBit on all actively coordinated channels.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NMCoordReadyToSleepCancelation</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00281</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        NmGlobalFeatures.NmGlobalCoordinatorTime shall be set at least to the maximum time needed to
        shut down all Networks coordinated.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00282</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | Nm_ConfigType
        Kind | Structure
        Elements | implementation specific
        Type
        Comment
        Description | Configuration data structure of the Nm module.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InitializationFunction</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Configuration pointer ConfigPtr shall always have a NULL_PTR value.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InitializationFunction</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00284</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the NmGlobalFeatures.NmGlobalCoordinatorTime is zero the shutdown delay timer of all
        channels shall also be zero.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.CoordinatorFeature</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00285</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the &lt;bus&gt;Nm calls Nm_CarWakeUpIndication and NmGlobalFeatures.NmCarWakeUpCallout is not
        defined, the NM Interface shall call the function BswM_Nm_CarWakeUpIndication with
        nmNetworkHandle as parameter.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_209</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutNotDefined</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.WakeupDefaultCallout</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmComUserDataSupport
        Parent Container:
          NmChannelConfig
        Description:
          This parameter indicates whether on a NM channel user data is
          accessed via Com signals or by SetUserData API.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: NmComUserDataSupport shall be equal to
          &lt;Bus&gt;NmComUserDataSupport
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_194</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_1</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Compile_UDP_2</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmPassiveModeEnabled
        Parent Container:
          NmChannelConfig
        Description:
          This parameter indicates whether a NM channel is active,e.g. can
          request communication and keep the bus awake, or passive, e.g. can
          just be woken up and kept awake by other ECUs.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: if ComMNmVariant == FULL then
          NmPassiveModeEnabled = FALSE; NmPassiveModeEnabled shall be
          equal to &lt;Bus&gt;NmPassiveModeEnabled
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_429</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmPassiveModeEnabledDependency</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00286</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_DisableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00286.1</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00286.2</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.ReturnNotOkOnPassiveChannels</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00287</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_EnableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00287.1</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00287.2</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.ReturnNotOkOnPassiveChannels</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_SetUserData is called with a network handle where NmGlobalFeatures.NmPassiveModeEnabled
        is set to TRUE it shall not execute any functionality and return with E_NOT_OK. If
        NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00288.1</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00288.2</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.ReturnNotOkOnPassiveChannels</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00289</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_RepeatMessageRequest is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00289.1</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00289.2</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.ReturnNotOkOnPassiveChannels</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00290</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_CheckRemoteSleepIndication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE it shall not execute any functionality and return with
        E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00290.1</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00290.2</srcid><srcstatus/><internalId>256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>dev.Nm.ReturnNotOkOnPassiveChannels</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00291</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | &lt;NmCarWakeUpCallout&gt;
        Syntax
        void &lt;NmCarWakeUpCallout&gt; (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x20
        Sync/Async | Asynchronous
        Reentrancy | Non Reentrant
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Callout function to be called by Nm_CarWakeUpIndication(
        Available via | Nm_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_205</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CarWakeupIndicationCalloutDefined</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the NM Coordinator functionality is configured, the configuration parameter
        NmGlobalProperties.NmCycletimeMainFunction shall be configured (see SWS_Nm_00118)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmCycletimeMainFunction.Multiplicity</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00293</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If on a coordinated network the coordinator detects a mode change to NM_MODE_SYNCHRONIZE,
        NM_MODE_PREPARE_BUS_SLEEP or NM_BUS_SLEEP AND the coordinated cluster this network belongs to
        has not started the shutdown process AND if there is no internal network mode request for that
        channel by ComM, the coordinator shall treat this network as remote sleep and shall call &lt;BusNm&gt;
        _NetworkRelease for this network. If additionally for this network the configuration parameter
        NmChannelConfig.NmSynchronizingNetwork is TRUE then the coordinator shall not wait for
        Nm_SynchronizationPoint on this network.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.UnsupportedFunctionalities</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00483</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If BusNmType is NM_BUSNM_LOCALNM and ComM requests Nm_PassiveStartUp() or Nm_NetworkRequest()
        then Nm shall inform ComM about start of network by calling ComM_Nm_NetworkMode(). Rationale :
        Buses of type NM_LOCAL_NM which are coordinated do not have a network management message but
        are synchronized e.g. by a master - slave concept like LIN). These Bus-Types are always
        directly started on request by ComM but the shutdown will be done by coordinator algorithm.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.UnsupportedFunctionalities</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_SynchronizeMode
        Syntax
        void Nm_SynchronizeMode (NetworkHandleType nmNetworkHandle)
        Service ID [hex] | 0x21
        Sync/Async | Asynchronous
        Reentrancy | Reentrant but not for the same channel
        Parameters (in) | nmNetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has entered Synchronize Mode.
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.UnsupportedFunctionalities</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Module Name:
          Nm
        Module Description:
          The Generic Network Management Interface module
        Post-Build Variant Support:
          false
        Supported Config Variants:
          VARIANT-LINK-TIME, VARIANT-PRE-COMPILE
        Included Containers:
          Container Name  Multiplicity  Scope / Dependency
          NmChannelConfig 1..*          This container contains the configuration
                                        (parameters) of the bus channel(s). The
                                        channel parameter shall be harmonized within
                                        the whole communication stack.
          NmGlobalConfig  1             This container contains all global
                                        configuration parameters of the Nm Interface.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_17</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmEcucPartitionRef
        Parent Container:
          NmGlobalConfig
        Description:
          Reference to EcucPartition, where Nm module is assigned to.
        Multiplicity:
          0..1
        Type:
          Reference to EcucPartition
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
        Included Containers:
          Container Name        Multiplicity      Scope/Dependency
          NmGlobalConstants     1
          NmGlobalFeatures      1
          NmGlobalProperties    1
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.BSWDistribution</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00484</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Nm module shall apply appropriate mechanisms to allow calls of its APIs from other
        partitions than its main function, e.g. by providing a Nm satellite.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.BSWDistribution</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00485</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Nm shall interact with &lt;Bus&gt;Nm (i.e. call &lt;Bus&gt;Nm APIs) only in the partition, where the
        respective &lt;Bus&gt;Nm module is assigned to.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.BSWDistribution</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00486</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Nm kernel shall be assigned to the same partition as ComM kernel in order to keep the
        interaction between these two modules on an intra-partition basis.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.BSWDistribution</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmDynamicPncToChannelMappingSupport
        Parent Container:
          NmGlobalFeatures
        Description:
          Precompile time switch to enable the dynamic
          PNC-to-channel-mapping handling.
          False: Dynamic PNC-to-channel-mapping is disabled True: Dynamic
          PNC-to-channel-mapping is enabled
          Tags:
          atp.Status=draft
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default Value:
          Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     All Variants
          Link time           –
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmDynamicPncToChannelMappingEnabled
        Parent Container:
          NmChannelConfig
        Description:
          Channel-specific parameter to enable the dynamic
          PNC-to-channel-mapping feature.
          False: Dynamic PNC-to-channel-mapping is disabled True: Dynamic
          PNC-to-channel-mapping is enabled
          Tags:
          atp.Status=draft
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
          dependency: Shall only be TRUE if
          NmDynamicPncToChannelMappingSupport is TRUE
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>Nm.ECUC_Nm_00249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          NmSynchronizedPncShutdownEnabled
        Parent Container:
          NmGlobalFeatures
        Description:
          Enables or disables support of synchronized PNC shutdown.
          FALSE: synchronized PNC shutdown is disabled
          TRUE: synchronized PNC shutdown is enabled
          Tags:
          atp.Status=draft
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default Value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Value Configuration Class:
          Pre-compile time    X     VARIANT-PRE-COMPILE
          Link time           X     VARIANT-LINK-TIME
          Post-build time     –
        Scope / Dependency:
          scope: local
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ASRR2111.ECUC_Nm_00249</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00487</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When Nm_StateChangeNotification is called to report a change of the Nm state, Nm shall call
        BswM_Nm_StateChangeNotification() with the reported current state.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.StateChangeNotificationToBswM</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00488</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_PassiveStartUp shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_PassiveStartUp.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_492</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00489</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_NetworkRequest shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_NetworkRequest.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_598</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00490</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_NetworkRelease shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_NetworkRelease.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_684</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00491</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_DisableCommunication shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_DisableCommunication.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_827</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00492</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_EnableCommunication shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_EnableCommunication.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_869</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00493</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_SetUserData shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter Nm_SetUserData.
        NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_917</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00494</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_GetUserData shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter Nm_GetUserData.
        NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_970</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00495</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_GetPduData shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter Nm_GetPduData.
        NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1014</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00496</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_RepeatMessageRequest shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_RepeatMessageRequest.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1054</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00497</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_GetNodeIdentifier shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_GetNodeIdentifier.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1097</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00498</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_GetLocalNodeIdentifier shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_GetLocalNodeIdentifier.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1145</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00499</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_CheckRemoteSleepIndication shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_CheckRemoteSleepIndication.nmNetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1197</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00500</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_GetState shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter Nm_GetState.
        nmNetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1293</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.InvalidChannelErrorName</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00501</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If NmChannelConfig.NmDynamicPncToChannelMappingEnabled is set to TRUE and
        Nm_StateChangeNotification is called, then ComM_Nm_RepeatMessageLeftIndication() shall be
        called if Nm_StateChangeNotification.nmPreviousState is set to Nm_StateType.
        NM_STATE_REPEAT_MESSAGE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00502</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Nm_PnLearningRequest shall only be available if NmGlobalFeatures.
        NmDynamicPncToChannelMappingSupport is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00503</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_PnLearningRequest is called with a network handle for a bus system where NmChannelConfig.
        NmDynamicPncToChannelMappingEnabled is set to FALSE Nm shall not execute any functionality and
        return with E_NOT_OK. If NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise
        the error Nm.NM_E_INVALID_CHANNEL in this case.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00504</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Nm_RepeatMessageIndication is called with Nm_RepeatMessageIndication.pnLearningBitSet set to
        TRUE and NmChannelConfig.NmDynamicPncToChannelMappingEnabled is set to TRUE for the provided
        Nm_RepeatMessageIndication.nmNetworkHandle Nm shall call ComM_Nm_PncLearningBitIndication with
        the corresponding network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00505</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmGlobalProperties.NmDevErrorDetect is set to TRUE, the function
        Nm_PnLearningRequest shall raise the error Nm.NM_E_INVALID_CHANNEL if the parameter
        Nm_PnLearningRequest.NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00506</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        {DRAFT} If function Nm_RequestSynchronizedPncShutdown is called,
        NmSynchronizedPncShutdownEnabled is set to TRUE and Nm-StandardBusType is set to a type
        other than NM_BUSNM_LOCALNM, the function shall immediately forward the call to the
        affected &lt;Bus&gt;Nm by calling &lt;Bus&gt;Nm_RequestSynchronizedPncShutdown.
        Otherwise the function shall return with E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ASRR2111.SWS_Nm_00506</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00507</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The indication of a received PN shutdown message via callback function
        Nm_ForwardSynchronizedPncShutdown shall be forwarded to ComM with the corresponding ComMChannel
        by calling ComM_Nm_ForwardSynchronizedPncShutdown(&lt;ComMChannel&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.SynchronizedPncShutdownR2111</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_00508</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        {DRAFT} If the pre-processor switch NmDevErrorDetect is set to TRUE, the function
        Nm_RequestSynchronizedPncShutdown shall raise the error NM_E_INVALID_CHANNEL if the
        parameter NetworkHandle is not a configured network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ASRR2111.SWS_Nm_00508</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_PnLearningRequest (draft)
        Syntax
        Std_ReturnType Nm_PnLearningRequest (NetworkHandleType NetworkHandle)
        Service ID [hex] | 0x22
        Sync/Async | Asynchronous
        Reentrancy | Non Reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | NetworkHandle | Identification of the NM-channel
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: PN Learning Request has failed or is
        not configured for the networkHandle
        Description | Set Repeat Message Request Bit and Partial Network Learning Bit for NM messages
        transmitted next on the bus. For that purpose &lt;BusNm&gt;_PnLearningRequest shall be called (e.g.
        CanNm_PnLearningRequest function if channel is configured as CAN). This will force all nodes to
        enter the PNC Learning Phase and re-enter Repeat Message Stat. This is needed for the optional
        Dynamic PNC-to-channel-mapping feature. Tags:atp.Status=draft
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.DynamicPNCLearning</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>Nm.SWS_Nm_91004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | Nm_ForwardSynchronizedPncShutdown (draft)
        Syntax
        void Nm_ForwardSynchronizedPncShutdown (void)
        Service ID [hex] | 0x23
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant -reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Notification that the network management has received a PN shutdown message on a
        particular NM-channel. This is used to grant a nearly synchronized PNC shutdown across the
        entire PN topology. Tags:atp.Status=draft
        Available via | Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.SynchronizedPncShutdownR2111</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>Nm.SWS_Nm_91005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_Nm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name:
          Nm_RequestSynchronizedPncShutdown (draft)
        Syntax:
          Std_ReturnType Nm_RequestSynchronizedPncShutdown (
                            NetworkHandleType NetworkHandle,
                            PNCHandleType PncId
                         )
        Service ID [hex]:
          0x24
        Sync/Async:
          Synchronous
        Reentrancy:
          Non Reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in):
          NetworkHandle     Identification of the NM-channel
          PncId             Identification of the Pnc which is requested for
                            a synchronized  shutdown across the PNC network
                            topology
        Parameters (inout):
          None
        Parameters (out):
          None
        Return value:
          Std_ReturnType
          E_OK: No error
          E_NOT_OK: Request for a synchronized PNC shutdown hasfailed, e.g.
          NetworkHandle does not exist (development only), Module not yet
          initialized (development only)
        Description:
          This function forward the request for a synchronized PNC shutdown
          of a particular PNC given by PncId to the affected &lt;Bus&gt;Nm by
          calling &lt;Bus&gt;Nm_RequestSynchronizedPncShutdown
          The function call is only valid if NmStandardBusType is not set to
          NM_BUSNM_LOCALNM (e.g. CanNm_RequestSynchronizedPncShutdown function
          is called for NM_BUSNM_CANNM).
          Tags:atp.Status=draft
        Available via:
          Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.ASRR2111.SWS_Nm_91005</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>Nm.ASRR2111.SWS_Nm_00506</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        If function Nm_RequestSynchronizedPncShutdown
        is called, NmSynchronizedPncShutdownEnabled is set to TRUE and NmStandardBusType
        is set to a type other than NM_BUSNM_LOCALNM, the function
        shall immediately forward the call to the affected BusNm by calling
        BusNm_RequestSynchronizedPncShutdown. Otherwise the function shall return with
        E_NOT_OK.
      </description>
      <comment>
        Bus Type NM_BUSNM_LOCALNM is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NM_BUSNM_LOCALNM_Not_Supported</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00506</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>Nm.ASRR2111.SWS_Nm_00305</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the recpetion of PN shutdown message via callback
        function Nm_ForwardSynchronizedPncShutdown is indicated, then Nm
        shall stop the ERA related monitoring of external PNC requests of the PNCs
        (see [SWS_Nm_00324])) which are indicated for an PNC shutdown (PNC bit set to ’1’)
        in the given PNC bit vector and forward the indication to ComM with the corresponding
        ComMChannel by calling ComM_Nm_ForwardSynchronizedPncShutdown(ComMChannel, PncBitVector)
      </description>
      <comment>
        Note: The PNC bit vector of a received PN shutdown message shall be used to release
        the PNCs for a synchronized shutdown and pass this ERA information to the ComM
        module. The synchronized PNC shutdown has to be handled as fast as possible.
        Therefore, the ComM module is informed immediately.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.Era_Handling_In_BusNm</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.SWS_Nm_00305</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>Nm.ASRR2111.SWS_Nm_91005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name:       Nm_RequestSynchronizedPncShutdown
        Syntax:             Std_ReturnType Nm_RequestSynchronizedPncShutdown (
                            NetworkHandleType NetworkHandle,
                            PNCHandleType PncId)
        Service ID [hex]:   0x24
        Sync/Async:         Synchronous
        Reentrancy:         Non Reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in):    NetworkHandle | Identification of the NM-channel
                            PncId         | Identification of the Pnc which is requested for a synchronized
                                          | shutdown across the PNC network topology
        Parameters (inout): None
        Parameters (out):   None
        Return value:       Std_ReturnType E_OK: No error
                                           E_NOT_OK: Request for a synchronized PNC shutdown has
                                           failed, e.g.NetworkHandle does not exist (development only)
                                           Module not yet initialized (development only)
        Description:        This function forward the request for a synchronized PNC shutdown of a
                            particular PNC given by PncId to the affected BusNm by calling
                            BusNm_RequestSynchronizedPncShutdown
                            The function call is only valid if NmStandardBusType is not set to NM_BUSNM_LOCALNM (e.g.
                            CanNm_RequestSynchronizedPncShutdown function is called for NM_BUSNM_CANNM).
        Available via:      Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_CANNM</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_FRNM</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_UDPNM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_GENERIC</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1923</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>Nm.ASRR2111.SWS_Nm_00508</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        If the pre-processor switch NmDevErrorDetect is set
        to TRUE, the function Nm_RequestSynchronizedPncShutdown shall raise the error
        NM_E_INVALID_CHANNEL if the parameter NetworkHandle is not a configured
        network handle.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1940</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>Nm.ASRR2111.SWS_Nm_91009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name:       Nm_ForwardSynchronizedPncShutdown
        Syntax:             void Nm_ForwardSynchronizedPncShutdown (
                            NetworkHandleType NetworkHandle,
                            const uint8* PncBitVectorPtr)
        Service ID [hex]:   0x28
        Sync/Async:         Synchronous
        Reentrancy:         Non Reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in):    NetworkHandle   |Identification of the NM-channel
                            PncBitVectorPtr |Pointer to the bit vector with all PNC bits set to 1 which are
                                             indicated for a synchronized PNC shutdown
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        Notification that the network management has received a
                            PN shutdown message on a particular NM-channel.
                            This is used to grant a nearly synchronized PNC shutdown across the
                            entire PN topology.
        Available via:      Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1609</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>Nm.ASRR2111.ECUC_Nm_00249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_NetworkManagementInterface.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:             NmSynchronizedPncShutdownEnabled
        Parent Container: NmGlobalFeatures
        Description:      Enables or disables support of synchronized PNC shutdown.
                          FALSE: synchronized PNC shutdown is disabled
                          TRUE: synchronized PNC shutdown is enabled
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default Value:    false
        Multiplicity      Pre-compile time X VARIANT-PRE-COMPILE
        Configuration     Link time        X VARIANT-LINK-TIME
        Class:            Post-build time  –
        Value             Pre-compile time X VARIANT-PRE-COMPILE
        Configuration     Link time        X VARIANT-LINK-TIME
        Class:            Post-build time  –
        Scope/Dependency: scope: local
                          dependency: This parameter can only be set to TRUE if
                                      NmPartialNetworkSupportEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.Nm.NmPartialNetworkSupportEnabled_Not_Supported</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Nm.EB_Ref.ECUC_Nm_00249</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00247</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The code-file structure of the Nm Interface module shall include the
        following files named:
        - Nm_Cfg.c (for pre-compile time configurable parameters)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/Nm_Cfg.c_3</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00236.1</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If a coordinated shutdown has been initiated and Nm receives E_NOT_OK on a &lt;BusNm&gt;
        _NetworkRelease, the shutdown shall be immediately aborted. For all networks that have not
        entered ''bus-sleep mode``, Nm shall request the networks. This includes the network that
        indicated an error for &lt;BusNm&gt;_NetworkRelease.
      </description>
      <rationale>
        If a network cannot be released, it shall immediately be requested again
        to synchronize the states between the NM Coordinator in the Nm and the
        &lt;BusNm&gt;. The shutdown will eventually be initiated again as long as
        the problem with the &lt;BusNm&gt; persists. It is up to the &lt;BusNm&gt;
        to report any problems directly to the DEM and/or DET so the NM
        Coordinator shall only try to release the networks until it is successful.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_348</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_AbortRetry_Shutdown</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30026</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00236.2</id>
      <status>approved</status>
      <version>1</version>
      <description>
        As soon as network is requested for all the networks due to the aborted
        shutdown specified in SWS_Nm_00236_Refine1, the conditions for initiating
        coordinated shutdown can be evaluated again. This applies also to networks
        that  were not actively participating in the current coordinated shutdown.
      </description>
      <rationale>
        If a network cannot be released, it shall immediately be requested again
        to synchronize the states between the NM Coordinator in the Nm and the
        &lt;BusNm&gt;. The shutdown will eventually be initiated again as long as
        the problem with the &lt;BusNm&gt; persists. It is up to the &lt;BusNm&gt;
        to report any problems directly to the DEM and/or DET so the NM
        Coordinator shall only try to release the networks until it is successful.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_348</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_AbortRetry_Shutdown</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NetworkRelease_E_NOT_OK</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00130</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration of Nm_NetworkRequest: This function is only available if
        at least one channel has 'NmPassiveModeEnabled' set to FALSE.
      </description>
      <rationale>
        The parameter 'NmPassiveModeEnabled' is channel specific according to
        AUTOSAR SWS R4.0.3. If there exists at least one channel with
        'NmPassiveModeEnabled' set to FALSE, then Nm has to provide
        the APIs <function>&lt;BusNm&gt;_NetworkRequest()</function> and
        <function>&lt;BusNm&gt;_NetworkRelease()</function>.
      </rationale>
      <comment>
        The parameter 'NmPassiveModeEnabled' will be moved back to
        'NmGlobalFeatures' in the next release.
        Ref: http://www.autosar.org/bugzilla/show_bug.cgi?id=54550#c11
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_573</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00132</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration of Nm_NetworkRelease: This function is only available if
        at least one channel has 'NmPassiveModeEnabled' set to FALSE.
      </description>
      <rationale>
        The parameter 'NmPassiveModeEnabled' is channel specific according to
        AUTOSAR SWS R4.0.3. If there exists at least one channel with
        'NmPassiveModeEnabled' set to FALSE, then Nm has to provide
        the APIs <function>&lt;BusNm&gt;_NetworkRequest()</function> and
        <function>&lt;BusNm&gt;_NetworkRelease()</function>.
      </rationale>
      <comment>
        The parameter 'NmPassiveModeEnabled' will be moved back to
        'NmGlobalFeatures' in the next release.
        Ref: http://www.autosar.org/bugzilla/show_bug.cgi?id=54550#c11
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_573</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00246.VersionCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The version check shall be implemented as specified in EB requirements
        [BSWM_CHK_400] and [BSWM_CHK_401].
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_72</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00171</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The NM Coordinator shall constantly evaluate whether all presently awake
        networks of a coordination cluster are ready to go to sleep. The
        coordination algorithm may not be started until all networks of the
        coordination cluster are either ready to go to sleep or are already in
        'bus-sleep mode'.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_403</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_713</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1688</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30001</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30002</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30003</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00173.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If not all conditions to start coordinated shutdown have been met, calls
        to Nm_SynchronizationPoint() shall be ignored.
      </description>
      <comment>
        The concerned conditions to start coordinated shutdown of the clusters are
          1. There is no network which is still requested in the coordination
             cluster.
          2. Configuration parameter NmSynchronizingNetwork (ECUC_Nm_00223) is set
             to TRUE for these networks.
          3. SWS_Nm_00169: These networks are presently awake.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1788</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00173.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the coordination algorithm has already been started (but not aborted),
        calls to Nm_SynchronizationPoint() shall be ignored.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1788</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_SynchronizingNetwork_1</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if any network in that NM
        Coordination Cluster indicates Nm_RemoteSleepCancelation().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1735</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30038</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>TS_NM_ShutdownAbort</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00181.NetworkMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if any network in that NM
        Coordination Cluster indicates Nm_NetworkMode().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1446</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30052</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if any network in that NM
        Coordination Cluster indicates Nm_NetworkStartIndication().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1388</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30055</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00181.NetworkRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if the ComM request one of
        the networks with Nm_NetworkRequest().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_646</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30054</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The coordinated shutdown shall be aborted if the ComM request one of
        the networks with Nm_PassiveStartup().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_528</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_CanNm</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_FrNm</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_UdpNm</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CancelShutdwn_Passive_GenericNm</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30009</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00123.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm Interface module shall provide the following
        file:
        Nm header file: Nm.h (for declaration of provided
        interface functions)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_46</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00123.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm Interface module shall provide the following
        file:
        Nm callback declarations: Nm_Cbk.h (for
        declaration of provided call-back functions)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_49</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00123.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm Interface module shall provide the following
        file:
        Nm callback declarations: NmStack_Types.h (type definitions
        for the Nm Stack)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm.h_8</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30030</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30031</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_NM_CompileGeneric</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30032a</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30033</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30034</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30035a</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00124.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following header file shall be included
        within the Nm Interface module:
        Std_Types.h (for AUTOSAR standard types)
      </description>
      <comment>
       Note: Platform_Types.h (for platform specific types) and
       Compiler.h (for compiler specific language extensions) are
       indirectly included via AUTOSAR standard types.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/NmStack_Types.h_9</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00124.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following header file shall be included
        within the Nm Interface module:
        MemMap.h (for memory abstraction)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_117</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00124.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following header file shall be included
        within the Nm Interface module:
        SchM_Nm.h (for interfaces with the BSW Scheduler)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_55</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00124.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following header file shall be included
        within the Nm Interface module:
        ComM_Nm.h (for Communication Manager callback functions)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_15</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_52</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00124.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following header file shall be included
        within the Nm Interface module:
        BswM_Nm.h (for interfaces with the BswM)
      </description>
      <comment>
        The header shall only be included if
        NmCarWakeUpRxEnabled is set to true and
        NmCarWakeUpCallout is not defined.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_58</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm shall be able to detect the following error and exception depending
        on its configuration (development/production):
        Type or error                Relevance     Related error code    Value [hex]
        API service used without
        Nm interface initialization  Development   NM_E_UNINIT           0x00
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm.h_234</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30024</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_DET_0</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm shall be able to detect the following error and exception depending
        on its configuration (development/production):
        Type or error                 Relevance     Related error code      Value [hex]
        API Service called with
        wrong parameter but not
        with NULL-pointer             Development   NM_E_HANDLE_UNDEF       0x01
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm.h_245</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30025</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30041</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>TS_NM_30042</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_DET_2</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Nm shall be able to detect the following error and exception depending
        on its configuration (development/production):
        Type or error           Relevance     Related error code      Value [hex]
        API service called
        with a NULL pointer     Development   NM_E_PARAM_POINTER       0x02
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm.h_255</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetInvalidParam</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00506</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If function Nm_RequestSynchronizedPncShutdown
        is called, NmSynchronizedPncShutdownEnabled is set to TRUE ,the function
        shall immediately forward the call to the affected BusNm by calling
        BusNm_RequestSynchronizedPncShutdown.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_CANNM</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_FRNM</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_UDPNM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_GENERIC</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1923</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00305</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the recpetion of PN shutdown message via callback
        function Nm_ForwardSynchronizedPncShutdown is indicated, then Nm
        shall forward the indication to ComM with the corresponding
        ComMChannel by calling ComM_Nm_ForwardSynchronizedPncShutdown(ComMChannel, PncBitVector)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1609</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.ECUC_Nm_00249</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name:             NmSynchronizedPncShutdownEnabled
        Parent Container: NmGlobalFeatures
        Description:      Enables or disables support of synchronized PNC shutdown.
                          FALSE: synchronized PNC shutdown is disabled
                          TRUE: synchronized PNC shutdown is enabled
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default Value:    false
        Multiplicity      Pre-compile time X VARIANT-PRE-COMPILE
        Configuration     Link time        X VARIANT-LINK-TIME
        Class:            Post-build time  –
        Value             Pre-compile time X VARIANT-PRE-COMPILE
        Configuration     Link time        X VARIANT-LINK-TIME
        Class:            Post-build time  –
        Scope/Dependency: scope: local
                          dependency:
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_CANNM</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_FRNM</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_UDPNM</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_GENERIC</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1722</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00286.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_DisableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall not execute any functionality and return with
        E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_626</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_923</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_834</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Single_Bus_Passive_Mode_True</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00286.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_DisableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall raise the error NM_E_HANDLE_UNDEF.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_834</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00287.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_EnableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall not execute any functionality and return with
        E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_643</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_941</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_876</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Single_Bus_Passive_Mode_True</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00287.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_EnableCommunication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall raise the error NM_E_HANDLE_UNDEF.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_876</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00288.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_SetUserData is called with a network handle where NmGlobalFeatures.NmPassiveModeEnabled
        is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall not execute any functionality and return with E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_506</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_781</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_930</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Single_Bus_Passive_Mode_True</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00288.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_SetUserData is called with a network handle where NmGlobalFeatures.NmPassiveModeEnabled
        is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set to TRUE then it shall raise the error
        NM_E_HANDLE_UNDEF.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_930</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00289.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_RepeatMessageRequest is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall not execute any functionality and return with
        E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_562</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_840</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1061</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Single_Bus_Passive_Mode_True</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00289.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_RepeatMessageRequest is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall raise the error NM_E_HANDLE_UNDEF.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1061</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00290.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_CheckRemoteSleepIndication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall not execute any functionality and return with
        E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_589</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_868</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1210</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>Nm.EB_Ref.SWS_Nm_00290.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If Nm_CheckRemoteSleepIndication is called with a network handle where NmGlobalFeatures.
        NmPassiveModeEnabled is set to TRUE and if NmGlobalProperties.NmDevErrorDetect is set
        to TRUE then it shall raise the error NM_E_HANDLE_UNDEF.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1210</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Nm.EB.Config.NmMultiCoreSupport</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The boolean configuration parameter NmMultiCoreSupport enables module multi core support.
        The parameter has CONFIG-CLASS PRE-COMPILE and default value FALSE.
        It SHALL be placed into NmGeneralContainer.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_120</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1093</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_CanNm_PassiveStartUp</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_PassiveStartUp instead of CanNm_PassiveStartUp.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_387</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_CanNm</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_PassiveStartup1Ch</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_UdpNm_PassiveStartUp</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_PassiveStartUp instead of UdpNm_PassiveStartUp.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_387</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_UdpNm</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_FrNm_PassiveStartUp</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_PassiveStartUp instead of FrNm_PassiveStartUp.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_388</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_FrNm</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_NetworkRelease</srcid><srcstatus/><internalId>677</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_CanNm_NetworkRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRequest instead of CanNm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_429</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_CanNm</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronizationFalse</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronization</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkRequest1Ch</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest instead of CanNm_NetworkGwEraRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_783</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_CanNm</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest1Ch</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_0</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_1</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_UdpNm_NetworkRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRequest instead of UdpNm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_428</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_UdpNm</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest instead of UdpNm_NetworkGwEraRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_785</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_UdpNm</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_0</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_1</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_FrNm_NetworkRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRequest instead of FrNm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_428</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_FrNm</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_NetworkRelease</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Call_FrNm_NetworkReleaseGeneric</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Call_FrNm_NetworkReleaseGenericFalse</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest instead of FrNm_NetworkGwEraRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_784</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_FrNm</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_0</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_GwEraRequest_1</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_CanNm_NetworkRelease</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRelease instead of CanNm_NetworkRelease.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_460</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_CanNm</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronizationFalse</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronization</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkRelease1Ch</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_UdpNm_NetworkRelease</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRelease instead of UdpNm_NetworkRelease.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_460</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_UdpNm</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_FrNm_NetworkRelease</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_NetworkRelease instead of FrNm_NetworkRelease.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_461</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_RequestBusSynchronizationFalse</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_NetworkRelease</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Call_FrNm_NetworkReleaseGeneric</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Call_FrNm_NetworkReleaseGenericFalse</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_CanNm_RequestBusSynchronization</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_BusNm_RequestBusSynchronization instead of
        CanNm_RequestBusSynchronization.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_883</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_CanNm</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronizationFalse</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_CanNm_RequestBusSynchronization</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_FrNm_RequestBusSynchronization</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_BusNm_RequestBusSynchronization instead of
        FrNm_RequestBusSynchronization.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_884</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_RequestBusSynchronizationFalse</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_FrNm_RequestBusSynchronization</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_UdpNm_RequestBusSynchronization</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE, Nm shall call
        SchM_Call_Nm_RequiredCSEntry_Nm_BusNm_RequestBusSynchronization instead of
        UdpNm_RequestBusSynchronization.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_885</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_UdpNm</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>Nm.EB.SchM_Call_DET</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If NmMultiCoreSupport is TRUE and DET is enabled and SchM_Call returns
        a different value from SCHM_E_OK, DET shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_336</srcid><srcstatus/><internalId>438</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_558</srcid><srcstatus/><internalId>446</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2379</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2410</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Schm_Call_RequestBusSynchronization</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_PassiveStartup</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkRequest</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkRelease</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_DET_1</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>Nm.EB.NmMultiCoreSupport_ON_1</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The function Nm_NetworkStartIndication() is defined when configuration
        parameter NmMultiCoreSupport is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_219</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1354</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>Nm.EB.NmMultiCoreSupport_ON_2</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The function Nm_NetworkMode() is defined when configuration parameter
        NmMultiCoreSupport is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_146</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1411</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>Nm.EB.NmMultiCoreSupport_ON_3</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The function Nm_BusSleepMode() is defined when configuration parameter
        NmMultiCoreSupport is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_194</srcid><srcstatus/><internalId>416</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1499</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>Nm.EB.NmMultiCoreSupport_ON_4</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The function Nm_PrepareBusSleepMode() is defined when configuration
        parameter NmMultiCoreSupport is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Nm_Cbk.h_171</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1559</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>Nm.EB.Nm_NetworkGwEraRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Service name:       Nm_NetworkGwEraRequest
        Syntax:             Std_ReturnType Nm_NetworkGwEraRequest(
                              const NetworkHandleType NetworkHandle)
        Service ID[hex]:    0xFE
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant for the same NetworkHandle, reentrant otherwise
        Parameters (in):    NetworkHandle Identification of the NM-channel
        Parameters (inout): None
        Parameters (out):   None
        Return value:       Std_ReturnType E_OK: No error
                                           E_NOT_OK: Requesting of bus communication has failed
                                           NetworkHandle does not exist (development only)
                                           Module not yet initialized (development only)
        Description:        This function calls the &amp;lt;BusNm&amp;gt;_NetworkGwEraRequest
                            (e.g. CanNm_NetworkGwEraRequest function is called if channel is configured as CAN).
                            Function shall be available if define EB_NM_STACK is set to STD_ON,
                            and passive mode is set to false for at least a channel

      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_747</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmStandardBusTypeUdpNm_GwEraCall</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Network_GwEra_Request_DirectCall_CanNm</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Network_GwEra_Request_DirectCall_FrNm</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Network_GwEra_Request_DirectCall_UdpNm</srcid><srcstatus/><internalId>698</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_NO_DET</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>Nm.EB.EB_NM_STACK</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The Nm module shall define EB_NM_STACK as STD_OFF if
        (ComMBusType is set to COMM_BUS_TYPE_CAN and EB_CANNM is not defined) or
        (ComMBusType is set to COMM_BUS_TYPE_FR  and EB_FRNM is not defined) or
        (ComMBusType is set to COMM_BUS_TYPE_UDP and EB_UDPNM is not defined) or
        generic bus type is used, otherwise EB_NM_STACK shall be defined as STD_ON.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Nm_Cfg.h_360</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_Compile_Multicore</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>Nm.EB.ComControlEnabled_PassiveModeEnabled</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Warning shall be reported in case both ComControlEnabled and PassiveModeEnabled are set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1306</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_GEN_10001</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>Nm.EB.Schm_BusNmSynchronizedPncShutDown_Error</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore function call to Schm_BusNmSynchronizedPncShutDown returns a value diffrent than SCHM_E_OK
        and NmDevErrorDetect is set to true DET shall be roperted with error NM_E_REQUEST_SYNCHRONIZED_PNC_SHUTDOWN (252)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1962</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1987</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_21_SynchronizedPncShutdown_DET</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_DET</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>Nm.EB.NmNodeIdEnabled</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name: NmNodeIdEnabled
        Parameter Type: Boolean
        Parent Container: NmChannelConfig,
        Description: Parameter specifies if BusNm_GetNodeIdentifier and BusNm_GetLocalNodeIdentifier are called in case
        Nm_GetNodeIdentifier or Nm_GetLocalNodeIdentifier are called
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_392</srcid><srcstatus/><internalId>567</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_J1939_APIS_01</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_NM_J1939_APIS_02</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    
    <specobject>
      <id>Nm.EB.NmNodeDetectionEnabled</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name: NmNodeDetectionEnabled
        Parameter Type: Boolean
        Parent Container: NmChannelConfig,
        Description: Parameter specifies if BusNm_RepeatMessageRequest is called in case Nm_RepeatMessageRequest is called
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_354</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_J1939_APIS_01</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>TS_NM_J1939_APIS_02</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    
    
    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name:               NmMultiCoreUseSingleCS
        Description:        In case NmMultiCoreUseSingleCS single client server shall be used for 
                            BusNm_PassiveStartup, BusNm_NetworkRequest, BusNm_NetworkRelease and BusNm_NetworkGwEraRequest
        Multiplicity:       1
        Type:               EcucBooleanParamDef
        Default value:      -
        ConfigurationClass: Pre-compile time X All variants
                            Link time        - 
                            Post-build time  -
        Dependency:         dependency: Parameter shall be set to false is NmMultiCoreSupport is set to false
                                        Parameter shall be set to false is only generic busses are defined
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1116</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_1</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_2</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_3</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_4</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_5</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_6</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>    
    
    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS_NmGlobalFeatures</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Parameter NmMultiCoreUseSingleCS shall be part of NmGlobalFeatures
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_1117</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>        
    
    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When paremeter NmMultiCoreUseSingleCS is enabled and Nm_PassiveStartUp is called
        Nm module shall call SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations_[channel_name] with with two parameters
        channel id and 0 (id for passive startup)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2455</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_1</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_2</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_3</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_4</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_5</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_6</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>            
    
    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When paremeter NmMultiCoreUseSingleCS is enabled and Nm_NetworkRequest is called
        Nm module shall call SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations_[channel_name] with with two parameters
        channel id and 1 (id for Network Request)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2471</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_1</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_2</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_3</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_4</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_5</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>                

    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When paremeter NmMultiCoreUseSingleCS is enabled and Nm_NetworkRelease is called
        Nm module shall call SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations_[channel_name] with with two parameters
        channel id and 2 (id for Network Release)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2485</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_1</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_2</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_3</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_4</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_5</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>    
    
    <specobject>
      <id>Nm.EB.NmMultiCoreUseSingleCS_NetworkGwEraRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When paremeter NmMultiCoreUseSingleCS is enabled and Nm_NetworkRequest is called
        Nm module shall call SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations_[channel_name] with with two parameters
        channel id and 3 (id for Network Gw Era Request)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2500</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_1</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_2</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>TS_NM_NmMultiCoreUseSingleCS_3</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>                    
    
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Nm.EB.ASR40.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The Nm module's generator shall generate a basic software
      module description (BSWMD) based on the Nm module's
      configuration containing information on the exclusive areas
      required by the Nm module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The Nm module's generator shall generate a basic software
      module description (BSWMD) based on the Nm module's
      configuration containing information on the scheduled
      MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The Nm module's BSWMD shall be generated using a generator
      mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30035</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.DetErr_PassiveChannels</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the configuration parameter 'NmDevErrorDetect' is 'true' and Nm has
        at least one channel with 'NmPassiveModeEnabled' set to FALSE then the
        functions Nm_NetworkRequest() and Nm_NetworkRelease() shall raise
        a DET error 'NM_E_HANDLE_UNDEF' when called for a NetworkHandle
        which has 'NmPassiveModeEnabled' set to TRUE.
      </description>
      <rationale>
        The parameter 'NmPassiveModeEnabled' is channel specific according to
        AUTOSAR SWS R4.0.3. If there exists at least one channel with
        'NmPassiveModeEnabled' set to FALSE, then Nm has to provide
        the APIs <function>&lt;BusNm&gt;_NetworkRequest()</function> and
        <function>&lt;BusNm&gt;_NetworkRelease()</function>.
      </rationale>
      <comment>
        The parameter 'NmPassiveModeEnabled' will be moved back to
        'NmGlobalFeatures' in the next release.
        Ref: http://www.autosar.org/bugzilla/show_bug.cgi?id=54550#c11
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_DetErr_PassiveModeEnabled_True</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>TS_NM_Schm_Call_NetworkGwEraRequest_DET_3</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.StateChangeNotification.Callout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name: NmStateChangeNotificationCallout
        Type: boolean
        Description: Preprocessor switch for enabling the callout function
                     Nm_StateChangeNotificationCallout() to be called
                     within the callback function Nm_StateChangeNotification().
        Multiplicity: 0..1
        ConfigurationClass: Pre-compile time
        Scope / Dependency: Only available if 'NmStateChangeIndEnabled' is set to
                            true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_ConTest_StateChangeNotification_Off</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>TC_NM_StateChangeCallback</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.StateChangeNotification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the parameter 'NmStateChangeNotificationCallout' is enabled,
        the callback function Nm_StateChangeNotification() shall forward
        the state changes to the callout function Nm_StateChangeNotificationCallout().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_NM_StateChangeCallback</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case parameter NmWaitForShutdownTime is enabled for a channel and
        the BusNm stays more is Synchronize State then the
        configurred value (NmWaitForShutdownTime) the channel shall be considered inactive.
        In case parameter NmWaitForShutdownTime is enabled for a channel and
        the BusNm is in Bus Sleep State (because of Bus Off) and channel has
        NmSynchronizingNetwork parameter set to TRUE, the Coordination cluster
        shall wait for a Synchronization Point the number of mainfunctions
        specified by NmWaitForShutdownTime.
        Multiplicity:       0..1
        Type:               EcucIntegerParamDef
        Range               2 .. 65535
        Default value:      -
        ConfigurationClass: Pre-compile time:  X VARIANT-PRE-COMPILE
                            Link time:         --
                            Post-build time:   --
        Scope / Dependency: scope: Channel
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Nm.xdm.m4_767</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.SynchronizeState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case parameter NmWaitForShutdownTime is enabled and
        the channel is participating in cluster and
        the current state of the Bus Nm is Synchronize State and
        timer NmWaitForShutdownTime is not started,
        the timer NmWaitForShutdownTime shall be started.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2303</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70002</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70003</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70006</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.BusSleepState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case parameter NmWaitForShutdownTime is enabled and
        the channel is participating in cluster and
        the current state of the Bus Nm is Bus Sleep State and
        timer NmWaitForShutdownTime is not started,
        the timer NmWaitForShutdownTime shall be started.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2303</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70004</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case timer NmWaitForShutdownTime is started for a channel
        and the BusNm channel is not in Synchronize state or not in
        Bus Sleep state the NmWaitForShutdownTimer shall be stoped.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2330</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70005</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case timer NmWaitForShutdownTime is started for a channel
        and shutdown is aborted the NmWaitForShutdownTimer shall be stoped
        for the coresponding channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2120</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70007</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case timer NmWaitForShutdownTime expired for a channel
        the channel shall be marked as inactive.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2313</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70002</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70003</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70004</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70006</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In case timer NmWaitForShutdownTime expired for a channel
        the cluster's shutdown condition is evaluated.
        If after evaluation, the cluster
        is waiting for Nm_SynchronizationPoint and the current
        channel for which the NmWaitForShutdownTimer expired has
        NmSynchronizingNetwork set to TRUE,
        the coordinator shall not wait anymore for
        a valid Synchronization point.
      </description>
      <comment>
        In case NmWaitForShutdownTime expired but the
        cluster is not ready the sleep yet
        the NmWaitForShutdownTime for the channel is restarted
        (if the Bus is stil Off).
        The next time the fake synchronization point is generated
        is the moment when NmWaitForShutdownTime expires
        again for the Synchronizing network.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_2345</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_70002</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70004</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>TS_NM_70006</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.Nm_GetCoordinatorState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: Nm_GetCoordinatorState
        Syntax: Std_ReturnType Nm_GetCoordinatorState(
        const uint8 nmCoordinatorId,
        uint8* const nmStatePtr,
      Service ID[hex]: 0x1e
      Sync/Async: Asynchronous
      Reentrancy: Reentrant
      Parameters (in): nmCoordinatorId Identification of the coordinator
      Parameters (inout): None
      Parameters (out): nmStatePtr Pointer where state of the coordinator shall be copied to
      Return value: Std_ReturnType E_OK: No error
      E_NOT_OK: Getting of NM state has failed
    </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_30016</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1230</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.RemoteSleepIndicationCallback</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If parameter NmProvideRemoteSleepCallbacks is set to true
        and Nm_RemoteSleepIndication is called, function defined
        by NmRemoteSleepIndicationCallback shall be called in context
        of Nm_RemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1693</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_RemoteSleepCallbacks_1</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_NM_RemoteSleepCallbacks_2</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>Nm.EB.ASR40.RemoteSleepCancellationCallback</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If parameter NmProvideRemoteSleepCallbacks is set to true
        and Nm_RemoteSleepCancellation is called, function defined
        by NmRemoteSleepCancellationCallback shall be called in context
        of Nm_RemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Nm.c.m4_1748</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_RemoteSleepCallbacks_1</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_NM_RemoteSleepCallbacks_2</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>TS_NM_ResourceConsumption</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        01: Get RAM/ROM consumption of the reference tests
        02 VP(Nm.EB.Dsn.ROMConsumption_RefCfg1): Check the ROM consumption of
           the test run against the threshold specified in the requirement.
        03 VP(ComM.EB.Dsn.RAMConsumption_RefCfg1): Check the RAM consumption of
           the test run against the threshold specified in the requirement.
        Action if test any verification point is not fulfilled:
        If the consumption exceeds the threshold, an analysis shall be started to find the cause
        of the additional resource consumption.
        The result of the analysis shall trigger either:
        * an update of the resource view in the design and the existing threshold if there is a
          rationale for the additional resource consumption.
        OR
        * measurements to reduce the additional resource consumption below the existing threshold
          if there is no rationale for the additional resource consumption.
      </description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Dsn.ROMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.Dsn.RAMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Nm.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_DBGINST_001</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>Nm.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_DBGINST_001</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>Nm.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_DBGINST_001</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>Nm.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_DBGINST_001</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>Nm.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_DBGINST_001</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>Nm.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Nm_VerifyCodeStub</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.Nm.BusTypeLINNM</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>dev.Nm.CoordinatorFeature</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00267</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00281</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00284</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>dev.Nm.NoNetworkRequestForOwnNetwork</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>dev.Nm.NM_BUSNM_LOCALNM_Not_Supported</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>dev.Nm.Era_Handling_In_BusNm</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmPartialNetworkSupportEnabled_Not_Supported</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmCycletimeMainFunction.Multiplicity</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>dev.Nm.NotRemovedConfigurationParameters</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>dev.Nm.InitializationFunction</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>dev.Nm.DynamicPNCLearning</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00504</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00505</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>dev.Nm.NMCoordReadyToSleepCancelation</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00272</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>dev.Nm.MissingConfigParameters</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>dev.Nm.BSWDistribution</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00486</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>dev.Nm.StateChangeNotificationToBswM</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmRemoteSleepIndEnabledDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmBusSynchronizationEnabledDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmPassiveModeEnabledDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmStateChangeIndEnabledDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmStandardBusTypeValueAndDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmSynchronizingNetworkDependency</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmRequiredHeaderFiles</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>dev.Nm.Nm_NetworkRequestCallOnPassiveChannel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>621</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>dev.Nm.Nm_NetworkReleaseCallOnPassiveChannel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>dev.Nm.CoordinatedShutdownStart</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>dev.Nm.ShutdownTimerExpire</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>692</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>dev.Nm.AbortShutdownLocalNmBusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>716</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>dev.Nm.InvalidChannelErrorName</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00493</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>dev.Nm.NetworkRequestErrorOnCoordinatedShutdownAbort</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>dev.Nm.CoordinatedNmPassiveStartUp</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>dev.Nm.CodeFileStructure</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmBusNmTypeValues</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>dev.Nm.RemoteSleepAvailableFunctions</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmMainFunctionAlwaysAvailable</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>dev.Nm.WakeupDefaultCallout</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>920</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>dev.Nm.NmSetUserDataAvailable</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>dev.Nm.SynchronizedPncShutdownR2111</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00507</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>dev.Nm.UnsupportedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>dev.Nm.ReturnNotOkOnPassiveChannels</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00274</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_79</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_140</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/NmStack_Types.h_153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/NmStack_Types.h</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Config.NmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.EB_NM_STACK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_460</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_487</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_506</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_562</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>562</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_852</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>852</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_868</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>868</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_884</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>884</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_885</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Nm_Cfg.h_941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/include/Nm_Cfg.h</sourcefile>
      <sourceline>941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/Nm_Cfg.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/src/Nm_Cfg.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/Nm_Cfg.c_267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/generate/src/Nm_Cfg.c</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Nm.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm.h_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm.h</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm.h_245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm.h</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm.h_255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm.h</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_308</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Nm_Cbk.h_385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Cbk.h</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Nm_Int.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/include/Nm_Int.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_58</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00246.VersionCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_117</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00124.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_336</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_403</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_468</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>468</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_558</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>558</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_605</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>605</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_804</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>804</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_849</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00493</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_949</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>949</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_993</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>993</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1014</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1014</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1020</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1020</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1097</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1097</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.Nm_GetCoordinatorState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1411</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1411</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1688</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1688</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1693</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepIndicationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1701</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1720</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepCancellationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1775</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1775</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1788</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1788</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00173.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00173.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1841</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1841</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Schm_BusNmSynchronizedPncShutDown_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_1987</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>1987</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Schm_BusNmSynchronizedPncShutDown_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2047</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2047</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.BusSleepState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Nm.c.m4_2500</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/src/Nm.c.m4</sourcefile>
      <sourceline>2500</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmNodeDetectionEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmNodeIdEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_501</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_544</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>544</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_725</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>725</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_817</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_955</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>955</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1022</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1022</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1080</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Config.NmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1117</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1117</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NmGlobalFeatures</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1150</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1150</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1306</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1306</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ComControlEnabled_PassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1651</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1769</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1769</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1816</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1816</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1844</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1844</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Nm.xdm.m4_1872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/src/Autosar/config/Nm.xdm.m4</sourcefile>
      <sourceline>1872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.Nm.NoLinkTimeSupport</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/public/releasenotes/Limitations.xml</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>Nm.EB.Dsn.RAMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/project/design/pdf/Nm_Design-profiled.xml</sourcefile>
      <sourceline>3897</sourceline>
      <version>2</version>
      <description>
            The RAM consumption for reference configuration must not exceed 23k bytes.
          </description>
      <rationale>
            The defined RAM consumption is the result of all analyzed configuration
            parameters of reference configuration.
          </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_ResourceConsumption</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_ComTest_ResourceConsumption</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>Nm.EB.Dsn.ROMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/doc/project/design/pdf/Nm_Design-profiled.xml</sourcefile>
      <sourceline>3925</sourceline>
      <version>2</version>
      <description>
          The ROM consumption for reference configuration for code and configuration
          must not exceed 28k bytes.
        </description>
      <rationale>
          The defined ROM consumption is the result of all analysed configuration
          parameters of reference configuration.
        </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_ResourceConsumption</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NM_ComTest_ResourceConsumption</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/build/reqm/common_req/Nm_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(Nm.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30030</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_01/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    Verify that source can be compiled if
      - Development error detection(DET) is disabled.
      - Nm_GetVersionInfo is disabled.
      - Nm_GetCoordinatorState is disabled.
      - Nm_NetworkRelease is enabled.
      - Nm_NetworkRequest is enabled.
      - Nm_GetUserData is disabled.
      - Nm_SetUserData is disabled.
      - Nm_DisableCommunication is disabled.
      - Nm_EnableCommunication is disabled.
      - Nm_CheckRemoteSleepIndication is disabled.
      - Nm_RemoteSleepCancellation is disabled.
      - Nm_RemoteSleepIndication is disabled.
      - Nm_MainFunction is disabled.
      - Nm_PduRxIndication is enabled.
      - Nm_StateChangeNotification is enabled.
      - Nm_RepeatMessageIndication is enabled.
      - Nm_TxTimeoutException is enabled.
      - Nm_CarWakeUpIndication is enabled.
      - Nm_CoordReadyToSleepIndication is enabled.

    Verify the symbolic name for ComMChannelId is generated correctly when
    only one Nm channel is configured.

    Also verify that the declaration/definition of the following APIs
    are not provided by Nm module when certain configuration parameter
    is enabled/disabled in this test sequence.
    ---------------------------------------------------------------------------
              API             : Configuration switch             (Requirement)
    ---------------------------------------------------------------------------
      Nm_DisableCommunication : NM_COM_CONTROL_ENABLED = STD_OFF (Nm.SWS_Nm_00134)
      Nm_EnableCommunication  : NM_COM_CONTROL_ENABLED = STD_OFF (Nm.SWS_Nm_00136)
      Nm_SetUserData          : NM_USER_DATA_ENABLED   = STD_OFF (Nm.SWS_Nm_00138)
      Nm_GetUserData          : NM_USER_DATA_ENABLED   = STD_OFF (Nm.SWS_Nm_00140)
      Nm_CheckRemoteSleepIndication
                           : NM_REMOTE_SLEEP_IND_ENABLED = STD_OFF (Nm.SWS_Nm_00150)
      Nm_GetVersionInfo    : NM_VERSION_INFO_API         = STD_OFF (Nm.ASR403.SWS_Nm_00153)
      Nm_GetCoordinatorState: NM_COORDINATOR_SUPPORT_ENABLED = STD_OFF
    ---------------------------------------------------------------------------
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30031</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_02/source/application/test_config.h</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    Verify that source can be compiled if
      - Development error detection(DET) is disabled.
      - Nm_GetVersionInfo is enabled.
      - Nm_NetworkRelease is disabled.
      - Nm_NetworkRequest is disabled.
      - Nm_GetLocalNodeIdentifier is enabled.
      - Nm_GetNodeIdentifier is enabled.
      - Nm_GetPduData is enabled.
      - Nm_RepeatMessageRequest is enabled.
      - Nm_GetUserData is enabled.
      - Nm_SetUserData is enabled.
      - Nm_DisableCommunication is disabled.
      - Nm_EnableCommunication is disabled.
      - Nm_CheckRemoteSleepIndication is enabled.
      - Nm_RemoteSleepCancellation is disabled.
      - Nm_RemoteSleepIndication is disabled.
      - Nm_MainFunction is disabled.
      - Nm_PduRxIndication is disabled.
      - Nm_StateChangeNotification is disabled.
      - Nm_RepeatMessageIndication is disabled.
      - Nm_TxTimeoutException is disabled.
      - Nm_CarWakeUpIndication is disabled.
      - Nm_CoordReadyToSleepIndication is disabled.

    Verify the symbolic name for ComMChannelId is generated correctly when
    only one Nm channel is configured.

    Also verify that the declaration/definition of the following APIs
    are not provided by Nm module when certain configuration parameter
    is enabled/disabled in this test sequence.
    ---------------------------------------------------------------------------
              API             : Configuration switch             (Requirement)
    ---------------------------------------------------------------------------
      Nm_SetUserData          : NM_PASSIVE_MODE_ENABLED = STD_ON (Nm.SWS_Nm_00138)
    ---------------------------------------------------------------------------
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_CompileGeneric</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_02a/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    - Verify that source code gets compiled for the configuration with
      multiple Nm channels, most of the features disabled and some features
      enabled.
    - Verify that Generic Bus Types can be configured.
    - Verify the the symbolic names for ComMChannelId are generated correctly
      when only one Nm channel is configured.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'false'
      - "NmVersionInfoApi" is set to 'true'
      - "NmPassiveModeEnabled" is set to 'true'
      - "NmUserDataEnabled" is set to 'true'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30032</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_03/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    - Verify that source code gets compiled for the configuration with
      multiple Nm channels and all of the features disabled.
    - Verify the the symbolic names for ComMChannelId are generated correctly
      when multiple Nm channels are configured
    - Verify that the same Bus type can be configured on all channels.
    - Check that macros are generated for configuration parameters which are
      specified as SYMBOLICNAMEVALUES.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'false'
      - "NmVersionInfoApi" is set to 'false'
      - "NmPassiveModeEnabled" is set to 'false'
      - "NmUserDataEnabled" is set to 'false'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: 
    NmConf_NmChannelConfig_NmChannelConfig_0   0U
    NmConf_NmChannelConfig_NmChannelConfig_1   1U
    NmConf_NmChannelConfig_NmChannelConfig_2   2U
    NmConf_NmChannelConfig_NmChannelConfig_3   3U
    NmConf_NmChannelConfig_NmChannelConfig_4   4U
    NmConf_NmChannelConfig_NmChannelConfig_5   5U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30032a</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_03a/source/application/test_config.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    - Verify that source code gets compiled for the configuration with
      multiple Nm channels and most of the features disabled and some
      features enabled.
    - Verify that the symbolic names for ComMChannelId are generated
      correctly when multiple Nm channels are configured.Verify that
      the symbolic name macros are generated when
      NM_PROVIDE_LEGACY_SYMBOLIC_NAMES is ON.
    - Verify that a generic bus type can be configured.
    - Verify that multiple Bus types can be configured.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'false'
      - "NmVersionInfoApi" is set to 'false'
      - "NmPassiveModeEnabled" is set to 'false'
      - "NmUserDataEnabled" is set to 'false'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: 
    NmConf_NmChannelConfig_NmChannelConfig_0   0U
    NmConf_NmChannelConfig_NmChannelConfig_1   1U
    NmConf_NmChannelConfig_NmChannelConfig_2   2U
    NmConf_NmChannelConfig_NmChannelConfig_3   3U
    NmConf_NmChannelConfig_NmChannelConfig_4   4U
    NmConf_NmChannelConfig_NmChannelConfig_5   5U
    NmConf_NmChannelConfig_NmChannelConfig_6   6U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30033</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_04/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    - Also verify that source code gets compiled for the configuration with
      only one Nm channel and all the optional features disabled.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'true'
      - "NmVersionInfoApi" is set to 'false'
      - "NmPassiveModeEnabled" is set to 'false'
      - "NmUserDataEnabled" is set to 'false'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30034</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_05/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    - Also verify that source code gets compiled for the configuration with
      only one Nm channel and all the optional features enabled except
      "Coordinator support".
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'true'
      - "NmVersionInfoApi" is set to 'true'
      - "NmPassiveModeEnabled" is set to 'false'
      - "NmUserDataEnabled" is set to 'true'
      - "NmComControlEnabled" is set to 'true'
      - "NmRemoteSleepIndEnabled" is set to 'true'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'true'
      - "NmStateChangeIndEnabled" is set to 'true'
      - "NmPduRxIndicationEnabled" is set to 'true'
      - "NmComUserDataSupport" is set to 'true'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30035</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_06/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Rte BSWM Description provided by Nm is correct so that
    Rte correctly generates the SchM functions, tasks for Main Function and
    Exclusive areas required by Nm module.
    Verify that source can be compiled if
      - Development error detection(DET) is enabled.
      - Nm_GetVersionInfo is enabled.
      - Nm_NetworkRelease is enabled.
      - Nm_NetworkRequest is enabled.
      - Nm_GetUserData is enabled.
      - Nm_SetUserData is disabled.
      - Nm_DisableCommunication is enabled.
      - Nm_EnableCommunication is enabled.
      - Nm_CheckRemoteSleepIndication is enabled.
      - Nm_RemoteSleepCancellation is enabled.
      - Nm_RemoteSleepIndication is enabled.
      - Nm_MainFunction is enabled.
      - Nm_PduRxIndication is disabled.
      - Nm_StateChangeNotification is disabled.
    Verify the the symbolic names for ComMChannelId are generated correctly when
    multiple Nm channels are configured
    Verify that the same Bus type can be configured on all channels.
    Verify that 'Nm_SetUserData()' is not available when com user data support
    is enabled.
  
Test Object: None.
Test Precondition: 
    'NmUserDataEnabled' = 'true'
    'NmPassiveModeEnabled' = 'false'
    'NmComUserDataSupport' = 'true'
  
Test Execution: None.
Test Input: None.
Test Output: 
    Compilation succeeds without any errors or warnings. Particularly there
    should not be any errors or warnings like
    "Tresos\plugins\Nm_TS_TxDxM5I3R0\include\Nm.h, 519: previous declaration of
    function Nm_SetUserData() was here"
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30035a</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_06a/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Nm Interface module provides the following header files:
      - Nm.h (for declaration of provided interface functions)
      - Nm_Cbk.h (for declaration of provided call-back functions)
      - NmStack_Types.h (type definitions for the Nm Stack)
    Verify that source can be compiled if
      - Development error detection(DET) is enabled.
      - Nm_GetVersionInfo is enabled.
      - Nm_NetworkRelease is enabled.
      - Nm_NetworkRequest is enabled.
      - Nm_GetUserData is enabled.
      - Nm_SetUserData is enabled.
      - Nm_DisableCommunication is enabled.
      - Nm_EnableCommunication is enabled.
      - Nm_CheckRemoteSleepIndication is enabled.
      - Nm_RemoteSleepCancellation is enabled.
      - Nm_RemoteSleepIndication is enabled.
      - Nm_MainFunction is enabled.
      - Nm_PduRxIndication is disabled.
      - Nm_StateChangeNotification is disabled.
    Verify the the symbolic names for ComMChannelId are generated correctly when
    multiple Nm channels are configured
    Verify that Generic Bus Types can be configured.
    Verify that multiple Bus types can be configured.
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00123.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Compile_UDP_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_07/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      only one Nm channel and most of the features disabled and some
      features enabled.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'false'
      - "NmVersionInfoApi" is set to 'true'
      - "NmPassiveModeEnabled" is set to 'true'
      - "NmUserDataEnabled" is set to 'true'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Compile_UDP_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_08/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      only one Nm channel and all optional features disabled.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'true'
      - "NmVersionInfoApi" is set to 'false'
      - "NmPassiveModeEnabled" is set to 'false'
      - "NmUserDataEnabled" is set to 'false'
      - "NmComControlEnabled" is set to 'false'
      - "NmRemoteSleepIndEnabled" is set to 'false'
      - "NmCoordinatorSupportEnabled" is set to 'false'
      - "NmBusSynchronizationEnabled" is set to 'false'
      - "NmStateChangeIndEnabled" is set to 'false'
      - "NmPduRxIndicationEnabled" is set to 'false'
      - "NmComUserDataSupport" is set to 'false'
    * Nm_MainFunction() is called when Nm is not initialized and
      "NM Coordinator Support" is disabled (Nm.SWS_Nm_00121)
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_SingleBusTypeMultipleChannel_PassiveModeTrue</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_09/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that source can be compiled when multiple channel is configured but
    all having the same bus type.
    Verify that source can be compiled when NmStateChangeIndEnabled is
    enabled but NmStateReportEnabled is disabled for all configured channels.
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_SingleBusTypeMultipleChannel_PassiveModeFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_09a/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that source can be compiled when multiple channel is configured but
    all having the same bus type.
    Verify that source can be compiled when NmStateChangeIndEnabled is
    enabled but NmStateReportEnabled is disabled for all configured channels.
  
Test Object: None.
Test Precondition: 
    Only a single bus is configured
    All channels have NmPassiveModeEnabled disabled
    NmStateChangeIndEnabled is enabled
    NmStateReportEnabled is disabled
  
Test Execution: None.
Test Input: 
    Single bus configuration with passive mode disabled
  
Test Output: 
    Executable file
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Compile_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_10/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with
      two Nm channels, NmMultiCoreSupport enable, NmDevErrorDetect disable and
      NmCoordinatorSupportEnabled disable.
    - verify that EB_NM_STACK is set to STD_ON
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - "NmDevErrorDetect" is set to 'false';
      - "NmCoordinatorSupportEnabled" is set to 'false';
      - "NmMultiCoreSupport" is set to 'true';
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreSupport_ON_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.EB_NM_STACK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_ComTest_ResourceConsumption</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_ComTest_ResourceConsumption/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Run the compile test in order to measure resource consumption (RAM/ROM) resources
    Get RAM/ROM consumption for ComM
    VP(Nm.EB.Dsn.ROMConsumption_RefCfg1): Check the ROM consumption of
      the test run against the threshold specified in the requirement.
    VP(Nm.EB.Dsn.RAMConsumption_RefCfg1): Check the RAM consumption of
      the test run against the threshold specified in the requirement.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Dsn.ROMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.Dsn.RAMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_GEN_10001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Compile/IN/Nm_GenTest_01_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if warning is reported in case both ComControlEnabled and PassiveModeEnabled
  are set to TRUE
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(Nm.EB.ComControlEnabled_PassiveModeEnabled)
      Check if an warning is thrown if both ComControlEnabled and
      PassiveModeEnabled are set to TRUE

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ComControlEnabled_PassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Callouts_CanNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly
    to the lower layer module CanNm.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized.
    Important test configuration details:
      - Bus type of the underlying network is CAN.
  
Test Execution: 
    01: Set initial values for CanNm.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for channel 0( NetworkHandle 8).
    04: VP (Nm.SWS_Nm_00031):
        - CanNm_PassiveStartUp is called for channel 0.
    05: Call Nm_NetworkRequest for channel 0.
    06: VP (Nm.SWS_Nm_00032):
        - CanNm_NetworkRequest is called for channel 0.
    07: Call Nm_NetworkRelease for channel 0.
    08: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called for channel 0.
    09: Call Nm_DisableCommunication for channel 0.
    10: VP (Nm.SWS_Nm_00033):
        - CanNm_DisableCommunication is called for channel 0.
    11: Call Nm_EnableCommunication for channel 0.
    12; VP (Nm.SWS_Nm_00034):
        - CanNm_EnableCommunication is called for channel 0.
    13: Call Nm_SetUserData for channel 0.
    14: VP (Nm.SWS_Nm_00035):
        - CanNm_SetUserData is called for channel 0.
    15: Call Nm_GetUserData for channel 0.
    16: VP (Nm.SWS_Nm_00036):
        - CanNm_GetUserData is called for channel 0.
    17: Call Nm_GetPduData for channel 0.
    18: VP (Nm.SWS_Nm_00037):
        - CanNm_GetPduData is called for channel 0.
    19: Call Nm_RepeatMessageRequest for channel 0.
    20: VP (Nm.SWS_Nm_00038):
        - CanNm_RepeatMessageRequest is called for channel 0.
    21: Call Nm_GetNodeIdentifier for channel 0.
    22: VP (Nm.SWS_Nm_00039):
        - CanNm_GetNodeIdentifier is called for channel 0.
    23: Call Nm_GetLocalNodeIdentifier for channel 0.
    24: VP (Nm.SWS_Nm_00040):
        - CanNm_GetLocalNodeIdentifier is called for channel 0.
    25: Call Nm_CheckRemoteSleepIndication for channel 0.
    26: VP (Nm.SWS_Nm_00042):
        - CanNm_CheckRemoteSleepIndication is called for channel 0.
    27: Call Nm_GetState for channel 0.
    28: VP (Nm.SWS_Nm_00043):
        - CanNm_GetState is called for channel 0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>TS_NM_Callouts_FrNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly
    to the lower layer module FrNm.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized.
    Important test configuration details:
      - Bus type of the underlying network is Flex Ray(FR).
  
Test Execution: 
    01: Set initial values for FrNm.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for channel 1.
    04. VP (Nm.SWS_Nm_00031):
        - FrNm_PassiveStartUp is called for channel 1.
    05: Call Nm_NetworkRequest for channel 1.
    06: VP (Nm.SWS_Nm_00032):
        - FrNm_NetworkRequest is called for channel 1.
    07: Call Nm_NetworkRelease for channel 1.
    08: VP (Nm.SWS_Nm_00046):
        - FrNm_NetworkRelease is called for channel 1.
    09: Call Nm_DisableCommunication for channel 1.
    10: VP (Nm.SWS_Nm_00033):
        - FrNm_DisableCommunication is called for channel 1.
    11: Call Nm_EnableCommunication for channel 1.
    12: VP (Nm.SWS_Nm_00034):
        - FrNm_EnableCommunication is called for channel 1.
    13: Call Nm_SetUserData for channel 1.
    14: VP (Nm.SWS_Nm_00035):
        - FrNm_SetUserData is called for channel 1.
    15: Call Nm_GetUserData for channel 1.
    16: VP (Nm.SWS_Nm_00036):
        - FrNm_GetUserData is called for channel 1.
    17: Call Nm_GetPduData for channel 1.
    18: VP (Nm.SWS_Nm_00037):
        - FrNm_GetPduData is called for channel 1.
    19: Call Nm_RepeatMessageRequest for channel 1.
    20: VP (Nm.SWS_Nm_00038):
        - FrNm_RepeatMessageRequest is called for channel 1.
    21: Call Nm_GetNodeIdentifier for channel 1.
    22: VP (Nm.SWS_Nm_00039):
        - FrNm_GetNodeIdentifier is called for channel 1.
    23: Call Nm_GetLocalNodeIdentifier for channel 1.
    24: VP (Nm.SWS_Nm_00040):
        - FrNm_GetLocalNodeIdentifier is called for channel 1.
    25: Call Nm_CheckRemoteSleepIndication for channel 1.
    26: VP (Nm.SWS_Nm_00042):
        - FrNm_CheckRemoteSleepIndication is called for channel 1.
    27: Call Nm_GetState for channel 1.
    28: VP (Nm.SWS_Nm_00043):
        - FrNm_GetState is called for channel 1.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>TS_NM_Callouts_UdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly
    to the lower layer module UdpNm.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized.
    Important test configuration details:
      - Bus type of the underlying network is Ethernet.
  
Test Execution: 
    01: Set initial values for UdpNm.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for channel 6.
    04: VP (Nm.SWS_Nm_00031):
        - UdpNm_PassiveStartUp is called for channel 6.
    05: Call Nm_NetworkRequest for channel 6.
    06: VP (Nm.SWS_Nm_00032):
        - UdpNm_NetworkRequest is called for channel 6.
    07: Call Nm_NetworkRelease for channel 6.
    08: VP (Nm.SWS_Nm_00046):
        - UdpNm_NetworkRelease is called for channel 6.
    09: Call Nm_DisableCommunication for channel 6.
    10: VP (Nm.SWS_Nm_00033):
        - UdpNm_DisableCommunication is called for channel 6.
    11: Call Nm_EnableCommunication for channel 6.
    12: VP (Nm.SWS_Nm_00034):
        - UdpNm_EnableCommunication is called for channel 6.
    13: Call Nm_SetUserData for channel 6.
    14: VP (Nm.SWS_Nm_00035):
        - UdpNm_SetUserData is called for channel 6.
    15: Call Nm_GetUserData for channel 6.
    16: VP (Nm.SWS_Nm_00036):
        - UdpNm_GetUserData is called for channel 6.
    17: Call Nm_GetPduData for channel 6.
    18: VP (Nm.SWS_Nm_00037):
        - UdpNm_GetPduData is called for channel 6.
    19: Call Nm_RepeatMessageRequest for channel 6.
    20: VP (Nm.SWS_Nm_00038):
        - UdpNm_RepeatMessageRequest is called for channel 6.
    21: Call Nm_GetNodeIdentifier for channel 6.
    22: VP (Nm.SWS_Nm_00039):
        - UdpNm_GetNodeIdentifier is called for channel 6.
    23: Call Nm_GetLocalNodeIdentifier for channel 6.
    24: VP (Nm.SWS_Nm_00040):
        - UdpNm_GetLocalNodeIdentifier is called for channel 6.
    25: Call Nm_CheckRemoteSleepIndication for channel 6.
    26: VP (Nm.SWS_Nm_00042):
        - UdpNm_CheckRemoteSleepIndication is called for channel 6.
    27: Call Nm_GetState for channel 6.
    28: VP (Nm.SWS_Nm_00043):
        - UdpNm_GetState is called for channel 6.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>TS_NM_Callouts_GenericNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>680</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly
    to the lower layer modules GenericNm_1 and GenericNm_2.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized.
    Important test configuration details:
      - Bus type of the underlying network is generic bus type.
  
Test Execution: 
    01: Set initial values for GenericNm.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for channel 7.
    04: VP (Nm.SWS_Nm_00031):
        - GenericNm_1_PassiveStartUp is called for channel 7.
    05: Call Nm_PassiveStartUp for channel 9.
    06: VP (Nm.SWS_Nm_00031):
        - GenericNm_2_PassiveStartUp is called for channel 9.
    07: Call Nm_NetworkRequest for channel 7.
    08: VP (Nm.SWS_Nm_00032):
        - GenericNm_1_NetworkRequest is called for channel 7.
    09: Call Nm_NetworkRequest for channel 9.
    10: VP (Nm.SWS_Nm_00032):
        - GenericNm_2_NetworkRequest is called for channel 9.
    11: Call Nm_NetworkRelease for channel 7.
    12: VP (Nm.SWS_Nm_00046):
        - GenericNm_1_NetworkRelease is called for channel 7.
    13: Call Nm_NetworkRelease for channel 9.
    14: VP (Nm.SWS_Nm_00046):
        - GenericNm_2_NetworkRelease is called for channel 9.
    15: Call Nm_DisableCommunication for channel 7.
    16: VP (Nm.SWS_Nm_00033):
        - GenericNm_1_DisableCommunication is called for channel 7.
    17: Call Nm_DisableCommunication for channel 9.
    18: VP (Nm.SWS_Nm_00033):
        - GenericNm_2_DisableCommunication is called for channel 9.
    19: Call Nm_EnableCommunication for channel 7.
    20: VP (Nm.SWS_Nm_00034):
        - GenericNm_1_EnableCommunication is called for channel 7.
    21: Call Nm_EnableCommunication for channel 9.
    22: VP (Nm.SWS_Nm_00034):
        - GenericNm_2_EnableCommunication is called for channel 9.
    23: Call Nm_SetUserData for channel 7.
    24: VP (Nm.SWS_Nm_00035):
        - GenericNm_1_SetUserData is called for channel 7.
    25: Call Nm_SetUserData for channel 9.
    26: VP (Nm.SWS_Nm_00035):
        - GenericNm_2_SetUserData is called for channel 9.
    27: Call Nm_GetUserData for channel 7.
    28: VP (Nm.SWS_Nm_00036):
        - GenericNm_1_GetUserData is called for channel 7.
    29: Call Nm_GetUserData for channel 9.
    30: VP (Nm.SWS_Nm_00036):
        - GenericNm_2_GetUserData is called for channel 9.
    31: Call Nm_GetPduData for channel 7.
    32: VP (Nm.SWS_Nm_00037):
        - GenericNm_1_GetPduData is called for channel 7.
    33: Call Nm_GetPduData for channel 9.
    34: VP (Nm.SWS_Nm_00037):
        - GenericNm_2_GetPduData is called for channel 9.
    35: Call Nm_RepeatMessageRequest for channel 7.
    36: VP (Nm.SWS_Nm_00038):
        - GenericNm_1_RepeatMessageRequest is called for channel 7.
    37: Call Nm_RepeatMessageRequest for channel 9.
    38: VP (Nm.SWS_Nm_00038):
        - GenericNm_2_RepeatMessageRequest is called for channel 9.
    39: Call Nm_GetNodeIdentifier for channel 7.
    40: VP (Nm.SWS_Nm_00039):
        - GenericNm_1_GetNodeIdentifier is called for channel 7.
    41: Call Nm_GetNodeIdentifier for channel 9.
    42: VP (Nm.SWS_Nm_00039):
        - GenericNm_2_GetNodeIdentifier is called for channel 9.
    43: Call Nm_GetLocalNodeIdentifier for channel 7.
    44: VP (Nm.SWS_Nm_00040):
        - GenericNm_1_GetLocalNodeIdentifier is called for channel 7.
    45: Call Nm_GetLocalNodeIdentifier for channel 7.
    46: VP (Nm.SWS_Nm_00040):
        - GenericNm_2_GetLocalNodeIdentifier is called for channel 9.
    47: Call Nm_CheckRemoteSleepIndication for channel 7.
    48: VP (Nm.SWS_Nm_00042):
        - GenericNm_1_CheckRemoteSleepIndication is called
        by Nm_CheckRemoteSleepIndication for channel 7.
    49: Call Nm_CheckRemoteSleepIndication for channel 9.
    50: VP (Nm.SWS_Nm_00042):
        - GenericNm_2_CheckRemoteSleepIndication is called
        by Nm_CheckRemoteSleepIndication for channel 9.
    51: Call Nm_GetState for channel 7.
    52: VP (Nm.SWS_Nm_00043):
        - GenericNm_1_GetState is called for channel 7.
    53: Call Nm_GetState for channel 9.
    54: VP (Nm.SWS_Nm_00043):
        - GenericNm_2_GetState is called for channel 9.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>TS_NM_32075</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to lower layer module are passed
    correctly to the ComM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Call Nm_NetworkStartIndication for channel 0.
    02: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 0.
    03: Call Nm_NetworkStartIndication for channel 1.
    04: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 1.
    05: Call Nm_NetworkMode for channel 0.
    06: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 0.
    07: Call Nm_NetworkMode for channel 1.
    08: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 1.
    09: Call Nm_PrepareBusSleepMode for channel 0.
    10: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 0.
    11: Call Nm_PrepareBusSleepMode for channel 1.
    12: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 1.
    13: Call Nm_BusSleepMode for channel 0.
    14: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 0.
    15: Call Nm_BusSleepMode for channel 1.
    16: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 1.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>TS_NM_32081</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>1162</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check correct behavior of Nm_GetVersionInfo API with valid pointer
    as parameter.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Call Nm_GetVersionInfo with a valid address.
    02: VP (Nm.SWS_Nm_00044, Nm.ASR403.SWS_Nm_00152):
        - Nm_GetVersionInfo function returns the version
        information of this module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>TS_NM_32082</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>1214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the published information is available.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_VENDOR_ID is defined.
    02: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_MODULE_ID is defined.
    03: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_AR_RELEASE_MAJOR_VERSION
        is defined.
    04: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_AR_RELEASE_MINOR_VERSION
        is defined.
    05: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_AR_RELEASE_REVISION_VERSION
        is defined.
    06: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_SW_MAJOR_VERSION is defined.
    07: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_SW_MINOR_VERSION is defined.
    08: (Nm.ASR403.SWS_Nm_00001_PI):
        - The published information NM_SW_PATCH_VERSION is defined.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00001_PI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_DetErr_PassiveModeEnabled_True</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_01a/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    01. Verify that Nm channels can be configured to channel ID higher
        than num of Nm channels
    02. Verify BusNm_NetworkRequest() is not invoked when Nm_NetworkRequest()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE
    03. Verify BusNm_NetworkRelease() is not invoked when Nm_NetworkRelease()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    04. Verify BusNm_DisableCommunication() is not invoked when Nm_DisableCommunication()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    05. Verify BusNm_EnableCommunication() is not invoked when Nm_EnableCommunication()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    06. Verify BusNm_SetUserData() is not invoked when Nm_SetUserData()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    07. Verify BusNm_RepeatMessageRequest() is not invoked when Nm_RepeatMessageRequest()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    08. Verify BusNm_CheckRemoteSleepIndication() is not invoked when Nm_CheckRemoteSleepIndication()
        is called for a channel with 'NmPassiveModeEnabled' set to TRUE.
    09. Verify that the development error "NM_E_HANDLE_UNDEF" is reported
        when any of the functions Nm_NetworkRequest, Nm_NetworkRelease,
        Nm_DisableCommunication, Nm_EnableCommunication, Nm_SetUserData,
        Nm_RepeatMessageRequest, Nm_CheckRemoteSleepIndication is called
        for a channel with 'NmPassiveModeEnabled' set to true.
    10. Verify BusNm_DisableCommunication() is invoked when Nm_DisableCommunication()
        is called for a channel with 'NmPassiveModeEnabled' set to FALSE.
    11. Verify BusNm_EnableCommunication() is invoked when Nm_EnableCommunication()
        is called for a channel with 'NmPassiveModeEnabled' set to FALSE.
    12. Verify BusNm_SetUserData() is invoked when Nm_SetUserData()
        is called for a channel with 'NmPassiveModeEnabled' set to FALSE.
    13. Verify BusNm_RepeatMessageRequest() is invoked when Nm_RepeatMessageRequest()
        is called for a channel with 'NmPassiveModeEnabled' set to FALSE.
    14. Verify BusNm_CheckRemoteSleepIndication() is invoked when Nm_CheckRemoteSleepIndication()
        is called for a channel with 'NmPassiveModeEnabled' set to FALSE.
  
Test Object: None.
Test Precondition: 
    Test Configuration pre-requisites:
    01. Enable Development Error Detection.
    02. At least one Nm channel must have set parameter "NmPassiveModeEnabled"
        to "FALSE" in order to make the API functions under test available.
    03. At least one Nm channel must have set parameter "NmPassiveModeEnabled"
        to "TRUE".
    04. One Channel ID of a channel being tested is configured to a higher value
        than the number of channels.

    Test Execution pre-requisites:
    01. Nm and underlying module CanNm are initialized.
    02. Stub counts of CanNm_NetworkRequest() and CanNm_NetworkRelease() are
        cleared.
    03. Stub variables of Det_ReportError(); ApiId, ErrorId are cleared.
  
Test Execution: 
    01: Prepare preconditions.
        01.a : Clear BusNm stub counts
        01.b : Clear Det stub
        01.c : Initialize Nm

    02: Call Nm_NetworkRequest() for a channel which
        'NmPassiveModeEnabled' set to "TRUE".
        [This call will return E_NOT_OK if Passivemode is enabled. This also
        verifies Nm access the correct channel even if the channel ID is
        configured to a higher value than the number of channels
        Channel ID(TEST_NM_NETWRK_ID_PASSIVE_TRUE)=18U,number of channels = 7U).
        (This channel has been configured with a higher value of channel ID than
        the number of channels. Channel ID = 18U, number of channels = 7U)].
    03: VP (Nm.EB_Ref.SWS_Nm_00130):
        CanNm_NetworkRequest() has not been called for this channel.
    04: VP(Nm.EB.ASR40.DetErr_PassiveChannels, Nm.SWS_Nm_00130):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_NetworkRequest().

    05: Call Nm_NetworkRelease() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    06: VP (Nm.EB_Ref.SWS_Nm_00132):
        CanNm_NetworkRelease() has not been called for this channel.
    07: VP (Nm.EB.ASR40.DetErr_PassiveChannels, Nm.SWS_Nm_00132):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_NetworkRelease().

    08: Call Nm_DisableCommunication() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    09: VP (Nm.EB_Ref.SWS_Nm_00286.1):
        CanNm_DisableCommunication() has not been called for this channel.
    10: VP (Nm.EB_Ref.SWS_Nm_00286.2):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_DisableCommunication().
    11: Call Nm_DisableCommunication() for a channel which 'NmPassiveModeEnabled' set
        to "FALSE" and check CanNm_DisableCommunication() has been called for this channel.

    12: Call Nm_EnableCommunication() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    13: VP (Nm.EB_Ref.SWS_Nm_00287.1):
        CanNm_EnableCommunication() has not been called for this channel.
    14: VP (Nm.EB_Ref.SWS_Nm_00287.2):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_EnableCommunication().
    15: Call Nm_EnableCommunication() for a channel which 'NmPassiveModeEnabled' set
        to "FALSE" and check CanNm_EnableCommunication() has been called for this channel.

    16: Call Nm_SetUserData() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    17: VP (Nm.EB_Ref.SWS_Nm_00288.1):
        CanNm_SetUserData() has not been called for this channel.
    18: VP (Nm.EB_Ref.SWS_Nm_00288.2):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_SetUserData().
    19: Call Nm_SetUserData() for a channel which 'NmPassiveModeEnabled' set
        to "FALSE" and check CanNm_SetUserData() has been called for this channel.

    20: Call Nm_RepeatMessageRequest() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    21: VP (Nm.EB_Ref.SWS_Nm_00289.1):
        CanNm_RepeatMessageRequest() has not been called for this channel.
    22: VP (Nm.EB_Ref.SWS_Nm_00289.2):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_RepeatMessageRequest().
    23: Call Nm_RepeatMessageRequest() for a channel which 'NmPassiveModeEnabled' set
        to "FALSE" and check CanNm_RepeatMessageRequest() has been called for this channel.

    24: Call Nm_CheckRemoteSleepIndication() for a channel which 'NmPassiveModeEnabled' set
        to "TRUE".
    25: VP (Nm.EB_Ref.SWS_Nm_00290.1):
        CanNm_CheckRemoteSleepIndication() has not been called for this channel.
    26: VP (Nm.EB_Ref.SWS_Nm_00290.2):
        The DET error 'NM_E_HANDLE_UNDEF' is reported for the function
        Nm_CheckRemoteSleepIndication().
    27: Call Nm_CheckRemoteSleepIndication() for a channel which 'NmPassiveModeEnabled' set
        to "FALSE" and check CanNm_CheckRemoteSleepIndication() has been called for this channel.

  
Test Input: 
    functions calls
  
Test Output: 
    return values and det errors
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.DetErr_PassiveChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00290.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30044</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly
    to the lower layer modules (FrNm, CanNm, GenericNm_1, GenericNm_2).
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
  
Test Execution: 
    01: Set initial values for CanNm, FrNm and GenericNm stubs.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for channel 0.
    04: VP (Nm.SWS_Nm_00031):
        - CanNm_PassiveStartUp is called for channel 0.
    05: Call Nm_PassiveStartUp for channel 5.
    06: VP (Nm.SWS_Nm_00031):
        - FrNm_PassiveStartUp is called for channel 5.
    07: Call Nm_PassiveStartUp for channel 6.
    08: VP (Nm.SWS_Nm_00031):
        - GenericNm_1_PassiveStartUp is called for channel 6.
    09: Call Nm_PassiveStartUp for channel 15.
    10: VP (Nm.SWS_Nm_00031):
        - GenericNm_2_PassiveStartUp is called for channel 15.
    11: Call Nm_NetworkRequest for channel 0.
    12: VP (Nm.SWS_Nm_00032):
        - CanNm_NetworkRequest is called for channel 0.
    13: Call Nm_NetworkRequest for channel 5.
    14: VP (Nm.SWS_Nm_00032):
        - FrNm_NetworkRequest is called for channel 5.
    15: Call Nm_NetworkRequest for channel 6.
    16: VP (Nm.SWS_Nm_00032):
        - GenericNm_1_NetworkRequest is called for channel 6.
    17: Call Nm_NetworkRequest for channel 15.
    18: VP (Nm.SWS_Nm_00032):
        - GenericNm_2_NetworkRequest is called for channel 15.
    19: Call Nm_NetworkRelease for channel 0.
    20: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called for channel 0.
    21: Call Nm_NetworkRelease for channel 5.
    22: VP (Nm.SWS_Nm_00046):
        - FrNm_NetworkRelease is called for channel 5.
    23: Call Nm_NetworkRelease for channel 6.
    24: VP (Nm.SWS_Nm_00046):
        - GenericNm_1_NetworkRelease is called for channel 6.
    25: Call Nm_NetworkRelease for channel 15.
    26: VP (Nm.SWS_Nm_00046):
        - GenericNm_2_NetworkRelease is called for channel 15.
    27: Call Nm_DisableCommunication for channel 0.
    28: VP (Nm.SWS_Nm_00033):
        - CanNm_DisableCommunication is called for channel 0.
    29: Call Nm_DisableCommunication for channel 5.
    30: VP (Nm.SWS_Nm_00033):
        - FrNm_DisableCommunication is called for channel 5.
    31: Call Nm_DisableCommunication for channel 6.
    32: VP (Nm.SWS_Nm_00033):
        - GenericNm_1_DisableCommunication is called for channel 6.
    33: Call Nm_DisableCommunication for channel 15.
    34: VP (Nm.SWS_Nm_00033):
        - GenericNm_2_DisableCommunication is called for channel 15.
    35: Call Nm_EnableCommunication for channel 0.
    36: VP (Nm.SWS_Nm_00034):
        - CanNm_EnableCommunication is called for channel 0.
    37: Call Nm_EnableCommunication for channel 5.
    38: VP (Nm.SWS_Nm_00034):
        - FrNm_EnableCommunication is called for channel 5.
    39: Call Nm_EnableCommunication for channel 6.
    40: VP (Nm.SWS_Nm_00034):
        - GenericNm_1_EnableCommunication is called for channel 6.
    41: Call Nm_EnableCommunication for channel 15.
    42: VP (Nm.SWS_Nm_00034):
        - GenericNm_2_EnableCommunication is called for channel 15.
    43: Call Nm_GetUserData for channel 0.
    44: VP (Nm.SWS_Nm_00036):
        - CanNm_GetUserData is called for channel 0.
    45: Call Nm_GetUserData for channel 5.
    46: VP (Nm.SWS_Nm_00036):
        - FrNm_GetUserData is called for channel 5.
    47: Call Nm_GetUserData for channel 6.
    48: VP (Nm.SWS_Nm_00036):
        - GenericNm_1_GetUserData is called for channel 6.
    49: Call Nm_GetUserData for channel 15.
    50: VP (Nm.SWS_Nm_00036):
        - GenericNm_2_GetUserData is called for channel 15.
    51: Call Nm_GetPduData for channel 0.
    52: VP (Nm.SWS_Nm_00037):
        - CanNm_GetPduData is called for channel 0.
    53: Call Nm_GetPduData for channel 5.
    54: VP (Nm.SWS_Nm_00037):
        - FrNm_GetPduData is called for channel 5.
    55: Call Nm_GetPduData for channel 6.
    56: VP (Nm.SWS_Nm_00037):
        - GenericNm_1_GetPduData is called for channel 6.
    57: Call Nm_GetPduData for channel 15.
    58: VP (Nm.SWS_Nm_00037):
        - GenericNm_2_GetPduData is called for channel 15.
    59: Call Nm_RepeatMessageRequest for channel 0.
    60: VP (Nm.SWS_Nm_00038):
        - CanNm_RepeatMessageRequest is called for channel 0.
    61: Call Nm_RepeatMessageRequest for channel 5.
    62: VP (Nm.SWS_Nm_00038):
        - FrNm_RepeatMessageRequest is called for channel 5.
    63: Call Nm_RepeatMessageRequest for channel 6.
    64: VP (Nm.SWS_Nm_00038):
        - GenericNm_1_RepeatMessageRequest is called for channel 6.
    65: Call Nm_RepeatMessageRequest for channel 15.
    66: VP (Nm.SWS_Nm_00038):
        - GenericNm_2_RepeatMessageRequest is called for channel 15.
    67: Call Nm_GetNodeIdentifier for channel 0.
    68: VP (Nm.SWS_Nm_00039):
        - CanNm_GetNodeIdentifier is called for channel 0.
    69: Call Nm_GetNodeIdentifier for channel 5.
    70: VP (Nm.SWS_Nm_00039):
        - FrNm_GetNodeIdentifier is called for channel 5.
    71: Call Nm_GetNodeIdentifier for channel 6.
    72: VP (Nm.SWS_Nm_00039):
        - GenericNm_1_GetNodeIdentifier is called for channel 6.
    73: Call Nm_GetNodeIdentifier for channel 15.
    74: VP (Nm.SWS_Nm_00039):
        - GenericNm_2_GetNodeIdentifier is called for channel 15.
    75: Call Nm_GetLocalNodeIdentifier for channel 0.
    76: VP (Nm.SWS_Nm_00040):
        - CanNm_GetLocalNodeIdentifier is called for channel 0.
    77: Call Nm_GetLocalNodeIdentifier for channel 5.
    78: VP (Nm.SWS_Nm_00040):
        - FrNm_GetLocalNodeIdentifier is called for channel 5.
    79: Call Nm_GetLocalNodeIdentifier for channel 6.
    80: VP (Nm.SWS_Nm_00040):
        - GenericNm_1_GetLocalNodeIdentifier is called for channel 6.
    81: Call Nm_GetLocalNodeIdentifier for channel 15.
    82: VP (Nm.SWS_Nm_00040):
        - GenericNm_2_GetLocalNodeIdentifier is called for channel 15.
    83: Call Nm_CheckRemoteSleepIndication for channel 0.
    84: VP (Nm.SWS_Nm_00042):
        - CanNm_CheckRemoteSleepIndication is called for channel 0.
    85: Call Nm_CheckRemoteSleepIndication for channel 5.
    86: VP (Nm.SWS_Nm_00042):
        - FrNm_CheckRemoteSleepIndication is called for channel 5.
    87: Call Nm_CheckRemoteSleepIndication for channel 6.
    88: VP (Nm.SWS_Nm_00042):
        - GenericNm_1_CheckRemoteSleepIndication is called for channel 6.
    89: Call Nm_CheckRemoteSleepIndication for channel 15.
    90: VP (Nm.SWS_Nm_00042):
        - GenericNm_2_CheckRemoteSleepIndication is called for channel 15.
    91: Call Nm_GetState for channel 0.
    92: VP (Nm.SWS_Nm_00043):
        - CanNm_GetState is called for channel 0.
    93: Call Nm_GetState for channel 5.
    94: VP (Nm.SWS_Nm_00043):
        - FrNm_GetState is called for channel 5.
    95: Call Nm_GetState for channel 6.
    96: VP (Nm.SWS_Nm_00043):
        - GenericNm_1_GetState is called for channel 6.
    97: Call Nm_GetState for channel 15.
    98: VP (Nm.SWS_Nm_00043):
        - GenericNm_2_GetState is called for channel 15
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>TS_NM_30045</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>658</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to lower layer module are passed
    correctly to the ComM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Call Nm_NetworkStartIndication for channel 0.
    02: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 0.
    03: Call Nm_NetworkStartIndication for channel 1.
    04: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 1.
    05: Call Nm_NetworkStartIndication for channel 6.
    06: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 6.
    07: Call Nm_NetworkStartIndication for channel 8.
    08: VP (Nm.SWS_Nm_00155):
        - ComM_Nm_NetworkStartIndication is called for channel 8.
    09: Call Nm_NetworkMode for channel 0.
    10: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 0.
    11: Call Nm_NetworkMode for channel 1.
    12: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 1.
    13: Call Nm_NetworkMode for channel 6.
    14: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 6.
    15: Call Nm_NetworkMode for channel 8.
    16: VP (Nm.SWS_Nm_00158):
        - ComM_Nm_NetworkMode is called for channel 8.
    17: Call Nm_PrepareBusSleepMode for channel 0.
    18: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 0.
    19: Call Nm_PrepareBusSleepMode for channel 1.
    20: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 1.
    21: Call Nm_PrepareBusSleepMode for channel 6.
    22: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 6.
    23: Call Nm_PrepareBusSleepMode for channel 8.
    24: VP (Nm.SWS_Nm_00161):
        - ComM_Nm_PrepareBusSleepMode is called for channel 8.
    25: Call Nm_BusSleepMode for channel 0.
    26: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 0.
    27: Call Nm_BusSleepMode for channel 1.
    28: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 1.
    29: Call Nm_BusSleepMode for channel 6.
    30: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 6.
    31: Call Nm_BusSleepMode for channel 8.
    32: VP (Nm.SWS_Nm_00163):
        - ComM_Nm_BusSleepMode is called for channel 8.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>TS_NM_StateChangeIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the invocation of Com_SendSignal() when the underlying BusNm
    notifies the state changes to Nm by calling Nm_StateChangeNotification().
    Com_SendSignal() is invoked only when NmStateReportEnabled is set to
    'true' for the corresponding network channel.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - NmStateChangeIndEnabled = TRUE
      - Channel 0 has NmStateReportEnabled set to 'true'
      - Channel 2 has NmStateReportEnabled set to 'false'
    Module state:
      - Nm is initialized
    Misc.:
      - Other callout functions are initialized
  
Test Execution: 
    01: Initialize Nm and stub callouts.
    02: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from BusSleepMode -&gt; RepeatMessage
    03: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_BSM'.
    04: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from PrepareBusSleepMode -&gt; RepeatMessage
    05: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_PBSM'.
    06: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from ReadySleep -&gt; RepeatMessage
    07: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_RS'.
    08: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from NormalOperation -&gt; RepeatMessage
    09: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_NO'.
    10: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from RepeatMessage -&gt; NormalOperation
    11: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_NO_RM'.
    12: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from ReadySleep -&gt; NormalOperation
    13: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_NO_RS'.
    14: Simulate state transitions for the network channel which doesn't
        require Com_SendSignal() notification (NmStateReportEnabled = false).
    15: VP (Nm.SWS_Nm_00249):
        * Com_SendSignal() is not called for transitions which are
        specified in Nm.SWS_Nm_00249.
    16: Simulate transitions from NM_STATE_SYNCHRONIZE to
        NM_STATE_NORMAL_OPERATION.
    17: VP (Nm.SWS_Nm_00249):
        Com_SendSignal() is not called for transitions which are not
        specified in Nm.SWS_Nm_00249.
    18: Simulate transitions from NM_STATE_PREPARE_BUS_SLEEP to
        NM_STATE_NORMAL_OPERATION.
    19: VP (Nm.SWS_Nm_00249):
        Com_SendSignal() is not called for transitions which are not
        specified in Nm.SWS_Nm_00249.
    20: Simulate transitions from NM_STATE_BUS_SLEEP to
        NM_STATE_NORMAL_OPERATION.
    21: VP (Nm.SWS_Nm_00249):
        Com_SendSignal() is not called for transitions which are not
        specified in Nm.SWS_Nm_00249.
    22: Simulate transitions from NM_STATE_SYNCHRONIZE to NM_STATE_BUS_SLEEP.
    23: VP (Nm.SWS_Nm_00249):
        Com_SendSignal() is not called for transitions which are not
        specified in Nm.SWS_Nm_00249.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>TS_NM_RemoteSleepCallbacks_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>1048</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the invocation of RemoteSleepIndication Callback and
    RemoteSleepCancellation Callback in case Nm coordinator is disabled
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Nm module
    02: Set Counter to zero
    03: Call Nm_RemoteSleepIndication
    04: VP(Nm.EB.ASR40.RemoteSleepIndicationCallback)
        - Check that RemoteSleepIndicationCallback has been called
    05: Set Counter to zero
    06: Call Nm_RemoteSleepCancellation
    07: VP(Nm.EB.ASR40.RemoteSleepCancellationCallback) 
        - Check that RemoteSleepCancellationCallback has been called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepIndicationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepCancellationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_StateChangeIndicationDetON</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_02a/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the invocation of Com_SendSignal() when the underlying BusNm
    notifies the state changes to Nm by calling Nm_StateChangeNotification().
    Further verify that Com_SendSignal() is not invoked when
    NmStateReportEnabled is set to 'false' for the corresponding network
    channel.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - NmStateChangeIndEnabled = TRUE
      - Channel 0 has NmStateReportEnabled set to 'true'
      - Channel 2 has NmStateReportEnabled set to 'false'
    Module state:
      - Nm is initialized
    Misc.:
      - Other callout functions are initialized
  
Test Execution: 
    01: Initialize Nm and stub callouts.
    02: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from BusSleepMode -&gt; RepeatMessage
    03: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_BSM'.
    04: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from PrepareBusSleepMode -&gt; RepeatMessage
    05: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_PBSM'.
    06: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from ReadySleep -&gt; RepeatMessage
    07: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_RS'.
    08: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from NormalOperation -&gt; RepeatMessage
    09: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_RM_NO'.
    10: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from RepeatMessage -&gt; NormalOperation
    11: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_NO_RM'.
    12: Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt;
        for 'channel 0' from ReadySleep -&gt; NormalOperation
    13: VP (Nm.SWS_Nm_00249, Nm.ECUC_Nm_00231):
        * Com_SendSignal is reported with 'NM_NO_RS'.
    14: Repeat steps 02 to 13 for the network where NmStateReportEnabled is
        set to 'false', and verify that ComM_SendSignal() is not called
        in any of the cases.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30024</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if development error NM_E_UNINIT is reported by all API and
    callback functions if Nm module is not initialized.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      DET is enabled.
  
Test Execution: 
    01: Call Nm_PassiveStartUp for channel 0.
    02: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_PassiveStartUp().
    03: Call Nm_NetworkRequest for channel 0.
    04: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkRequest().
    05: Call Nm_NetworkRelease for channel 0.
    06: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkRelease().
    07: Call Nm_DisableCommunication for channel 0.
    08: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_DisableCommunication().
    09: Call Nm_EnableCommunication for channel 0.
    10: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_EnableCommunication().
    11: Call Nm_SetUserData for channel 0.
    12: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_SetUserData().
    13: Call Nm_GetUserData for channel 0.
    14: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetUserData().
    15: Call Nm_GetPduData for channel 0.
    16: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetPduData().
    17: Call Nm_RepeatMessageRequest for channel 0.
    18: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_RepeatMessageRequest().
    19: Call Nm_GetNodeIdentifier for channel 0.
    20: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetNodeIdentifier().
    21: Call Nm_GetLocalNodeIdentifier for channel 0.
    22: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetLocalNodeIdentifier().
    23: Call Nm_CheckRemoteSleepIndication for channel 0.
    24: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_CheckRemoteSleepIndication().
    25: Call Nm_GetState for channel 0.
    26: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetState().
    27: Call Nm_MainFunction before the Nm has been initialized.
    28: VP(Nm.SWS_Nm_00121_Refine):
        - The the main function  immediately return without yielding
        an error.
    29: Call Nm_NetworkStartIndication for channel 0.
    30: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkStartIndication().
    31: Call Nm_NetworkMode for channel 0.
    32: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkMode().
    33: Call Nm_PrepareBusSleepMode for channel 0.
    34: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_PrepareBusSleepMode().
    35: Call Nm_BusSleepMode for channel 0.
    36: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_BusSleepMode().
    37: Call Nm_StateChangeNotification for channel 0.
    38: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_StateChangeNotification().
    39: Call Nm_RemoteSleepIndication for channel 0.
    40: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_RemoteSleepIndication().
    41: Call Nm_RemoteSleepCancellation for channel 0.
    42: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_RemoteSleepCancellation().
    43: Call Nm_SynchronizationPoint for channel 0.
    44: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_SynchronizationPoint().
    45: Call Nm_GetCoordinatorState for Coordination Cluster 0.
    46: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetCoordinatorState().        
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>TS_NM_30025</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>359</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if development error NM_E_HANDLE_UNDEF is reported by all API and
    callback functions if an invalid Nm Channel Id is passed.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - DET is enabled.
  
Test Execution: 
    01: Set an invalid Nm Channel Id.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for an invalid channel 25.
    04: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00488, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_PassiveStartUp().
    05: Call Nm_NetworkRequest for an invalid channel 25.
    06: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00489, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkRequest().
    07: Call Nm_NetworkRelease for an invalid channel 25.
    08: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00490, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkRelease().
    09: Call Nm_DisableCommunication for an invalid channel 25.
    10: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00491, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_DisableCommunication().
    11: Call Nm_EnableCommunication for an invalid channel 25.
    12: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00492, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_EnableCommunication().
    13: Call Nm_SetUserData for an invalid channel 25.
    14: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00493, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_SetUserData().
    15: Call Nm_GetUserData for an invalid channel 25.
    16: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00494, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetUserData().
    17: Call Nm_GetPduData for an invalid channel 25.
    18: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00495, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetPduData().
    19: Call Nm_RepeatMessageRequest for an invalid channel 25.
    20: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00496, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_RepeatMessageRequest().
    21: Call Nm_GetNodeIdentifier for an invalid channel 25.
    22: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00497, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetNodeIdentifier().
    23: Call Nm_GetLocalNodeIdentifier for an invalid channel 25.
    24: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00498, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetLocalNodeIdentifier().
    25: Call Nm_CheckRemoteSleepIndication for an invalid channel 25.
    26: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00499, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_CheckRemoteSleepIndication().
    27: Call Nm_GetState for an invalid channel 25.
    28: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00500, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetState().
    29: Call Nm_NetworkStartIndication for an invalid channel 25.
    30: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkStartIndication().
    31: Call Nm_NetworkMode for an invalid channel 25.
    32: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkMode().
    33: Call Nm_PrepareBusSleepMode for an invalid channel 25.
    34: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_PrepareBusSleepMode().
    35: Call Nm_BusSleepMode for an invalid channel 25.
    36: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_BusSleepMode().
    37: Call Nm_StateChangeNotification for an invalid channel 25.
    38: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_StateChangeNotification().
    39: Call Nm_RemoteSleepIndication for an invalid channel 25.
    40: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_RemoteSleepIndication().
    41: Call Nm_RemoteSleepCancellation for an invalid channel 25.
    42: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_RemoteSleepCancellation().
    43: Call Nm_SynchronizationPoint for an invalid channel 25.
    44: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_SynchronizationPoint().
    45: Call Nm_GetCoordinatorState for an invalid coordinator id.
    46: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        Verify DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetCoordinatorState().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00493</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>TS_NM_DetInvalidParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if development error NM_E_PARAM_POINTER is reported by all API and
    callback functions if a Null pointer is passed.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
     - DET is enabled.
  
Test Execution: 
    01: Initialize the NM interface.
    02: Call Nm_SetUserData for channel 0.
    03: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_SetUserData().
    04: Call Nm_GetUserData for channel 0.
    05: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetUserData().
    06: Call Nm_GetPduData for channel 0.
    07: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetPduData().
    08: Call Nm_GetNodeIdentifier for channel 0.
    09: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetNodeIdentifier().
    10: Call Nm_GetLocalNodeIdentifier for channel 0.
    11: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetLocalNodeIdentifier().
    12: Call Nm_CheckRemoteSleepIndication for channel 0.
    13: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_CheckRemoteSleepIndication().
    14: Call Nm_GetState for channel 0.
    15: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetState().
    16: Call Nm_GetState for channel 0.
    17: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetState().
    18: Call Nm_GetVersionInfo.
    19: VP(Nm.ASR403.SWS_Nm_00248, Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetVersionInfo().
    20: Call Nm_GetCoordinatorState.
    21: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER):
        Verify DET error is reported with error id 'NM_E_PARAM_POINTER'
        for Nm_GetCoordinatorState().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>TS_NM_RemoteSleepCallbacks_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>818</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the invocation of RemoteSleepIndication Callback and
    RemoteSleepCancellation Callback in case Nm coordinator is enabled
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Nm module
    02: Set Counter to zero
    03: Call Nm_RemoteSleepIndication
    04: VP(Nm.EB.ASR40.RemoteSleepIndicationCallback)
        - Check that RemoteSleepIndicationCallback has been called
    05: Set Counter to zero
    06: Call Nm_RemoteSleepCancellation
    07: VP(Nm.EB.ASR40.RemoteSleepCancellationCallback) 
        - Check that RemoteSleepCancellationCallback has been called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepIndicationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.RemoteSleepCancellationCallback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30016</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the synchronous shutdown of all channels of a cluster
    w.r.t. the configured value of ShutdownDelayTimer.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm, GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm,UdpNm and GenericNm_2.
      - NmSynchronizingNetwork is FALSE for all networks.
    Module state:
      - Nm is initialized.
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0 and cluster 1.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Call Nm_GetCoordinatorState for cluster 0
    03: VP(Nm.EB.ASR40.Nm_GetCoordinatorState,1)
        - Check state of cluster 0 is NM_CC_STATE_WAIT_FOR_SHUTDOWN
    04: Loop through the clusters.
    05: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0 in first iteration and cluster 1 in the second iteration.
    06: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0 in first iteration and cluster 1 in the second iteration.
    07: Call Nm_mainFunction.
    08: - the channel is not already in NM_MODE_BUS_SLEEP.
    09: Call Nm_mainFunction .
    10: Check CanNm event counter, invocation of CanNm_NetworkRelease(),
        and its channelId if BusType = CAN.
    11: Check that CanNm_NetworkRelease is called by Nm Channel 0, 2 and 13.
    12: VP (Nm.SWS_Nm_00174):
        - CanNm_NetworkRelease is called by Nm Channel 0.
    13: VP:(Nm.SWS_Nm_00174):
        - CanNm_NetworkRelease is called by Nm Channel 2.
    14: VP (Nm.SWS_Nm_00174):
        - CanNm_NetworkRelease is called by Nm Channel 13.
    15: Check FrNm event counter, invocation of FrNm_NetworkRelease(), and
        its channelId if BusType = Fr.
    16: Check that FrNm_NetworkRelease is called by Nm Channel l1 and 21.
    17: VP (Nm.SWS_Nm_00174):
        - FrNm_NetworkRelease is called by Nm Channel 11.
    18: VP (Nm.SWS_Nm_00174):
        - FrNm_NetworkRelease is called by Nm Channel 21.
    19: Check GenericNm_1 event counter, invocation of
        GenericNm_1_NetworkRelease(), and its channelId if
        BusType = GenericNm_1.
    20: Check that GenericNm_1_NetworkRelease is called by Nm Channel 11.
    21: VP (Nm.SWS_Nm_00174):
        - GenericNm_1_NetworkRelease is called by Nm Channel 11.
    22: Check the GenericNm_2 Event Counter, invocation of
        GenericNm_2_NetworkRelease(), and its channelId if
        BusType = GenericNm_2.
    23: Check that GenericNm_2_NetworkRelease is called by Nm Channel 11.
    24: VP (Nm.SWS_Nm_00174):
        - GenericNm_2_NetworkRelease is called by Nm Channel 11.
    25: Check that UdpNm_NetworkRelease is called by Nm Channel 6.
    26: VP (Nm.SWS_Nm_00174):
        - GenericNm_2_NetworkRelease is called by Nm Channel 6.
    27: VP (Nm.SWS_Nm_00174):
        - all the channels in Cluster 0 and Cluster 1 are in
        mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.Nm_GetCoordinatorState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>TS_NM_30028</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_03/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify Nm releases the network by calling the
    &lt;BusNm&gt;_RequestBusSynchronization() followed by &lt;BusNm&gt;_NetworkRelease()
    when the shutdown timer expires for a network in the cluster.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - NmSynchronizingNetwork is FALSE for all networks.
    Module state:
      - Nm is initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0 in first iteration and cluster 0 in the second iteration.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0 in first iteration and cluster 0 in the second iteration.
    04: Call Nm_mainfunction as the Shutdown timer for all channels are
        configured to 1.
    05: - the stub has not been called before the timeout.
    06: Call Nm_Mainfunction once again to expire shutdown timers.
    07: VP (Nm.SWS_Nm_00176):
        To - when a shutdown timer expires for a channel,Nm releases
        the network by calling the CanNm_RequestBusSynchronization() and
        GenericNm_1_RequestBusSynchronization() and followed by
        CanNm_NetworkRelease() and GenericNm_1_NetworkRelease.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30038</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify Nm_RemoteSleepCancellation() indication from BusNms which are
    part of a co-ordinated cluster of channels[cluster-0].
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2
  
Test Execution: 
    01: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 0.
    02: Call Nm_RemoteSleepIndication and then NetworkRelease for all channels
        of coordination cluster 0.
    03: Call main function continuously for highest value of
        ShutdownDelayTimer for channels belongs to cluster 0.
    04: Check that CanNm_NetworkRelease is called for channels 2 and 3.
    05: Check that GenericNm_1_NetworkRelease is called for channel 10.
    06: Check that Nm_RemoteSleepIndication is called for Nm channels 2, 3 and
        10.
    07: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for the ComM channel 0 referred by
        Nm channel 2.
    08: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for the ComM channel 3 referred by
        Nm channel 3.
    09: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for ComM channel 10 referred by
        Nm channel 10.
    10: Call Nm_RemoteSleepCancellation for any one channel of the
        coordination cluster 1, say channel 0.
    11: Check that Nm_RemoteSleepIndication is called for those channels in
        cluster 0 that already were asleep, ie Nm channel 2, 3 and 10.
    12: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 0 referred
        by Nm channel 2.
    13: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 3 referred
        by Nm channel 3.
    14: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 10
        referred by Nm channel 10.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>TS_NM_30039</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify Nm_RemoteSleepCancellation() indication from BusNms which are
    part of a co-ordinated cluster of channels[cluster-1].
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm,UdpNm and GenericNm_2.
  
Test Execution: 
    01: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 1.
    02: Call Nm_RemoteSleepIndication and then NetworkRelease for all channels
        of coordination cluster 1.
    03: Call main function continuously for highest value of
        ShutdownDelayTimer for channels belongs to cluster 1.
    04: Check that FrNm_NetworkRelease is called for channel 5.
    05: Check that UdpNm_NetworkRelease is called for channel 9.
    06: Check that GenericNm_2_NetworkRelease is called for channel 12.
    07: Check that Nm_RemoteSleepIndication is called for Nm channels
        5, 9 and 12.
    08: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for the ComM channel 1 referred by
        Nm channel 5.
    09: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for the ComM channel 9 referred by
        Nm channel 9.
    10: VP (Nm.SWS_Nm_00193):
        - Bus sleep mode is called for ComM channel 12 referred by
        Nm channel 12.
    11: Call Nm_RemoteSleepCancellation for any one channel of the
        coordination cluster 1 say channel 1.
    12: Check that Nm_RemoteSleepIndication is called for those channels in
        cluster 1 that already were asleep, ie Nm channels 5 and 9 and 12.
    13: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 1 referred
        by Nm channel 5.
    14: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 9 referred
        by Nm channel 9.
    15: VP(Nm.SWS_Nm_00182, Nm.SWS_Nm_00192, Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation):
        - Restart indication is called for the ComM channel 12
        referred by Nm channel 12.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>TS_NM_30017</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the synchronous shutdown of all channels of a cluster
    w.r.t. the configured value of ShutdownDelayTimer(100U).
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm and GenericNm_2.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0 and cluster 1.
  
Test Execution: 
    01: Initialize the bus interface stubs and Nm.
    02: Loop through the clusters.
    03: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0 in first iteration and cluster 1 in the second iteration.
    04: Call Nm_RemoteSleepIndication and NetworkRelease for all channelsof
        cluster 0 in first iteration and cluster 1 in the second iteration.
    05: Call Main Function continuously for 101 times..
    06: Call GetStateCluster to check that the channel is not already in
        NM_MODE_BUS_SLEEP.
    07: Check CanNm event counter, invocation of CanNm_NetworkRelease(), and
        its channel id if BusType = CAN.
    08: - CanNm_NetworkRelease is called by Nm Channel 0
    09: VP (Nm.ASR403.ECUC_Nm_00222):
        - the time in seconds which the NM Coordination algorithm
        delays the release of the chanel is 100 seconds.
    10: Check FrNm event counter, invocation of FrNm_NetworkRelease(), and
        its channel id if BusType = Fr.
    11: - FrNm_NetworkRelease is called by Nm Channel 1
    12: VP (Nm.ASR403.ECUC_Nm_00222):
        - the time in seconds which the NM Coordination algorithm
        delays the release of the chanel is 100 seconds.
    13: Check GenericNm_1 event counter, invocation of
        GenericNm_1_NetworkRelease(), and its channel id if
        BusType = GenericNm_1.
    14: - GenericNm_1_NetworkRelease is called by Nm Channel 1
    15: VP (Nm.ASR403.ECUC_Nm_00222):
        - the time in seconds which the NM Coordination algorithm
        delays the release of the channel is 100 seconds.
    16: Check GenericNm_2 event counter, invocation of
        GenericNm_2_NetworkRelease(), and its channel id if
        BusType = GenericNm_2.
    17: - GenericNm_2_NetworkRelease is called by Nm Channel 1.
    18: VP (Nm.ASR403.ECUC_Nm_00222):
        - the time in seconds which the NM Coordination algorithm
        delays the release of the chanel is 100 seconds.
    19: VP:(Nm.ASR403.SWS_Nm_00175):
        Cluster 0 and Cluster 1 are in mode NM_MODE_BUS_SLEEP once the
        default shutdown time for that network given by the parameter
        NmShutdownDelayTimer elapsed.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASR403.ECUC_Nm_00222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>TS_NM_30029</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify Nm releases the network by calling the
    &lt;BusNm&gt;_RequestBusSynchronization() followed by &lt;BusNm&gt;_NetworkRelease()
    when the shutdown timer expires for a channel in the cluster[cluster-1].
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm and GenericNm_2.
      - ShutdownDelayTimer of ComMChannel_1 is configured with 40s
      - ShutdownDelayTimer of ComMChannel_12 is configured with 50s
      - ShutdownDelayTimer of ComMChannel_5 is configured with 100s
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 1.
  
Test Execution: 
    01: Initialize the bus interface stubs and  Nm.
    02: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 1.
    03: Call Nm_RemoteSleepIndication and then NetworkRelease for all
        channels of coordination cluster 1.
    04: Call main function 40 times in loop, as the Shutdown timer for
        channel-1 is configured as 40.
    05: - FrNm_RequestBusSynchronization() followed by
        FrNm_NetworkRelease() are not called before the timeout for
        channel-5 of cluster 1.
    06: - GenericNm_2_RequestBusSynchronization() followed by
        GenericNm_2_NetworkRelease() are not called before the timeout
        for channel-12 of cluster 1.
    07: Call Nm MainFunction.
    08: VP (Nm.SWS_Nm_00176):
        - FrNm_RequestBusSynchronization() followed by
        FrNm_NetworkRelease() are called after the timeout for channel-1 of
        cluster 1.
    09: Check the parameters of FrNmStubEvents stub.
    10: - GenericNm_2_RequestBusSynchronization() followed by
        GenericNm_2_NetworkRelease() are not called before the timeout
        for channel-12 of cluster 1.
    11: Call main function 9 times in loop, as the Shutdown timer for
        channel-12 is configured as 50.[Remaining timeout for channel-12 is
        50 - 41 = 9] .
    12: - GenericNm_2_RequestBusSynchronization() followed by
        GenericNm_2_NetworkRelease() are not called before the timeout
        for channel-12 of cluster 1.
    13: Call Nm MainFunction.
    14: VP (Nm.SWS_Nm_00176):
        - GenericNm_2_RequestBusSynchronization() followed by
        GenericNm_2_NetworkRelease() are called after the timeout for
        channel-12 of cluster 1.
    15: Check the parameters of GenericNm_2_StubEvents stub.
    16: Call main function 49 times in loop, as the Shutdown timer for
        channel-5 is configured as 100.[Remaining timeout for channel-5 is
        100 - 51 = 49] .
    17: - FrNm_RequestBusSynchronization() followed by
        FrNm_NetworkRelease() are not called before the timeout for
        channel-5 of cluster 1.
    18: Call Nm MainFunction.
    19: VP (Nm.SWS_Nm_00176):
        - FrNm_RequestBusSynchronization() followed by
        FrNm_NetworkRelease() are called after the timeout for
        channel-5 of cluster 1.
    20: Check the parameters of FrNmStubEvents stub.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>TS_NM_30036</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>736</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify when the coordinated shutdown is aborted via Nm_NetworkMode,
      a. NM Coordinator requests Network from busNms for Networks that are
         not indicated bus sleep.
      b. NM Coordinator calls ComM_Nm_RestartIndication() for all Networks
         that already indicated 'bus sleep'.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize the bus interface stubs and  Nm.
    02: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 0.
    03: Call Nm_RemoteSleepIndication and then NetworkRelease for all
        channels of coordination cluster 0.
    04: Call main function continuously until all channels in cluster 0 is
        called with NetWorkRelease except channel 0.
    05: Clear bus state flag so that bus state stays in non sleep mode.
    06: Call Nm MainFunction.
    07: Set bus state flag so that bus state gives actual mode.
    08: Call Nm_NetworkMode for the ComM channel 0 before complete shutdown .
    09: Check that Nm_NetworkMode is called for the ComM channel 0.
    10: Get the status of channel 2.
    11: - CanNm of Nm channel 2 is in bus sleep mode.
    12: Get the status of channel 3.
    13: - CanNm of Nm channel 3 is in bus sleep mode.
    14: Get the status of channel 10.
    15: - CanNm of Nm channel 10 is in bus sleep mode.
    16: Check that Nm signals Restart Indication for Nm channels 2, 3 and
        10 to ComM stub.
    17: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 0
        (channel id 2) referred by Nm channel 2.
    18: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 3
        (channel id 3) referred by Nm channel 3.
    19: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 10
        (channel id 10) referred by Nm channel 10.
    20: VP(Nm.SWS_Nm_00183):
        Check that for Nm channel 0, Nm calls CanNm_NetworkRequest.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>TS_NM_30037</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test if the shutdown is aborted via Nm_NetworkRequest, NM Coordinator
    shall call ComM_Nm_RestartIndication() for all Networks that already
    indicated 'bus sleep'.
    This testcase also tests if NM Coordinator do not request the Network
    again from busNms for the Network that have not indicated bus sleep.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize the bus interface stubs and Nm.
    02: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 0.
    03: Call Nm_RemoteSleepIndication and then NetworkRelease for all
        channels of coordination cluster 0.
    04: Call main function 20 times in loop, as the Shutdown timer for
        channel-2 is configured as 20.
    05: Check that the CanNm_NetworkRelease is not called before the timeout.
    06: Clear bus state flag so that bus state stays in non sleep mode.
    07: Call Nm MainFunction.
    08: Set bus state flag so that bus state gives actual mode.
    09: Check that after time out for the channel-2 Nm releases the Network by
        calling CanNm_NetworkRelease().
    10: Check the parameters of CanNmStubEvents stub.
    11: Call main function 80 times in loop for the remaining timeout of
        cluster 0.[Remaining timeout is 100 - 20 = 80].
    12: Call Nm_NetworkRequest for channel 2 of cluster 0.
    13: Check that CanNm_NetworkRequest is called for channel 2.
    14: Call Nm_NetworkMode for Nm channel 0.
    15: Check that Nm_NetworkMode is called for the Nm channel 0.
    16: Get the status of Nm channel 0.
    17: Check that CanNm of Nm channel 0 is in bus sleep mode.
    18: Get the status of Nm channel 3.
    19: Check that CanNm of Nm channel 3 is in bus sleep mode.
    20: Check that Nm signals Restart Indication for Nm channels 0, 3 and
        10 to ComM stub.
    21: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 2
        (channel id 0) referred by Nm channel 0.
    22: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 3
        (channel id 3) referred by Nm channel 3.
    23: VP (Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 10
        (channel id 10) referred by Nm channel 10.
    24: Check that for Nm channel 2, the CanNm_NetworkRequest is not
        called again.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>TS_NM_30048</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>1067</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that,
    - shutdown is coordinated on the presently awake Networks of a
      coordination cluster.
    - NmChannelSleepMaster set to FALSE has no effect OR invocation of
      Nm_RemoteSleepIndication() from the Network is required to start
      the shutdown.
    - Networks that are already in 'bus-sleep mode' are still monitored but
      not coordinated.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - NmChannelSleepMaster = FALSE
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Simulate Sleep Mode for Cluster 0.
    03: Reset ComM,CanNm and GenericNm_1 Stub Queues.
    04: Call Nm_NetworkRequest for channel 2 of cluster 0.
    05: Check that CanNm_NetworkRequest is called for channel 2.
    06: Call Nm_NetworkMode for channel 2 of cluster 0.
    07: Check that ComM_Nm_NetworkMode is called for ComM channel 0 referred by Nm channel 2.
    08: Call Nm_NetworkRequest for channel 3 of cluster 0.
    09: Check that CanNm_NetworkRequest is called for channel 3.
    10: Call Nm_NetworkMode for channel 3 of cluster 0.
    11: Check that ComM_Nm_NetworkMode is called for ComM channel 3 referred by Nm channel 3.
    12: Call Nm_NetworkRequest for channel 10 of cluster 0.
    13: Check that CanNm_NetworkRequest is called for channel 10.
    14: Call Nm_NetworkMode for channel 10 of cluster 0.
    15: Check that ComM_Nm_NetworkMode is called for ComM channel 10 referred by Nm channel 10.
    16: Get the status of channel 0.
    17: VP (Nm.SWS_Nm_00169):
        - Nm channel-0 that are already in bus-sleep mode.
    18: Get the status of channel 2.
    19: - CanNm of Nm channel 2 is not in bus sleep mode.
    20: Get the status of channel 3.
    21: - CanNm of Nm channel 3 is not in bus sleep mode.
    22: Get the status of channel 10.
    23: - CanNm of Nm channel 10 is not in bus sleep mode.
    24: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 2
        of cluster 0.
    25: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 3
        of cluster 0.
    26: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 10
        of cluster 0.
    27: Call main function 31 times in loop, so that Nm releases the Network
        by calling CanNm_NetworkRelease() for the channels 2 &amp; 3.[Channel-2
        and channel-3 are configured with shutdown timer 20 and 30
        respectively] .
    28: Check that CanNm_NetworkRelease is called for Nm channel 2 and 3.
    29: Check that CanNm_NetworkRelease is called after the configured shutdown
        time of 20s for channel 2 of cluster 0.
    30: Check that CanNm_NetworkRelease is called after the configured shutdown
        time of 30s for channel 3 of cluster 0.
    31: Check that bus sleep mode is called for Nm channel 2 and 3.
    32: VP (Nm.ECUC_Nm_00227):
        - bus sleep mode is called for Nm channel 2 only after a
        callout has been made to Nm_RemoteSleepCancellation when
        NmChannelSleepMaster is set to FALSE.
    33: VP (Nm.ECUC_Nm_00227):
        - bus sleep mode is called for Nm channel 3 only after a
        callout has been made to Nm_RemoteSleepCancellation when
        NmChannelSleepMaster is set to FALSE.
    34: Call main function 20 more times in loop, so that Nm releases the
        Networkby calling GenericNm_1_NetworkRelease() for the channels 10.
        [Channel-10 is configured with shutdown timer = 50] .
    35: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - GenericNm_1_NetworkRelease is called for Nm channel 10.
    36: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - GenericNm_1_NetworkRelease is called after the configured
        shutdown time of 50s for channel 10 of cluster 0.
    37: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - bus sleep mode is called for the ComM channel 10 referred
        by the Nm channel 10.
    38: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - bus sleep mode is called for Nm channel 10 only after a
        callout has been made to Nm_RemoteSleepCancellation when
        NmChannelSleepMaster is set to FALSE.
    39: Check that Cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>TS_NM_30052</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>1339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the Nm coordinated shutdown cannot be corrupted/prevented by
    calling Nm_NetworkMode for a channel that is part of the cluster, but not
    participating in the actual coordinated shutdown.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - NmChannelSleepMaster = FALSE
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
   01: Initialize respective bus interface stub and initialize Nm (Nm_Init).
   02: Simulate Sleep Mode for Cluster 0.
   03: Reset ComM,CanNm and GenericNm_1 Stub Queues.
   04: Call Nm_NetworkRequest for channel 2 of cluster 0.
   05: Check that CanNm_NetworkRequest is called for channel 2.
   06: Call Nm_NetworkMode for channel 2 of cluster 0.
   07: VP(Nm.SWS_Nm_00156, Nm.SWS_Nm_00158):
       - ComM_Nm_NetworkMode is called for ComM channel 0 referred by Nm channel 2.
   08: Call Nm_NetworkRequest for channel 3 of cluster 0.
   09: Check that CanNm_NetworkRequest is called for channel 3.
   10: Call Nm_NetworkMode for channel 3 of cluster 0.
   11: VP(Nm.SWS_Nm_00156, Nm.SWS_Nm_00158):
       - ComM_Nm_NetworkMode is called for ComM channel 3 referred by Nm channel 3.
   12: Call Nm_NetworkRequest for channel 10 of cluster 0.
   13: Check that CanNm_NetworkRequest is called for channel 10.
   14: Call Nm_NetworkMode for channel 10 of cluster 0.
   15: VP(Nm.SWS_Nm_00156, Nm.SWS_Nm_00158):
       - ComM_Nm_NetworkMode is called for ComM channel 10 referred by Nm channel 10.
   16: Call Nm_NetworkMode for a channel-0 of the cluster 0, which is not
       requested before .
   17: VP(Nm.SWS_Nm_00156, Nm.SWS_Nm_00158, Nm.EB_Ref.SWS_Nm_00181.NetworkMode):
       - ComM_Nm_NetworkMode is called for Nm channel 0.
   18: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 2
       of cluster 0.
   19: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 3
       of cluster 0.
   20: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 10
       of cluster 0.
   21: Call main function 51 times in loop, so that Nm releases the Network
       by calling CanNm_NetworkRelease() for the channels 2 3 and 10.
       [Channel-2 ,channel-3 and channel-10 are configured with shutdown
       timer 20, 30, 50 respectively].
   22: Check that CanNm_NetworkRelease is called for Nm channel 2 and 3.
   23: Check that CanNm_NetworkRelease is called after the configured
       shutdown time of 20s for channel 2 of cluster 0.
   24: Check that CanNm_NetworkRelease is called after the configured
       shutdown time of 30s for channel 3 of cluster 0.
   25: Check that GenericNm_1_NetworkRelease is called for Nm channel 10.
   26: Check that GenericNm_1_NetworkRelease is called after the configured
       shutdown time of 50s for channel 10 of cluster 0.
   27: Check that bus sleep mode is called for Nm channel 2,3 and 10.
   28: VP (Nm.ECUC_Nm_00227):
       - bus sleep mode is called for Nm channel 2 only after a
       callout has been made to Nm_RemoteSleepCancellation.
   29: VP (Nm.ECUC_Nm_00227):
       - bus sleep mode is called for Nm channel 3 only after a
       callout has been made to Nm_RemoteSleepCancellation.
   30: VP (Nm.ECUC_Nm_00227):
       - bus sleep mode is called for Nm channel 10 only after a
       callout has been made to Nm_RemoteSleepCancellation.
   31: Check that all channels in the coordination cluster 0 .
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>TS_NM_30053</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>1565</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the Nm coordinated shutdown cannot be corrupted/prevented by
    calling Nm_BusSleepMode for a Network that is part of the cluster, but not
    participating in the actual coordinated shutdown.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize respective bus interface stub and initialize Nm.
    02: Simulate Sleep Mode for Cluster 0.
    03: Reset CanNm Queues.
    04: Call Nm_NetworkRequest for channel 2 of cluster 0.
    05: Check that CanNm_NetworkRequest is called for channel 2.
    06: Call Nm_NetworkMode for channel 2 of cluster 0.
    07: Check that ComM_Nm_NetworkMode is called for ComM channel 0 referred by Nm channel 2.
    08: Call Nm_NetworkRequest for channel 3 of cluster 0.
    09: Check that CanNm_NetworkRequest is called for channel 3.
    10: Call Nm_NetworkMode for channel 3 of cluster 0.
    11: Check that ComM_Nm_NetworkMode is called for ComM channel 3 referred by Nm channel 3.
    12: Call Nm_NetworkMode for channel 6.
    13: Check that ComM_Nm_NetworkMode is called for ComM channel 6 referred by Nm channel 6.
    14: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 2
        of cluster 0..
    15: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 3
        of cluster 0.
    16: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 6
        of cluster 0.
    17: Call main function 30 times in loop, so that Nm releases the Network
        by calling CanNm_NetworkRelease() for channel 2.[Channel-2 and
        channel-3 are configured with shutdown timer 20 and 30 respectively].
    18: Check that CanNm_NetworkRelease is called for Nm channel 2.
    19: Check that CanNm_NetworkRelease is called after the configured
        shutdown time of 20s for channel 2 of cluster 0.
    20: Call Nm_BusSleepMode for Nm channel 0 of cluster 0 which is not
        participating in the actual coordinated shutdown.
    21: VP(Nm.SWS_Nm_00162, Nm.SWS_Nm_00163):
        - the indication through callback function 'Bus sleep mode'
        is forwarded to ComM_Nm_BusSleepMode for the ComM channel 2 referred
        by the Nm channel 0.
    22: Call main function once again , so that Nm releases the Network by
        calling CanNm_NetworkRelease() for the channel 3.
    23: VP(Nm.SWS_Nm_00162, Nm.SWS_Nm_00163):
        - CanNm_NetworkRelease is called for Nm channel 3.
    24: VP(Nm.SWS_Nm_00162, Nm.SWS_Nm_00163):
        - CanNm_NetworkRelease is called after the configured
        shutdown time of 30s for channel 3 of cluster 0.
    25: Check that Cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>TS_NM_30054</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>1751</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that if the shutdown is aborted, NM Coordinator shall call
    ComM_NmRestartIndication() for all Networks that already indicated bus
    sleep.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm.
    02: Simulate Sleep Mode for Cluster 0.
    03: Reset CanNm Queues.
    04: Call Nm_NetworkRequest for channel 0 of cluster 0.
    05: Check that CanNm_NetworkRequest is called for channel 0.
    06: Call Nm_NetworkMode for channel 0 of cluster 0.It would clear the
        "sleep" flag of Nm_ChannelStatus.
    07: Check that ComM_Nm_NetworkMode is called for ComM
        channel 2 referred by Nm channel 0.
    08: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 0.
    09: Call Nm_RemoteSleepIndication and then NetworkRelease for all channels
        of coordination cluster 0.
    10: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    11: Check that CanNm_NetworkRelease is called for channels 2 and 3.
    12: Check that Nm_RemoteSleepIndication is called for Nm channels 2, 3
        and 10.
    13: Check that Bus sleep mode is called for the ComM channel 0 referred
        by Nm channel 2.
    14: Check that Bus sleep mode is called for the ComM channel 3 referred
        by Nm channel 3.
    15: Check that Bus sleep mode is called for ComM channel 10 referred
        by Nm channel 10.
    16: Clear release status flag so that Nm_BusSleepMode() or
        Nm_PrepareBusSleepMode() is not called on a BusNm_NetworkRelease().
    17: Call Nm_MainFucntion.
    18: Set release status flag so that Nm_BusSleepMode() or
        Nm_PrepareBusSleepMode() is called on a BusNm_NetworkRelease().
    19: Call Nm_NetworkRequest for channel 0 of cluster 0.
    20: Check that CanNm_NetworkRequest is called for channel 6.
    21: Call Nm_NetworkMode for a channel-0 of the cluster 0, which is not
        requested before.
    22: VP(Nm.SWS_Nm_00182, Nm.EB_Ref.SWS_Nm_00181.NetworkRequest):
        - Nm signals Restart Indication for Nm channels 2, 3 and 10
        to ComM stub.
    23: VP(Nm.SWS_Nm_00182, Nm.EB_Ref.SWS_Nm_00181.NetworkRequest):
        - restart indication is called for the ComM channel 0
        (channel id 2) referred by Nm channel 2.
    24: VP(Nm.SWS_Nm_00182, Nm.EB_Ref.SWS_Nm_00181.NetworkRequest):
        - restart indication is called for the ComM channel 3
        (channel id 3) referred by Nm channel 3.
    25: VP(Nm.SWS_Nm_00182, Nm.EB_Ref.SWS_Nm_00181.NetworkRequest):
        - restart indication is called for the ComM channel 10
        (channel id 10) referred by Nm channel 10.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>TS_NM_30055</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>1935</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that coordinated shutdown is aborted if any Network in the
    coordination cluster indicates Nm_NetworkStartIndication().
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
  
Test Execution: 
    01: Call Nm_NetworkRequest and then Nm_NetworkMode for all channel of
        coordination cluster 0.
    02: Call Nm_RemoteSleepIndication and then NetworkRelease for all channels
        of coordination cluster 0.
    03: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    04: Check that CanNm_NetworkRelease is called for channels 2 and 3.
    05: Check that bus sleep mode is called for Nm Channels 2, 3 and 10.
    06: Check that bus sleep mode is called for the ComM channel 0
        (channel id 2) referred by Nm channel 2.
    07: Check that bus sleep mode is called for the ComM channel 3
        (channel id 3) referred by Nm channel 3.
    08: Check that bus sleep mode is called for the ComM channel 10 referred
        by Nm channel 10.
    09: Call Nm_NetworkStartIndication() for any one channel of the
        coordination cluster 0 ,say channel 0.
    10: VP(Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication,Nm.SWS_Nm_00182):
        - restart Indication is called for those channels in the
        cluster 0 that already were asleep.
    11: VP(Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication,Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 0
        (channel id 2) referred by Nm channel 2.
    12: VP(Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication,Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 3
       (channel id 3) referred by Nm channel 3.
    13: VP(Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication,Nm.SWS_Nm_00182):
        - restart indication is called for the ComM channel 10
        referred by Nm channel 10.
    14: Check that Cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>TS_NM_ShutdownSleepMasterOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>2069</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test coordinated NM shutdown on the presently awake networks when
    ChannelSleepMaster is enabled
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm module configured to cluster 0 is: CanNm.
      - NmChannelSleepMaster is TRUE for Channel-2
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Simulate Sleep Mode for Cluster 0.
    03: Reset ComM and CanNm Stub Queues.
    04: Call Nm_NetworkRequest for channel 2 of cluster 0.
    05: Check that CanNm_NetworkRequest is called for channel 2.
    06: Call Nm_NetworkMode for channel 2 of cluster 0.
    07: Check that ComM_Nm_NetworkMode is called for ComM
        channel 0 referred by Nm channel 2.
    08: Call Nm_NetworkRequest for channel 3 of cluster 0.
    09: Check that CanNm_NetworkRequest is called for channel 3.
    10: Call Nm_NetworkMode for channel 3 of cluster 0.
    11: Check that ComM_Nm_NetworkMode is called for ComM channel 3 referred by Nm channel 3.
    12: Get the status of channel 0.
    13: - CanNm of Nm channel 0 is in bus sleep mode.
    14: Get the status of channel 2.
    15: - CanNm of Nm channel 2 is not in bus sleep mode.
    16: Get the status of channel 3.
    17: - CanNm of Nm channel 3 is not in bus sleep mode.
    18: Call Nm_NetworkRelease for channel 2 of cluster 0 and do not call
        remote sleep indication here since the NmChannelSleepMaster is TRUE.
    19: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 3
        of cluster 0.
    20: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        Call main function 31 times in loop, so that Nm releases the Network
        by calling CanNm_NetworkRelease() for the channels 2 &amp; 3.
        [Channel-2 and channel-3 are configured with shutdown timer 20 and 30
        respectively] .
    21: Check that CanNm_NetworkRelease is called for Nm channel 2 and 3.
    22: Check that CanNm_NetworkRelease is called after the configured
        shutdown time of 20s for channel 2 of cluster 0.
    30: Check that CanNm_NetworkRelease is called after the configured
        shutdown time of 30s for channel 3 of cluster 0.
    31: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - Bus sleep mode is called for Nm channel 2 and 3.
    32: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - Bus sleep mode is indicated for the ComM channel 0(channel id 2)
        referred by the Nm channel 2.
    33: VP(Nm.SWS_Nm_00169, Nm.SWS_Nm_00228, Nm.ECUC_Nm_00227):
        - Bus sleep mode is indicated for the ComM channel 3 referred by
        the Nm channel 3.
    34: Check that Cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
  None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>TS_NM_SynchronizingNetwork_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>2262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Motivation:
      This test case actually covers 4 different scenarios within the scope of
      NmSynchronizingNetwork requirements.
    Test Objectives:
      Scenario 1:
        When NmSynchronizingNetwork = TRUE for a network, then shutdown does not
        occur until network is released and Nm_SynchronizationPoint is invoked.
        (Nm.SWS_Nm_00169, Nm.SWS_Nm_00194 and Nm.SWS_Nm_00172)
      Scenario 2:
        Shutdown does not occur even if network is released and
        Nm_SynchronizationPoint is invoked from a network which has
        NmSynchronizingNetwork = FALSE (Nm.ECUC_Nm_00223).
      Scenario 3:
        If not all conditions to start coordinated shutdown have been met,
        calls to Nm_SynchronizationPoint() shall be ignored. (Nm.EB_Ref.SWS_Nm_00173.1)
      Scenario 4:
        If the coordination algorithm has already been started (but not
        aborted), calls to Nm_SynchronizationPoint() shall be ignored.
        (Nm.EB_Ref.SWS_Nm_00173.2)
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - NmSynchronizingNetwork is TRUE for channel 6 which is associated
        with cluster 2
      - NmSynchronizingNetwork is FALSE for channel 7 which is associated
        with cluster 2
      - Channel 6 is configured with bus type CAN and hence the associated
        &lt;Bus&gt;Nm is CanNm
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) configured to cluster 2.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        Nm_Init).
    02: Reset ComM and CanNm Stub Queues.
    03: Call Nm_NetworkRequest for channel 7 of cluster 2.
    04: Check that CanNm_NetworkRequest is called for channel 7.
    05: Call Nm_NetworkMode for channel 7 of cluster 2.
    06: Check that ComM_Nm_NetworkMode is called for ComM
        channel 7 referred by Nm channel 7.
    07: Call Nm_NetworkRequest for channel 6 of cluster 2.
    08: Check that CanNm_NetworkRequest is called for channel 6.
    09: Call Nm_NetworkMode for channel 6 of cluster 2.
    10: Check that ComM_Nm_NetworkMode is called for ComM
        channel 6 referred by Nm channel 6.
    11: Get the status of channel 8.
    12: - CanNm of Nm channel 8 is in bus sleep mode.
    13: Get the status of channel 7.
    14: - CanNm of Nm channel 7 is not in bus sleep mode.
    15: Get the status of channel 6.
    16: - CanNm of Nm channel 6 is not in bus sleep mode.
    17: Call Nm_SynchronizationPoint for channel 6.
    18: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 7
        of cluster 2.
    19: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 6
        of cluster 2.
    20: VP (Nm.EB_Ref.SWS_Nm_00173.1):
        Call main function 31 times in loop[Channel-7 and channel-6 are
        configured with shutdown timer 20 and 30 respectively] .
        CanNm_NetworkRelease is not called for channel 6 &amp; 7 of cluster 2 at
        the time out of respective channel as the conditions to start
        coordinated shutdown are not yet met.
    21: Get the status of channel 7.
    22: - CanNm of Nm channel 7 is not in bus sleep mode.
    23: Get the status of channel 6.
    24: - CanNm of Nm channel 6 is not in bus sleep mode.
    25: Check that network is not released for any channels in the
        coordination cluster 2.
    26: VP(Nm.ECUC_Nm_00223):
        Call Nm_SynchronizationPoint for channel 7 ,where
        NmSynchronizingNetwork = FALSE .
    27: Call main function 31 times in loop, [Channel-7 and channel-6 are
        configured with shutdown timer 20 and 30 respectively].
    28: VP (Nm.SWS_Nm_00172):
        - CanNm_NetworkRelease is not called for channel 6 &amp; 7 of
        cluster 2 at the time out of respective channel.
    29: Get the status of channel 8.
    30: - CanNm of Nm channel 8 is in bus sleep mode.
    31: Get the status of channel 7.
    32: - CanNm of Nm channel 7 is not in bus sleep mode.
    33: Get the status of channel 6.
    34: - CanNm of Nm channel 3 is not in bus sleep mode.
    35: VP(Nm.ECUC_Nm_00223):
        Call Nm_SynchronizationPoint for channel 6,where
        NmSynchronizingNetwork = TRUE.
    36: VP(Nm.SWS_Nm_00172, Nm.EB_Ref.SWS_Nm_00173.1 and Nm.EB_Ref.SWS_Nm_00173.2):
        Call Mainfunctions continuously for (minimum-1) shutdown timeout among
        channel 6 and 7.Check that CanNm_NetworkRelease is not called for
        channel 6 &amp; 7 of cluster 2 until time out of channel 7.
    37: Check that the call has no impact since shutdown has already started.
    38: Check that CanNm_NetworkRelease is not called.
    39: Call Mainfunction for maximum shutdown timeout among channel 6 and 7.
    40: VP(Nm.SWS_Nm_00172,, Nm.EB_Ref.SWS_Nm_00173.1 and Nm.EB_Ref.SWS_Nm_00173.2):
        - CanNm_NetworkRelease is called for channel 6 &amp; 7 of
        cluster 2 only on expiry of time out of respective channels.
    41: Get the status of channel 8.
    42: - CanNm of Nm channel 8 is in bus sleep mode.
    43: Get the status of channel 7.
    44: - CanNm of Nm channel 7 is not in bus sleep mode.
    45: Get the status of channel 6.
    46: - CanNm of Nm channel 6 is not in bus sleep mode.
    47: Check that all the channels in Cluster 0 are in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00173.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00173.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>TS_NM_SynchronizingNetwork_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>2574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that,
    - when network is released, shutdown starts without waiting for
      Nm_SynchronizationPoint if the synchronized network is not actively
      participating in the cluster.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - Channels configured to cluster 2 are: channel 6,channel 7 and channel 8.
        All these channels are configured with bus type CAN and hence the
        associated &lt;Bus&gt;Nm is CanNm.
      - NmSynchronizingNetwork is TRUE for channel 6
      - NmSynchronizingNetwork is FALSE for channel 7 and channel 8
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 2.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Reset ComM and CanNm Stub Queues.
    03: Call Nm_NetworkRequest for channel 8 of cluster 0,
        [NmSynchronizingNetwork is set to FALSE for channel 8].
    04: Check that CanNm_NetworkRequest is called for channel 8.
    05: Call Nm_NetworkMode for channel 2 of cluster 0.
    06: Check that ComM_Nm_NetworkMode is called for ComM channel 8.
    07: Get the status of channel 6.
    08: Check that CanNm of Nm channel 6 is in bus sleep mode.
    09: Get the status of channel 8.
    10: Check that CanNm of Nm channel 8 is not in bus sleep mode.
    11: Call Nm_RemoteSleepIndication() and Nm_NetworkRelease() for channel 8
        of cluster 0.
    12: VP(Nm.SWS_Nm_00169,Nm.SWS_Nm_00172):
        Call main function 40 times in loop, so that Nm releases the Network
        by calling CanNm_NetworkRelease() for the channel-8,(channel-6 is
        already in bussleep).[Channel-6 and channel-8 are configured with
        shutdown timer 30 and 40 respectively] .
    13: Check that CanNm_NetworkRelease is called for Nm channel-8.
    14: Get the status of channel 8.
    15: VP(Nm.SWS_Nm_00169,Nm.SWS_Nm_00172):
        - CanNm of Nm channel 8 is in bus sleep mode.
    16: Check that Cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>TS_NM_AbortRetry_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>2712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check whether shutdown is aborted when Nm receives E_NOT_OK on a
    BusNm_NetworkRelease(). Also ensure that when shutdown is aborted due
    to reception of E_NOT_OK on a BusNm_NetworkRelease(), BusNm is
    requested again (including the network which returns this error).
    (Nm.EB_Ref.SWS_Nm_00236.1)

    Further ensure that the conditions for initiating coordinated shutdown
    is evaluated again. (Nm.EB_Ref.SWS_Nm_00236.2)
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the test case
        * Initialize the stubs for CAN NM and its internal state machine
        * Initialize the stubs for Flexray NM and its internal state machine
        * Initialize the stubs for UDP NM and its internal state machine
        * Initialize the NM interface
    02: Request Network:
        Call Nm_NetworkRequest and then Nm_NetworkMode for all channels in
        cluster 0
    03: Release Network :
        Call Nm_RemoteSleepIndication and then Nm_NetworkRelease for all
        channels in cluster 0
    04: Wait for Shutdown:
        a: Find the largest shutdown delay timer
        b: Set the flag 'BusState', so that BusNm should go to
           Prepare bus sleep state if BusNm_NetworkRelease() is called in
           step-04.c
        c: Call main function continuously for highest value of
           ShutdownDelayTimer of channels in cluster 0 so that all the
           networks in cluster is released. However note that the network which
           has the highest value of ShutdownDelayTimer should not invoke
           BusNm_NetworkRelease within this main function call
    05: Ensure that Network release is called during this time for all the
        networks except the network which has the largest shutdown delay timer
    06: Clear the 'release status flag' so that Nm will receive E_NOT_OK on a
        BusNm_NetworkRelease() call in the next main function call in step-06
    07: Call main function once
    08: VP (Nm.EB_Ref.SWS_Nm_00236.1):
        a: BusNm_NetworkRequest() is called for all the networks in the
           cluster except the network which throws error on
           BusNm_NetworkRelease() (see the deviation
           dev.Nm.NoNetworkRequestForOwnNetwork).
           Totally 3 CAN networks, and 1 Generic Nm in Cluster-0
        b: Shutdown is aborted
    09: Set release status flag so that Nm receives E_OK on a
        BusNm_NetworkRelease(), when called next time
    10: Try releasing all the networks in cluster 0
    11: Wait for Shutdown:
        a: Find the largest shutdown delay timer
        b: Set the flag 'BusState', so that BusNm should go to
           Bus sleep state if BusNm_NetworkRelease() is called in
           step-11.c
        c: Call main function continuously for highest value of
           ShutdownDelayTimer of channel belongs to cluster 0 so that all the
           networks in cluster is released. However note that the network which
           has the largest shutdown delay timer should not invoke
           BusNm_NetworkRelease within this main function call
    12: Call the main function one more time to release the network which has
        the largest shutdown delay timer
    13: VP (Nm.EB_Ref.SWS_Nm_00236.2):
        * Shutdown is successful
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>TS_NM_Release_After_Release_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>2914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case a channel has
    parameter NmSynchronizingNetwork se to true,
    the coordination cluster does not start shut down 
    until Nm_SynchronizationPoint is not called.
    The test proves that in case network release
    is called again while state machine is
    in state NM_CC_STATE_WAIT_SYNCHRONIZATION
    the ShutdownDelayTimer is waited until 
    cluster shuts down.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and module
    02: Request the network
    03: Call network mode
    04: Call remote sleep indication
    05: Call network release 
    06: Call again network release while 
         state machine is in state NM_CC_STATE_WAIT_SYNCHRONIZATION 
    07: Verify that cluster does not shuts down
    08: Call Nm_SynchronizationPoint
    09: Wait until ShutdownDelayTimer alsmoast expires
    10: Check that CaNm_NetworkRelease is not called yet
    11: VP(Nm.SWS_Nm_00172) 
        - Check that CaNm_NetworkRelease is called
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>TS_NM_Release_After_Release_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>3028</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case a channel has
    parameter NmSynchronizingNetwork se to true,
    the coordination cluster does not start shut down 
    until Nm_SynchronizationPoint is not called.
    The test proves that in case network release
    is called again while state machine is
    in state NM_CC_STATE_SHUTDOWN_INITIATED
    the ShutdownDelayTimer is waited until 
    cluster shuts down.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and module
    02: Request the network
    03: Call network mode
    04: Call remote sleep indication
    05: Call network release
    06: Verify that cluster does not shuts down
    07: Call Nm_SynchronizationPoint
    08: Call again network release while 
        state machine is in state NM_CC_STATE_SHUTDOWN_INITIATED 
    09: Wait until ShutdownDelayTimer almoast expires
    10: Check that CanNm_NetworkRelease is not been called yet
    11: VP(Nm.SWS_Nm_00172) 
        - Check that CaNm_NetworkRelease is called 
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>TS_NM_NetworkRelease_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>3141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case Network Release returns E_NOT_OK
    the shutdown sequence is restarted.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Stubs and Nm module
    02: Call Network Request
    03: Call Network Mode
    04: Call Remote Sleep Indiaction
    05: Release the network
    06: Wait for Nm_SynchronizationPoint
    07: Wait until ShutdownDelayTimer almoast expires
    08: Check that CanNm_NetworkRelease has not been called yet
    09: Set CanNm_NetworkRelease to return E_NOT_OK
    10: Check that CanNm_NetworkRelease has been called
    11: Wait for synchronization point
    12: Wait until ShutdownDelayTimer almoast expires
    13: Check that CanNm_NetworkRelease has not been called yet
    14: Set CanNm_NetworkRelease to return E_NOT_OK
    15: VP(Nm.EB_Ref.SWS_Nm_00236.2)
        - Check that CanNm_NetworkRelease has been called 
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>TS_NM_Get_State_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>3264</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case CanNm_GetState returns E_NOT_OK
    the CanNm is re-requested again.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and Nm module
    02: Request channel 6 and channel 7 (both in the same coordination cluster)
    03: Call Network mode
    04: Call Remote Sleep Indication
    05: Call network release
    06: Since channel 6 is a synchronizing network wait for synchronization point
    07: Wait until the largest Shutdown delay timer expires (from channel 6 and 7)
    08: Check Network release is called twice
    09: Set GetState to return E_NOT_OK
    10: Call network mode for channel 6
    11: VP(Nm.SWS_Nm_00183)
        - Check that GetState and CanNm_NetworkRequest is called again 
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>TS_NM_ShutdownAbort</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_04/source/application/Nm_CoordTests.c</sourcefile>
      <sourceline>3424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test abortion of a coordinated shutdown.    
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 3 are: CANNM,UDPNM,FRNM.
      - FRNM channel must have NmSynchronizingNetwork set TRUE.
    Module state:
      - Nm is initialized
    Misc:
  
Test Execution: 
    01: Initialize the respective bus interface stub.
    02: CANNM channel do a passive startup and enter network mode. 
        It is the first channel under NM coordination.
    03: UDPNM channel do a passive startup and enter network mode.
        It is the second channel under NM coordination.
    04: FRNM channel do a passive startup and enter network mode.
        It is the thirth channel under NM coordination.
    05: CANNM make a remote sleep indication.
    06: UDPNM make a remote sleep indication.
    07: FRNM make a remote sleep indication. 
        This was the last channel keeping the coordination cluster awake.
        Now condition to Initiate shutdown are meet. Due to FRNM channel,
        coordination cluster enter NM_CC_STATE_WAIT_SYNCHRONIZATION.
    08: Call Nm_MainFunction(). Coordination cluster remain in NM_CC_STATE_WAIT_SYNCHRONIZATION.
    09: Do a Nm_RemoteSleepCancellation on CANNM channel and call Nm_MainFunction().
        Coordination cluster return to NM_CC_STATE_WAIT_FOR_SHUTDOWN.
    10: VP(Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation)
        VP(Nm.SWS_Nm_00183)
        
        VP(Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation) - in NM_CC_STATE_WAIT_SYNCHRONIZATION coordination sleep 
        is aborted.
        VP(Nm.SWS_Nm_00183) - NM coordinator request network from CANNM,UDPNM and FRNM.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.RemoteSleepCancelation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30040</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if development error NM_E_UNINIT is reported by all API and
    callback functions if Nm module is not initialized.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - DET is enabled.
      - Nm is not initialized.
  
Test Execution: 
    01: Call Nm_PassiveStartUp for channel 0.
    02: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_PassiveStartUp().
    03: Call Nm_NetworkRequest for channel 0.
    04: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkRequest for channel 0.
    05: Call Nm_NetworkRelease for channel 0.
    06: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkRelease for channel 0.
    07: Call Nm_DisableCommunication for channel 0.
    08: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_DisableCommunication for channel 0.
    09: Call Nm_EnableCommunication for channel 0.
    10: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_EnableCommunication for channel 0.
    11: Call Nm_SetUserData for channel 0.
    12: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_SetUserData() for channel 0.
    13: Call Nm_GetUserData for channel 0.
    14: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetUserData() for channel 0.
    15: Call Nm_GetPduData for channel 0.
    16: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetPduData() for channel 0.
    17: Call Nm_RepeatMessageRequest for channel 0.
    18: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_RepeatMessageRequest() for channel 0.
    19: Call Nm_GetNodeIdentifier for channel 0.
    20: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetNodeIdentifier for channel 0.
    21: Call Nm_GetLocalNodeIdentifier for channel 0.
    22: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetLocalNodeIdentifier for channel 0.
    23: Call Nm_CheckRemoteSleepIndication for channel 0.
    24: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_CheckRemoteSleepIndication for channel 0.
    25: Call Nm_GetState for channel 0.
    26: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_GetState for channel 0.
    27: Call Nm_NetworkMode for channel 0.
    28: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkMode().
    29: Call Nm_PrepareBusSleepMode for channel 0.
    30: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_PrepareBusSleepMode().
    31: Call Nm_BusSleepMode for channel 0.
    32: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_BusSleepMode().
    33: Call Nm_NetworkStartIndication for channel 0.
    34: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_NetworkStartIndication for channel 0.
    35: Call Nm_CarWakeUpIndication for channel 0.
    36: VP ():
        - DET error is reported with error id 'NM_E_UNINIT' for
        Nm_CarWakeUpIndication for channel 0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>TS_NM_30041</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if development error NM_E_HANDLE_UNDEF is reported by all API and
    callback functions if an invalid Nm channel Id is passed.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      DET is enabled.
    Module state:
      - Nm is initialized
  
Test Execution: 
    01: Set an invalid Nm Channel Id.
    02: Initialize the NM interface.
    03: Call Nm_PassiveStartUp for an invalid channel 25.
    04: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00488, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_PassiveStartUp  for channel 25.
    05: Call Nm_NetworkRequest for an invalid channel 25.
    06: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00489, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkRequest for channel 25.
    07: Call Nm_NetworkRelease for an invalid channel 25.
    08: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00490, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkRelease for channel 25.
    09: Call Nm_DisableCommunication for an invalid channel 25.
    10: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00491, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_DisableCommunication for channel 25.
    11: Call Nm_EnableCommunication for an invalid channel 25.
    12: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00492, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_EnableCommunication for channel 25.
    13: Call Nm_SetUserData for an invalid channel 25.
    14: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00493, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_SetUserData for channel 25.
    15: Call Nm_GetUserData for an invalid channel 25.
    16: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00494, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetUserData for channel 25.
    17: Call Nm_GetPduData for an invalid channel 25.
    18: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00495, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetPduData for channel 25.
    19: Call Nm_RepeatMessageRequest for an invalid channel 25.
    20: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00496, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_RepeatMessageRequest for channel 25.
    21: Call Nm_GetNodeIdentifier for an invalid channel 25.
    22: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00497, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetNodeIdentifier for channel 25.
    23: Call Nm_GetLocalNodeIdentifier for an invalid channel 25.
    24: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00498, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetLocalNodeIdentifier for channel 25.
    25: Call Nm_CheckRemoteSleepIndication for an invalid channel 25.
    26: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00499, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_CheckRemoteSleepIndication for channel 25.
    27: Call Nm_GetState for an invalid channel 25.
    28: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00500, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_GetState for channel 25.
    29: Call Nm_NetworkMode for channel 25.
    30: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkMode for channel 25.
    31: Call Nm_PrepareBusSleepMode for channel 25.
    32: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_PrepareBusSleepMode for channel 25.
    33: Call Nm_BusSleepMode for channel 25.
    34: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_BusSleepMode for channel 25.
    35: Call Nm_NetworkStartIndication for channel 25.
    36: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_NetworkStartIndication for channel 25.
    37: Call Nm_CarWakeUpIndication for channel 25.
    38: VP(Nm.ASR403.SWS_Nm_00233, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_CarWakeUpIndication for channel 25.        
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00493</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>TS_NM_30042</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if Nm_EnableCommunication() and Nm_DisableCommunication() report det
    error NM_E_HANDLE_UNDEF if an invalid channel is passed as argument.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Set an invalid Nm Channel Id.
    02: Call Nm_DisableCommunication for channel 25.
    03: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00491, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_DisableCommunication for channel 25.
    05: VP(Nm.ASR403.SWS_Nm_00233, Nm.SWS_Nm_00492, Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
        - DET error is reported with error id 'NM_E_HANDLE_UNDEF' for
        Nm_EnableCommunication for channel 25.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Nm.ASR403.SWS_Nm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>TS_NM_CarWakeupIndicationCalloutDefined</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>614</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case NmCarWakeUpRxEnabled is set to true,
    and NmCarWakeUpCallout is specified,
    when BusNm calls Nm_CarWakeUpIndication, the Nm will
    call function specified by NmCarWakeUpCallout.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize Nm
    02: Call Car Wake Up indication
    03: VP(Nm.SWS_Nm_00252, Nm.SWS_Nm_00250, Nm.SWS_Nm_00291, Nm.ECUC_Nm_00234 
        - check that CarWakeupCallback function is called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30043</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if all API functions provided to upper layer are passed correctly to
    the lower layer modules (FrNm, CanNm, GenericNms) and all API functions
    provided to lower layer module are passed correctly to the ComM with
    support for multi cluster networks disabled.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
  
Test Execution: 
    01: Initialize the NM interface.
    02: Call Nm_PassiveStartUp for channel 1.
    03: VP (Nm.SWS_Nm_00031):
        - CanNm_PassiveStartUp is called for channel 1.
    04: Call Nm_PassiveStartUp for channel 3.
    05: VP (Nm.SWS_Nm_00031):
        - FrNm_PassiveStartUp is called for channel 3.
    06: Call Nm_PassiveStartUp for channel 2.
    07: VP (Nm.SWS_Nm_00031):
        - GenericNm_1_NetworkRelease is called for channel 2.
    08: Call Nm_PassiveStartUp for channel 7.
    09: VP (Nm.SWS_Nm_00031):
        - GenericNm_2_NetworkRelease is called for channel 7.
    10: Call Nm_NetworkRequest for channel 1.
    11: VP (Nm.SWS_Nm_00032):
        - CanNm_NetworkRequest is called for channel 1.
    12: Call Nm_NetworkRequest for channel 3.
    13: VP (Nm.SWS_Nm_00032):
        - FrNm_NetworkRequest is called for channel 3.
    14: Call Nm_NetworkRequest for channel 2.
    15: VP (Nm.SWS_Nm_00032):
        - GenericNm_1_NetworkRequest is called for channel 2.
    16: Call Nm_NetworkRequest for channel 7.
    17: VP (Nm.SWS_Nm_00032):
        - GenericNm_2_NetworkRequest is called for channel 7.
    18: Call Nm_NetworkRelease for channel 1.
    19: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called for channel 1.
    20: Call Nm_NetworkRelease for channel 3.
    21: VP (Nm.SWS_Nm_00046):
        - FrNm_NetworkRelease is called for channel 3.
    22: Call Nm_NetworkRelease for channel 2.
    23: VP (Nm.SWS_Nm_00046):
        - GenericNm_1_NetworkRelease is called for channel 2.
    24: Call Nm_NetworkRelease for channel 7.
    25: VP (Nm.SWS_Nm_00046):
        - GenericNm_2_NetworkRelease is called for channel 7.
    26: Call Nm_DisableCommunication for channel 1.
    27: VP (Nm.SWS_Nm_00033):
        - CanNm_DisableCommunication is called for channel 1.
    28: Call Nm_DisableCommunication for channel 3.
    29: VP (Nm.SWS_Nm_00033):
        - FrNm_DisableCommunication is called for channel 3.
    30: Call Nm_DisableCommunication for channel 2.
    31: VP (Nm.SWS_Nm_00033):
        - GenericNm_1_DisableCommunication is called for channel 2.
    32: Call Nm_DisableCommunication for channel 7.
    33: VP (Nm.SWS_Nm_00033):
        - GenericNm_2_DisableCommunication is called for channel 7.
    34: Call Nm_EnableCommunication for channel 1.
    35: VP (Nm.SWS_Nm_00034):
        - CanNm_EnableCommunication is called for channel 1.
    36: Call Nm_EnableCommunication for channel 3.
    37: VP (Nm.SWS_Nm_00034):
        - FrNm_EnableCommunication is called for channel 3.
    38: Call Nm_EnableCommunication for channel 2.
    39: VP (Nm.SWS_Nm_00034):
        - GenericNm_1_EnableCommunication is called for channel 2.
    40: Call Nm_EnableCommunication for channel 7.
    41: VP (Nm.SWS_Nm_00034):
        - GenericNm_2_EnableCommunication is called for channel 7.
    42: Call Nm_SetUserData for channel 1.
    43: VP (Nm.SWS_Nm_00035): - CanNm_SetUserData is called for channel 1.
    44: Call Nm_SetUserData for channel 3.
    45: VP (Nm.SWS_Nm_00035): - FrNm_SetUserData is called for channel 3.
    46: Call Nm_SetUserData for channel 2.
    47: VP (Nm.SWS_Nm_00035): - GenericNm_1_SetUserData is called for channel 2.
    48: Call Nm_SetUserData for channel 7.
    49: VP (Nm.SWS_Nm_00035): - GenericNm_2_SetUserData is called for channel 7.
    50: Call Nm_GetUserData for channel 1.
    51: VP (Nm.SWS_Nm_00036): - CanNm_SetUserData is called for channel 1.
    52: Call Nm_GetUserData for channel 3.
    53: VP (Nm.SWS_Nm_00036): - FrNm_SetUserData is called for channel 3.
    54: Call Nm_GetUserData for channel 2.
    55: VP (Nm.SWS_Nm_00036): - GenericNm_1_GetUserData is called for channel 2.
    56: Call Nm_GetUserData for channel 7.
    57: VP (Nm.SWS_Nm_00036): - GenericNm_2_GetUserData is called for channel 7.
    58: Call Nm_GetPduData for channel 1.
    59: VP (Nm.SWS_Nm_00037): - CanNm_GetPduData is called for channel 1.
    60: Call Nm_GetPduData for channel 3.
    61: VP (Nm.SWS_Nm_00037): - FrNm_GetPduData is called for channel 3.
    62: Call Nm_GetPduData for channel 2.
    63: VP (Nm.SWS_Nm_00037): - GenericNm_1_GetPduData_Stub is called for channel 2.
    64: Call Nm_GetPduData for channel 7.
    65: VP (Nm.SWS_Nm_00037): - GenericNm_2_GetPduData_Stub is called for channel 7.
    66: Call Nm_RepeatMessageRequest for channel 1.
    67: VP (Nm.SWS_Nm_00038): - CanNm_RepeatMessageRequest is called for channel 1.
    68: Call Nm_RepeatMessageRequest for channel 3.
    69: VP (Nm.SWS_Nm_00038): - FrNm_RepeatMessageRequest is called for channel 3.
    70: Call Nm_RepeatMessageRequest for channel 2.
    71: VP (Nm.SWS_Nm_00038): - GenericNm_1_RepeatMessageReques is called for channel 2.
    72: Call Nm_RepeatMessageRequest for channel 7.
    73: VP (Nm.SWS_Nm_00038): - GenericNm_2_RepeatMessageReques is called for channel 7.
    74: Call Nm_GetNodeIdentifier for channel 1.
    75: VP (Nm.SWS_Nm_00039): - CanNm_GetNodeIdentifier is called for channel 1.
    76: Call Nm_GetNodeIdentifier for channel 3.
    77: VP (Nm.SWS_Nm_00039): - FrNm_GetNodeIdentifier is called for channel 3.
    78: Call Nm_GetNodeIdentifier for channel 2.
    79: VP (Nm.SWS_Nm_00039): - GenericNm_1_GetNodeIdentifier is called for channel 2.
    80: Call Nm_GetNodeIdentifier for channel 1.
    81: VP (Nm.SWS_Nm_00039): - GenericNm_2_GetNodeIdentifier is called for channel 1.
    82: Call Nm_GetLocalNodeIdentifier for channel 1.
    83: VP (Nm.SWS_Nm_00040): - CanNm_GetLocalNodeIdentifier is called for channel 1.
    84: Call Nm_GetLocalNodeIdentifier for channel 1.
    85: VP (Nm.SWS_Nm_00040): - CanNm_GetLocalNodeIdentifier is called for channel 1.
    86: Call Nm_GetLocalNodeIdentifier for channel 1.
    87: VP (Nm.SWS_Nm_00040): - CanNm_GetLocalNodeIdentifier is called for channel 1.
    88: Call Nm_GetLocalNodeIdentifier for channel 1.
    89: VP (Nm.SWS_Nm_00040): - CanNm_GetLocalNodeIdentifier is called for channel 1.
    90: Call Nm_CheckRemoteSleepIndication for channel 1.
    91: VP (Nm.SWS_Nm_00042):
        - CanNm_CheckRemoteSleepIndication is called for channel 1.
    92: Call Nm_CheckRemoteSleepIndication for channel 3.
    93: VP (Nm.SWS_Nm_00042):
        - FrNm_CheckRemoteSleepIndication is called for channel 3.
    94: Call Nm_CheckRemoteSleepIndication for channel 2.
    95: VP (Nm.SWS_Nm_00042):
        - GenericNm_1_CheckRemoteSleepIndication is called for channel 2.
    96: Call Nm_CheckRemoteSleepIndication for channel 7.
    97: VP (Nm.SWS_Nm_00042):
        - GenericNm_2_CheckRemoteSleepIndication is called for channel 7.
    98: Call Nm_GetState for channel 1.
    99: VP (Nm.SWS_Nm_00043):
        - CanNm_GetState is called for channel 1.
    100: Call Nm_GetState for channel 3.
    101: VP (Nm.SWS_Nm_00043):
         - FrNm_GetState is called for channel 3.
    102: Call Nm_GetState for channel 2.
    103: VP (Nm.SWS_Nm_00043):
         - GenericNm_1_GetState is called for channel 2.
    104: Call Nm_GetState for channel 7.
    105: VP (Nm.SWS_Nm_00043):
         - GenericNm_2_GetState is called for channel 7.
    106: Call Nm_NetworkStartIndication for channel 1.
    107: VP (Nm.SWS_Nm_00155):
         - ComM_Nm_NetworkStartIndication is called for channel 1.
    108: Call Nm_NetworkStartIndication for channel 3.
    109: VP (Nm.SWS_Nm_00155):
         - ComM_Nm_NetworkStartIndication is called for channel 3.
    110: Call Nm_NetworkStartIndication for channel 2.
    111: VP (Nm.SWS_Nm_00155):
         - ComM_Nm_NetworkStartIndication is called for channel 2.
    112: Call Nm_NetworkStartIndication for channel 7.
    113: VP (Nm.SWS_Nm_00155):
         - ComM_Nm_NetworkStartIndication is called for channel 7.
    114: Call Nm_NetworkMode for channel 1.
    115: VP (Nm.SWS_Nm_00158):
         - ComM_Nm_NetworkMode is called for channel 1.
    116: Call Nm_NetworkMode for channel 3.
    117: VP (Nm.SWS_Nm_00158):
         - ComM_Nm_NetworkMode is called for channel 3.
    118: Call Nm_NetworkMode for channel 2.
    119: VP (Nm.SWS_Nm_00158):
         - ComM_Nm_NetworkMode is called for channel 2.
    120: Call Nm_NetworkMode for channel 7.
    121: VP (Nm.SWS_Nm_00158):
         - ComM_Nm_NetworkMode is called for channel 7.
    122: Call Nm_PrepareBusSleepMode for channel 1.
    123: VP (Nm.SWS_Nm_00161):
         - ComM_Nm_PrepareBusSleepMode is called for channel 1.
    124: Call Nm_PrepareBusSleepMode for channel 3.
    125: VP (Nm.SWS_Nm_00161):
         - ComM_Nm_PrepareBusSleepMode is called for channel 3.
    126: Call Nm_PrepareBusSleepMode for channel 2.
    127: VP (Nm.SWS_Nm_00161):
         - ComM_Nm_PrepareBusSleepMode is called for channel 2.
    128: Call Nm_PrepareBusSleepMode for channel 7.
    129: VP (Nm.SWS_Nm_00161):
         - ComM_Nm_PrepareBusSleepMode is called for channel 7.
    130: Call Nm_BusSleepMode for channel 1.
    131: VP (Nm.SWS_Nm_00163):
         - ComM_Nm_BusSleepMode is called for channel 1.
    132: Call Nm_BusSleepMode for channel 3.
    133: VP (Nm.SWS_Nm_00163):
         - ComM_Nm_BusSleepMode is called for channel 3.
    134: Call Nm_BusSleepMode for channel 2.

    135: VP (Nm.SWS_Nm_00163):
         - ComM_Nm_BusSleepMode is called for channel 2.

    136: Call Nm_BusSleepMode for channel 7.

    137: VP (Nm.SWS_Nm_00163):
         - ComM_Nm_BusSleepMode is called for channel 7.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>TS_NM_CarWakeupIndicationCalloutNotDefined</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case NmCarWakeUpRxEnabled is set to true,
    and NmCarWakeUpCallout is not specified,
    when BusNm calls Nm_CarWakeUpIndication, the Nm will
    call BswM_NmIf_CarWakeUpIndication
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize Nm
    02: Call Car Wake Up indication
    03: VP(Nm.SWS_Nm_00285, Nm.SWS_Nm_00250)
        - check that CarWakeupCallback function is called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_70001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should check a normal wakeup and shutdown of a cluster.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize Nm module
    02: Request the network
    03: Check that Nm requested the FrNm
    04: Simulate network mode
    05: Simulate Remote Sleep Indication
    06: Release the network
    07: Simulate synchronization point
    08: Wait until ShutdownDelayTimer almoast epires
    09: Check that Network Release has not been called yet
    10: VP(Nm.SWS_Nm_00176)
        - Check that Network Release has been called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>TS_NM_70002</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case BusNm goes to Synchronize state
    and while in Normal Opration state, the channel
    did not indicated Remote Sleep Indication,
    the channel is marked as inactive after
    WaitForShutdownTime has expired.
    Check that in case Synchroniztaion Point
    is not received because of Buss Off
    after WaitForShutdownTime has expired
    the state machine does not
    waits for synchronization point.
  
Test Object: None.
Test Precondition: 
   - Channel has parameter NmSynchronizingNetwork set to TRUE
  
Test Execution: 
    01: Initialize Nm module
    02: Request the network
    03: Check that Nm requested the BusNm
    04: Simulate Network Mode
    05: Simulate Buss Off
    06: Release the network
    07: Wait until ShutdownDelayTimer + WaitForShutdownTime almoast expires
    08: Check that Network Release has not been called yet
    09: VP(Nm.EB.ASR40.BusOff.SynchronizeState,
           Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1,
           Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2)
        - Check that Nm released the BusNm
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>TS_NM_70003</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case BusNm goes to Synchronize state
    and while in Normal Opration state, the channel
    did not indicated Remote Sleep Indication,
    the channel is marked as inactive after
    WaitForShutdownTime has expired.
  
Test Object: None.
Test Precondition: 
   - Channel has parameter NmSynchronizingNetwork set to FALSE
  
Test Execution: 
    01: Initialize Nm module
    02: Request the network
    03: Check that Nm requested the BusNm
    04: Simulate Network Mode
    05: Simulate Buss Off
    06: Release the network
    07: Wait until ShutdownDelayTimer + WaitForShutdownTime almoast expires
    08: Check that Network Release has not been called yet
    09: VP(Nm.EB.ASR40.BusOff.SynchronizeState,
           Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1)
        - Check that Nm released the BusNm
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>TS_NM_70004</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>341</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case BusNm goes to Buss Sleep State
    and while in Normal Opration state, the channel
    did not indicated Remote Sleep Indication,
    the channel is marked as inactive after
    WaitForShutdownTime has expired.
    Check that in case Synchroniztaion Point
    is not received because of Buss Off
    after WaitForShutdownTime has expired
    the state machine does not
    waits for synchronization point.
  
Test Object: None.
Test Precondition: 
    - Channel has parameter NmSynchronizingNetwork set to TRUE
  
Test Execution: 
    01: Intialize Nm module
    02: Request the network
    03: Check that Nm requested BusNm
    04: Simulate Network Mode
    05: Simulate Buss Sleep State mode
    06: Release the network
    07: Wait until ShutdownDelayTimer + WaitForShutdownTime almoast expires
    08: Check that Network release has not been called yet
    09: VP(Nm.BusOff.BussSleepState,
           Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1,
           Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2)
        - Check that Network release has been called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.BusSleepState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>TS_NM_70005</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case BusNm goes from Network mode
    to Synchronize state and back to Network mode
    the WaitForShutdownTime is stopped.
  
Test Object: None.
Test Precondition: 
    - Channel has parameter NmSynchronizingNetwork set to TRUE
  
Test Execution: 
    01: Initialize Nm module
    02: Request the network
    03: Check that Nm requested BusNm
    04: Simulate Network Mode
    05: Simluate Synchronize state
    06: Simulate Network Mode
    07: Release the network
    08: Wait until WaitForShutdownTime would expire
    09: VP(Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop1)
        - Check that Nm did not released BusNm
    10: Simulate Remote Sleep Indication
    11: Simulate Synchronization point
    12: Wait until ShutdownDelayTimer almoast expires
    13: Check that Nm did not released BusNm
    14: Check that Nm released BusNm
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>TS_NM_70006</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>558</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test proves that in case two
    channels are used while one channel is not producing Buss Off
    while the other generates Buss Off,
    the shutdown is not initiated until both of the
    channels are not marked as inactive.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  01: Initialize Nm module
  02: Request channels
  03: Check that Nm requested the BusNm
  04: Simulate network mode
  05: FrNm channel goes to synchronize state
  06: Release FrNm channel
  08: Wait until WaitForShutdownTime expires for the FrNm channel
  09: Check that Nm did not released BusNm
  10: Release the network
  11: Indicate Remote Sleep Indication
  12: Wait until WaitForShutdownTime expires once again
      and Nm state machine does not waits anymore for a valid
      synchronization point
  13: Check that Nm did not released the Buss yet
  14: VP(Nm.EB.ASR40.BusOff.SynchronizeState,
         Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1,
         Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2);
      - Check that Nm release the BusNms
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.SynchronizeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Expired_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>TS_NM_70007</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>698</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case shutdown is aborted the 
    WaitForShutdownTimer is stoped and restarted
    if the Buss did not recovered.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Call Nm_PassiveStartUp for channel 0.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.BusOff.NmWaitForShutdownTime_Timer_Stop2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_CanNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_10_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: VP (Nm.EB.SchM_Call_CanNm_PassiveStartUp):
        - Verify SchM_Call for Nm_PassiveStartUp for NmChannelConfig_0 with NM_BUSNM_CANNM;
    03: VP (Nm.EB.SchM_Call_CanNm_NetworkRequest):
        - Verify SchM_Call for Nm_NetworkRequest for NmChannelConfig_0 with NM_BUSNM_CANNM;
    04: VP (Nm.EB.SchM_Call_CanNm_NetworkRelease):
        - Verify SchM_Call for Nm_NetworkRelease for NmChannelConfig_0 with NM_BUSNM_CANNM;
    05: VP (Nm.EB.SchM_Call_CanNm_RequestBusSynchronization):
        - Verify SchM_Call for Nm_BusNm_RequestBusSynchronization for NmChannelConfig_0 with
        NM_BUSNM_CANNM;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_CanNm_RequestBusSynchronizationFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_10_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm.
    02: Call Nm_NetworkRequest.
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkRequest):
        - Network has been requested.
    04: Call Nm_NetworkRelease.
    05: Call main function.
    06: VP(Nm.EB.SchM_Call_CanNm_NetworkRelease):
        - Network has been released.
    07: VP(Nm.EB.SchM_Call_CanNm_RequestBusSynchronization):
        - CanNm_RequestBusSynchronization_Stub has not been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_FrNm_RequestBusSynchronizationFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_10_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
    FrNmBusSynchronizationEnabled == FALSE for Channel 2.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm.
    02: Call Nm_NetworkRequest.
    03: Call Nm_NetworkRelease.
    04: Call main function.
    05: VP(Nm.EB.SchM_Call_FrNm_NetworkRelease):
        - Network has been released.
    06: VP(Nm.EB.SchM_Call_FrNm_RequestBusSynchronization):
        - FrNm_RequestBusSynchronization_Stub has not been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_FrNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: VP (Nm.EB.SchM_Call_FrNm_PassiveStartUp):
        - Verify SchM_Call for Nm_PassiveStartUp for NmChannelConfig_1 with NM_BUSNM_FRNM;
    03: VP (Nm.EB.SchM_Call_FrNm_NetworkRequest):
        - Verify SchM_Call for Nm_NetworkRequest for NmChannelConfig_1 with NM_BUSNM_FRNM;
    04: VP (Nm.EB.SchM_Call_FrNm_NetworkRelease):
        - Verify SchM_Call for Nm_NetworkRelease for NmChannelConfig_1 with NM_BUSNM_FRNM;
    05: VP (Nm.EB.SchM_Call_FrNm_RequestBusSynchronization):
        - Verify SchM_Call for Nm_BusNm_RequestBusSynchronization for NmChannelConfig_1 with
        NM_BUSNM_FRNM;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_FrNm_NetworkRelease</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: Call passive start up.
    03: VP(Nm.EB.SchM_Call_FrNm_PassiveStartUp):
        - Check that Nm requested FrNm_PassiveStartUp_Stub.
    04: Request the network.
    05: If NmPassiveModeEnabled = TRUE,FrNm has not been requested.
    06: VP(Nm.EB.SchM_Call_FrNm_NetworkRequest):
        - Check that FrNm has been requested.
    07: Simulate NetworkMode.
    08: Simulate Buss Off.
    09: Release the network.
    10: Wait a couple of cycles.
    11: If NmPassiveModeEnabled = TRUE, FrNm has not been released.
    12: VP(Nm.EB.SchM_Call_FrNm_NetworkRelease):
        - Check that FrNm has been released.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_FrNm_RequestBusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm.
    02: Call Nm_NetworkRequest.
    03: Call Nm_NetworkRelease.
    04: Call main function.
    05: VP(Nm.EB.SchM_Call_FrNm_RequestBusSynchronization):
        - FrNm_RequestBusSynchronization_Stub has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>TS_NM_Call_FrNm_NetworkReleaseGeneric</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>259</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
    NmGenericBusNmPrefix set to GenericNm_1
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: Request the network.
    03: VP(Nm.EB.SchM_Call_FrNm_NetworkRequest):
        - Check that FrNm has been requested.
    04: Simulate NetworkMode.
    05: Simulate Buss Off.
    06: Release the network.
    07: Wait a couple of cycles.
    08: VP(Nm.EB.SchM_Call_FrNm_NetworkRelease):
        - Check that FrNm has been released.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>TS_NM_Call_FrNm_NetworkReleaseGenericFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
    NmGenericBusNmPrefix set to GenericNm_2 and NmPassiveModeEnabled == TRUE
    for Channel 4.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: Request the network.
    03: VP(Nm.EB.SchM_Call_FrNm_NetworkRequest):
        - Check that FrNm has not been requested.
    04: Simulate NetworkMode.
    05: Simulate Buss Off.
    06: Release the network.
    07: Wait a couple of cycles.
    08: VP(Nm.EB.SchM_Call_FrNm_NetworkRelease):
        - Check that FrNm has not been released.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_CanNm_RequestBusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_11_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm.
    02: Call Nm_NetworkRequest.
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkRequest):
        - Network has been requested.
    04: Call Nm_NetworkRelease.
    05: Call main function.
    06: VP(Nm.EB.SchM_Call_CanNm_NetworkRelease):
        - Network has been released.
    07: VP(Nm.EB.SchM_Call_CanNm_RequestBusSynchronization):
        - CanNm_RequestBusSynchronization_Stub has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_UdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_12_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: VP (Nm.EB.SchM_Call_UdpNm_PassiveStartUp):
        - Verify SchM_Call for Nm_PassiveStartUp for NmChannelConfig_1 with NM_BUSNM_UDPNM;
    03: VP (Nm.EB.SchM_Call_UdpNm_NetworkRequest):
        - Verify SchM_Call for Nm_NetworkRequest for NmChannelConfig_1 with NM_BUSNM_UDPNM;
    04: VP (Nm.EB.SchM_Call_UdpNm_NetworkRelease):
        - Verify SchM_Call for Nm_NetworkRelease for NmChannelConfig_1 with NM_BUSNM_UDPNM;
    05: VP (Nm.EB.SchM_Call_UdpNm_RequestBusSynchronization):
        - Verify SchM_Call for Nm_BusNm_RequestBusSynchronization for NmChannelConfig_1 with
        NM_BUSNM_UDPNM;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_RequestBusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case Schm_Call returns different value from SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Set RequestBusSynchronization to return E_NOT_OK
    03: Do a passive startup
    04: Call Remote Sleep Indication
    05: Wait until Request Bus Synchronization is called
    06: VP(Nm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_PassiveStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case Schm_Call returns different value from SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
    02: Set PassiveStartup to return E_NOT_OK
    03: Do a passive startup
    04: VP(Nm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case Schm_Call returns different value from SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Set NetworkRequest to return E_NOT_OK
    03: Call NetworkRequest
    04: VP(Nm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkRelease</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case Schm_Call returns different value from SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Set NetworkRelease to return E_NOT_OK
    03: Call Network Release
    04: VP(Nm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_CanNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    Bus type is CANNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest)
        - check that CanNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
   CanNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_UdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    Bus type is UDPNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest)
        - check that UdpNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
   UdpNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_FrNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_13_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    Bus type is FRNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest)
        - check that FrNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
   FrNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_PassiveStartup1Ch</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_14_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled CanNm_PassiveStartup is done
    via SchM_Call
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Do a passive startup
    03: VP(Nm.EB.SchM_Call_CanNm_PassiveStartUp)
        - Ensure that Passive Startup call is done via Schm
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkRequest1Ch</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_14_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled CanNm_NetworkRequest is done via SchM_Call
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Request the network
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkRequest)
        - Ensure that Network Request call is done via Schm
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest1Ch</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_14_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled CanNm_NetworkGwEraRequest is done via SchM_Call
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Request the network
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest)
        - Ensure that Network Request call is done via Schm
  
Test Input: 
    Call of Nm_NetworkGwEraRequest
  
Test Output: 
    Call of Nm_NetworkGwEraRequest is done via SchM mechanism
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkRelease1Ch</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_14_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled CanNm_NetworkRelease is done via SchM_Call
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initalize Nm
    02: Call Network Release
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkRelease)
        - Ensure that Network Release call is done via Schm
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmStandardBusTypeUdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_15/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if Nm_DisableCommunication and Nm_EnableCommunication are
    called for only one channel with NmStandardBusType = NM_BUSNM_UDPNM.
  
Test Object: None.
Test Precondition: 
    NmComControlEnabled = 'true';
    One channel with NmStandardBusType = NM_BUSNM_UDPNM;
  
Test Execution: 
    01: Initialize UdpNm_DisableCommunication_Stub and
        UdpNm_EnableCommunication_Stub.
    02: Initalize Nm.
    03: Call Nm_PassiveStartUp;
    04: Call Nm_NetworkRequest;
    05: Call Nm_NetworkRelease;
    06: Call Nm_DisableCommunication;
    07: VP(Nm.SWS_Nm_00134):
        - Verify if communication has been disabled;
    08: Call Nm_EnableCommunication;
    09: VP(Nm.SWS_Nm_00136):
        - Verify if communication has been eneabled;
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>TS_NM_NmStandardBusTypeUdpNm_GwEraCall</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_15/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case case multicore is disabled and only one channel type is used
    call to BusNm_NetworkGwEraRequest is called.
  
Test Object: None.
Test Precondition: 
    One channel with NmStandardBusType = NM_BUSNM_UDPNM;
    Multicore is not enabled.
    DevErrorDetect is disabled.
  
Test Execution: 
   01: Intialize the module
   02: Reset Stub counter
   03: Call Nm_NetworkGwEraRequest
   04: Check that UdpNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    UdpNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Network_GwEra_Request_DirectCall_CanNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_16/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is disabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    Bus type is CANNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.Nm_NetworkGwEraRequest)
        - check that CanNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    CanNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>TS_NM_Network_GwEra_Request_DirectCall_FrNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_16/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is disabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    Bus type is FRNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.Nm_NetworkGwEraRequest)
        - check that FrNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    FrNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>TS_NM_Network_GwEra_Request_DirectCall_UdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_16/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is disabled the request Nm_NetworkGwEraRequest is forwarded
    to underlying BusNm
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    Bus type is UDPNM    
  
Test Execution: 
    01: Initialize Nm
    02: Initialize Stubs
    03: Call Nm_NetworkGwEraRequest
    04: VP(Nm.EB.Nm_NetworkGwEraRequest)
        - check that UdpNm_NetworkGwEraRequest is called
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    UdpNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_DET_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_17_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case module is not initialized, NM_E_UNINIT is reported as DET
  
Test Object: None.
Test Precondition: 
    Module is not initilized
  
Test Execution: 
   01: Initialize stubs
   02: Call NetworkGwEraRequest
   03: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT):
       - DET error is reported with error id 'NM_E_UNINIT' 
  
Test Input: 
    Call Nm_NetworkGwEraRequest while module is not initialized
  
Test Output: 
    Det is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_DET_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_17_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case Schm_Call returns different value from SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm
    02: Set NetworkGwEraRequest to return E_NOT_OK
    03: Call NetworkGwEraRequest
    04: VP(Nm.EB.SchM_Call_DET)
        - Check that DET is reported
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    Det is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_DET_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_17_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case of function is called with invalid handle id, NM_E_HANDLE_UNDEF is reported as DET
  
Test Object: None.
Test Precondition: 
    Module is initilized
  
Test Execution: 
   01: Initialize Nm
   02: Call NetworkGwEraRequest
   03: VP(Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF):
       - DET error is reported with error id 'NM_E_HANDLE_UNDEF' 
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    Det is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_DET_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_17_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case of function is called for a channel which is passive, NM_E_HANDLE_UNDEF is reported as DET
  
Test Object: None.
Test Precondition: 
    Module is initilized
  
Test Execution: 
   01: Initialize Nm
   02: Call NetworkGwEraRequest
   03: VP(Nm.EB.ASR40.DetErr_PassiveChannels):
       - DET error is reported with error id 'NM_E_HANDLE_UNDEF' 
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    Det is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.DetErr_PassiveChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_NetworkGwEraRequest_NO_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_17_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case of function is called call is forwarded to lower layers
  
Test Object: None.
Test Precondition: 
    Module is initilized
  
Test Execution: 
   01: Initialize Nm
   02: Call NetworkGwEraRequest
   03: VP(Nm.EB.Nm_NetworkGwEraRequest)
       - Check that Nm_NetworkGwEraRequest is called 
  
Test Input: 
    Call Nm_NetworkGwEraRequest
  
Test Output: 
    UdpNm_NetworkGwEraRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Nm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Schm_Call_GwEraRequest_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_18_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm module.
    02: VP (Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest)
    03: VP (Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest)
    04: VP (Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest)
  
Test Input: 
    Call SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest_NmChannelConfig_0
    Call SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest_NmChannelConfig_1
    Call SchM_Call_Nm_RequiredCSEntry_Nm_NetworkGwEraRequest_NmChannelConfig_2
  
Test Output: 
    Calls return E_OK
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>TS_NM_Schm_Call_GwEraRequest_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_18_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Nm.
    02: Call Nm_NetworkRequest for CanNm.
    03: VP(Nm.EB.SchM_Call_CanNm_NetworkRequest):
        - Call was done trough Schm mechanism.
    04: Call Nm_NetworkRequest for FrNm.
    05: VP(Nm.EB.SchM_Call_FrNm_NetworkRequest):
        - Call was done trough Schm mechanism.        
    06: Call Nm_NetworkRequest for UdpNm.
    07: VP(Nm.EB.SchM_Call_UdpNm_NetworkRequest):
        - Call was done trough Schm mechanism.                
  
Test Input: 
    Call Nm_NetworkGwEraRequest for all channels
  
Test Output: 
    Calls are done trough SchM mechanism
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.SchM_Call_CanNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_FrNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.SchM_Call_UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_20_SynchronizedPncShutdown_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_20_SynchronizedPncShutdown_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case module is not initlized or wrong parameters are passed to functions
    Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown
    Det is reported
  
Test Object: None.
Test Precondition: 
    NmSynchronizedPncShutdownEnabled = TRUE
    NmDevErrorDetect is set to true
  
Test Execution: 
    01: Call Nm_RequestSynchronizedPncShutdown while module is not initlized
    02: Check that det is reported
    02: Call Nm_ForwardSynchronizedPncShutdown while module is not initlized
    03: Check that det is reported
    04: Inilize module
    05: Call Nm_RequestSynchronizedPncShutdown with invalid values
    06: Check that det is reported
    07: Call Nm_ForwardSynchronizedPncShutdown with invalid values
    08: Check that det is reported
    09: Call Nm_ForwardSynchronizedPncShutdown with invalid values
    10: Check that det is reported
  
Test Input: 
  
Test Output: 
   - check that DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_00508</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_HANDLE_UNDEF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00232.NM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_20_SynchronizedPncShutdown_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_20_SynchronizedPncShutdown_01/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled asn synchronized pnc shutdown is enabled
    and only one generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Only one Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_21_SynchronizedPncShutdown_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_21_SynchronizedPncShutdown_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Only one CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_21_SynchronizedPncShutdown_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_21_SynchronizedPncShutdown_02/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and schm return a different value value than SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Only one CanNm Bus is configured
    NmDevErrorDetect is set to true
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: Check that det is reported
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - Check that DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Schm_BusNmSynchronizedPncShutDown_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_22_SynchronizedPncShutdown_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_22_SynchronizedPncShutdown_03/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is disabled and synchronized pnc shutdown is enabled
    and only one CaNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    Only one CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_23_SynchronizedPncShutdown_04/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_23_SynchronizedPncShutdown_04_Generic_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_23_SynchronizedPncShutdown_04/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled asn synchronized pnc shutdown is enabled
    and generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_2_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_CANNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_24_SynchronizedPncShutdown_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_FRNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_24_SynchronizedPncShutdown_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one FrNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    FrNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that FrNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_FrNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_FrNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_UDPNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_24_SynchronizedPncShutdown_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one UdpNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    UdpNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that UdpNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_UdpNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_UdpNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_24_SynchronizedPncShutdown_05_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_24_SynchronizedPncShutdown_05/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and schm return a different value value than SCHM_E_OK DET is reported
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Only one CanNm Bus is configured
    NmDevErrorDetect is set to true
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: Check that det is reported
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - chack that DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.Schm_BusNmSynchronizedPncShutDown_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_CANNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_25_SynchronizedPncShutdown_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_CanNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_FRNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_25_SynchronizedPncShutdown_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one FrNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    FrNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that FrNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_FrNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_FrNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_UDPNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_25_SynchronizedPncShutdown_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one UdpNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    UdpNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that UdpNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown_UdpNm_To_Nm_RcvFnct
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown_UdpNm_To_Nm_RcvFnct
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_06_GENERIC</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_25_SynchronizedPncShutdown_06/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_CANNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_26_SynchronizedPncShutdown_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_FRNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_26_SynchronizedPncShutdown_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one FrNm bus is configured, call to Nm_RequestSynchronizedPncShutdown 
    is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    FrNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that FrNm_RequestSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_UDPNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_26_SynchronizedPncShutdown_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one UdpNm bus is configured, call to Nm_RequestSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    UdpNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that UdpNm_RequestSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_25_SynchronizedPncShutdown_07_GENERIC</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_26_SynchronizedPncShutdown_07/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case multicore is enabled and synchronized pnc shutdown is enabled
    and only one generic bus is configured, call to Nm_RequestSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_26_SynchronizedPncShutdown_CANNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_27_SynchronizedPncShutdown_08/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    CanNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_26_SynchronizedPncShutdown_FRNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_27_SynchronizedPncShutdown_08/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one FrNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    FrNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that FrNM_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_26_SynchronizedPncShutdown_UDPNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_27_SynchronizedPncShutdown_08/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one UdpNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    UdpNm Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that UdpNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_26_SynchronizedPncShutdown_GENERIC</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_27_SynchronizedPncShutdown_08/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_27_SynchronizedPncShutdown_CANNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_28_SynchronizedPncShutdown_09/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one CanNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    CanNm Bus is configured
    DET is disabled
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that CanNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_27_SynchronizedPncShutdown_FRNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_28_SynchronizedPncShutdown_09/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one FrNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    FrNm Bus is configured
    DET is disabled
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that FrNM_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_27_SynchronizedPncShutdown_UDPNM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_28_SynchronizedPncShutdown_09/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one UdpNm bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    UdpNm Bus is configured
    DET is disabled
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that UdpNm_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>TS_Nm_ConTest_27_SynchronizedPncShutdown_GENERIC</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_28_SynchronizedPncShutdown_09/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case synchronized pnc shutdown is enabled
    and only one generic bus is configured, call to Nm_RequestSynchronizedPncShutdown and
    Nm_ForwardSynchronizedPncShutdown is propagated
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == FALSE
    NmSynchronizedPncShutdownEnabled = TRUE
    Generic Bus is configured
    DET is disabled
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Call Nm_RequestSynchronizedPncShutdown
    04: VP(Nm.EB_Ref.SWS_Nm_00506, Nm.EB_Ref.ECUC_Nm_00249, Nm.ASRR2111.SWS_Nm_91005)
        - Check that GenericNm_1_RequestSynchronizedPncShutdown has been called
    05: Call Nm_ForwardSynchronizedPncShutdown
    06: VP(Nm.EB_Ref.SWS_Nm_00305, Nm.ASRR2111.SWS_Nm_91009)
        - Check that ComM_Nm_ForwardSynchronizedPncShutdown has been called
  
Test Input: 
   - call Nm_RequestSynchronizedPncShutdown
   - call Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - chack that requests are forwarded to ComM and BusNm
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.ECUC_Nm_00249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Nm.ASRR2111.SWS_Nm_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_Single_Bus_Passive_Mode_True</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_29/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When a single bus is configured and 'NmPassiveModeEnabled' set to TRUE check that:
    01. BusNm_DisableCommunication() is not invoked when Nm_DisableCommunication() is called
    02. BusNm_EnableCommunication() is not invoked when Nm_EnableCommunication() is called
    03. BusNm_SetUserData() is not invoked when Nm_SetUserData() is called
    04. BusNm_RepeatMessageRequest() is not invoked when Nm_RepeatMessageRequest() is called
    Check that all the Nm calls mentioned above return E_NOT_OK
  
Test Object: None.
Test Precondition: 
    NmComControlEnabled is TRUE
    PassiveModeEnabled is TRUE
    NmUserDataEnabled is TRUE
  
Test Execution: 
    01: Initialize BusNm stubs.
    02: Initalize Nm.

    03: VP (Nm.EB_Ref.SWS_Nm_00132):
        Call Nm_NetworkRelease() for a channel which 'NmPassiveModeEnabled' set to "TRUE"
        and check that returned value is E_NOT_OK.
    04: Check UdpNm_NetworkRelease() has not been called for this channel.

    05: VP (Nm.EB_Ref.SWS_Nm_00287.1):
        Call Nm_EnableCommunication() for a channel which 'NmPassiveModeEnabled' set to "TRUE"
        and check that returned value is E_NOT_OK.
    06: Check UdpNm_EnableCommunication() has not been called for this channel.

    07: VP (Nm.EB_Ref.SWS_Nm_00288.1):
        Call Nm_SetUserData() for a channel which 'NmPassiveModeEnabled' set to "TRUE"
        and check that returned value is E_NOT_OK.
    08: Check UdpNm_SetUserData() has not been called for this channel.

    09: VP (Nm.EB_Ref.SWS_Nm_00289.1):
        Call Nm_RepeatMessageRequest() for a channel which 'NmPassiveModeEnabled' set to "TRUE"
        and check that returned value is E_NOT_OK.
    10: Check UdpNm_RepeatMessageRequest() has not been called for this channel.
  
Test Input: 
    Function calls
  
Test Output: 
    Return values of Nm function calls is E_NOT_OK
    No UdpNm function stubs were called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00286.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00287.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00288.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00289.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_J1939_APIS_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_30/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case NmNodeIdEnabled and NmNodeDetectionEnabled
    are set to false functions Nm_RepeatMessageRequest, Nm_GetNodeIdentifier and Nm_GetLocalNodeIdentifier
    return E_NOT_OK and DET is reported
  
Test Object: None.
Test Precondition: 
    NmNodeIdEnabled is set to false
    NmNodeDetectionEnabled is set to false
    J1939Nm is configured
  
Test Execution: 
    01: Initialize Nm module
    02: Call Nm_RepeatMessageRequest and check that E_NOT_OK is returned and DET is reported
    03: Call Nm_GetNodeIdentifier and check that E_NOT_OK is returned and DET is reported
    04: Call Nm_GetLocalNodeIdentifier and check that E_NOT_OK is returned and DET is reported
  
Test Input: 
    Function calls
  
Test Output: 
    Return values of Nm function calls is E_NOT_OK
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmNodeIdEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmNodeDetectionEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_J1939_APIS_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_31/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case NmNodeIdEnabled and NmNodeDetectionEnabled
    are set to false functions Nm_RepeatMessageRequest, Nm_GetNodeIdentifier and Nm_GetLocalNodeIdentifier
    return E_NOT_OK and DET is reported in case J1939Nm is used.
    Check that in case NmNodeIdEnabled and NmNodeDetectionEnabled
    are set to true functions Nm_RepeatMessageRequest, Nm_GetNodeIdentifier and Nm_GetLocalNodeIdentifier
    return E_OK and DET is NOT reported in case UdpNm is used    
  
Test Object: None.
Test Precondition: 
    NmNodeIdEnabled is set to false for J1939 bus type
    NmNodeDetectionEnabled is set to false for J1939 bus type
    J1939Nm is configured
    NmNodeIdEnabled is set to false for UdpNm bus type
    NmNodeDetectionEnabled is set to false for UdpNm bus type    
    UdpNm is configutred
  
Test Execution: 
    01: Initialize Nm module
    02: Call Nm_RepeatMessageRequest and check that E_NOT_OK is returned and DET is reported
    02: Call Nm_RepeatMessageRequest and check that E_OK is returned and DET is not reported
    03: Call Nm_GetNodeIdentifier and check that E_NOT_OK is returned and DET is reported
    04: Call Nm_GetNodeIdentifier and check that E_OK is returned and DET is not reported
    05: Call Nm_GetLocalNodeIdentifier and check that E_NOT_OK is returned and DET is reported
    06: Call Nm_GetLocalNodeIdentifier and check that E_OK is returned and DET not is reported
  
Test Input: 
    Function calls
  
Test Output: 
    Return values of Nm function calls is E_NOT_OK for J1939 Bus
    Return values of Nm function calls is E_OK for UdpNm Bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmNodeIdEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmNodeDetectionEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_32_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    Only a single standard bus is configured
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
    call Nm_NetworkRequest
    call Nm_NetworkRelease
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_33_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    multiple standard buses are configured
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
    call Nm_NetworkRequest
    call Nm_NetworkRelease
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_34_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids.
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    multiple Can busses are configured
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
    call Nm_NetworkRequest
    call Nm_NetworkRelease
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_35_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids for normal busses and standard function calls are called for generic busses
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    multiple standard buses and one generic bus are configured 
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
    call Nm_NetworkRequest
    call Nm_NetworkRelease
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_36_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids for normal busses and standard function calls are called for generic busses
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    multiple standard busses, one generic bus as full and one generic bus as passive is configured 
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
    call Nm_NetworkRequest
    call Nm_NetworkRelease
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_NmMultiCoreUseSingleCS_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_37_SchM/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case NmMultiCoreUseSingleCS is set to true 
    SchM_Call_Nm_RequiredCSEntry_Nm_MultipleNetworkOperations is called with correct channel ids and 
    correct operation ids for normal busses and standard function calls are called for generic busses
    when all busses are in passive mode
  
Test Object: None.
Test Precondition: 
    NmMultiCoreSupport == TRUE and NmMultiCoreUseSingleCS = TRUE
    more than one standard bus and two generic buses are configurred and all busses have passive mode set
  
Test Execution: 
    01: Initialize Nm
    02: Call Apis
    03: Check correct stubs are called
  
Test Input: 
    call Nm_PassiveStartUp
  
Test Output: 
    check correct stubs are called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.NmMultiCoreUseSingleCS_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Nm_ConTest_StateChangeNotification_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Conformance/IN/Nm_ConTest_StateChangeNotification_Off/source/application/Nm_ConTest.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that no Com / Det call is made if the Nm_StateChangeNotification() function
      is called for the next used configuration:
        NmDevErrorDetect is disabled.
        NmStateChangeNotificationCallout is disabled.
        NmStateReportEnabled is disabled for every Nm channel.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    NmDevErrorDetect is disabled.
    NmStateChangeNotificationCallout is disabled.
    NmStateReportEnabled is disabled for every Nm channel.
  
Test Execution: 
    01. Simulate Nm_StateChangeNotification() for the transition in &lt;BusNm&gt; for 'channel 0' from BusSleepMode to RepeatMessage.
    02. VP: Verify that the no Com / Det call has been made.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.ECUC_Nm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.StateChangeNotification.Callout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>Nm.ECUC_Nm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TC_NM_StateChangeCallback</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Implementation/IN/Nm_ImpTest_01/source/application/Nm_ImpTest.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  - when enabled, Nm_StateChangeNotification forwards the state change
  notifications to the OEM specific callback function configured with parameter
  'NmStateChangeNotificationCallout'.

Test Object: None.
Test Precondition: 
  NmStateChangeNotificationCallout must be enabled.

Test Execution: 
  01: Call Nm_Init to initialize the NM module.
  02: Clear state change notification test stub
  03: Simulate Nm_StateChangeNotification() for a channel.
  04: VP(Nm.EB.ASR40.StateChangeNotification.Callout, Nm.EB.ASR40.StateChangeNotification):
      The callout function Nm_StateChangeNotificationCallout() is called
      with the same values for parameters which are passed while calling
      Nm_StateChangeNotification().
  05: VP(Nm.EB.ASR40.StateChangeNotification.Callout, Nm.EB.ASR40.StateChangeNotification):
      Check network handle id is same as the passed value

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB.ASR40.StateChangeNotification.Callout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>Nm.EB.ASR40.StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_NM_30001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown of cluster 0 (Nm_CcNmChannels_0).
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules are configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: VP(Nm.SWS_Nm_00046, Nm.SWS_Nm_00118, Nm.EB_Ref.SWS_Nm_00171):
         - CanNm_NetworkRelease and GenericNm_1_NetworkRelease are
        called for cluster 0.
    06: Check that each channel of cluster 0 is in mode
        NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>TS_NM_30002</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown of cluster 1 (Nm_CcNmChannels_1).
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, GenericNm_2 and UdpNm.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 1.
      - Callouts for FrNm, GenericNm_2 and UdpNm is initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 1.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 1.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 1.
    05: VP(Nm.SWS_Nm_00046, Nm.SWS_Nm_00118, Nm.EB_Ref.SWS_Nm_00171):
         - FrNm_NetworkRelease, UdpNm_NetworkRelease,
        GenericNm_2_NetworkRelease are called for channels of cluster 1.
    06: Check that each channel of cluster 1 is in mode
        NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>TS_NM_30003</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown of cluster 0(Nm_CcNmChannels_0) and
    cluster 1(Nm_CcNmChannels_1).
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0 and cluster 1.
      - Other callout functions are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Loop through the clusters.
    03: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0 in first iteration and cluster 1 in the second iteration.
    04: Call Nm_RemoteSleepIndication and NetworkRelease for all channelsof
        cluster 0 in first iteration and cluster 1 in the second iteration.
    05: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0 and cluster 1.
    06: Check the status of each channel of cluster 0.
    07: VP(Nm.SWS_Nm_00046, Nm.SWS_Nm_00118, Nm.EB_Ref.SWS_Nm_00171):
         - CanNm_NetworkRelease and GenericNm_1_NetworkRelease are
        called for channels of cluster 0.
    08: Check the status of each channel of cluster 0.
    09: VP(Nm.SWS_Nm_00046, Nm.SWS_Nm_00118, Nm.EB_Ref.SWS_Nm_00171):
         - FrNm_NetworkRelease, UdpNm_NetworkRelease,
        GenericNm_2_NetworkRelease are called for channels of cluster 1.
    10: Check that each channel of cluster 1 is in mode
        NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>TS_NM_30004</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown not happen for cluster 0 when one channel in the
    cluster 0 is active and all other channels are ready for sleep.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
        (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels in
        the coordination cluster 0 except the last network.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: VP(Nm.SWS_Nm_00002,Nm.SWS_Nm_00003):
         - CanNm_NetworkRelease and GenericNm_1_NetworkRelease are
        not called for channels of cluster 0.
    06: Check that Cluster 0 is not in NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>TS_NM_30005</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>461</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown not happen for cluster 1 when one network
    in the cluster 1 is active and all other networks are ready for sleep.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 1.
      - Callouts for  FrNm, UdpNm and GenericNm_2 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 1.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels in
        the coordination cluster 1 except the last network.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: VP(Nm.SWS_Nm_00002,Nm.SWS_Nm_00003):
         - FrNm_NetworkRelease and GenericNm_2_NetworkRelease are not
        called for any channel of cluster 1.
    06: Check that Cluster 0 is not in NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>TS_NM_30006</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test synchronous shutdown not happen for cluster 0 if atleast one network
    of cluster 0 is requested by Nm_NetworkRequest and verify cluster 1
    is not afftected.
  
Test Object: None.
Test Precondition: 
    Cluster 0 is configured to use underlying CanNm and GenericNm_1 modules.
    Cluster 1 is configured to use underlying FrNm, UdpNm and GenericNm_2
    modules.
  
Test Execution: 
    01: Simulate Sleep Mode for Cluster 1.
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Check that cluster 0 is in NM_MODE_NETWORK Mode.
    04: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0.
    05: Call Nm_NetworkRequest for any one channel of cluster 0, Say channel 0
    06: Check that CanNm_NetworkRequest is called for channel 0 .
    07: Check that Nm_NetworkMode is called for channel 0 .
    08: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    09: VP (Nm.SWS_Nm_00167):
        - CanNm_NetworkRequest is not called when the shutdown
        timer expires.
    10: VP (Nm.SWS_Nm_00167):
        - all channels of cluster 0 is in mode NM_MODE_NETWORK.
    11: VP (Nm.SWS_Nm_00167):
        - all channels of cluster 1 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>TS_NM_30007</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Test Bus sleep state of cluster 0 is not afftected when all networks of
     cluster 1 is requested by Nm_NetworkRequest
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Sleep Mode for Cluster 0.
    02: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    03: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    04: Check that FrNm_NetworkRequest and GenericNm_2_NetworkRequest are
         called for channels of cluster 1.
    05: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 1.
    06: VP (Nm.SWS_Nm_00167):
        - FrNm_NetworkRelease and UdpNm_NetworkRelease are not called
        when the shutdown timer expires.
    07: VP (Nm.SWS_Nm_00167):
        - all channels of cluster 1 is in mode NM_MODE_NETWORK.
    08: VP (Nm.SWS_Nm_00167):
        - all channels of cluster 0 is in mode NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>TS_NM_CancelShutdwn_Passive_CanNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test Synchronous shutdown shall not take place if atleast one
      network(CaN bus) requested passive startup.
      Also verifies - passive startup call forwarded as CanNm_NetworkRequest
                      for cordinated networks and
                    - passive startup call forwarded to as CanNm_PassiveStartUp
                      for uncordinated networks
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Sleep Mode for Cluster 1.
    02: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 0.
    03: Call Nm_PassiveStartUp for any one channel of the coordination cluster
         0.
    04: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
         - Nm_PassiveStartUp call forwarded as CanNm_NetworkRequest
        for cordination cluster 0.
    05: Call passive startup for uncordinated channel 4.
    06: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
         - Nm_PassiveStartUp call forwarded as CanNm_PassiveStartUp
        for uncordinated channel 4.
    07: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0 and cluster 1.
    08: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
         - CanNm_NetworkRelease is not called for any channel of cluster 0.
    09: Check that all channels of cluster 0 are not in NM_MODE_BUS_SLEEP Mode.
    10: Check that all channels of cluster 1 are in NM_MODE_BUS_SLEEP Mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>TS_NM_CancelShutdwn_Passive_FrNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test Synchronous shutdown shall not take place if atleast one
      network(Flexray) requested passive startup.
      Also verifies - passive startup call forwarded as FrNm_NetworkRequest
                      for cordinated network
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Sleep Mode for Cluster 0.
    02: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    03: Call Nm_PassiveStartUp for any one channel of the coordination cluster
         1, say for channel 0.
    04: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
         - Nm_PassiveStartUp call forwarded as FrNm_NetworkRequest
        for cordination cluster 1.
    05: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 1.
    06: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
         - FrNm_NetworkRelease is not called for any channel of
        cluster 1.
    07: Check that all channels of cluster 0 are in NM_MODE_BUS_SLEEP mode.
    08: Check that all channels of cluster 1 are not in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>TS_NM_CancelShutdwn_Passive_UdpNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1015</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test Synchronous shutdown shall not take place if atleast one
      network(Udp) requested passive startup.
      Also verifies - passive startup call forwarded as UdpNm_NetworkRequest
                      for cordinated network
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Sleep Mode for Cluster 0.
    02: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    03: Call Nm_PassiveStartUp for any one channel of the coordination cluster
          1,(taken UdpNm).
    04: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
         - Nm_PassiveStartUp call forwarded as UdpNm_NetworkRequest
        for cordination cluster 1.
    05: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 1.
    06: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
         - UdpNm_NetworkRelease is not called for any channel of
        cluster 1.
    07: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 0 are in NM_MODE_BUS_SLEEP mode.
    08: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 1 are not in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>TS_NM_CancelShutdwn_Passive_GenericNm</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that
      - synchronous shutdown does not take place when atleast one network has
        requested passive startup(Nm.EB_Ref.SWS_Nm_00181.PassiveStartup).
      - Nm_PassiveStartup call is forwarded as &lt;BusNm&gt;_PassiveStartUp for
        cordinated networks(Nm.SWS_Nm_00245)
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Bus Sleep condition of cluster 1 and verify
        NM_MODE_BUS_SLEEP for cluster 0.
    02: Call Nm_NetworkRelease for all the channels of cluster 0.
    03: Call Nm_PassiveStartup (for the Bus GenericNm_1) of cluster 0.
    04: (Nm.SWS_Nm_00245):
        - GenericNm_1_NetworkRequest() is called for PassiveStartup.
    05: Call Nm_PassiveStartup for channel 4(uncordinated network)
    06: (Nm.SWS_Nm_00245):
        - Nm_PassiveStartUp is called for uncordinated channels.
    07: Call MainFunction() for the maximum shutdowndelay time
    08: (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - GenericNm_1_NetworkRelease() is not invoked.
    09: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 0 are not in NM_MODE_BUS_SLEEP mode.
    10: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 1 are in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
  Important test configuration details:
    - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm and GenericNm_2.
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>TS_NM_30009</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Synchronous shutdown shall not take place for cluster 1 when atleast
    one network in cluster 1 is requested passive startup, and verify
    cluster 0 is not afftected.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Simulate Sleep Mode for all channels of Cluster 1.
    02: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    03: Call Nm_PassiveStartup (for the Bus FrNm) of cluster 1.
    04: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
         - Nm_PassiveStartUp call forwarded as FrNm_NetworkRequest.
    05: Call main function continuously for highest value of ShutdownDelayTimer.
    06: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
         - FrNm_NetworkRelease is not called for any channel of
        cluster 1.
    07: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 0 are not in NM_MODE_BUS_SLEEP mode.
    08: VP (Nm.EB_Ref.SWS_Nm_00181.PassiveStartup):
        - all channels of cluster 1 in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00181.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>TS_NM_30010</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Nm_NetworkStartIndication is forwarded to ComM by calling
    ComM_Nm_NetworkStartIndication for channels belongs to cluster 0.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
  
Test Execution: 
    01: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 0.
    02: Call Nm_NetworkStartIndication for  all channels in the coordination
        cluster 0.
    03: VP (Nm.SWS_Nm_00155):
         - Nm_NetworkStartIndication is forwarded to ComM by calling
        ComM_Nm_NetworkStartIndication for each channels of cluster 0.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>TS_NM_30013</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Nm_NetworkMode is forwarded to ComM by calling
    ComM_Nm_NetworkMode.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 1 are: FrNm, UdpNm and GenericNm_2.
  
Test Execution: 
    01: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    02: Call Nm_NetworkMode for  all channels in the coordination cluster 1.
    03: VP (Nm.SWS_Nm_00158):
         - Nm_NetworkMode is forwarded to ComM by calling
        ComM_Nm_NetworkMode for each channels of cluster 1.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>TS_NM_30018</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1471</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test whether an uncoordinated network goes to sleep once Nm_NetWorkRelease
    is called.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
    Misc.:
      - Initialize the stubs for CanNm, FrNm, UdpNm and their internal state
        machine.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest for an uncordinated network (Channel 4).
    03: Check that CanNm_NetworkRequest is called for uncordinated Channel 4.
    04: Call Nm_NetworkMode for an uncoordinated network (Channel 4).
    05: VP (Nm.SWS_Nm_00046):
        Call Nm_NetworkRelease for channel 4.
    06: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called.
    07: Call Nm_GetState for channel 4.
    08: VP (Nm.SWS_Nm_00046):
        - Network 4 is in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>TS_NM_30019</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Test whether an uncoordinated network remains sleep during wake
     up of networks of a cluster.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      Channel 4 is configured as uncoordinated network.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Simulate Sleep Mode for Cluster 0.
    03: VP (Nm.SWS_Nm_00046):
        Call Nm_NetworkRelease for uncordinated network (Channel 4).
    04: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called for uncordinated Channel 4.
    05: VP (Nm.SWS_Nm_00046):
        Call Nm_NetworkRequest for any one of channel of cluster 0.
    06: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called.
    07: Call Nm_NetworkMode for any one of channel of cluster 0.
    08: Call Nm_GetState for uncoordinated channel(channel 4).
    09: Check that Channel 4 is in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>TS_NM_30020</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1653</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that an uncoordinated network do not wake up cluster 0
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      Channel 4 is configured as uncoordinated network.
  
Test Execution: 
    01: Simulate Sleep Mode for all channels of Cluster 0.
    02: Call Network Release for uncoordinated channel (channel 4).
    03: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called.
    04: Call main fuction.
    05: Check that no stubs are called as result of the main function call.
    06: Call Network Request for uncoordinated channel (channel 4).
    07: VP (Nm.SWS_Nm_00032):
        - CanNm_NetworkRequest is called.
    08: Call Nm_NetworkMode for uncoordinated channel (channel 4).
    09: Call main fuction.
    10: Check that no stubs are called as result of the main function call.
    11: Get the state of uncoordinated channel (channel 4).
    12: Check that Channel is in NM_MODE_NETWORK.
    13: Check that Cluster 0 is in NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>TS_NM_30021</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1764</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Tests that an uncoordinated network do not wake up cluster 1
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      Channel 4 is configured as uncoordinated network.
  
Test Execution: 
    01: Simulate Sleep Mode for all channels of Cluster 1.
    02: Call Network Release for uncoordinated channel (channel 4).
    03: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called.
    04: Call main fuction.
    05: Check that no stubs are called as result of the main function call.
    06: Call Network Request for uncoordinated channel (channel 4).
    07: VP (Nm.SWS_Nm_00032):
        - CanNm_NetworkRequest is called.
    08: Call Nm_NetworkMode for uncoordinated channel (channel 4).
    09: Call main fuction.
    10: Check that no stubs are called as result of the main function call.
    11: Get the state of uncoordinated channel (channel 4).
    12: Check that Channel is in NM_MODE_NETWORK.
    13: Check that Cluster 1 is in NM_MODE_BUS_SLEEP.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>TS_NM_30022</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1877</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Test whether Nm coordinator waits for BusNms to shut down, if the
     BusNms do not signal "bus sleep" immediately after the longest shutdown
     delay timer timed out.
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
    Misc.:
      - Initialize the stubs for CanNm, FrNm, UdpNm and their internal state
        machine.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: Clear bus bleep indication flag so that bus sleep is not indicated
        on BusNm Network Release.
    06: Call MainFuntion.
    07: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease and GenericNm_1_NetworkRelease is called.
    08: Set bus sleep indication flag so that bus sleep is indicated on
        BusNm Network Release.
    09: Call bus sleep mode for all channels in the coordination cluster 0.
    10: Call Main Function.
    11: VP (Nm.SWS_Nm_00162):
        - All channels of cluster 0 are in NM_MODE_BUS_SLEEP Mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>TS_NM_30023</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>1996</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test whether Nm coordinator aborts shutdown if,after the longest shutdown
      delay timer timed out, but before the BusNms signal "bus sleep",
      a bus Nm wakes up again
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
    Misc.:
      - Initialize the stubs for CanNm, FrNm and their internal state
        machine.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: Clear bus state flag so that bus state stays in non sleep mode.
    06: Call MainFunction.
    07: VP (Nm.SWS_Nm_00177):
        - all the channels of cluster 0 is not in NM_MODE_BUS_SLEEP
        Mode.
    08: Call Nm_NetworkRequest for any one channel of the coordination
        cluster 0.
    09: Call MainFunction.
    10: Set bus state flag so that bus state gives actual mode.
    11: VP (Nm.SWS_Nm_00177):
        - all the channels of cluster 0 is not in NM_MODE_BUS_SLEEP
        Mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>TS_NM_30026</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>2114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To check if shutdown is aborted when Nm receives E_NOT_OK on a
    BusNm_NetworkRelease()
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels in
        the coordination cluster 0.
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0.
    05: Clear release status flag so that Nm receives E_NOT_OK on a
        BusNm_NetworkRelease().
    06: Call MainFunction.
    07: Set release status flag so that Nm receives E_OK on a
        BusNm_NetworkRelease().
    08: VP (Nm.EB_Ref.SWS_Nm_00236.1):
        - all the channels of cluster 0 are in NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>Nm.EB_Ref.SWS_Nm_00236.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>TS_NM_30027</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>2212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test Nm_RemoteSleepIndication() call to an uncoordinated channel doesn't
    affect the state of cluster 0 and cluster 1
  
Test Object: None.
Test Precondition: 
    Module state:
      - Nm is initialized
    Misc.:
      - Initialize the stubs for CanNm, FrNm, UdpNm and their internal state
        machine.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 0.
    03: Check that all the channels of cordination cluster 0  are in
        NM_MODE_NETWORK mode.
    04: Call Nm_NetworkRequest and Nm_NetworkMode for all the channels of
        cluster 1.
    05: Check that all the channels of cordination cluster 1  are in
        NM_MODE_NETWORK mode.
    06: VP (Nm.SWS_Nm_00192):
        Call Remote Sleep Indication for an uncoordinated channel Channel 4).
    07: VP (Nm.SWS_Nm_00046):
        Call Nm_NetworkRelease for channel 4.
        The local ECU will indicate if it is ready to go to sleep
         on a network using Nm_NetworkRelease.
    08: VP (Nm.SWS_Nm_00046):
        - CanNm_NetworkRelease is called.
    09: Call main function continuously for highest value of ShutdownDelayTimer
        for channels.
    10: Check the state of channel 4.
    11: VP (Nm.SWS_Nm_00192):
        - the channel 4 is in NM_MODE_BUS_SLEEP Mode.
    12: VP (Nm.SWS_Nm_00192):
        - all the channels of Cluster 0 is in NM_MODE_NETWORK.
    13: VP (Nm.SWS_Nm_00192):
        - all the channels of Cluster 1 is in NM_MODE_NETWORK.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>TS_NM_30049</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>2342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the coordinator algorithm really terminated, by checking if
    the networks of a cluster are de-coupled after shutdown.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: Simulate complete shutdown condition for all channels belongs to
        cluster 0.
    03: Request network for channel 2 of Cluster 0.
    04: Nm_NetworkMode for channel 2 of Cluster 0.
    05: Check that CanNm_NetworkRequest is called for channel 1.
    06: VP (Nm.SWS_Nm_00177):
         - cluster is de-coupled by checking that network request
        doesn't call ComM_Nm_RestartIndication for other NMs in the cluster.
        If no Restart-Indications are detected for the other channels,
        the shutdown was successful.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>TS_NM_30050</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>2425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the Nm coordinated shutdown cannot be corrupted/prevented by
    calling Nm_NetworkRequest twice for a network in the cluster
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: VP (Nm.SWS_Nm_00032):
        Call Nm_NetworkRequest and Nm_NetworkMode 2 times for all the channels
        of cluster 0.
    03: Call Nm_RemoteSleepIndication and NetworkRelease for all channels of
        cluster 0..
    04: Call main function continuously for highest value of ShutdownDelayTimer
        for channels belongs to cluster 0..
    05: VP (Nm.SWS_Nm_00032):
        Check network release is called for CanNm and GenericNm_1.
    06: VP (Nm.SWS_Nm_00032):
        - all the channels in the coordination cluster 0 is in
        NM_MODE_BUS_SLEEP mode.
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>TS_NM_30051</id>
      <status>approved</status>
      <source>EB test case specification (asc_Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Nm/test/ts5/Include/Nm_Common_CoordinatorTests/source/application/Nm_CommonCoordTests.c</sourcefile>
      <sourceline>2518</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the Nm coordinated shutdown cannot be corrupted/prevented by
    calling Nm_PassiveStartUp twice for a network in the cluster
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - &lt;Bus&gt;Nm modules configured in cluster 0 are: CanNm and GenericNm_1.
    Module state:
      - Nm is initialized
    Misc.:
      - Underlying &lt;Bus&gt;Nm module(s) are configured in cluster 0.
      - Callouts for CanNm and GenericNm_1 are initialized.
  
Test Execution: 
    01: Initialize the respective bus interface stub and initialize Nm
         (Nm_Init).
    02: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
        Call Nm_PassiveStartUp and then Nm_NetworkMode 2 times for all channel
        of cluster 0.
    03: Call Nm_RemoteSleepIndication and Nm_NetworkRelease for all the
        channels of cluster 1.
    05: Call main function continuously for highest value of ShutdownDelayTimer
        for channels.
    06: VP(Nm.SWS_Nm_00031, Nm.SWS_Nm_00245):
        Check network release is called for CanNm and GenericNm_1.
    07: Check that all the channels in the coordination cluster 0 are in
        NM_MODE_BUS_SLEEP mode .
  
Test Input: 
    None
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Nm.SWS_Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Nm.SWS_Nm_00245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
