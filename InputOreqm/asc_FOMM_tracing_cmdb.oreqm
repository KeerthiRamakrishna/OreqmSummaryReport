<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_FOMM_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_requirements_FOMM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_test_manTest_ResourceConsumption.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/common_req/FOMM_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 22:01:11 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_FOMM_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_requirements_FOMM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_Native/asc_FOMM_test_manTest_ResourceConsumption.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/common_req/FOMM_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">

    <specobject>
      <id>lim.FOMM.EB_INTREQ_FOMM_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        The SCHM_FOMM_EXCLUSIVE_AREA_0 critical section, which ensures that the FOMM mode is always correctly handled without interruption,
        must be protected with inter-core locks (Os spinlocks).
      </description>
      <rationale>
        To ensure FOMM concurrent mode changes.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>FOMM.EB.ModuleNameCfg</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Module Name: FOMM
      Module Description: This container includes all necessary configuration sub-containers
      according the Fail Operational Mode Management configuration structure.
      Supported Config Variants: VARIANT-PRE-COMPILE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_13</srcid><srcstatus/><internalId>179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Container Name: FOMMGeneral
      Parent Container: FOMM
      Description: This container contains the public configuration (parameters) of the
      Fail Operational Mode Management.
      Multiplicity: 1
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_54</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.DevErrorDetect</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMDevErrorDetect
      Parent Container: FOMMGeneral
      Description: Switches the development error detection and notification on or off.
      - true: detection and notification is enabled.
      - false: detection and notification is disabled.
      Multiplicity: 1
      Type: EcucBooleanParamDef
      Default Value: false
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_73</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.DetRuntimeChecks</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMDetRuntimeChecks
      Parent Container: FOMMGeneral
      Description: Switches the runtime error reporting to Det on or off.
      - true: runtime error reporting is enabled.
      - false: runtime error reporting is disabled.
      Multiplicity: 1
      Type: EcucBooleanParamDef
      Default Value: false
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_108</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.CddErrorReportingApiName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMCddErrorReportingApiName
      Parent Container: FOMMGeneral
      Description: This parameter defines the CDD API name used (besides the Det handling)
      to report errors.
      Multiplicity: 0..1
      Type: EcucFunctionNameDef
      maxLength: 32
      minLength: 1
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_140</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.CddHeaderFile</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMCddHeaderFile
      Parent Container: FOMMGeneral
      Description: Defines header files for callback functions which shall be included
      in case of CDDs usage.
      Multiplicity: 0..1
      Type: EcucStringParamDef
      maxLength: 32
      minLength: 1
      Scope/Dependency:
        Scope: local
        Dependency: This parameter shall only be configurable if FOMMCddErrorReportingApiName
        is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_173</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.VersionInfoApi</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMVersionInfoApi
      Parent Container: FOMMGeneral
      Description: Enables and disables the API for reading the version information
      about the Fail Operational Mode Management module.
      True: Enabled
      False: Disabled
      Multiplicity: 1
      Type: EcucBooleanParamDef
      Default Value: false
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_SimpleImpTest</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_422</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.PartitionRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMEcucPartitionRef
      Parent Container: FOMMGeneral
      Description: Maps the Fail Operational Mode Management module to a partition.
      Multiplicity: 1
      Type: Reference to [EcucPartition]
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_GEN_01001_PARTITION_MISMATCH</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_210</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.DioPartitionRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMDioEcucPartitionRef
      Parent Container: FOMMGeneral
      Description: Maps the Dio Server to a partition.
      Multiplicity: 0..1
      Type: Reference to [EcucPartition]
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_1</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_243</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.McuPartitionRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMMcuEcucPartitionRef
      Parent Container: FOMMGeneral
      Description: Maps the Mcu Server to a partition.
      Multiplicity: 0..1
      Type: Reference to [EcucPartition]
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_275</srcid><srcstatus/><internalId>189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.McuSetModeApiName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMMcuSetModeApiName
      Parent Container: FOMMGeneral
      Description: This parameter defines the API name used to call when receiving a
                   FOMM_Server_Mcu_SetMode() request (default: Mcu_SetMode).
      Multiplicity: 0..1
      Type: EcucFunctionNameDef
      maxLength: 32
      minLength: 1
      Dependency: This parameter shall only be configurable if FOMMMcuEcucPartitionRef is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_307</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.McuPerformResetApiName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMMcuPerformResetApiName
      Parent Container: FOMMGeneral
      Description: This parameter defines the API name used to call when receiving a
                   FOMM_Server_Mcu_PerformReset() request (default: Mcu_PerformReset).
      Multiplicity: 0..1
      Type: EcucFunctionNameDef
      maxLength: 32
      minLength: 1
      Dependency: This parameter shall only be configurable if FOMMMcuEcucPartitionRef is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_345</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GeneralCfg.McuHeaderFile</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Name: FOMMMcuHeaderFile
      Parent Container: FOMMGeneral
      Description: Defines header files for the functions which shall be included
      in case of different Mcu function symbols prototype.
      Multiplicity: 0..1
      Type: EcucStringParamDef
      maxLength: 32
      minLength: 1
      Scope/Dependency:
        Scope: local
        Dependency: This parameter shall only be configurable if FOMMMcuPerformResetApiName
                    and/or FOMMMcuSetModeApiName are enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_383</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Check.PartitionMismatch</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall display an error message if the FOMM partition configured in EcuC does not match the
      Os partition configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_236</srcid><srcstatus/><internalId>187</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_GEN_01001_PARTITION_MISMATCH</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Check.SatelliteCallout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall display an error message if the WdgMSatelliteAlivenessCallout configured at the Master level
      is not configured 'FOMM_PartitionFailedNotification'.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/FOMM.xdm.m4_68</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_GEN_01002_NO_PART_NOTIF_FAIL</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Init.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Init
      Syntax:
      void FOMM_Init (void)
      Service ID [hex]: 0x01
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service initializes the Fail Operational Mode Management module
      for further processing.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_250</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>FOMM.EB.DeInit.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_DeInit
      Syntax:
      void FOMM_DeInit (void)
      Service ID [hex]: 0x02
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: De-initializes the Fail Operational Mode Management module.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_281</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetVersionInfo.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_GetVersionInfo
      Syntax:
      void FOMM_GetVersionInfo (Std_VersionInfoType* versioninfo)
      Service ID [hex]: 0x03
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): versioninfo  Pointer to where to store the version information of this module.
      Return value: None
      Description: This function returns the version information of the Fail Operational Mode Management
                   module.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_305</srcid><srcstatus/><internalId>130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_RequestMode
      Syntax:
      Std_ReturnType FOMM_RequestMode (uint8 Mode)
      Service ID [hex]: 0x04
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): Mode  Requested Fail Operational mode
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType  E_OK: Service accepted
                                    E_NOT_OK: Service denied
      Description: This service requests switching of the Fail Operational mode
      to the given mode.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_332</srcid><srcstatus/><internalId>133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetMode.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_GetMode
      Syntax:
      Std_ReturnType FOMM_GetMode (uint8* Mode)
      Service ID [hex]: 0x05
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): Mode  Pointer to a memory location where the current Fail Operational
                              mode will be stored.
      Return value: Std_ReturnType  E_OK: Service accepted
                                    E_NOT_OK: Service denied
      Description: This service gets the current Fail Operational mode.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_384</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
      Service Name: FOMM_PartitionFailedNotification
      Syntax:
      void FOMM_PartitionFailedNotification (WdgM_EB_CoreIdType CoreId)
      Service ID [hex]: 0x06
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is called in case a failure of any TimE satellite was detected.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_711</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_ShutdownAllCores
      Syntax:
      void FOMM_ShutdownAllCores (void)
      Service ID [hex]: 0x07
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service de-initializes the FOCan and FOCom and shuts down the whole ECU.
      Available via: FOMM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_459</srcid><srcstatus/><internalId>146</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleComTest</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyMcuSetMode.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Proxy_Mcu_SetMode
      Syntax:
      void FOMM_Proxy_Mcu_SetMode (Mcu_ModeType McuMode)
      Service ID [hex]: 0x09
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): McuMode  MCU power mode passed to the Mcu driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the Proxy for the Mcu_SetMode() function.
                   It performs a client-/server call to the FOMM_Server task
                   on a Fail Operational core which then performs the call
                   to the real Mcu_SetMode() function.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_112</srcid><srcstatus/><internalId>93</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_143</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_343</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ServerMcuSetMode.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Server_Mcu_SetMode
      Syntax:
      void FOMM_Server_Mcu_SetMode (Mcu_ModeType McuMode)
      Service ID [hex]: 0x0A
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): McuMode  MCU power mode passed to the Mcu driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the Server function called by FOMM_Proxy_Mcu_SetMode()
                   function.
                   It calls Mcu_SetMode() locally with the given arguments. It may only be
                   executed in the context of a client-/server call.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_254</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyMcuPerformReset.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Proxy_Mcu_PerformReset
      Syntax:
      void FOMM_Proxy_Mcu_PerformReset (void)
      Service ID [hex]: 0x0B
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the Proxy for the Mcu_PerformReset() function.
                   It performs a client-/server call to the FOMM_Server task on a
                   Fail Operational core which then performs the call to the real
                   Mcu_PerformReset() function.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_127</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_158</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_358</srcid><srcstatus/><internalId>111</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ServerMcuPerformReset.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Server_Mcu_PerformReset
      Syntax:
      void FOMM_Server_Mcu_PerformReset (void)
      Service ID [hex]: 0x0C
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the Server function called by FOMM_Proxy_Mcu_PerformReset()
                   function.
                   It calls Mcu_PerformReset() locally.
                   It may only be executed in the context of a client-/server call.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_275</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyDioWriteChannel.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Proxy_Dio_WriteChannel
      Syntax:
      void FOMM_Proxy_Dio_WriteChannel (Dio_ChannelType ChannelId,
                                        Dio_LevelType Level)
      Service ID [hex]: 0x0D
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): ChannelId  ID of DIO channel.
                       Level      Value to be written.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the Proxy for the Dio_WriteChannel() function.
                   It performs a client-/server call to the FOMM_Server task on a
                   fail operational core which then performs the call to the real
                   Dio_WriteChannel() function.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_74</srcid><srcstatus/><internalId>89</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_91</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_325</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ServerDioWriteChannel.APISignature</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service Name: FOMM_Server_Dio_WriteChannel
      Syntax:
      void FOMM_Server_Dio_WriteChannel (Dio_ChannelType ChannelId,
                                         Dio_LevelType Level)
      Service ID [hex]: 0x08
      Sync/Async: Synchronous
      Reentrancy: Reentrant
      Parameters (in): ChannelId  ID of DIO channel.
                       Level      Value to be written.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: This service is the server function called by FOMM_Proxy_Dio_WriteChannel()
                   function.
                   It calls Dio_WriteChannel() locally with the given arguments.
                   It may only be executed in the context of a client-/server call.
      Available via: FOMM_Proxy.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_203</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_1</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>FOMM.EB.SupportedModes</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall support the following modes:
      - FOMM_MODE_NORMAL
      - FOMM_MODE_FAILOP_SWC_EXEC_PREPARE
      - FOMM_MODE_FAILOP_SWC_EXEC
      - FOMM_MODE_FAILOP_COMM_PREPARE
      - FOMM_MODE_FAILOP_COMM
      - FOMM_MODE_FAILOP_COMM_ONLY
      - FOMM_MODE_FAILOP_SWC_EXEC_ONLY.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_345</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_742</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Init.ResetState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      After power-up/reset, the FOMM module shall be in the state FOMM_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_214</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleImpTest</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Init.InitStateTransition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The function FOMM_Init() shall change the module state to FOMM_INIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_263</srcid><srcstatus/><internalId>124</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Init.ModeState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The function FOMM_Init() shall set the Fail Operational mode to FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_269</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleImpTest</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>FOMM.EB.DeInit.UninitStateTransition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The function FOMM_DeInit() shall change the module state to FOMM_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_292</srcid><srcstatus/><internalId>129</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_SimpleImpTest</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>FOMM.EB.Init.InvalidPartition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FOMM shall reject the call of FOMM_Init() if called from another partition
      than the configured Fail Operational partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_258</srcid><srcstatus/><internalId>123</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>FOMM.EB.DeInit.InvalidPartition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FOMM shall reject the call of FOMM_DeInit() if called from another partition
      than the configured Fail Operational partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_289</srcid><srcstatus/><internalId>128</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetVersionInfo.NullPtr.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection is enabled, the function FOMM_GetVersionInfo() shall
      raise the error FOMM_E_PARAM_POINTER if the parameter versionInfo is a null pointer.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_315</srcid><srcstatus/><internalId>131</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetVersionInfo.Ptr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the versionInfo pointer is not null, FOMM_GetVersionInfo() shall store
      the version information in the Std_VersionInfoType struct adress provided by it.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_320</srcid><srcstatus/><internalId>132</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_SimpleImpTest</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetMode.NullPtr.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection is enabled, the function FOMM_GetMode() shall
      raise the error FOMM_E_PARAM_POINTER if the parameter Mode is a null pointer.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_444</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetMode.Ptr</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the Mode pointer is not null, FOMM_GetMode() shall store the current mode
      as an uint8 value at the address provided.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_397</srcid><srcstatus/><internalId>142</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_1</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.InvalidPartition.ApiRetValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FOMM_RequestMode() shall return E_NOT_OK when called from another partition
      than the configured FO partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_362</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetMode.NoInitBeforeApiCall</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall return E_NOT_OK for the API request FOMM_GetMode() until the call
      of FOMM_Init() API.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_394</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.NoInitBeforeApiCall</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall return E_NOT_OK for the API request FOMM_RequestMode() until the call
      of FOMM_Init() API.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_342</srcid><srcstatus/><internalId>134</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.NormalToFOSwcExecPrepare</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_NORMAL, the FOMM module shall accept only the mode change request
      to Prepare for Fail Operational software component mode meaning a call of FOMM_RequestMode() API
      with the FOMM_MODE_FAILOP_SWC_EXEC_PREPARE mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_572</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOSwcExecPrepareToFOSwcExecution</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC_PREPARE, the FOMM_RequestMode() API
      shall change the mode to Fail Operational Software component execution mode when called with
      FOMM_MODE_FAILOP_SWC_EXEC.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_610</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOSwcExecToFOComPrepare</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC, the FOMM_RequestMode() API
      shall change the mode to Prepare for Fail Operational Communication mode when called with
      FOMM_MODE_FAILOP_COMM_PREPARE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_653</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOComPrepareToFOSwcExec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM_PREPARE, the FOMM_RequestMode() API
      shall change the mode to Fail Operational Software component execution mode when called with
      FOMM_MODE_FAILOP_SWC_EXEC.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_611</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOComToFOSwcExec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM, the FOMM_RequestMode() API shall
      change the mode to Fail Operational Software component execution mode when called with
      FOMM_MODE_FAILOP_SWC_EXEC.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_612</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOSwcExecPrepareToNormal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC_PREPARE, the FOMM_RequestMode() API shall change the mode
      to Normal operation mode when called with FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_530</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOSwcExecToNormal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC, the FOMM_RequestMode() API shall change the mode to
      Normal operation mode when called with FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_531</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOCommPrepareToFOComm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM_PREPARE, the FOMM_RequestMode() API shall change the mode to
      Fail Operational communication mode when called with FOMM_MODE_FAILOP_COMM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_681</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.FOOnlyCommToFOSwcExecution</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM_ONLY, the FOMM_RequestMode() API shall change the mode to
      Fail Operational only software component execution mode when called with FOMM_MODE_FAILOP_SWC_EXEC.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_625</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.InvalidPartition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FOMM shall reject the call of FOMM_PartitionFailedNotification() if called
      from another partition than the configured Fail Operational partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_723</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.FOSwcExecPrepareToShutDownAllCores</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC_PREPARE and the FOMM_PartitionFailedNotification()
      API is called meaning an unrecoverable failure on the non Fail Operational partition, the FOMM module
      shall perform the shutdown operation of all cores.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_772</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.FOSwcExecToFOSwcExecOnly</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC and the FOMM_PartitionFailedNotification()
      API is called meaning an unrecoverable failure on the non Fail Operational partition, the FOMM
      module shall transition the mode to FOMM_MODE_FAILOP_SWC_EXEC_ONLY.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_779</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.FOCommPrepareToFOOnlySwcExec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM_PREPARE and the FOMM_PartitionFailedNotification()
      API is called meaning an unrecoverable failure on the non Fail Operational partition, the FOMM
      module shall transition the mode to FOMM_MODE_FAILOP_SWC_EXEC_ONLY.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_779</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.FOCommToFOOnlySwcExec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_COMM and the FOMM_PartitionFailedNotification()
      API is called meaning an unrecoverable failure on the non Fail Operational partition, the FOMM
      module shall transition the mode to FOMM_MODE_FAILOP_COMM_ONLY.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_779</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.NormalToShutDownAllCores</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_NORMAL and the FOMM_PartitionFailedNotification()
      API is called meaning an unrecoverable failure on the non Fail Operational partition,
      the FOMM module shall perform the shutdown operation of all cores.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_772</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.IgnoreAPICall</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM_PartitionFailedNotification() API call shall be ignored when the FOMM module
      is in FOMM_MODE_FAILOP_SWC_EXEC_ONLY mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_735</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.InvalidPartition</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      FOMM shall reject the call of FOMM_ShutdownAllCores() if called from
      another partition than the configured Fail Operational partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_469</srcid><srcstatus/><internalId>147</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.NormalToShutdownAllCores</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM_ShutdownAllCores() API can be called only in FOMM_MODE_NORMAL, the FOMM module
      shall start the shutdown operation of all cores.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_476</srcid><srcstatus/><internalId>148</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.CalledFromFOMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM_ShutdownAllCores() API call shall be ignored during the Fail Operational mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_481</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.FOOnlySwcExecToNormal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the current mode is FOMM_MODE_FAILOP_SWC_EXEC_ONLY and FOMM_RequestMode() API is called with FOMM_MODE_NORMAL
      mode, the FOMM module shall start the shutdown operation of all cores.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_548</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownMechanism</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      On Shutdown, the FOMM module shall set the mode to FOMM_MODE_NORMAL and DeInit the Fail Operational modules (FOCan, FOCom)
      before calling ShutdownAllCores() API.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_38</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.PreventXCoreCommands</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM_RequestMode() API shall call the Os API PreventXCoreCommands() to protect
      the Fail Operational partition from erroneous behavior of the non-Fail Operational partition
      when entering Fail Operational mode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_584</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>FOMM.EB.AllowXCoreCommands</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      When entering FOMM_MODE_NORMAL mode, the FOMM module shall call the Os API
      AllowXCoreCommands() to allow handling of operating system commands coming
      from a non-Fail Operational core.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_266</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_543</srcid><srcstatus/><internalId>155</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_PartitionFail</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall silently ignore FOMM_Proxy_Mcu_SetMode() API calls when the current mode is
      not FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_120</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_151</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_351</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_1</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall silently ignore FOMM_Proxy_Mcu_PerformReset() API calls when current mode is
      not FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_135</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_166</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_366</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_1</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall silently ignore FOMM_Proxy_Dio_WriteChannel() API calls when the current mode is
      not FOMM_MODE_NORMAL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_83</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_100</srcid><srcstatus/><internalId>92</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_334</srcid><srcstatus/><internalId>108</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_2</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_3</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.ModuleUninitialized.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection for the FOMM module is enabled and the module
      is not yet initialized, the function FOMM_RequestMode() shall raise the
      development error FOMM_E_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_375</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>FOMM.EB.GetMode.ModuleUninitialized.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection for the FOMM module is enabled and the module is not
      yet initialized, the function FOMM_GetMode() shall raise the development error FOMM_E_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_450</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>FOMM.EB.PartitionFailedNotification.ModuleUninitialized.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection for the FOMM module is enabled and the module is not
      yet initialized, the function FOMM_PartitionFailedNotification() shall raise the development
      error FOMM_E_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_793</srcid><srcstatus/><internalId>178</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>FOMM.EB.ShutdownAllCores.ModuleUninitialized.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If development error detection for the FOMM module is enabled and the module is not
      yet initialized, the function FOMM_ShutdownAllCores() shall raise the development
      error FOMM_E_UNINIT.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_492</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>FOMM.EB.RequestMode.InvalidMode.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
      If runtime/CDD error detection for the FOMM module is enabled and an invalid transition
      has been requested, the function FOMM_RequestMode() shall raise the runtime/CDD error FOMM_E_TRANSITION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_356</srcid><srcstatus/><internalId>136</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_RteInterfaces_0</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_InvalidModeReqs</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>FOMM.EB.InvalidModeRequest.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If runtime/CDD error detection for the FOMM module is enabled and
      the parameter Mode is invalid, the function FOMM_RequestMode()
      shall raise the runtime/CDD error code FOMM_E_PARAM_MODE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_369</srcid><srcstatus/><internalId>138</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>FOMM.EB.InvalidPartition.ErrorReporting</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If rutime/CDD error detection for the FOMM module is enabled, the FOMM module's functions
      shall raise the runtime/CDD error code FOMM_E_INVALID_PARTITION_REQUEST when called from an invalid partition.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_218</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_268</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/FOMM_Partitions.c_289</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_362</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>FOMM.EB.FOMM_E_UNINIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall provide the following error code:
      symbolic name: FOMM_E_UNINIT
      Error value: 0x01
      Relevance: Development
      Type of error: API service used without initialization
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FOMM.h_148</srcid><srcstatus/><internalId>115</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>FOMM.EB.FOMM_E_INVALID_PARTITION_REQUEST</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall provide the following error code:
      symbolic name: FOMM_E_INVALID_PARTITION_REQUEST
      Error value: 0x02
      Relevance: Runtime/CDD
      Type of error: API is called from an invalid partition
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FOMM.h_155</srcid><srcstatus/><internalId>116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>FOMM.EB.FOMM_E_PARAM_MODE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall provide the following error code:
      symbolic name: FOMM_E_PARAM_MODE
      Error value: 0x03
      Relevance: Runtime/CDD
      Type of error: API service called with wrong mode
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FOMM.h_162</srcid><srcstatus/><internalId>117</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>FOMM.EB.FOMM_E_TRANSITION</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
      The FOMM module shall provide the following error code:
      symbolic name: FOMM_E_TRANSITION
      Error value: 0x04
      Relevance: Runtime/CDD
      Type of error: Invalid transition for the current mode
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FOMM.h_169</srcid><srcstatus/><internalId>118</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ModeChanges</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>TS_FOMM_InvalidModeReqs</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>FOMM.EB.FOMM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The FOMM module shall provide the following error code:
      symbolic name: FOMM_E_PARAM_POINTER
      Error value: 0x05
      Relevance: Development
      Type of error: Null pointer provided as parameter
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/FOMM.h_176</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_ConTestDevErrors</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>FOMM_ManTest_RAM_Usage</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Test Description:
        Manual check to establish that the RAM usage does not exceed the expected value

        Test Object:
        Test binaries compiled on target HW

        Test Input:
        Target HW specific mapfiles

        Test Precondition:
        Tests were executed on the target HW

        Test Execution:
        01: VP(FOMM.swdd.RAMConsumption):
            Check the RAM consumption in all the executed tests. They sall be identical.
        02: VP(FOMM.swdd.RAMMonitoring):
            Check the RAM consumption in all the executed tests. It shall be 3 bytes.
      </description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.swdd.RAMConsumption</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>FOMM.swdd.RAMMonitoring</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>FOMM.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FOMM_VerifyCodeStub</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Headers.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Headers.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.OsInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Headers.h_12</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Headers.h</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.AtomicsInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Headers.h_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Headers.h</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.FOCanInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Headers.h_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Headers.h</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.FOComInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Headers.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Headers.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.WdgMInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/FOMM_Proxy.h_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/include/FOMM_Proxy.h</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.DioInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ServerDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.InvalidPartition.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ServerMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.InvalidPartition.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ServerMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.InvalidPartition.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_343</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/FOMM_Partitions.c_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate/src/FOMM_Partitions.c</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/FOMM_Macros.m_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate_macros/FOMM_Macros.m</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.RteInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/FOMM_Macros.m_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/generate_macros/FOMM_Macros.m</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.DetInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/FOMM.h_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/include/FOMM.h</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FOMM.h_155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/include/FOMM.h</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_INVALID_PARTITION_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FOMM.h_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/include/FOMM.h</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_PARAM_MODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FOMM.h_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/include/FOMM.h</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_TRANSITION</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/FOMM.h_176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/include/FOMM.h</sourcefile>
      <sourceline>176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownMechanism</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_214</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>214</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.ResetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.InitStateTransition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.AllowXCoreCommands</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.ModeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.DeInit.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.DeInit.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.DeInit.UninitStateTransition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.NullPtr.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_342</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.NoInitBeforeApiCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.SupportedModes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_356</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidMode.ErrorReporting</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidPartition.ApiRetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.InvalidPartition.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.InvalidModeRequest.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.NoInitBeforeApiCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.AtomicsThreadFence</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.NullPtr.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.NormalToShutdownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_481</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.CalledFromFOMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_514</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>514</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_530</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>530</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecPrepareToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_543</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.AllowXCoreCommands</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.FOOnlySwcExecToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_572</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>572</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.NormalToFOSwcExecPrepare</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.PreventXCoreCommands</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecPrepareToFOSwcExecution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOComPrepareToFOSwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOComToFOSwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_625</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOOnlyCommToFOSwcExecution</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_648</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>648</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecToFOComPrepare</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_676</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_681</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>681</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOCommPrepareToFOComm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.APISignature</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_723</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_732</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>732</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_PFN_Flag</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.IgnoreAPICall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.SupportedModes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.ExclusiveArea_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.NormalToShutDownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOSwcExecPrepareToShutDownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOSwcExecToFOSwcExecOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOCommPrepareToFOOnlySwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOCommToFOOnlySwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/FOMM.c.m4_793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/src/FOMM.c.m4</sourcefile>
      <sourceline>793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_13</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>13</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.ModuleNameCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Check.SatelliteCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DetRuntimeChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_140</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.CddErrorReportingApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_173</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.CddHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_210</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.PartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Check.PartitionMismatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DioPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuSetModeApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuPerformResetApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/FOMM.xdm.m4_422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/src/Autosar/config/FOMM.xdm.m4</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.VersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>FOMM.swdd.RAMConsumption</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>4930</sourceline>
      <version>1</version>
      <description>
                  The RAM consumption must not exceed 3 bytes on a 32 bit architecture.
                </description>
      <rationale>
                  RAM allocation is independent of the configuration parameters.
                </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ManTest_RAM_Usage</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>FOMM.swdd.RAMMonitoring</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>4946</sourceline>
      <version>1</version>
      <description>
                  The RAM consumption of FOMM shall be monitored.
                  Deviations from the calculated consumption shall be analyzed.
                </description>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ManTest_RAM_Usage</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>FOMM.dsn.AtomicsInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5192</sourceline>
      <version>1</version>
      <description>Atomics.h shall be included in FOMM_Headers.h, so that FOMM can have access to the Atomics_* APIs.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Headers.h_12</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.AtomicsThreadFence</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5203</sourceline>
      <version>1</version>
      <description>The access to the global data &lt;i&gt;FOMM_Mode&lt;/i&gt; (in FOMM_GetMode() function) must be consistent; it&lt;i&gt; &lt;/i&gt;shall be done without reordering the read and write memory accesses.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_424</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.DetInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5213</sourceline>
      <version>1</version>
      <description>When DET is switched ON, Det.h shall be included in FOMM_Headers.h, so that FOMM can have access to Det_ReportError()/ Det_ReportRuntimeError() APIs and development errors.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FOMM_Macros.m_48</srcid><srcstatus/><internalId>114</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.DioInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5225</sourceline>
      <version>1</version>
      <description>Dio.h shall be included in FOMM_Proxy.h, so that FOMM can have access to the Dio_WriteChannel() API.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Proxy.h_21</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.ExclusiveArea_Mode</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5236</sourceline>
      <version>1</version>
      <description>The access to the global data &lt;i&gt;FOMM_Mode &lt;/i&gt;shall be protected with an exclusive area.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_514</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_567</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_743</srcid><srcstatus/><internalId>175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.ExclusiveArea_PFN_Flag</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5247</sourceline>
      <version>1</version>
      <description>The access to the global data &lt;i&gt;FOMM_PFN_Flag &lt;/i&gt;shall be protected with an exclusive area.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_513</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_566</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_601</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_648</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_676</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/FOMM.c.m4_732</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.FOCanInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5257</sourceline>
      <version>1</version>
      <description>FOCan.h shall be included in FOMM_Headers.h, so that FOMM can have access to the FOCan_DeInit() API.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Headers.h_14</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.FOComInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5268</sourceline>
      <version>1</version>
      <description>FOCom.h shall be included in FOMM_Headers.h, so that FOMM can have access to the FOCom_DeInit() API.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Headers.h_16</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.OsInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5278</sourceline>
      <version>1</version>
      <description>To prevent cross core actions, the FOMM module shall include the header file Os.h. In addition a unit test shall have the possibility to provide its own header file to stub the API of the Os.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Headers.h_10</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.RteInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5289</sourceline>
      <version>1</version>
      <description>When Rte is used, Rte_FOMM_Type.h shall be included in FOMM.h, Rte_FOMM.h shall be included in FOMM.c (via FOMM_Headers.h)  and the FOMM module shall rely on the RTE to provide all definitions via Rte_FOMM_Type.h/Rte_FOMM.h.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/FOMM_Macros.m_46</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>FOMM.dsn.WdgMInclusion</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/doc/project/design/pdf/FOMM_Design-profiled.xml</sourcefile>
      <sourceline>5299</sourceline>
      <version>1</version>
      <description>WdgM_Callouts.h shall be included in FOMM_Headers.h, so that the prototype emitted by WdgM can be verified.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/FOMM_Headers.h_18</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>FOMM_ComTest_Headers</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/build/reqm/common_req/FOMM_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(FOMM.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_SimpleComTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Compile/IN/FOMM_ComTest_AllOptDetOff/source/application/Tests.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check if compilation is successful for functions:
    - FOMM_Init
    - FOMM_DeInit
    - FOMM_GetVersionInfo
    - FOMM_RequestMode
    - FOMM_GetMode
    - FOMM_PartitionFailedNotification
    - FOMM_ShutdownAllCores
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    Call these APIs:
    - FOMM_Init
    - FOMM_DeInit
    - FOMM_GetVersionInfo
    - FOMM_RequestMode
    - FOMM_GetMode
    - FOMM_PartitionFailedNotification
    - FOMM_ShutdownAllCores
  
Test Input: 
  
Test Output: 
    Compiles successfully and without warnings.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.DeInit.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.APISignature</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>FOMM_ComTest_Headers</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Compile/IN/FOMM_ComTest_Headers/source/application/Tests.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check the availability and inclusion of the headers files
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(FOMM.dsn.DetInclusion):
        Check that Det is available
    02: VP(FOMM.dsn.AtomicsInclusion):
        Check that Atomics is available
    03: VP(FOMM.dsn.WdgMInclusion):
        Check that WdgM is available
    04: VP(FOMM.EB.GeneralCfg.McuHeaderFile):
        Header file is the one configured
    05: VP(FOMM.EB.GeneralCfg.McuSetModeApiName, FOMM.EB.GeneralCfg.McuPerformResetApiName):
        Configured API name
  
Test Input: 
  
Test Output: 
    Compiles successfully and without warnings.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.dsn.DetInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>FOMM.dsn.AtomicsInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>FOMM.dsn.WdgMInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuSetModeApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuPerformResetApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_GEN_01001_PARTITION_MISMATCH</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Compile/IN/FOMM_GenTest_1/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Configured FOMM partition configured in EcuC does not match the Os
    partition configuration.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * FOMMEcucPartitionRef is configured.

Test Execution: 
    VP: FOMM generator shall notify the user of partition mismatch.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.PartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Check.PartitionMismatch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>TS_FOMM_GEN_01002_NO_PART_NOTIF_FAIL</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Compile/IN/FOMM_GenTest_1/source/application/testspec.h</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    misconfigured WdgMSatelliteAlivenessCallout.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * WdgMSatelliteAlivenessCallout is not set to FOMM_PartitionFailedNotification

Test Execution: 
    VP: FOMM generator shall notify the user of the misconfiguration.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Check.SatelliteCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_ConTestDevErrors</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Conformance/IN/FOMM_ConTest_Det/source/application/Tests.c.m4</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test will check that developent errors will be reported to Det in the
    correct circumstances and with correct values.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: Check that FOMM_GetMode returns E_NOT_OK for the API
         request FOMM_GetMode() until the call of FOMM_Init() API and mode is not updated.
    02: VP(GetMode.ModuleUninitialized.ErrorReporting): Check that Det is called with correct values.
    03: Check that FOMM_RequestMode returns E_NOT_OK for the API
         request FOMM_RequestMode() until the call of FOMM_Init() API.
    04: VP(RequestMode.ModuleUninitialized.ErrorReporting): Check that Det is called with correct values.
    05: Call FOMM_PartitionFailedNotification() API before the call of FOMM_Init() API.
    06: VP(PartitionFailedNotification.ModuleUninitialized.ErrorReporting): Check that Det is called with correct values.
    07: Call FOMM_ShutdownAllCores() API before the call of FOMM_Init() API.
    08: VP(PartitionFailedNotification.ModuleUninitialized.ErrorReporting): Check that Det is called with correct values.
    09: Initialize FOMM.
    10: Check that FOMM_GetMode returns E_NOT_OK for the API
         request FOMM_GetMode() if the parameter is a null pointer.
    11: VP(GetMode.NullPtr.ErrorReporting): Check that Det is called with correct values.
    12: Call FOMM_GetVersionInfo with a null pointer parameter.
    13: VP(GetVersionInfo.NullPtr.ErrorReporting): Check that Det is called with correct values.
    14: VP(InvalidModeRequest.ErrorReporting): Check that FOMM_RequestMode returns E_NOT_OK for the API
         request FOMM_RequestMode() and reports the runtime error.
    15: Deinitialize FOMM.
    16: Check that FOMM_GetMode returns E_NOT_OK for the API request FOMM_GetMode() since FOMM
         is unitialized and the error is reported to DET.
    17: VP(Init.InvalidPartition, InvalidPartition.ErrorReporting): ReInitialize FOMM from an invalid partition.
    18: Check that FOMM_GetMode returns E_NOT_OK for the API request FOMM_GetMode() since the
         initialization was rejected due to invalid partition and the error is reported to DET.
    19: Initialize FOMM from a valid partition and check that FOMM_GetMode returns E_OK and mode is FOMM_MODE_NORMAL.
    20: VP(DeInit.InvalidPartition, InvalidPartition.ErrorReporting): Deinitialize FOMM from an invalid partition.
    21: Check that FOMM_GetMode returns E_OK for the API request FOMM_GetMode() since the
         deinitialization was rejected due to invalid partition and the mode is still FOMM_MODE_NORMAL.
    22: VP(InvalidModeRequest.ErrorReporting): Check that FOMM_RequestMode returns E_NOT_OK for the API
         request FOMM_RequestMode() and reports the runtime error due to invalid partition.
    23: VP(FOMM.EB.PartitionFailedNotification.InvalidPartition): Call FOMM_PartitionFailedNotification().
         Check that FOMM_E_INVALID_PARTITION_REQUEST is reported
    24: VP(FOMM.EB.ShutdownAllCores.InvalidPartition): Call FOMM_ShutdownAllCores().
         Check that FOMM_E_INVALID_PARTITION_REQUEST is reported
  
Test Input: 
  
Test Output: 
    Development errors are reported to Det as expected.
  </description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetMode.NoInitBeforeApiCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.NoInitBeforeApiCall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetMode.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetMode.NullPtr.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.NullPtr.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DetRuntimeChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.InvalidModeRequest.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_PARAM_MODE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Init.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.InvalidPartition.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_INVALID_PARTITION_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.DeInit.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidPartition.ApiRetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.InvalidPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.CddErrorReportingApiName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.CddHeaderFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_RteInterfaces_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Conformance/IN/FOMM_ConTest_RteInt/source/application/Test_SWC0.c.m4</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the interfaces are generated for SWC0:
    FOMM_RequestMode
    FOMM_GetMode
    FOMM_ShutdownAllCores
m4_ifelse(PM_FOMMVersionInfoApiEnabled,true,\-:m4_dnl
    FOMM_GetVersionInfo
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    FOMM_Proxy_Dio_WriteChannel
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    FOMM_Proxy_Mcu_SetMode
    FOMM_Proxy_Mcu_PerformReset
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(GetMode.Ptr): Check that FOMM_GetMode will write the current mode in the provided
          pointer and return E_OK.
    02: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting FOMM_MODE_FAILOP_SWC_EXEC
          returns E_NOT_OK.
    03: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    04: Check that the internal state is still FOMM_MODE_NORMAL.
    05: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting
          FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    06: VP(GetMode.Ptr): Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC_PREPARE in the provided
          pointer and return E_OK.
m4_ifelse(PM_FOMMVersionInfoApiEnabled,true,\-:m4_dnl
    07: VP(GeneralCfg.VersionInfoApi,GetVersionInfo.Ptr): Check that FOMM_GetVersionInfo
          provides the correct data in the provided pointer.
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    08: VP(ProxyDioWriteChannel.APISignature, ProxyDioWriteChannel.IgnoreRequest): Check that a call to this
          partition's Dio proxy is called, the Dio proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    09: VP(ProxyMcuSetMode.APISignature, ProxyMcuSetMode.IgnoreRequest): Check that a call to this partition's Mcu_SetMode
          proxy is called, the Mcu_SetMode proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
    10: VP(ProxyMcuPerformReset.APISignature, ProxyMcuPerformReset.IgnoreRequest): Check that a call to this partition's Mcu_PerformReset
          proxy is called, the Mcu_PerformReset proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
    11: VP(ShutdownAllCores.NormalToShutdownAllCores): Check that the mode remains unchanged
          (FOMM_MODE_FAILOP_SWC_EXEC_PREPARE) when FOMM_ShutdownAllCores is called.
    12: Change the FOMM mode to NORMAL.
    13: Call FOMM_ShutdownAllCores in NORMAL mode.
    14: VP(ShutdownAllCores.NormalToShutdownAllCores): Check that the module is initialized after
          FOMM_ShutdownAllCores was accepted.
    15: VP(RequestMode.ModuleUninitialized.ErrorReporting): Check that Det is called with correct values.

  
Test Input: 
  
Test Output: 
    FOMM APIs are called
  </description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.NormalToFOSwcExecPrepare</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidMode.ErrorReporting</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.VersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.NormalToShutdownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.ModuleUninitialized.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_RteInterfaces_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Conformance/IN/FOMM_ConTest_RteInt/source/application/Test_SWC1.c.m4</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the interfaces are generated for SWC1:
    FOMM_RequestMode
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    FOMM_Server_Dio_WriteChannel
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    FOMM_Proxy_Mcu_SetMode
    FOMM_Proxy_Mcu_PerformReset
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting
          FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    02: VP(GetMode.Ptr): Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC_PREPARE in the provided
          pointer and return E_OK.
    03: VP(ShutdownAllCores.NormalToShutdownAllCores): Check that the mode remains unchanged
          (FOMM_MODE_FAILOP_SWC_EXEC_PREPARE) when FOMM_ShutdownAllCores is called.
    04: Set the mode to FOMM_MODE_NORMAL.
m4_ifelse(PM_FOMMDioEnabled,false,\-:m4_dnl
    05: VP(GeneralCfg.DioPartitionRef, ServerDioWriteChannel.APISignature) : Check that in mode FOMM_MODE_NORMAL
          and correct partition call the Dio_WriteChannel API is called.
    06: VP(GeneralCfg.DioPartitionRef) : Check that for an incorrect partition call the Dio_WriteChannel API is
          not called and error is reported to DET.
:-/m4_ifelse( :endif: ))m4_dnl
    07: Switch FOMM mode to FOMM_MODE_FAILOP_SWC_EXEC_PREPARE
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    08: VP(ProxyMcuSetMode.IgnoreRequest): Check that a call to this partition's Mcu_SetMode
          proxy is called, the Mcu_SetMode proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
    09: VP(ProxyMcuPerformReset.IgnoreRequest): Check that a call to this partition's Mcu_PerformReset
          proxy is called, the Mcu_PerformReset proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Input: 
  
Test Output: 
    FOMM API is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.DioPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ServerDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_RteInterfaces_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Conformance/IN/FOMM_ConTest_RteInt/source/application/Test_SWC2.c.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the interfaces are generated for SWC2:
    FOMM_GetMode
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    FOMM_Proxy_Dio_WriteChannel
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    FOMM_Server_Mcu_SetMode
    FOMM_Server_Mcu_PerformReset
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting
          FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    02: VP(GetMode.Ptr): Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC_PREPARE in the provided
          pointer and return E_OK.
    03: VP(ShutdownAllCores.NormalToShutdownAllCores): Check that the mode remains unchanged
          (FOMM_MODE_FAILOP_SWC_EXEC_PREPARE) when FOMM_ShutdownAllCores is called.
    04: Set the mode back to FOMM_MODE_NORMAL.
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    05: VP(ProxyDioWriteChannel.APISignature) : Check that for an incorrect partition call the Dio_WriteChannel
          API is not called and error is reported to DET.
:-/m4_ifelse( :endif: ))m4_dnl
    06: Switch FOMM mode to FOMM_MODE_FAILOP_SWC_EXEC_PREPARE
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    07: VP(ProxyDioWriteChannel.IgnoreRequest): Check that a call to this partition's Dio proxy is called,
          the Dio proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMDioEnabled,false,\-:m4_dnl
    08: VP(GeneralCfg.McuPartitionRef, ServerMcuSetMode.APISignature) : Check that in mode FOMM_MODE_NORMAL
          and correct partition call the Mcu_SetMode API is called.
    09: VP(GeneralCfg.McuPartitionRef) : Check that for an incorrect partition call the Mcu_SetMode API is
          not called and error is reported to DET.
    10: VP(GeneralCfg.McuPartitionRef, ServerMcuPerformReset.APISignature) : Check that in mode FOMM_MODE_NORMAL
          and correct partition call the Mcu_PerformReset API is called.
    11: VP(GeneralCfg.McuPartitionRef) : Check that for an incorrect partition call the Mcu_PerformReset API is
          not called and error is reported to DET.
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Input: 
  
Test Output: 
    FOMM API is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.McuPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ServerMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ServerMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_RteInterfaces_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Conformance/IN/FOMM_ConTest_RteInt/source/application/Test_SWC3.c.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the interfaces are generated for SWC3:
    FOMM_GetMode
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    FOMM_Proxy_Dio_WriteChannel
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    FOMM_Proxy_Mcu_SetMode
    FOMM_Proxy_Mcu_PerformReset
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(GetMode.Ptr): Check that FOMM_GetMode will write the current mode in the provided
          pointer and return E_OK.
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    02: VP(ProxyDioWriteChannel.APISignature) : Check that for an incorrect partition call the Dio_WriteChannel
          API is not called and error is reported to DET.
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    03: VP(ProxyMcuSetMode.APISignature) : Check that for an incorrect partition call the Mcu_SetMode
          API is not called and error is reported to DET.
    04: VP(ProxyMcuPerformReset.APISignature) : Check that for an incorrect partition call the Mcu_PerformReset
          API is not called and error is reported to DET.
:-/m4_ifelse( :endif: ))m4_dnl
    05: Switch FOMM mode to FOMM_MODE_FAILOP_SWC_EXEC_PREPARE
m4_ifelse(PM_FOMMDioEnabled,true,\-:m4_dnl
    06: VP(ProxyDioWriteChannel.IgnoreRequest): Check that a call to this partition's Dio proxy is called,
          the Dio proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
m4_ifelse(PM_FOMMMcuEnabled,true,\-:m4_dnl
    07: VP(ProxyMcuSetMode.IgnoreRequest): Check that a call to this partition's Dio proxy is called,
          the Dio proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
    08: VP(ProxyMcuPerformReset.IgnoreRequest): Check that a call to this partition's Dio proxy is called,
          the Dio proxy will ignore the call since the FOMM mode is not FOMM_MODE_NORMAL.
:-/m4_ifelse( :endif: ))m4_dnl
  
Test Input: 
  
Test Output: 
    FOMM API is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyDioWriteChannel.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuSetMode.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.APISignature</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ProxyMcuPerformReset.IgnoreRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_SimpleImpTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Implementation/IN/FOMM_ImpTest_InitDeInitVersInfo/source/application/Tests.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check that the internal state and internal mode are set correctly by
    these functions:
    - FOMM_Init
    - FOMM_DeInit
    Also, check that correct module information is provided by this function:
    - FOMM_GetVersionInfo
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(Init.ResetState): Check that before FOMM_Init, the internal state is FOMM_UNINIT.
    02: VP(Init.ModeState): Check that after FOMM_Init, the internal state is FOMM_INIT
        and the internal mode is FOMM_MODE_NORMAL.
    03: VP(DeInit.UninitStateTransition): Check that after FOMM_DeInit, the internal
        state is FOMM_UNINIT.
    04: VP(GeneralCfg.VersionInfoApi,GetVersionInfo.Ptr): Check that FOMM_GetVersionInfo
        provides the correct data in the provided pointer.
  
Test Input: 
  
Test Output: 
    All FOMM states and modes are changed according to the requirements.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.Init.ResetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Init.ModeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.DeInit.UninitStateTransition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GeneralCfg.VersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetVersionInfo.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_FOMM_ModeChanges</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Implementation/IN/FOMM_ImpTest_ModeChanges/source/application/Tests.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check that the internal state and internal mode are set and read correctly by
    these functions:
    - FOMM_Init
    - FOMM_DeInit
    - FOMM_GetMode
    - FOMM_RequestMode
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(Init.ResetState): Check that before FOMM_Init, the internal state is FOMM_UNINIT.
    02: VP(Init.InitStateTransition,Init.ModeState): Check that after FOMM_Init, the internal
          state is FOMM_INIT and the internal mode is FOMM_MODE_NORMAL.
    03: VP(GetMode.Ptr): Check that FOMM_GetMode will write the current mode in the provided
         pointer and return E_OK.
    04: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_SWC_EXEC returns E_NOT_OK.
    05: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    06: Check that the internal state is still FOMM_MODE_NORMAL.
    07: VP(RequestMode.NormalToFOSwcExecPrepare): Check that requesting
         FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    08: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC_PREPARE in the provided
         pointer and return E_OK.
    09: VP(RequestMode.FOSwcExecPrepareToFOSwcExecution): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_COMM_PREPARE returns E_NOT_OK.
    10: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    11: Check that the internal state is still FOMM_MODE_FAILOP_SWC_EXEC_PREPARE.
    12: VP(RequestMode.FOSwcExecPrepareToFOSwcExecution): Check that requesting
         FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    13: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC in the provided
         pointer and return E_OK.
    14: VP(RequestMode.FOSwcExecToFOComPrepare): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_COMM returns E_NOT_OK.
    15: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    16: Check that the internal state is still FOMM_MODE_FAILOP_SWC_EXEC.
    17: VP(RequestMode.FOSwcExecToFOComPrepare): Check that requesting
         FOMM_MODE_FAILOP_COMM_PREPARE returns E_OK.
    18: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_COMM_PREPARE in the provided
         pointer and return E_OK.
    19: VP(RequestMode.FOCommPrepareToFOComm): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_COMM_ONLY returns E_NOT_OK.
    20: VP(InvalidModeRequest.ErrorReporting): Check that Det is called with correct values.
    21: Check that the internal state is still FOMM_MODE_FAILOP_COMM_PREPARE.
    22: VP(RequestMode.FOCommPrepareToFOComm): Check that requesting
        FOMM_MODE_FAILOP_COMM returns E_OK.
    23: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_COMM_PREPARE in the provided
         pointer and return E_OK.
    24: VP(RequestMode.FOComToFOSwcExec): Check that requesting
         (e.g.) FOMM_MODE_NORMAL returns E_NOT_OK.
    25: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    26: Check that the internal state is still FOMM_MODE_FAILOP_COMM.
    27: VP(RequestMode.FOComToFOSwcExec): Check that requesting
         FOMM_MODE_FAILOP_COMM returns E_OK.
    28: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC in the provided
         pointer and return E_OK.
    29: VP(RequestMode.FOSwcExecToNormal): Check that requesting
         FOMM_MODE_NORMAL returns E_OK.
    30: Check that FOMM_GetMode will write FOMM_MODE_NORMAL in the provided
         pointer and return E_OK.
    31: Check that requesting FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    32: VP(RequestMode.FOSwcExecPrepareToNormal): Check that requesting
         FOMM_MODE_NORMAL returns E_OK.
    33: Check that FOMM_GetMode will write FOMM_MODE_NORMAL in the provided
         pointer and return E_OK.
    34: Check that requesting FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_OK.
    35: Check that requesting FOMM_MODE_FAILOP_SWC_EXEC returns E_OK.
    36: Check that requesting FOMM_MODE_FAILOP_COMM_PREPARE returns E_OK.
    37: VP(RequestMode.FOComPrepareToFOSwcExec): Check that requesting
         FOMM_MODE_FAILOP_SWC_EXEC returns E_OK.
    38: Check that FOMM_GetMode will write FOMM_MODE_FAILOP_SWC_EXEC in the provided
         pointer and return E_OK.
    39: VP(RequestMode.FOSwcExecToNormal): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_SWC_EXEC_PREPARE returns E_NOT_OK.
    40: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
    41: VP(RequestMode.FOSwcExecToNormal): Check that requesting
         (e.g.) FOMM_MODE_FAILOP_SWC_EXEC_ONLY returns E_NOT_OK.
    42: VP(RequestMode.InvalidMode.ErrorReporting): Check that Det is called with correct values.
  
Test Input: 
  
Test Output: 
    All FOMM states and modes are changed according to the requirements.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.SupportedModes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Init.ResetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Init.InitStateTransition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.Init.ModeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.GetMode.Ptr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.NormalToFOSwcExecPrepare</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidMode.ErrorReporting</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_TRANSITION</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecPrepareToFOSwcExecution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecToFOComPrepare</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOCommPrepareToFOComm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOComToFOSwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOSwcExecPrepareToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOComPrepareToFOSwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.InvalidModeRequest.ErrorReporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>TS_FOMM_PartitionFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Implementation/IN/FOMM_ImpTest_ModeChanges/source/application/Tests.c</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check that the internal state and internal mode are set and read correctly by
    these functions:
    - FOMM_Init
    - FOMM_DeInit
    - FOMM_GetMode
    - FOMM_RequestMode
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
    01: VP(Init.ResetState): Check that before FOMM_Init, the internal state is FOMM_UNINIT.
  
Test Input: 
  
Test Output: 
    All FOMM states and modes are changed according to the requirements.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.SupportedModes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.AllowXCoreCommands</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.PreventXCoreCommands</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOSwcExecToFOSwcExecOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.IgnoreAPICall</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.FOOnlySwcExecToNormal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOCommPrepareToFOOnlySwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOCommToFOOnlySwcExec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.RequestMode.FOOnlyCommToFOSwcExecution</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.NormalToShutDownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.PartitionFailedNotification.FOSwcExecPrepareToShutDownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.NormalToShutdownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownMechanism</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.ShutdownAllCores.CalledFromFOMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>TS_FOMM_InvalidModeReqs</id>
      <status>approved</status>
      <source>EB test case specification (asc_FOMM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_FOMM/test/ts5/Implementation/IN/FOMM_ImpTest_ModeChanges/source/application/Tests.c</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test will check that when FOMM_RequestMode() interrupts PartitionFailedNotification(),
    FOMM_E_TRANSITION is reported.
  
Test Object: 
  
Test Precondition: 
    FOMM_RequestMode() is called from PartitionFailedNotification() (Exit Exclusive Area)
  
Test Execution: 
    01: VP(FOMM.EB.RequestMode.InvalidMode.ErrorReporting, FOMM.EB.FOMM_E_TRANSITION):
        Error reported when requesting FOMM_MODE_NORMAL
    02: VP(FOMM.EB.RequestMode.InvalidMode.ErrorReporting, FOMM.EB.FOMM_E_TRANSITION):
        Error reported when requesting FOMM_MODE_FAILOP_SWC_EXEC_PREPARE
    03: VP(FOMM.EB.RequestMode.InvalidMode.ErrorReporting, FOMM.EB.FOMM_E_TRANSITION):
        Error reported when requesting FOMM_MODE_FAILOP_SWC_EXEC
    04: VP(FOMM.EB.RequestMode.InvalidMode.ErrorReporting, FOMM.EB.FOMM_E_TRANSITION):
        Error reported when requesting FOMM_MODE_FAILOP_COMM_PREPARE
    05: VP(FOMM.EB.RequestMode.InvalidMode.ErrorReporting, FOMM.EB.FOMM_E_TRANSITION):
        Error reported when requesting FOMM_MODE_FAILOP_COMM
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>FOMM.EB.RequestMode.InvalidMode.ErrorReporting</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>FOMM.EB.FOMM_E_TRANSITION</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
