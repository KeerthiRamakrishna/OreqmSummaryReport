<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_EcuC_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_AUTOSAR_TPS_ECUConfiguration.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_ComStack_Timers.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_EcuC_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/common_req/EcuC_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:49:42 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_EcuC_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_AUTOSAR_TPS_ECUConfiguration.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_ComStack_Timers.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_Native/asc_EcuC_requirements_EcuC_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/common_req/EcuC_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Before calling <function>EcuC_CopyRxData()</function> it must be ensured by 
        <function>EcuC_CopyRxDataDet()</function> that the arguments PduInfoPtr and rxBufferSizePtr
        are valid.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    
    <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that rxControlInfoPtr and rxBufferInfoPtr are not NULL_POINTERS, when calling 
        <function>EcuC_CopyRxData()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    
        <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Before calling <function>EcuC_CopyTxData()</function> it must be verified by 
        <function>EcuC_CopyTxDataDet()</function> that the arguments RetryInfoPtr, TxDataCntPtr and PduInfoPtr are valid.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    
    <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0004</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that txControlInfoPtr and txBufferInfoPtr are not NULL_POINTERS, when calling 
        <function>EcuC_CopyTxData()</function>
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    
    <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0005</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that rxControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_TpRxIndication()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0006</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Before calling <function>EcuC_TpRxIndication()</function> it must be ensured by 
        <function>EcuC_TpRxIndicationDet()</function> that copiedDataSize is valid.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>   
    
     <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0007</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that txControlInfoPtr, txBufferInfoPtr and IoTpTransmitFunctPtr are not NULL_POINTERS, when calling 
        <function>EcuC_TpTransmit()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>   
    
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0008</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that rxControlInfoPtr and rxBufferInfoPtr are not NULL_POINTERS, when calling 
        <function>EcuC_StartOfReception()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0009</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        Before calling <function>EcuC_StartOfReception()</function> it must be ensured by 
        <function>EcuC_StartOfReceptionDet()</function> that the argument 
        RxBufferSizePtr is valid.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0010</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that txControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_InitTx()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0011</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that rxControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_InitRx()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0012</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that txControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_TxBufferIsLocked()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0013</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that rxControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_RxBufferIsLocked()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>   
    
      <specobject>
      <id>EcuC.EB_CALLSEQREQ_EcuC_0014</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        It needs to be ensured that txControlInfoPtr is not a NULL_POINTER, when calling 
        <function>EcuC_TpTxConfirmation()</function>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>EcuC.EB_MetaDataTypeLength</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description> It needs to be ensured that the length of a meta data type is 
        calculated the same way in every module by using the custom XPath API
        (global resource) <function>asc_ecuc:getMetaDataTypeLength()</function>.
      </description>
      <comment>
        Relevant when using copy functions EcuC_CopyMetaDataTypeToPdu and
        EcuC_CopyMetaDataTypeFromPdu.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

  <specobject>
    <id>ECUC_EcuC_00078</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Parameter Name: DynamicLength
      Parent Container: Pdu
      Description: This parameter defines whether the Pdu has dynamic length (true) or
                   not (false). Please note that the usage of this attribute is restricted by
                   [constr_3448].
      Multiplicity:                       0..1
      Type:                               EcucBooleanParamDef
      Default Value:                      -
      Post-Build Variant Multiplicity:    true
      Post-Build Variant Value:           true
      Multiplicity Configuration Class:   Pre-compile time: X VARIANT-PRE-COMPILE
                                          Link time: -
                                          Post-build time: X VARIANT-POST-BUILD
      Value Configuration Class:          Pre-compile time: X VARIANT-PRE-COMPILE
                                          Link time: -
                                          Post-build time: X VARIANT-POST-BUILD
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

  
  <specobject>
    <id>ECUC_EcuC_00056</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucHardware
      Parent Container: EcuC
      Description: Hardware definition of this Ecu.
      Configuration Parameters: -
      Included Containers:
                            Container Name: EcucCoreDefinition
                            Multiplicity: 0..*
                            Scope / Dependency: Definition of one Core on this Ecu.
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00057</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucCoreDefinition
      Parent Container: EcucHardware
      Description: Definition of one Core on this Ecu.
      Configuration Parameters:
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00059</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucCoreHwRef
      Parent Container: EcucCoreDefinition
      Description: Optional reference to the HwElement of HwCategory ProcessingUnit
                   that represents this Core in the ECU Resource Template.
      Multiplicity: 0..1
      Type: Foreign reference to HW-ELEMENT
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00058</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucCoreId
      Parent Container: EcucCoreDefinition
      Description: ID of the core.
      Multiplicity: 1
      Type: EcucIntegerParamDef
      Range: 0..65535
      Default Value: -
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00007</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucPartitionCollection
      Parent Container: EcuC
      Description: Collection of Partitions defined for this ECU.
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00005</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucPartition
      Parent Container: EcucPartitionCollection
      Description: Definition of one Partition on this ECU. One Partition will be
                   implemented using one Os-Application.
      Post-Build Variant Multiplicity:    false
      Multiplicity Configuration Class:   Pre-compile time: X VARIANT-PRE-COMPILE, VARIANT-POST-BUILD
                                          Link time: -
                                          Post-build time: -
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00068</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPartitionBswModuleDistinguishedPartition
      Parent Container: EcucPartition
      Description: This maps the abstract partition of the Bsw Module to a concrete
                   Partition existing in the ECU.
      Multiplicity: 0..*
      Type: Foreign reference to BSW-DISTINGUISHED-PARTITION
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00036</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPartitionSoftwareComponentInstanceRef
      Parent Container: EcucPartition
      Description: References the SW Component instances from the Ecu Extract that
                   shall be executed in this partition.
      Multiplicity 0..*
      Type: Instance reference to SW-COMPONENT-PROTOTYPE context:
             ROOT-SW-COMPOSITION-PROTOTYPE
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00006</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: PartitionCanBeRestarted
      Parent Container: EcucPartition
      Description: Specifies the requirement whether the Partition can be restarted. If set
                   to true all software executing in this partition shall be capable of
                   handling a restart.
      Multiplicity: 1
      Type: EcucBooleanParamDef
      Default Value: -
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00070</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucPostBuildVariants
      Parent Container: EcuC
      Description: Collection of toplevel PostBuildSelectable variants. The
                   PredefinedVariants linked inside this container will determine how
                   many PostBuildSelectableVariants exist. If this container exist the
                   name pattern for initialization of BSW modules will be
                   &lt;Mip&gt;_Config_&lt;PredefinedVariant.shortName&gt;. If this container does
                   not exist the name pattern for initialization of BSW modlues will be
                   &lt;Mip&gt;_Config.
      Configuration Parameters:
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00071</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPostBuildVariantRef
      Parent Container: EcucPostBuildVariants
      Description: Reference to a PredefinedVariant that defines one toplevel postBuild
                   configuration set (covering all post-build capable BSW modules).
                   PredefinedVariants that are referenced here shall contain only
                   PostBuildVariantCriterionValueSets.
      Multiplicity: 1..*
      Type: Foreign reference to PREDEFINED-VARIANT
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00009</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucVariationResolver
      Parent Container: EcuC
      Description: Collection of PredefinedVariant elements containing definition of values
                   for SwSystemconst which shall be applied when resolving the
                   variability during ECU Configuration.
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00010</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: PredefinedVariantRef
      Parent Container: EcucVariationResolver
      Description: -
      Multiplicity: 1..*
      Type: Foreign reference to PREDEFINED-VARIANT
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00002</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucPduCollection
      Parent Container: EcucConfigSet
      Description: Collection of all Pdu objects flowing through the Com-Stack.
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
        ENABLE attribute of this Parameter is set to true to increase usability.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00041</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: PduIdTypeEnum
      Parent Container: EcucPduCollection
      Description: The PduIdType is used within the entire AUTOSAR Com Stack except
                   for bus drivers. The size of this global type depends on the maximum
                   number of PDUs used within one software module. If no software
                   module deals with more PDUs that 256, this type can be set to uint8. If
                   at least one software module handles more than 256 PDUs, this type
                   shall be set to uint16. See
                   AUTOSAR_SWS_CommunicationStackTypes for more details.
      Multiplicity: 1
      Type: EcucEnumerationParamDef
      Range: UINT16
             UINT8
      Post-Build Variant Value: false
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.PduIdTypeEnum.Support.u16Only</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00042</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: PduLengthTypeEnum
      Parent Container: EcucPduCollection
      Description: The PduLengthType is used within the entire AUTOSAR Com Stack
                   except for bus drivers. The size of this global type depends on the
                   maximum length of PDUs to be sent by an ECU. If no segmentation is
                   used the length depends on the maximum payload size of a frame of
                   the underlying communication system (for FlexRay maximum size is
                   255 bytes, therefore uint8). If segmentation is used it depends on the
                   maximum length of a segmented N-SDU (in general uint16 is used).
                   See AUTOSAR_SWS_CommunicationStackTypes for more details.
      Multiplicity: 1
      Type: EcucEnumerationParamDef
      Range: UINT16
             UINT32
             UINT8
      Post-Build Variant Value: false
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.PduLengthTypeEnum.Support.u16u32Only</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00001</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: Pdu
      Parent Container: EcucPduCollection
      Description: One Pdu flowing through the COM-Stack. This Pdu is used by all
                   Com-Stack modules to agree on referencing the same Pdu.
      Post-Build Variant Multiplicity: true
      Multiplicity Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time: X VARIANT-POST-BUILD
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00003</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>2</version>
    <description>
      Name: PduLength
      Parent Container: Pdu
      Description: Length of the Pdu in bytes. It should be noted that in former AUTOSAR
                   releases (Rel 2.1, Rel 3.0, Rel 3.1, Rel 4.0 Rev. 1) this parameter was
                   defined in bits.
      Multiplicity: 1
      Type: EcucIntegerParamDef
      Range 0 .. 4294967295
      Default Value: -
      Post-Build Variant Value: true
      Value Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time: - X VARIANT-POST-BUILD
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00008</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Module Name: EcuC
      Module Description: Virtual module to collect ECU Configuration specific / global
                          configuration information.
      Post-Build Variant Support: true
      Supported Config Variants: VARIANT-POST-BUILD, VARIANT-PRE-COMPILE
      Included Containers:
                            Container Name: EcucConfigSet
                            Multiplicity: 0..1
                            Scope / Dependency: This container contains the configuration parameters
                                                and sub containers of the global PduCollection.
                            Container Name: EcucHardware
                            Multiplicity: 0..1
                            Scope / Dependency: Hardware definition of this Ecu.
                            Container Name: EcucPartitionCollection
                            Multiplicity: 0..1
                            Scope / Dependency: Collection of Partitions defined for this ECU.
                            Container Name: EcucPostBuildVariants
                            Multiplicity: 0..1
                            Scope / Dependency: Collection of toplevel PostBuildSelectable variants.
                                                The PredefinedVariants linked inside this container will
                                                determine how many PostBuildSelectableVariants
                                                exist. If this container exist the name pattern for
                                                initialization of BSW modules will be
                                                &lt;Mip&gt;_Config_&lt;PredefinedVariant.shortName&gt;. If this
                                                container does not exist the name pattern for
                                                initialization of BSW modlues will be &lt;Mip&gt;_Config.
                            Container Name: EcucUnitGroupAssignment
                            Multiplicity: 0..1
                            Scope / Dependency: Collection of UnitGroup references to support the
                                                generation of ASAM MCD file.
                            Container Name: EcucVariationResolver
                            Multiplicity: 0..1
                            Scope / Dependency: Collection of PredefinedVariant elements containing
                                                definition of values for SwSystemconst which shall be
                                                applied when resolving the variability during ECU
                                                Configuration.
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00061</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucConfigSet
      Parent Container: EcuC
      Description: This container contains the configuration parameters and sub
                   containers of the global PduCollection.
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
        ENABLE attribute of this Parameter is set to true to increase usability.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00083</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucEcuPartitionRef
      Parent Container: EcucPartition
      Description: Reference to the EcuPartition to define the link to the partition
                   described in the System description.
                   Tags:
                   atp.Status=draft
      Multiplicity: 0..1
      Type: Foreign reference to ECU-PARTITION
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: scope: ECU
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00037</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucDefaultBswPartition
      Parent Container: EcucPartition
      Description: Denotes the default BSW partition. This partition will host all BSW
                   Modules, which are not explicitly mapped to a different partition.
                   For partitions other than the default BSW partition this parameter can
                   be omitted.
      Multiplicity: 0..1
      Type: EcucBooleanParamDef
      Default Value: -
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00063</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucUnitGroupAssignment
      Parent Container: EcuC
      Description: Collection of UnitGroup references to support the generation of ASAM
                   MCD file.
      Configuration Parameters:-
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00062</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucUnitGroupRef
      Parent Container: EcucUnitGroupAssignment
      Description: Optional reference to the UnitGroup to support the generation of ASAM
                   MCD file. These UnitGroups are selecting a set of units for a specific
                   country.
      Multiplicity: 1..*
      Type: Foreign reference to UNIT-GROUP
      Default Value: -
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00072</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: J1939Requestable
      Parent Container: Pdu
      Description: Pdu can be triggered by the J1939 request message.
      Multiplicity: 0..1
      Type: EcucBooleanParamDef
      Default Value: -
      Post-Build Variant Multiplicity: true
      Post-Build Variant Value: true
      Multiplicity Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time: X VARIANT-POST-BUILD
      Value Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time: X VARIANT-POST-BUILD
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00082</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPduDefaultPartitionRef
      Parent Container: Pdu
      Description: Reference to EcucPartition, where the according Pdu is assigned to.
      Multiplicity: 0..1
      Type: Reference to EcucPartition
      Post-Build Variant Multiplicity: false
      Post-Build Variant Value: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: scope: local
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00077</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: MetaDataTypeRef
      Parent Container: Pdu
      Description: Reference to meta data that is transported in the Pdu through the
                   AUTOSAR layers.
      Multiplicity: 0..1
      Type: Reference to MetaDataType
      Default Value: -
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00052</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: SysTPduToFrameTriggeringRef
      Parent Container: Pdu
      Description: Reference to the FrameTriggering from the SystemTemplate which this
                   Pdu belongs to.
                   SysTPduToFrameTriggeringRef shall be used for UserDefinedPdus,
                   NmPdus and NPdus which are not going through the Pdu Router. This
                   reference shall not be used if SysTPduToPduTriggeringRef exists.
      Multiplicity: 0..1
      Type: Foreign reference to FRAME-TRIGGERING
      Post-Build Variant Multiplicity: true
      Post-Build Variant Value: true
      Multiplicity Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time:  X VARIANT-POST-BUILD
      Value Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time:  X VARIANT-POST-BUILD
      Scope / Dependency: dependency: SysTPduToFrameTriggeringRef shall be used for
                          UserDefinedPdus, NmPdus and NPdus which are not going through
                          the Pdu Router. This reference shall not be used if
                          SysTPduToPduTriggeringRef exists.
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00054</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: SysTPduToPduTriggeringRef
      Parent Container: Pdu
      Description: Reference to the PduTriggering from the SystemTemplate which this
                   Pdu represents.
                   SysTPduToPduTriggeringRef shall be used for all Pdus except
                   UserDefinedPdus, NmPdus and NPdus which are not going through
                   the Pdu Router. For these Pdus, SysTPduToFrameTriggeringRef shall
                   be used.
      Multiplicity: 0..1
      Type: Foreign reference to PDU-TRIGGERING
      Post-Build Variant Multiplicity: true
      Post-Build Variant Value: true
      Multiplicity Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time:  X VARIANT-POST-BUILD
      Value Configuration Class:
                                        Pre-compile time: X VARIANT-PRE-COMPILE
                                        Link time: -
                                        Post-build time:  X VARIANT-POST-BUILD
      Scope / Dependency: dependency: SysTPduToPduTriggeringRef shall be used for all Pdus
                          except UserDefinedPdus, NmPdus and NPdus which are not going
                          through the Pdu Router. This reference shall not be used if
                          SysTPduToFrameTriggeringRef exists.
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.UnsupportedParameters</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00079</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: EcucPduDedicatedPartition
      Parent Container: Pdu
      Description: Module specific container for Pdu to partition assignment.
      Post-Build Variant Multiplicity: true
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00080</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPduDedicatedPartitionBswModuleRef
      Parent Container: EcucPduDedicatedPartition
      Description: Reference to BSW module, for which the according dedicated Pdu
                   assignment is valid.
      Multiplicity: 1
      Type: Foreign reference to ECUC-MODULE-CONFIGURATION-VALUES
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: scope: local
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00081</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Name: EcucPduDedicatedPartitionRef
      Parent Container: EcucPduDedicatedPartition
      Description: Module specific reference to EcucPartition, where the according Pdu is
                   assigned to. The dedicated partition reference shall overrule the
                   default partition reference for the respective module.
      Multiplicity: 1
      Type: Reference to EcucPartition
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Scope / Dependency: scope: local
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00073</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: MetaDataType
      Parent Container: EcucPduCollection
      Description: Meta data serves to transport information through the AUTOSAR
                   layers. It is transported by the PduInfoType structure via a separate
                   pointer to a byte array alongside the length of and a pointer to the
                   payload of the PDU. This container defines the content of the meta
                   data.
      Post-Build Variant Multiplicity: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00074</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: MetaDataItem
      Parent Container: MetaDataType
      Description: The content of meta data in a Pdu consists of an ordered list of meta
                   data items. This container represents a meta data item that is
                   contained in meta data of a Pdu.
                   Attributes:
                   requiresIndex=true
      Post-Build Variant Multiplicity: false
      Multiplicity Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Configuration Parameters: -
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00075</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: MetaDataItemLength
      Parent Container: MetaDataItem
      Description: This parameter defines the length of a meta data item in bytes.
      Multiplicity: 1
      Type: EcucIntegerParamDef
      Range: 1 .. 64
      Default Value: -
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Configuration Parameters: scope: local
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

  <specobject>
    <id>ECUC_EcuC_00076</id>
    <status>approved</status>
    <source>AUTOSAR_TPS_ECUConfiguration.pdf, R22-11</source>
    <version>1</version>
    <description>
      Container Name: MetaDataItemType
      Parent Container: MetaDataItem
      Description: This parameter defines the type of a meta data item.
      Multiplicity: 1
      Type: EcucEnumerationParamDef
      Range:
             ACCEPTANCEFIELD_32:      Acceptance field of CAN XL. Size: 32 bits.
             ADDRESS_EXTENSION_8:     Address extension field (N_AE) of the
                                      mixed addressing modes with 11bit
                                      and 29bit CAN ID of ISO 15765-2.
                                      Size: 8 bits.
             CAN_ID_32:               CAN ID according to ISO 11898-2,
                                      either 29 bits or 11 bits. Encoding
                                      according to Can_IdType. Size: 32 bits.
             ETHERNET_MAC_64:         Ethernet MAC address. Size: 64 bits.
             LIN_NAD_8:               LIN node address as used in the LIN
                                      transport protocol. Size: 8 bits.
             PRIORITY_16:             CAN XL Priority ID. Size: 16 bits.
             PRIORITY_8:              Priority field of SAE J1939 IDs, or
                                      Ethernet QoS parameter. Size: 8 bits.
             SDUTYPE_8:               SDU type of CAN XL. Size: 8 bits.
             SOCKET_CONNECTION_ID_16: SoAd socket connection ID. Size: 16
                                      bits.
             SOURCE_ADDRESS_16:       Source address of CanTp, FrTp, or
                                      DoIP transport protocol messages, or
                                      of SAE J1939 messages. Size: 16 bits.
             TARGET_ADDRESS_16:       Target address of CanTp, FrTp, or
                                      DoIP transport protocol messages, or
                                      destination address of SAE J1939
                                      messages. Size: 16 bits.
             VLAN_16:                 VLAN ID of Ethernet or VCID of CAN XL. Size:
                                      16 bits.
      Post-Build Variant Value: false
      Value Configuration Class:
                                        Pre-compile time: X All Variants
                                        Link time: -
                                        Post-build time: -
      Configuration Parameters: scope: local
    </description>
    <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by VSMD checker.
    </comment>
    <releases>
       <release>AUTOSAR R22-11</release>
    </releases>
    <needscoverage>
      <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuC.RestrictedToVariantPostBuild</srcid><srcstatus/><internalId>88</internalId></linkedfrom><linkedfrom><srcid>dev.EcuC.RestrictedMetaDataItemType</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

</specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>ComStack.dsn.Func0100.ComStack_Timers</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        ComStack Library shall provide optimized timers handling functionality.
        Only timer that is next in queue for timeout is compared against current time counter.
        When timer timeout occurs configured callback shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers.dsn.Api.InitTimerHandler</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.InitTimerHandler.Ignore</srcid><srcstatus/><internalId>54</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimer</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimer.Ignore</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimer.Uninitialized</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimerAutorepeat</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Ignore</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Uninitialized</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StopTimer</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StopTimer.Ignore</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StopTimer.Uninitialized</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.StopTimer.AlreadyStopped</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.PauseTimer</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.PauseTimer.Ignore</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.PauseTimer.Uninitialized</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ResumeTimer</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ResumeTimer.Ignore</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ResumeTimer.Uninitialized</srcid><srcstatus/><internalId>70</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.IsTimerStarted</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.IsTimerStarted.Ignore</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.IsTimerStarted.Uninitialized</srcid><srcstatus/><internalId>73</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ProcessTimerTimeout</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Ignore</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Uninitialized</srcid><srcstatus/><internalId>76</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.InitTimerHandler</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_InitTimerHandler
        Syntax:             void ComStack_Timers_InitTimerHandler(
                                                               ComStack_Timers_TimerHandlerType    *TimerHandlerPtr,
                                                               ComStack_Timers_TimerHandlerCfgType *TimerHndCfgPtr
                                                             );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    TimerHndCfgPtr       Timer handler configuration pointer.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function initializes timer handler according to provided timer handler configuration TimerHndCfgPtr.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after initializing and starting the timers, after the configured timeout has passed, the timeout counter has reached zero.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_30</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01001_InitTimerHandler</srcid><srcstatus/><internalId>262</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers_01020_InitTimerHandler_Failed</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.InitTimerHandler.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_InitTimerHandler is called with parameters TimerHandlerPtr or TimerHndCfgPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if only TimerHandlerPtr was a NULL_PTR, the call was ignored (no timer has been started).
        Verify that if only TimerHndCfgPtr was a NULL_PTR, the call was ignored (no timer has been started).
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01002_InitTimerHandler_Ignore</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_StartTimer
        Syntax:             void ComStack_Timers_StartTimer(
                                                         ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                         ComStack_Timers_GroupIdxType     GroupIdx,
                                                         ComStack_Timers_TimerIdxType     TimerIdxInGroup,
                                                         ComStack_Timers_TimerCounterType TimeoutValue
                                                       );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (in):    TimeoutValue         Timer timeout value.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function starts timer that will timeout after specified TimeoutValue and call timer callback that is set
                            for specified group. If function is called multiple times for timer that is running it shall change timer
                            timeout value but number of running timers shall not increase.
                            User needs to restart timer after timeout. Restart can also be done inside of callback.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after starting the timer and after the timeout has passed, the timeout counter has reached zero.
        Verify that, after starting the timer and calling ComStack_Timers_StartTimer again number of running timer is no increased.
        Verify that, after starting the timer next timeout counter value is updated accordingly.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComStack_Timers.h_124</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01000_AutoTestTimers</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers_01021_StartTimer</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimer.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StartTimer is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if only TimerHandlerPtr was a NULL_PTR, the call was ignored (no timer has been started).
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01003_StartTimer_Ignore</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimer.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StartTimer is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_StartTimer, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01004_StartTimer_Uninitialized</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimerAutorepeat</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_StartTimerAutorepeat
        Syntax:             void ComStack_Timers_StartTimerAutorepeat(
                                                                   ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                                   ComStack_Timers_GroupIdxType     GroupIdx,
                                                                   ComStack_Timers_TimerIdxType     TimerIdxInGroup
                                                                 );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function starts timer that will timeout after timeout value that is specified in GroupAutoRepeatValue and call timer callback
                            that is set for specified group. User does not need to restart timer after timeout. Timer will self restart with GroupAutoRepeatValue.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after starting the timer and after the timeout has passed, the timeout counter has reached zero.
        Verifty that, a tick after that, timer started counting again.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComStack_Timers.h_141</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01000_AutoTestTimers</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StartTimerAutorepeat is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if only TimerHandlerPtr was a NULL_PTR, the call was ignored (no timer has been started).
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01005_StartTimerAutorepeat_Ignore</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StartTimerAutorepeat is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_StartTimerAutorepeat, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01006_StartTimerAutorepeat_Uninitialized</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StopTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_StopTimer
        Syntax:             void ComStack_Timers_StopTimer(
                                                        ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                        ComStack_Timers_GroupIdxType     GroupIdx,
                                                        ComStack_Timers_TimerIdxType     TimerIdxInGroup
                                                      );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function stops timer completely. If timer was paused it can not be resumed any more. Timer can only be started again.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after stopping the timer, the counter changed to zero.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_158</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01007_StopTimer</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StopTimer.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StopTimer is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if only TimerHandlerPtr was a NULL_PTR, the call was ignored (no timer has been stopped).
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01008_StopTimer_Ignore</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StopTimer.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StopTimer is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_StopTimer, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01009_StopTimer_Uninitialized</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.StopTimer.AlreadyStopped</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_StopTimer is called for a timer that is not running, the call shall be ignored and no changes shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_StopTimer for timer that is not running shall not change RunningTimersCount.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01007_StopTimer</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.PauseTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_PauseTimer
        Syntax:             void ComStack_Timers_PauseTimer(
                                                         ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                         ComStack_Timers_GroupIdxType     GroupIdx,
                                                         ComStack_Timers_TimerIdxType     TimerIdxInGroup
                                                       );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function pauses timer so that when resumed it will continue where it left off, meaning if there are total 100 ticks for a timer
                            and timer is paused after 40 ticks, when resumed timer will tick 60 times and timeout.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after pausing the timer and after the timeout has passed, the timeout counter has not reached zero.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_184</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01012_ResumeTimer</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.PauseTimer.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_PauseTimer is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if only TimerHandlerPtr was a NULL_PTR, the call was ignored (selected timer has not been paused).
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01010_PauseTimer_Ignore</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.PauseTimer.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_PauseTimer is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_PauseTimer, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01011_PauseTimer_Uninitialized</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ResumeTimer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_ResumeTimer
        Syntax:             void ComStack_Timers_ResumeTimer(
                                                          ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                          ComStack_Timers_GroupIdxType     GroupIdx,
                                                          ComStack_Timers_TimerIdxType     TimerIdxInGroup
                                                        );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This function resumes timer previously paused with ComStack_Timers_PauseTimer().
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after starting and then pausing the timer, between two ticks the counter has not changed.
        Verify that, after the timer has been resumed and the timeout passed, the timeout counter has reached zero.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_211</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01012_ResumeTimer</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>ComStack_Timers_01014_ResumeTimer_Uninitialized</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ResumeTimer.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_ResumeTimer is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if TimerHandlerPtr was a NULL_PTR, the call was ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01013_ResumeTimer_Ignore</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ResumeTimer.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_ResumeTimer is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_ResumeTimer, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01014_ResumeTimer_Uninitialized</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.IsTimerStarted</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_IsTimerStarted
        Syntax:             Std_ReturnType ComStack_Timers_IsTimerStarted(
                                                                       ComStack_Timers_TimerHandlerType *TimerHandlerPtr,
                                                                       ComStack_Timers_GroupIdxType     GroupIdx,
                                                                       ComStack_Timers_TimerIdxType     TimerIdxInGroup
                                                                     );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (in):    GroupIdx             Timer group index.
        Parameters (in):    TimerIdxInGroup      Timer index in group.
        Parameters (inout): None
        Parameters (out):   RetVal               Indicates if selected timer has been started and is active, or not.
        Return value:       None
        Description:        Function returns if selected timer is started or not.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, before starting the timer and calling ComStack_Timers_IsTimerStarted, the API returned E_NOT_OK.
        Verify that, after starting the timer and callin ComStack_Timers_IsTimerStarted, the API returned E_OK
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_253</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01015_IsTimerStarted</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.IsTimerStarted.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_IsTimerStarted is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and E_NOT_OK shall be returned.
      </description>
      <verifycrit>
        Verify that if TimerHandlerPtr was a NULL_PTR, the call was ignored and E_NOT_OK returned.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01016_IsTimerStarted_Ignore</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.IsTimerStarted.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_IsTimerStarted is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and E_NOT_OK shall be returned.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_IsTimerStarted, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01017_IsTimerStarted_Uninitialized</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ProcessTimerTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service Name:       ComStack_Timers_ProcessTimerTimeout
        Syntax:             void ComStack_Timers_ProcessTimerTimeout(
                                                                  ComStack_Timers_TimerHandlerType *TimerHandlerPtr
                                                                );
        Sync/Async:         Synchronous
        Reentrancy:         Non-reentrant
        Parameters (in):    TimerHandlerPtr      Timer handler pointer.
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        This functions should only be called when CurrentTimerValue == NextTimeoutValue, and is intended to be called from
                            COMSTACK_TIMERS_PROCESS function like macro.
                            It will loop through all timers and check for next closest timeout value, it will also call callbacks for time outed timers.
        Available via:      ComStack_Timers.h
      </description>
      <verifycrit>
        Verify that, after starting the selected timer and calling ComStack_Timers_ProcessTimerTimeout for number of times equal to that needed for a timeout
        of selected timer, the timeout counter reached zero and the callback function of that timer has been called.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComStack_Timers.c_82</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01000_AutoTestTimers</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Ignore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_ProcessTimerTimeout is called with parameter TimerHandlerPtr as a NULL_PTR, the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that if TimerHandlerPtr was a NULL_PTR, the call was ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01018_ProcessTimerTimeout_Ignore</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the ComStack_Timers_ProcessTimerTimeout is called before timers were initialized with ComStack_Timers_InitTimerHandler(), the call shall be ignored and no progress shall be made.
      </description>
      <verifycrit>
        Verify that call to ComStack_Timers_ProcessTimerTimeout, before ComStack_Timers_InitTimerHandler, is ignored.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComStack_Timers_01019_ProcessTimerTimeout_Uninitialized</srcid><srcstatus/><internalId>281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComStack.dsn.Func0100.ComStack_Timers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

  <specobject>
    <id>EcuC.EB.PduIdType.DefaultValue</id>
    <status>approved</status>
    <source>EB</source>
    <version>2</version>
    <description>
      The default value for the configuration parameter PduIdTypeEnum shall be UINT16.
      The value shall not be editable.
    </description>
    <needscoverage>
      <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuC_Extension.xdm.m4_84</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuC_Extension.xdm.m4_86</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

  <specobject>
    <id>EcuC.EB.PduLengthType.Check</id>
    <status>approved</status>
    <source>EB</source>
    <version>2</version>
    <description>
      There shall be a check for the configuration parameter PduLengthTypeEnum
      which ensures the correct representation of the PDU's length.
    </description>
    <needscoverage>
      <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuC_Extension.xdm.m4_263</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

  <specobject>
    <id>EcuC.EB.PduLengthType.DefaultValue</id>
    <status>approved</status>
    <source>EB</source>
    <version>3</version>
    <description>
      The default value for the configuration parameter PduLengthTypeEnum shall be UINT16.
      The value shall be editable and configureable in the UINT16,UINT32 range only.
    </description>
    <needscoverage>
      <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuC_Extension.xdm.m4_103</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuC_Extension.xdm.m4_105</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

  <specobject>
    <id>EcuC.EB.HandleIdGenerator</id>
    <status>approved</status>
    <source>EB</source>
    <version>1</version>
    <description>
       The module shall support the correct automatic calculation of
       the handle IDs for the following parameters:
         - PduId
     </description>
    <needscoverage>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuC_Comtest_01_HandleIdGenerator</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

  <specobject>
    <id>EcuC.EB.VersionCompatibilityCheck</id>
    <status>approved</status>
    <source>EB</source>
    <version>1</version>
    <description>
    <code>EcuC.h</code> shall provide the macro
    <code>ECUC_COMPATIBILITY_VERSION_CHECK(ecuc_sw_major_version, ecuc_sw_minor_version, ecuc_sw_patch_version)</code>
    for checking the version compatibility between the user module of the EcuC library and the EcuC library itself.
    The macro shall return TRUE if the versions are compatible.
    The macro shall return FALSE if the versions are not compatible.
     </description>
    <needscoverage>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_COMPATIBILITY_VERSION_CHECK</srcid><srcstatus/><internalId>285</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

  <specobject>
    <id>EcuC.EB.EcuCTpTransmit.StateHandling</id>
    <status>approved</status>
    <source>EB</source>
    <version>1</version>
    <description>
      EcuC_TpTransmit shall preset its transmission state with each call to ECUC_STATE_TXONGOING, and
      shall update this state to ECUC_STATE_IDLE in case the transmission callout
      to the lower layer modules has failed.
    </description>
    <comment>
      Pre-updating of the transmission state neutralizes a deadlock effect, which can occur randomly
      in case of preemption of EcuC_TpTransmit through EcuC_TpTxConfirmation.
    </comment>
    <needscoverage>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuC_ConTest_01_TX_IDLE_TxConfirmInterruptTransmit_IDLE</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

  <specobject>
    <id>EcuC.EB.MetaDataItemsAccumulated.Length</id>
    <status>approved</status>
    <source>EB</source>
    <version>1</version>
    <description>
      The length of a meta data type calculated by custom XPath API
      asc_ecuc:getMetaDataTypeLength shall be the sum of the MetaDataItemLength-values
      of the meta data items considered by the meta data type.
    </description>
    <comment>
      The calculated meta data type length shall not contain padding bytes.
    </comment>
    <needscoverage>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_MetaDataTypeLengthCheck</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
    <containerCovstatus>covered</containerCovstatus></needscoverage>
  <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>EcuC.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuC_VerifyCodeStub</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.EcuC.PduIdTypeEnum.Support.u16Only</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ECUC_EcuC_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>dev.EcuC.PduLengthTypeEnum.Support.u16u32Only</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ECUC_EcuC_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>dev.EcuC.UnsupportedParameters</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ECUC_EcuC_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>dev.EcuC.RestrictedToVariantPostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ECUC_EcuC_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00003</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>ECUC_EcuC_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>dev.EcuC.RestrictedMetaDataItemType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ECUC_EcuC_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
  </specobjects>
    <specobjects doctype="dsn">
    <specobject>
      <id>EcuC.CopyMetaDataTypeFromPdu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11234</sourceline>
      <version>1</version>
      <description>If the PDU ID is configured, EcuC_CopyMetaDataTypeFromPdu shall copy meta data (meta data type) from the PDU's meta data memory to an internal buffer.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeFromPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>EcuC.CopyMetaDataTypeFromPdu.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11254</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the PDU ID is not configured, EcuC_CopyMetaDataTypeFromPdu shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TYPE_INVALID_PDU_ID_INV_ARG</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeFromPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>EcuC.CopyMetaDataTypeFromPdu.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11275</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and MetaDataTypeDstPtr is a NULL_PTR, EcuC_CopyMetaDataTypeFromPdu shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TYPE_INV_PARAM_POINTER</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeFromPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetAddrExtension</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11295</sourceline>
      <version>1</version>
      <description>If the meta data item type AddressExtension is configured for the PDU-ID, EcuC_GetMetaDataAddExtension shall return the stored address extension.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetAddrExtension.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11315</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type AddressExtension is not configured for the PDU-ID, EcuC_GetMetaDataAddrExtension shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INV_ARG</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetAddrExtension.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11335</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and AddressExtension is a NULL_PTR, EcuC_MetaDataAddrExtension shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INV_PARAM_POINTER</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetCanId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11355</sourceline>
      <version>1</version>
      <description>If the meta data item type CanId is configured for the PDU-ID, EcuC_GetMetaDataCanId shall return the stored CAN-ID.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetCanId.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11375</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type CanId is not configured for the PDU-ID, EcuC_GetMetaDataCanId shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_CAN_ID_INV_ARG</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_CAN_ID_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetCanId.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11395</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and CanId is a NULL_PTR, EcuC_MetaDataGetCanId shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_CAN_ID_INV_PARAM_POINTER</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetEthernetMac.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11415</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type Ethernet Mac address is not configured for the PDU-ID, EcuC_GetMetaDataEthMac shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INV_ARG</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetEthernetMac.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11435</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the EthMac is a NULL_PTR, EcuC_MetaDataGetEthMac shall report the development error ECUC_E_INV_PARAM_POINTER to Det  and return E_NOT_OK..</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INV_PARAM_POINTER</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetEthMac</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11455</sourceline>
      <version>1</version>
      <description>If the meta data item type EthMac is configured for the PDU-ID, EcuC_GetMetaDataEthMac shall return the stored ethernet mac address.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetLinNad</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11475</sourceline>
      <version>1</version>
      <description>If the meta data item type LinNad is configured for the PDU-ID, EcuC_GetMetaDataLinNad shall return the stored LIN NAD</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SameMetaDataTypeRef_MultiplePdu</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetLinNad.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11495</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type LinNad is not configured for the PDU-ID, EcuC_GetMetaDataLinNad shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetLinNad.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11515</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the LinNad is a NULL_PTR, EcuC_MetaDataGetLinNad shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INV_PARAM_POINTER</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPayloadType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11535</sourceline>
      <version>1</version>
      <description>If the meta data item type Payloadtype is configured for the PDU-ID, EcuC_GetMetaDataPayloadType shall return the stored payload type</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPayloadType.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11555</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type PayloadType is not configured for the PDU-ID, EcuC_GetMetaDataPayloadType shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PAYLOAD_TYPE_INV_ARG</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPayloadType.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11575</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and PayloadType is a NULL_PTR, EcuC_GetMetaDataPayloadType shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PAYLOAD_TYPE_INV_PARAM_POINTER</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPriority.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11595</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type Priority is not configured for the PDU-ID, EcuC_GetMetaDataPriority shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PRIORITY_INV_ARG</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_PRIORITY_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPriority.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11615</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and Priority is a NULL_PTR, EcuC_MetaDataPriority shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PRIORITY_INV_PARAM_POINTER</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetPriority</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11635</sourceline>
      <version>1</version>
      <description>If the meta data item type Priority is configured for the PDU-ID, EcuC_GetMetaDataPriority shall return the stored priority</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSoConId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11655</sourceline>
      <version>1</version>
      <description>If the meta data item type SoConId is configured for the PDU-ID, EcuC_GetMetaDataSoConId shall return the stored socket connection ID</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSoConId.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11675</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type SoConId is not configured for the PDU-ID, EcuC_GetMetaDataSoConId shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOCKET_CONNECTION_INV_ARG</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SOCKET_CONNECTION_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSoConId.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11695</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and SoConId is a NULL_PTR, EcuC_MetaDataGetSoConId shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOCKET_CONNECTION_INV_PARAM_POINTER</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSourceAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11715</sourceline>
      <version>1</version>
      <description>If the meta data item type SourceAddr is configured for the PDU-ID, EcuC_GetMetaDataSourceAddr shall return the stored source address.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSourceAddr.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11735</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type SourceAddr is not configured for the PDU-ID, EcuC_GetMetaDataSourceAddr shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOURCE_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SOURCE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetSourceAddr.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11755</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and SourceAddr is a NULL_PTR, EcuC_MetaDataSourceAddr shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOURCE_ADDRESS_INV_PARAM_POINTER</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetTargetAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11775</sourceline>
      <version>1</version>
      <description>If the meta data item type TargetAddr is configured for the PDU-ID, EcuC_GetMetaDataTargetAddr shall return the stored target address.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetTargetAddr.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11795</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type TargetAddr is not configured for the PDU-ID, EcuC_GetMetaDataTargetAddr shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TARGET_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_TARGET_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetTargetAddr.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11815</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and TargetAaddr is a NULL_PTR, EcuC_MetaDataTargetAddr shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TARGET_ADDRESS_INV_PARAM_POINTER</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetValue</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11835</sourceline>
      <version>1</version>
      <description>If the meta data item type VAlue is configured for the PDU-ID the stored value should be returned</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension</srcid><srcstatus/><internalId>93</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetCanId</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetEthMac</srcid><srcstatus/><internalId>101</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetLinNad</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPayloadType</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPriority</srcid><srcstatus/><internalId>110</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSoConId</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr</srcid><srcstatus/><internalId>117</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetValue.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11845</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type Value is not configured for the PDU-ID the development error ECUC_E_INV_ARG shall be reported to Det.</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu.Det.PduId</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension.Det.PduId</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetCanId.Det.PduId</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetEthernetMac.Det.PduId</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetLinNad.Det.PduId</srcid><srcstatus/><internalId>103</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPayloadType.Det.PduId</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPriority.Det.PduId</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSoConId.Det.PduId</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr.Det.PduId</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr.Det.PduId</srcid><srcstatus/><internalId>118</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataGetValue.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11855</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the passed Value is a NULL_PTR the development error ECUC_E_INV_PARAM_POINTER shall be reported to Det.</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu.Det.value.NullPtr</srcid><srcstatus/><internalId>92</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension.Det.value.NullPtr</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetCanId.Det.value.NullPtr</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetEthernetMac.Det.value.NullPtr</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetLinNad.Det.value.NullPtr</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPayloadType.Det.value.NullPtr</srcid><srcstatus/><internalId>107</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPriority.Det.value.NullPtr</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSoConId.Det.value.NullPtr</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr.Det.value.NullPtr</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr.Det.value.NullPtr</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSourceAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11865</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataSourceAddr API</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_495</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetSourceAddr</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSourceAddr.Det.PduId</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>EcuC.CopyMetaDataTypeToPdu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11876</sourceline>
      <version>1</version>
      <description>If the PDU ID is configured, EcuC_CopyMetaDataTypeToPdu shall copy the meta data (meta data type) from an internal buffer to the PDU's meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeToPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>EcuC.CopyMetaDataTypeToPdu.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11896</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the PDU ID is not configured, EcuC_CopyMetaDataTypeToPdu shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TYPE_INVALID_PDU_ID_INV_ARG</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeToPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>EcuC.CopyMetaDataTypeToPdu.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11916</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and MetaDataTypeSrcPtr is a NULL_PTR, EcuC_CopyMetaDataTypeToPdu shall report the development error ECUC_E_INV_PARAM_POINTER to Det.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TYPE_INV_PARAM_POINTER</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeToPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetAddrExtension</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11936</sourceline>
      <version>1</version>
      <description>If the meta data item type AddrExtension is configured for the PDU-ID, EcuC_SetMetaDataAddExtension shall copy the passed address extension value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetAddrExtension.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11956</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type AddrExtension is not configured for the PDU-ID, EcuC_SetMetaDataAddrExtension shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INV_ARG</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetCanId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11976</sourceline>
      <version>1</version>
      <description>If the meta data item type CanId is configured for the PDU-ID, EcuC_SetMetaDataCanId shall copy the passed CAN-ID value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetCanId.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>11996</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type CanId is not configured for the PDU-ID, EcuC_SetMetaDataCanId shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_CAN_ID_INV_ARG</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_CAN_ID_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetEthernetMac.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12016</sourceline>
      <version>1</version>
      <description>"If development error detection is enabled and the EthMacPtr is a NULL_PTR, EcuC_MetaDataSetEthMac shall report the development  error ECUC_E_INV_PARAM_POINTER to Det and return E_NOT_OK."</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INV_PARAM_POINTER</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetEthMac</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12036</sourceline>
      <version>1</version>
      <description>If the meta data item type EthMac is configured for the PDU-ID, EcuC_SetMetaDataEthMac shall copy the ethernet MAC value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetEthMac.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12056</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type EthMac is not configured for the PDU-ID, EcuC_SetMetaDataEthMac shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INV_ARG</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ETH_MAC_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetLinNad</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12076</sourceline>
      <version>1</version>
      <description>If the meta data item type LinNad is configured for the PDU-ID, EcuC_SetMetaDataLinNad shall copy the passed LIN NAD value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SameMetaDataTypeRef_MultiplePdu</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetLinNad.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12096</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type LinNad is not configured for the PDU-ID, EcuC_SetMetaDataLinNad shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetPayloadType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12116</sourceline>
      <version>1</version>
      <description>If the meta data item type PayloadType is configured for the PDU-ID, EcuC_SetMetaDataPayloadType shall copy the passed Payload Type to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetPayloadType.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12136</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type PayloadType is not configured for the PDU-ID, EcuC_SetMetaDataPayloadType shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PAYLOAD_TYPE_INV_ARG</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetPriority</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12156</sourceline>
      <version>1</version>
      <description>If the meta data item type Priority is configured for the PDU-ID, EcuC_SetMetaDataPriority shall copy the passed priority value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetPriority.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12176</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type Priority is not configured for the PDU-ID, EcuC_SetMetaDataPriority shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_PRIORITY_INV_ARG</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_PRIORITY_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetSoConId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12196</sourceline>
      <version>1</version>
      <description>If the meta data item type SoConId is configured for the PDU-ID, EcuC_SetMetaDataSoConId shall copy the passed socket connection ID to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetSoConId.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12216</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type SoConId is not configured for the PDU-ID, EcuC_SetMetaDataSoConId shall report the development error ECUC_E_INV_ARG to Det and return
E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOCKET_CONNECTION_INV_ARG</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SOCKET_CONNECTION_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetSourceAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12237</sourceline>
      <version>1</version>
      <description>If the meta data item type SourceAddr is configured for the PDU-ID, EcuC_SetMetaDataSourceAddr shall copy the passed source address value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetSourceAddr.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12257</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type SourceAddr is not configured for the PDU-ID, EcuC_SetMetaDataSourceAddr shall report the development error ECUC_E_INV_ARG to Det and return
E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_SOURCE_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>312</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_SOURCE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetTargetAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12278</sourceline>
      <version>1</version>
      <description>If the meta data item type TargetAddr is configured for the PDU-ID, EcuC_SetMetaDataTargetAddr shall copy the passed target address value to the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetTargetAddr.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12298</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type TargetAddr is not configured for the PDU-ID, EcuC_SetMetaDataTargetAddr shall report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_META_DATA_TARGET_ADDRESS_INV_ARG</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_META_DATA_TARGET_ADDRESS_INVALID_PDU_INDEX_INV_ARG</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetValue.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetValue</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12318</sourceline>
      <version>1</version>
      <description>If the meta data item type Value is configured for the PDU-ID the passed value should be stored in the meta data memory.</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetAddrExtension</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetCanId</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetEthMac</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetLinNad</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPayloadType</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPriority</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSoConId</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSourceAddr</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetTargetAddr</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetValue.Det.PduId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12328</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the meta data item type Value is not configured for the PDU-ID the development error ECUC_E_INV_ARG shall be reported to Det.</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu.Det.PduId</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetAddrExtension.Det.PduId</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetCanId.Det.PduId</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetEthMac.Det.PduId</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetLinNad.Det.PduId</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPayloadType.Det.PduId</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPriority.Det.PduId</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSoConId.Det.PduId</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSourceAddr.Det.PduId</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetTargetAddr.Det.PduId</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>EcuC.MetaDataSetValue.Det.value.NullPtr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12338</sourceline>
      <version>1</version>
      <description>If development error detection is enabled and the passed value is a NULL_PTR the development error ECUC_E_INV_PARAM_POINTER shall be reported to Det.</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu.Det.value.NullPtr</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetEthernetMac.Det.value.NullPtr</srcid><srcstatus/><internalId>131</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>EcuC.CopyRxData.Det.PduInfoPtr.NULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12348</sourceline>
      <version>1</version>
      <description>EcuC_CopyRxData() shall return E_NOT_OK if the user of this function hands over a NULL-pointer as PduInfoPtr.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxDataDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>EcuC.CopyRxData.Det.PduInfoPtr.SduDataPtr.NULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12364</sourceline>
      <version>1</version>
      <description>EcuC_CopyRxData() shall return E_NOT_OK if the function is called with PduInfoPtr-&amp;gt;SduLength &amp;gt; 0 and PduInfoPtr-&amp;gt;SduDataPtr with a NULL_PTR.
</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxDataDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>EcuC.CopyRxData.Det.rxBufferSizePtr.NULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12381</sourceline>
      <version>1</version>
      <description>EcuC_CopyRxData() shall return E_NOT_OK if the user of this function hands over a NULL-pointer as rxBufferSizePtr.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxDataDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>EcuC.CopyTxData.Higher.SduLength</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12397</sourceline>
      <version>1</version>
      <description>If the PduInfoPtr-&amp;gt;SduLength is greater than the remaining data to transmit, EcuC_CopyTxData shall return BUFREQ_E_BUSY: Request could not be fulfilled, because the required amount of Tx data is not available. The lower layer module may retry this call later on. No data has been copied</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_COPY_TXDATA_HIGHER_LENGTH</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>EcuC.RxBufferIsLocked.locked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12413</sourceline>
      <version>1</version>
      <description>If EcuC_RxBufferIsLocked() is called when the reception is ongoing for the Pdu-I (state == RX_ONGOING) the function shall return TRUE</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_RxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>EcuC.RxBufferIsLocked.unlocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12429</sourceline>
      <version>1</version>
      <description>If EcuC_RxBufferIsLocked() is called when no reception is ongoing for the Pdu-I (state == IDLE) the function shall return FALSE</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_IDLE</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_RxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>EcuC.StartOfReception.Det.PduInfoPtr.notNULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12445</sourceline>
      <version>1</version>
      <description>EcuC_StartOfReceptionDet() shall return E_NOT_OK if the user of this function hands over no NULL-pointer as PduInfoPtr.</description>
      <rationale>The PduInfoPtr should be a NULL_PTR until the functionality of Up_StartOfReception, which utilizes PduInfoPtr, is implemented. This allows to detect lower layers that provide data by StartOfReception which can not be handled by an upper layer.</rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReceptionDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>EcuC.StartOfReception.Det.RxBufferSizePtr.NULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12462</sourceline>
      <version>1</version>
      <description>EcuC_StartOfReceptionDet() shall return E_NOT_OK if the user of this function hands over a NULL-pointer as RxBufferSizePtr.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReceptionDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.loTpTrasnmitFunctPtr.NULL_PTR</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12478</sourceline>
      <version>1</version>
      <description>If EcuC_TpTransmit is called with loTpTrasnmitFunctPtr set as NULL_PTR the function shall return E_NOT_OK.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TRANSMIT_IDLE_IDLE</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>EcuC.TxBufferIsLocked.locked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12494</sourceline>
      <version>1</version>
      <description>If EcuC_TxBufferIsLocked() is called when the transmission is ongoing for the Pdu-I (state == TX_ONGOING) the function shall return TRUE.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IS_LOCKED_IDLE_TXONGOING</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>EcuC.TxBufferIsLocked.unlocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12510</sourceline>
      <version>1</version>
      <description>If EcuC_TxBufferIsLocked() is called when no transmission is ongoing for the Pdu-I (state == IDLE) the function shall return FALSE</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IS_LOCKED_IDLE_TXONGOING</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.StartOfReception.RxOngoing.RxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12526</sourceline>
      <version>1</version>
      <description>if reception is already ongoing:
return BUFREQ_E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12543</sourceline>
      <version>1</version>
      <description>if data to copy from lower to upper layer is greater than the expected remaining length, abort reception:
return BUFREQ_E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_COPY_RXDATA_RX_ONGOING_IDLE</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_DET_OK</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12560</sourceline>
      <version>1</version>
      <description>&lt;ul&gt;
 &lt;li&gt;return E_OK [Result == NTFRSLT_OK]&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return E_NOT_OK [Result != NTFRSLT_OK]&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_LARGE_PDU</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RXINDICATION_RX_ONGOING_IDLE</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12581</sourceline>
      <version>1</version>
      <description>if data fits into the receive buffer, copy data from lower to upper layer:
&lt;ul&gt;
 &lt;li&gt;TS_MemCpy(&amp;amp; rxBufferInfoPtr-&amp;gt;SduDataPtr[totalMsgSize - remainMsgSize], PduInfoPtr-&amp;gt;SduDataPtr, PduInfoPtr-&amp;gt;SduLength)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;rxControlInfoPtr-&amp;gt;remainMsgSize -= PduInfoPtr-&amp;gt;SduLength&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;*rxBufferSizePtr = rxControlInfoPtr-&amp;gt;remainMsgSize&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_LARGE_PDU</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing.zeroLength</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12609</sourceline>
      <version>1</version>
      <description>if SduLength is 0 inform the lower layer about the remaining buffer size:
&lt;ul&gt;
 &lt;li&gt;*BufferSizePtr = rxControlInfoPtr-&amp;gt;remainMsgSize&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12631</sourceline>
      <version>1</version>
      <description>if data to receive is unequal 0: 
&lt;ul&gt;
 &lt;li&gt;RxControlInfoPtr-&amp;gt;totalMsgSize = TpSduLength&lt;/li&gt;
 &lt;li&gt;RxControlInfoPtr-&amp;gt;remainMsgSize = TpSduLength&lt;/li&gt;
 &lt;li&gt;*BufferSizePtr =  TpSduLength&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_LARGE_PDU</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_RX_ONGOING</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_RECEPTION</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing.TpSduLength.Zero</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12655</sourceline>
      <version>1</version>
      <description>if StartOfReception is called with RxBufferSizePtr = 0, the size of the receive buffer shall be returned:
&lt;ul&gt;
 &lt;li&gt;RxControlInfoPtr-&amp;gt;totalMsgSize = RxBufferInfoPtr-&amp;gt;SduLength&lt;/li&gt;
 &lt;li&gt;RxControlInfoPtr-&amp;gt;remainMsgSize = RxBufferInfoPtr-&amp;gt;SduLength&lt;/li&gt;
 &lt;li&gt;*RxBufferSizePtr = RxBufferInfoPtr-&amp;gt;SduLength&lt;/li&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_START_OF_RECEPTION_ZERO_SIZE</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Init.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12677</sourceline>
      <version>1</version>
      <description>The state after initalization</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_IDLE</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_InitRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.StartOfReception.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12693</sourceline>
      <version>1</version>
      <description>if data to receive does not fit into the receive buffer:
return BUFREQ_E_OVFL</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_IDLE</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.CopyRxData.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12710</sourceline>
      <version>1</version>
      <description>if no reception is ongoing:
return BUFREQ_E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_IDLE</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>EcuC.TpReception.Tr.RxIndication.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12727</sourceline>
      <version>1</version>
      <description>return E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_RECEPTION_IDLE</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmission.Init.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12743</sourceline>
      <version>1</version>
      <description>&lt;description/&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IDLE_IDLE</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_InitTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12759</sourceline>
      <version>1</version>
      <description>&lt;ul&gt;
 &lt;li&gt;return E_OK [Result == NTFRSLT_OK]&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return E_NOT_OK [Result != NTFRSLT_OK]&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION_LARGE_PDU</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_IDLE</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12780</sourceline>
      <version>1</version>
      <description>&lt;ul&gt;
 &lt;li&gt;TS_MemCpy(PduInfoPtr-&amp;gt;SduDataPtr, &amp;amp;txBufferInfoPtr-&amp;gt;SduDataPtr[txBufferInfoPtr-&amp;gt;SduLength - remainMsgSize], PduInfoPtr-&amp;gt;SduLength)&lt;/li&gt;
 &lt;li&gt;txControlInfoPtr-&amp;gt;remainMsgSize -= PduInfoPtr-&amp;gt;SduLength&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;*TxDataCntPtr = rxControlInfoPtr-&amp;gt;remainMsgSize&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION_LARGE_PDU</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_TXONGOING</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.Transmit.TxOngoing.TxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12805</sourceline>
      <version>1</version>
      <description>if transmission is ongoing:
return E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_TXONGOING</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12822</sourceline>
      <version>1</version>
      <description>if RetryInfoPtr-&amp;gt;TpDataState == TP_DATARETRY and current copy position is smaller than RetryInfoPtr-&amp;gt;TxTpDataCnt:
return BUFREQ_E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_COPY_RETRY_ERROR</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12839</sourceline>
      <version>1</version>
      <description>if RetryInfoPtr-&amp;gt;TpDataState == TP_DATARETRY copy data from current copy position - RetryInfoPtr-&amp;gt;TxTpDataCnt again:
&lt;ul&gt;
 &lt;li&gt;uint16 offset =  txBufferInfoPtr-&amp;gt;SduLength - txControlInfoPtr-&amp;gt;remainMsgSize - RetryInfoPtr-&amp;gt;TxTpDataCnt;&lt;/li&gt;
 &lt;li&gt;TS_MemCpy(PduInfoPtr-&amp;gt;SduDataPtr, &amp;amp;txBufferInfoPtr-&amp;gt;SduDataPtr[offset], PduInfoPtr-&amp;gt;SduLength);&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;update remaining length if PduInfoPtr-&amp;gt;SduLength &amp;gt;RetryInfoPtr-&amp;gt;TxTpDataCnt&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return BUFREQ_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_COPY_RETRY</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_COPY_RETRY_LESS_DATA</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryBUSY</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12865</sourceline>
      <version>1</version>
      <description>if RetryInfoPtr-&amp;gt;TpDataState == TP_DATARETRY and :
if(PduInfoPtr-&amp;gt;SduLength &amp;gt; txControlInfoPtr-&amp;gt;remainMsgSize + RetryInfoPtr-&amp;gt;TxTpDataCnt)
return BUFREQ_E_BUSY: Request could not be fulfilled, because the required amount of Tx data is not available. The lower layer module may retry this call later on. No data has been copied.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_COPY_RETRY_BUSY</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.zeroLength</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12883</sourceline>
      <version>1</version>
      <description>*TxDataCntPtr = rxControlInfoPtr-&amp;gt;remainMsgSize
return BUFREQ_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_TXONGOING_TXONGOING</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12900</sourceline>
      <version>1</version>
      <description>if lower layer returns successful:
&lt;ul&gt;
 &lt;li&gt;LoTpTransmitFuncPtr(PduId, TxBufferInfoPtr)&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;TxControlInfoPtr-&amp;gt;remainMsgSize = TxBufferInfoPtr-&amp;gt;SduLength&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
 &lt;li&gt;return E_OK&lt;/li&gt;
&lt;/ul&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION_LARGE_PDU</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TX_IDLE_TXONGOING</srcid><srcstatus/><internalId>295</internalId></linkedfrom><linkedfrom><srcid>TST_ECUC_TP_TRANSMISSION</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.TxConfirmation.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12925</sourceline>
      <version>1</version>
      <description>if no transmission is ongoing:
return E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IDLE_IDLE</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.CopyTxData.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12942</sourceline>
      <version>1</version>
      <description>no transmission is ongoing:
return BUFREQ_E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IDLE_IDLE</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>EcuC.TpTransmit.Tr.Transmit.Idle.Idle</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12959</sourceline>
      <version>1</version>
      <description>if lower layer transmit function returns an error:
return E_NOT_OK</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_ECUC_TX_IDLE_IDLE</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>TS_EcuC_ConTest_01_TX_IDLE_TxConfirmInterruptTransmit_IDLE</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
  </specobjects>
    <specobjects doctype="dsn_arch">
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeFromPdu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12977</sourceline>
      <version>1</version>
      <description>Defines EcuC_CopyMetaDataTypeFromPdu API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu.Det.PduId</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyMetaDataTypeFromPdu.Det.value.NullPtr</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_537</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeToPdu</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12988</sourceline>
      <version>1</version>
      <description>Defines EcuC_CopyMetaDataTypeToPdu API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu.Det.PduId</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyMetaDataTypeToPdu.Det.value.NullPtr</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_332</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataAddrExtension</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>12999</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataAddrExtension API</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_567</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension</srcid><srcstatus/><internalId>93</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension.Det.PduId</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetAddrExtension.Det.value.NullPtr</srcid><srcstatus/><internalId>95</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataCanId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13010</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataCanId API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetCanId</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetCanId.Det.PduId</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetCanId.Det.value.NullPtr</srcid><srcstatus/><internalId>98</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_598</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataEthMac</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13021</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataEthMac API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetEthernetMac.Det.PduId</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetEthernetMac.Det.value.NullPtr</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetEthMac</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_629</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataLinNad</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13032</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataLinNad API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetLinNad</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetLinNad.Det.PduId</srcid><srcstatus/><internalId>103</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetLinNad.Det.value.NullPtr</srcid><srcstatus/><internalId>104</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_660</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPayloadType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13043</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataPayloadType API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetPayloadType</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPayloadType.Det.PduId</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPayloadType.Det.value.NullPtr</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_837</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPriority</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13054</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMataDataPriority API</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_691</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetPriority.Det.PduId</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPriority.Det.value.NullPtr</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetPriority</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSoConId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13065</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataSoConId API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetSoConId</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSoConId.Det.PduId</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSoConId.Det.value.NullPtr</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_722</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSourceAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13076</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataSourceAddr API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr.Det.PduId</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetSourceAddr.Det.value.NullPtr</srcid><srcstatus/><internalId>116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_753</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataTargetAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13087</sourceline>
      <version>1</version>
      <description>Defines EcuC_GetMetaDataTargetAddr API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr.Det.PduId</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataGetTargetAddr.Det.value.NullPtr</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_784</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataAddrExtension</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13098</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataAddrExtension API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetAddrExtension</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetAddrExtension.Det.PduId</srcid><srcstatus/><internalId>128</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_362</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataCanId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13109</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataCanId API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetCanId</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetCanId.Det.PduId</srcid><srcstatus/><internalId>130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_383</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataEthMac</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13120</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataEthMac API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetEthernetMac.Det.value.NullPtr</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetEthMac</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetEthMac.Det.PduId</srcid><srcstatus/><internalId>133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_403</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataLinNad</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13131</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataLinNad API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetLinNad</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetLinNad.Det.PduId</srcid><srcstatus/><internalId>135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_434</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPayloadType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13142</sourceline>
      <version>1</version>
      <description>Defines EcuC_EcuC_SetMetaDataPayloadType API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetPayloadType</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPayloadType.Det.PduId</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_816</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPriority</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13153</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataPriority API</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_454</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetPriority</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetPriority.Det.PduId</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSoConId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13164</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataSoConId API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetSoConId</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetSoConId.Det.PduId</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_474</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataTargetAddr</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13175</sourceline>
      <version>1</version>
      <description>Defines EcuC_SetMetaDataTargetAddr API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.MetaDataSetTargetAddr</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>EcuC.MetaDataSetTargetAddr.Det.PduId</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC_MetaData.c_516</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13186</sourceline>
      <version>1</version>
      <description>Defines EcuC_CopyRxData API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing.zeroLength</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.CopyRxData.Idle.Idle</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_128</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxDataDet</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13197</sourceline>
      <version>1</version>
      <description>Defines EcuC_CopyRxDataDet API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyRxData.Det.PduInfoPtr.NULL_PTR</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyRxData.Det.PduInfoPtr.SduDataPtr.NULL_PTR</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>EcuC.CopyRxData.Det.rxBufferSizePtr.NULL_PTR</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_213</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13208</sourceline>
      <version>1</version>
      <description>Defines EcuC_CopyTxData API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.CopyTxData.Higher.SduLength</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryError</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryBUSY</srcid><srcstatus/><internalId>177</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.zeroLength</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.CopyTxData.Idle.Idle</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_319</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_InitRx</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13219</sourceline>
      <version>1</version>
      <description>Defines EcuC_InitRx API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpReception.Init.Idle</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_57</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_InitTx</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13230</sourceline>
      <version>1</version>
      <description>Defines EcuC_InitTx API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpTransmission.Init.Idle</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_310</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_RxBufferIsLocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13241</sourceline>
      <version>1</version>
      <description>Defines EcuC_RxBufferIsLocked API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.RxBufferIsLocked.locked</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>EcuC.RxBufferIsLocked.unlocked</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_184</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13252</sourceline>
      <version>1</version>
      <description>Defines EcuC_StartOfReception API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpReception.Tr.StartOfReception.RxOngoing.RxOngoing</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing.TpSduLength.Zero</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.StartOfReception.Idle.Idle</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_66</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReceptionDet</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13263</sourceline>
      <version>1</version>
      <description>Defines EcuC_StartOfReceptionDet API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.StartOfReception.Det.PduInfoPtr.notNULL_PTR</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>EcuC.StartOfReception.Det.RxBufferSizePtr.NULL_PTR</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_241</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_TpRxIndication</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13274</sourceline>
      <version>1</version>
      <description>Defines EcuC_TpRxIndication API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpReception.Tr.RxIndication.Idle.Idle</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_269</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13285</sourceline>
      <version>1</version>
      <description>Defines EcuC_TpTransmit API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpTransmit.loTpTrasnmitFunctPtr.NULL_PTR</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.Transmit.TxOngoing.TxOngoing</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.Transmit.Idle.Idle</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_412</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_TpTxConfirmation</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13296</sourceline>
      <version>1</version>
      <description>Defines EcuC_TpTxConfirmation API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle</srcid><srcstatus/><internalId>172</internalId></linkedfrom><linkedfrom><srcid>EcuC.TpTransmit.Tr.TxConfirmation.Idle.Idle</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_449</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>EcuC.ArchDesign.API.TpLib.EcuC_TxBufferIsLocked</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/doc/project/design/pdf/EcuC_Design-profiled.xml</sourcefile>
      <sourceline>13307</sourceline>
      <version>1</version>
      <description>Defines EcuC_TxBufferIsLocked API</description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuC.TxBufferIsLocked.locked</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>EcuC.TxBufferIsLocked.unlocked</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuC.c_388</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/ComStack_Timers.h_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/include/ComStack_Timers.h</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComStack_Timers.h_141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/include/ComStack_Timers.h</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimerAutorepeat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_30</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.InitTimerHandler</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_82</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ProcessTimerTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StopTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.PauseTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ResumeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComStack_Timers.c_253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/ComStack_Timers.c</sourcefile>
      <sourceline>253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.IsTimerStarted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/EcuC.c_57</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_InitRx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReception</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_RxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyRxDataDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_StartOfReceptionDet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_InitTx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_319</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_CopyTxData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TxBufferIsLocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTransmit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC.c_449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.API.TpLib.EcuC_TpTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_332</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>332</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeToPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_403</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_454</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_CopyMetaDataTypeFromPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_722</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_753</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>753</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_816</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>816</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_SetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuC_MetaData.c_837</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/src/EcuC_MetaData.c</sourcefile>
      <sourceline>837</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.ArchDesign.MetaData.API.EcuC_GetMetaDataPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn_arch</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/config/EcuC_Extension.xdm.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/config/EcuC_Extension.xdm.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.PduIdType.DefaultValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuC_Extension.xdm.m4_86</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/config/EcuC_Extension.xdm.m4</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.PduIdType.DefaultValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuC_Extension.xdm.m4_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/config/EcuC_Extension.xdm.m4</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.PduLengthType.DefaultValue</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuC_Extension.xdm.m4_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/config/EcuC_Extension.xdm.m4</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.PduLengthType.DefaultValue</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuC_Extension.xdm.m4_263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/src/Autosar/config/EcuC_Extension.xdm.m4</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.PduLengthType.Check</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_EcuC_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/build/reqm/common_req/EcuC_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(EcuC.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_EcuC_Comtest_01_HandleIdGenerator</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Compile/IN/EcuC_ComTest_01/source/application/EcuC_HandleIdGenerator_Test.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that invoking the handle ID autocalc wizard creates a valid configuration
   (i.e., a configuration adhering to the constraints of the module's generator (e.g., zero-based,
   dense, and unique)) out of an invalid configuration (i.e., a configuration violating the
   constraints of the module's generator (e.g., not zero-based, not dense, and not unique)).

   The handle IDs for the following parameters are checked by this
   test:
     - PduId
  
Test Object: None.
Test Precondition: None.
Test Execution: 
      VP: The test is successful when the EcuC compiles
  
Test Input: 
    Configuration with deliberately wrong Pdu IDs (non
    zero-based, not dense, and not unique).
  
Test Output: 
    Binary file.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.HandleIdGenerator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>ComStack_Timers_01000_AutoTestTimers</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: This is a test case for test of the timers. Timers are split into five groups, some groups are auto repeating and some are not. Correct number of timeouts for each timer is calculated based on number of COMSTACK_TIMERS_PROCESS calls and timer interval and stored in Test_TimerTimeoutCounters array. During timeout for each timer callback is called and corresponding counter in Test_TimerTimeoutCounters is decreased. In the end all counters should reach zero.
Test Object: Timer API-s and functionality automated test.
Test Precondition: 
  
Test Execution: 
    01: Call ComStack_Timers_InitTimerHandler() to initialize timers.
    02: Start all timers and precalculate number of timeouts for each timer and store it.
    03: Call COMSTACK_TIMERS_PROCESS predefined number of times.
    04: VP(ComStack_Timers.dsn.Api.StartTimer,1)
        VP(ComStack_Timers.dsn.Api.StartTimerAutorepeat,1)
        VP(ComStack_Timers.dsn.Api.ProcessTimerTimeout,1) Verify that each timer timeout counter has reached zero.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimerAutorepeat</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ProcessTimerTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01001_InitTimerHandler</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_InitTimerHandler() called with correct set of inputs sets initial values for timer handler.
Test Object: ComStack_Timers_InitTimerHandler().
Test Precondition: 
  
Test Execution: 
    01: Set timer handler as not initialized.
    02: Call ComStack_Timers_InitTimerHandler to start initialization procedure.
    03: VP(ComStack_Timers.dsn.Api.InitTimerHandler,1) Verify that timer handler has been initialized.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.InitTimerHandler</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01002_InitTimerHandler_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_InitTimerHandler() called with TimerHandlerPtr as NULL_PTR or TimerHndCfgPtr as NULL_PTR will ignore the call.
Test Object: ComStack_Timers_InitTimerHandler().
Test Precondition: 
  
Test Execution: 
    01: Set timer handler as initialized.
    02: Call ComStack_Timers_InitTimerHandler with NULL TimerHndCfgPtr.
    03: VP(ComStack_Timers.dsn.Api.InitTimerHandler.Ignore,1) Verify that ComStack_Timers_InitTimerHandler() call was ignored and initialization flag was updated accordingly.
    04: Set timeout value for timers to a value different than initial value.
    05: Call ComStack_Timers_InitTimerHandler with NULL TimerHandlerPtr.
    06: VP(ComStack_Timers.dsn.Api.InitTimerHandler.Ignore,1) Verify that ComStack_Timers_InitTimerHandler() call was ignored and time out value of timers have not been initialized.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.InitTimerHandler.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01021_StartTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StartTimer() called with certain amount of ticks shall set NextTimeoutValue to CurrentTimerValue + amount of ticks specified in ComStack_Timers_StartTimer. If next NextTimeoutValue comes sooner than previously set by ComStack_Timers_StartTimer it shall be set to smaller value that comes sooner.
Test Object: ComStack_Timers_StartTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
  
Test Execution: 
    01: Sanity check - Confirm there are no timers currently running.
    02: Call ComStack_Timers_StartTimer() to tick after 10 ticks.
    03: VP(ComStack_Timers.dsn.Api.StartTimer,1) Verify that ComStack_Timers_StartTimer() started one timer with timeout value after 10 ticks.
    04: Call ComStack_Timers_StartTimer() for other timer to tick after 5 ticks.
    05: VP(ComStack_Timers.dsn.Api.StartTimer,1) Verify that ComStack_Timers_StartTimer() next timeout value is updated and running timer count increased.
    06: Call ComStack_Timers_StartTimer() for other timer already started timer.
    07: VP(ComStack_Timers.dsn.Api.StartTimer,1) Verify that ComStack_Timers_StartTimer() call has not changed running timers count.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01003_StartTimer_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StartTimer() called with TimerHandlerPtr as NULL_PTR will ignore the call and will not start the timer.
Test Object: ComStack_Timers_StartTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
  
Test Execution: 
    01: Sanity check - Confirm there are no timers currently running.
    02: Call ComStack_Timers_StartTimer() with NULL TimerHandlerPtr.
    03: VP(ComStack_Timers.dsn.Api.StartTimer.Ignore,1) Verify that ComStack_Timers_StartTimer() call was ignored and there are no timers running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimer.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01004_StartTimer_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StartTimer() called when the timer handler has not been initialized will ignore the call and will not start the timer.
Test Object: ComStack_Timers_StartTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
  
Test Execution: 
    01: Sanity check - Confirm there are no timers currently running.
    02: Set timer handler as not initialized.
    03: Call ComStack_Timers_StartTimer().
    04: VP(ComStack_Timers.dsn.Api.StartTimer.Uninitialized,1) Verify that ComStack_Timers_StartTimer() call was ignored and there are no timers running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimer.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01005_StartTimerAutorepeat_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StartTimerAutorepeat() called with TimerHandlerPtr as NULL_PTR will ignore the call and will not start the timer.
Test Object: ComStack_Timers_StartTimerAutorepeat().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
  
Test Execution: 
    01: Sanity check - Confirm there are no timers currently running.
    02: Call ComStack_Timers_StartTimerAutorepeat().
    03: VP(ComStack_Timers.dsn.Api.StartTimerAutorepeat.Ignore,1) Verify that ComStack_Timers_StartTimerAutorepeat() call was ignored and there are no timers running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01006_StartTimerAutorepeat_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StartTimerAutorepeat() called when the timer handler has not been initialized will ignore the call and will not start the timer.
Test Object: ComStack_Timers_StartTimerAutorepeat().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
  
Test Execution: 
    01: Sanity check - Confirm there are no timers currently running.
    02: Set timer handler as not initialized.
    03: Call ComStack_Timers_StartTimerAutorepeat().
    04: VP(ComStack_Timers.dsn.Api.StartTimerAutorepeat.Uninitialized,1) Verify that ComStack_Timers_StartTimerAutorepeat() call was ignored and there are no timers running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StartTimerAutorepeat.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01007_StopTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StopTimer() called with correct set of inputs will stop the specified timer.
Test Object: ComStack_Timers_StopTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Call ComStack_Timers_StopTimer().
    03: VP(ComStack_Timers.dsn.Api.StopTimer,1) Verify that there are no timers running.
    04: Call ComStack_Timers_StopTimer() again for the same timer.
    05: VP(ComStack_Timers.dsn.Api.StopTimer.AlreadyStopped,1) Verify that Running timers count has not changed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StopTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StopTimer.AlreadyStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01008_StopTimer_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StopTimer() called with TimerHandlerPtr as NULL_PTR will ignore the call and will not stop the timer.
Test Object: ComStack_Timers_StopTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Call ComStack_Timers_StopTimer() with NULL TimerHandlerPtr.
    03: VP(ComStack_Timers.dsn.Api.StopTimer.Ignore,1) Verify that ComStack_Timers_StopTimer() call was ignored and no timers were stopped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StopTimer.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01009_StopTimer_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_StopTimer() called when the timer handler has not been initialized will ignore the call and will not stop the timer.
Test Object: ComStack_Timers_StopTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Set timer handler as not initialized.
    03: Call ComStack_Timers_StopTimer() when timer handler is not initialized.
    04: VP(ComStack_Timers.dsn.Api.StopTimer.Uninitialized,1) Verify that ComStack_Timers_StopTimer() call was ignored and no timers were stopped.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.StopTimer.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01010_PauseTimer_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_PauseTimer() called with TimerHandlerPtr as NULL_PTR will ignore the call and not pause the timer.
Test Object: ComStack_Timers_PauseTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Call ComStack_Timers_PauseTimer() before timer is started, so it shall be ignored.
    02: Sanity check - Confirm there is one timer currently running.
    03: Set the timer count value.
    04: Call ComStack_Timers_PauseTimer().
    05: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro to make the timeout pass.
    06: VP(ComStack_Timers.dsn.Api.PauseTimer.Ignore,1) Verify that the timer is still running and the timeout counter has reached zero.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.PauseTimer.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01011_PauseTimer_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_PauseTimer() called when the timer handler has not been initialized will ignore the call and will not pause the timer, however timeout will not be reached since ComStack_Timers_ProcessTimerTimeout also needs the timer handler to be initialized.
Test Object: ComStack_Timers_PauseTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Set timer handler as not initialized.
    03: Call ComStack_Timers_PauseTimer() when timer handler is not initialized.
    04: VP(ComStack_Timers.dsn.Api.PauseTimer.Uninitialized,1) Verify that the timer is still running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.PauseTimer.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01012_ResumeTimer</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_ResumeTimer() called with correct set of inputs will make the timer continue running and that, once is resumed, the timeout counter will reach zero after the timeout passes.
Test Object: ComStack_Timers_ResumeTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Call ComStack_Timers_ResumeTimer() before it is paused, so it shall be ignored.
    03: Call ComStack_Timers_PauseTimer() to pause timer.
    04: Set the timer count value.
    05: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro.
    06: VP(ComStack_Timers.dsn.Api.PauseTimer,1)
        VP(ComStack_Timers.dsn.Api.ResumeTimer,1) Verify that there are no timers running and that the timeout counter has not changed.
    07: Call ComStack_Timers_ResumeTimer().
    08: VP(ComStack_Timers.dsn.Api.ResumeTimer,1) Verify that the timer is running.
    09: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro to make the timeout pass.
    10: VP(ComStack_Timers.dsn.Api.ResumeTimer,1) Verify that the timeout counter has reached zero.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.PauseTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ResumeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01013_ResumeTimer_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_ResumeTimer() called with TimerHandlerPtr as NULL_PTR will ignore the call and no progress shall be made.
Test Object: ComStack_Timers_ResumeTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
    -   Call ComStack_Timers_PauseTimer() to pause timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Sanity check - Confirm there is no timer currently running.
    03: Set the timer count value.
    04: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro.
    05: Sanity check - Verify that the timeout counter has not changed.
    06: Call ComStack_Timers_ResumeTimer() with NULL TimerHandlerPtr.
    07: VP(ComStack_Timers.dsn.Api.ResumeTimer.Ignore,1) Verify that the timer is not running.
    08: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro to make the timeout pass.
    09: VP(ComStack_Timers.dsn.Api.ResumeTimer.Ignore,1) Verify that the timeout counter has not changed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ResumeTimer.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01014_ResumeTimer_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_ResumeTimer() called when the timer handler has not been initialized will ignore the call and will not resume the timer.
Test Object: ComStack_Timers_ResumeTimer().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
    -   Call ComStack_Timers_PauseTimer() to pause timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Sanity check - Confirm there is no timer currently running.
    03: Set the timer count value.
    04: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro.
    05: VP(ComStack_Timers.dsn.Api.ResumeTimer,1) Verify that the timeout counter has not changed.
    06: Set timer handler as not initialized.
    07: Call ComStack_Timers_ResumeTimer() when timer handler is not initialized.
    08: VP(ComStack_Timers.dsn.Api.ResumeTimer.Uninitialized,1) Verify that the timer is not running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ResumeTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ResumeTimer.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01015_IsTimerStarted</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_IsTimerStarted() called with correct set of inputs will return E_OK if timer has been started or E_NOT_OK if timer is not running.
Test Object: ComStack_Timers_IsTimerStarted().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Call ComStack_Timers_IsTimerStarted().
    03: VP(ComStack_Timers.dsn.Api.IsTimerStarted,1) Verify that the return value is E_OK since timer has been started.
    04: Call ComStack_Timers_StopTimer().
    05: Sanity check - Confirm there is no timer currently running.
    06: Call ComStack_Timers_IsTimerStarted().
    07: VP(ComStack_Timers.dsn.Api.IsTimerStarted,1) Verify that the return value is E_NOT_OK since timer is not running.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.IsTimerStarted</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01016_IsTimerStarted_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_IsTimerStarted() called with TimerHandlerPtr as NULL_PTR will ignore the call and will return E_NOT_OK.
Test Object: ComStack_Timers_IsTimerStarted().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Call ComStack_Timers_IsTimerStarted() with NULL TimerHandlerPtr.
    03: VP(ComStack_Timers.dsn.Api.IsTimerStarted.Ignore,1) Verify that the return value is E_NOT_OK since ComStack_Timers_IsTimerStarted() failed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.IsTimerStarted.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01017_IsTimerStarted_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_IsTimerStarted() called when the timer handler has not been initialized will ignore the call and will return E_NOT_OK.
Test Object: ComStack_Timers_IsTimerStarted().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Set timer handler as not initialized.
    03: Call ComStack_Timers_IsTimerStarted() when timer handler is not initialized.
    04: VP(ComStack_Timers.dsn.Api.IsTimerStarted.Uninitialized,1) Verify that the return value is E_NOT_OK since ComStack_Timers_IsTimerStarted() failed.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.IsTimerStarted.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01018_ProcessTimerTimeout_Ignore</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_ProcessTimerTimeout() called with TimerHandlerPtr as NULL_PTR will ignore the call and will not modify the timeout counter.
Test Object: ComStack_Timers_ProcessTimerTimeout() through function like macro COMSTACK_TIMERS_PROCESS().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Set the timer count value.
    03: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro with NULL TimerHandlerPtr.
    04: VP(ComStack_Timers.dsn.Api.ProcessTimerTimeout.Ignore,1) Verify that the timeout counter has not been modified.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Ignore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01019_ProcessTimerTimeout_Uninitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>484</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_ProcessTimerTimeout() called when the timer handler has not been initialized will ignore the call and will not modify the timeout counter.
Test Object: ComStack_Timers_ProcessTimerTimeout() through function like macro COMSTACK_TIMERS_PROCESS().
Test Precondition: 
    -   Call ComStack_Timers_InitTimerHandler() to initialize timer handler.
    -   Call ComStack_Timers_StartTimer() to start timer.
  
Test Execution: 
    01: Sanity check - Confirm there is one timer currently running.
    02: Set the timer count value.
    03: Set timer handler as not initialized.
    04: Call ComStack_Timers_ProcessTimerTimeout() through the function like macro when timer handler is not initialized.
    05: VP(ComStack_Timers.dsn.Api.ProcessTimerTimeout.Uninitialized,1) Verify that the timeout counter has not been modified.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.ProcessTimerTimeout.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>ComStack_Timers_01020_InitTimerHandler_Failed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/ComStack_Timers/TestSpec_Generated.h</sourcefile>
      <sourceline>507</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: Test case verifies that ComStack_Timers_InitTimerHandler() called with incorrect timer handler, timers will not be initialized.
Test Object: ComStack_Timers_InitTimerHandler().
Test Precondition: 
  
Test Execution: 
    01: Call ComStack_Timers_InitTimerHandler to start initialization procedure.
    02: VP(ComStack_Timers.dsn.Api.InitTimerHandler,1) Verify that timer handler has not been initialized.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComStack_Timers.dsn.Api.InitTimerHandler</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_LARGE_PDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Con_PduLengthType_32/source/application/Tests.c</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify reception of data with length greater than 64k
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: VP(EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing)
        Call EcuC_StartOfReception with TpSduLength smaller than receive buffer size
        Verify that it returns BUFREQ_OK and that state transfered to RXONGOING
    02: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing)
        Call EcuC_CopyRxData until all data is copied
        Verify that it returns BUFREQ_OK and that state remained RXONGOING
        Verify that remainingBuffSize is 0 when all data is copied
    03: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_OK and verify that BUFREQ_OK was returned
        and state IDLE was entered
        Verify that data is copied correctly
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_TRANSMISSION_LARGE_PDU</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Con_PduLengthType_32/source/application/Tests.c</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify transmission of data with length greater than 64k
  
Test Object: 
    Transmission TP API
  
Test Precondition: 
    EcuC transmission is initialized
  
Test Execution: 
    01: VP (EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing)
        Verify transition idle TxOngoing via Transmit
        Check that Transmit return E_OK
        Check that state changed to ECUC_STATE_TXONGOING
    02: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing)
        Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    03: VP (EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle)
        Verify transition TxOngoing IDLE via TxConfimration, Result = E_OK
        Check that TxConfimration return E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TST_ECUC_COMPATIBILITY_VERSION_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies the correct behaviour of the version compatibility
    check macro.
    For test maintenance purposes the EcuC AUTOSAR module version macros are used.
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    none
  
Test Execution: 
    01: VP version compatibility check macro returns TRUE for compatible versions
    02: VP version compatibility check macro returns FLASE for non compatible major version
    03: VP version compatibility check macro returns FLASE for non compatible minor version
    04: VP version compatibility check macro returns FLASE for non compatible patch version
    05: VP version compatibility check macro returns TRUE for compatible patch version
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.VersionCompatibilityCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
        - transition Initial -&gt; IDLE with calling EcuC_InitRx
        - that EcuC_RxBufferIsLocked returns FALSE when no reception is ongoing, state is IDLE
        - that EcuC_StartOfReception returns BUFREQ_E_OVFL if
          TpSduLength greater than receive buffer size
        - that EcuC_CopyRxData returns BUFREQ_E_NOT_OK when no reception is ongoing, state is IDLE
        - that EcuC_TpRxIndication returns E_NOT_OK when reception isn't completed, state is IDLE
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    none
  
Test Execution: 
    01: Call EcuC_InitRx to initialize the control data structure of the receive buffer
    02: VP(EcuC.TpReception.Init.Idle) Verify that state is IDLE and sizes are equal 0
    03: VP(EcuC.RxBufferIsLocked.unlocked)
        Call EcuC_RxBufferIsLocked to check reception is not ongoing and verify that return
        value is FALSE and state is IDLE
    04: Set up TP receive buffer and size
    05: VP(EcuC.TpReception.Tr.StartOfReception.Idle.Idle)
        Call EcuC_StartOfReception with TpSduLength greater than receive buffer size
        Verify that it returns BUFREQ_E_OVFL and that state remained IDLE
    06: Set up the source data and number of bytes to be copied
    07: VP(EcuC.TpReception.Tr.CopyRxData.Idle.Idle)
        Call EcuC_CopyRxData to copy data to the receive buffer
        Verify that it returns BUFREQ_E_NOT_OK and that state remained IDLE
    08: VP(EcuC.TpReception.Tr.RxIndication.Idle.Idle)
        Call EcuC_TpRxIndication with E_OK to check if reception has been completed
        Verify that it returns E_NOT_OK and that state remained IDLE
    09: VP(EcuC.TpReception.Tr.RxIndication.Idle.Idle)
        Call EcuC_TpRxIndication with E_NOT_OK to check if reception has been completed
        Verify that it returns E_NOT_OK and that state remained IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Init.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>EcuC.RxBufferIsLocked.unlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.RxIndication.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_START_OF_RECEPTION_ZERO_SIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
      - that EcuC_StartOfReception returns the receive buffer size and BUFREQ_OK when
        TpSduLength is set to 0 and state is IDLE
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: Set up TP receive buffer and size
    02: VP(EcuC.TpReception.Tr.StartOfReception.Idle.Idle.TpSduLength.Zero)
        Call EcuC_StartOfReception with TpSduLength 0
        Verify that it returns receive buffer size, BUFREQ_OK and that state
        transfered to RXONGOING
    03: Set up the source data and number of bytes to be copied
    04: VP()
        Call EcuC_CopyRxData to copy data to the receive buffer
        Verify that it returns BUFREQ_OK and that state remained RXONGOING
    05: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_OK and verify that BUFREQ_OK was returned
        and state IDLE was entered
        Verify that data is copied correctly
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing.TpSduLength.Zero</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_RX_ONGOING</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>400</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
        - transition IDLE -&gt; RXONGOING with calling EcuC_StartOfReception
        - that EcuC_RxBufferIsLocked returns TRUE when reception is ongoing, state is RXONGOING
        - that EcuC_CopyRxData returns BUFREQ_OK when reception is ongoing, and length of
          source buffer is 0
        - that EcuC_CopyRxData returns BUFREQ_OK when reception is ongoing, and length of
          source buffer is lesser or equal to the receiving buffer
        - that EcuC_StartOfReception returns BUFREQ_E_NOT_OK when called in state RXONGOING
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: Set up TP receive buffer and size
    02: VP(EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing)
        Call EcuC_StartOfReception with TpSduLength smaller than receive buffer size
        Verify that it returns BUFREQ_OK and that state transfered to RXONGOING
    03: VP(EcuC.TpReception.Tr.StartOfReception.RxOngoing.RxOngoing)
        Call EcuC_StartOfReception in state RXONGOING
        Verify that it returns BUFREQ_E_NOT_OK
    04: VP(EcuC.RxBufferIsLocked.locked)
        Call EcuC_RxBufferIsLocked to check reception is ongoing and verify that return
        value is TRUE and state is RXONGOING
    05: Set up the source data and number of bytes for copying to be equal 0
    06: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing.zeroLength)
        Call EcuC_CopyRxData to try to copy data to the receive buffer
        Verify that it returns BUFREQ_OK and that state remained RXONGOING
    07: Set up the source data and number of bytes for copying
    08: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing)
        Call EcuC_CopyRxData to copy data to the receive buffer
        Verify that it returns BUFREQ_OK and that state remained RXONGOING
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EcuC.RxBufferIsLocked.locked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing.zeroLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.RxOngoing.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_COPY_RXDATA_RX_ONGOING_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>564</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
        - if data to copy from lower to upper layer is greater than the expected remaining length,
          abort reception: return BUFREQ_E_NOT_OK
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: Set up TP receive buffer and size
    02: Call EcuC_StartOfReception to enter state RXONGOING
    03: Set up TP receiving buffer and size lesser than message needed to be copied
        Set up the source data and number of bytes for copying
    04: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle)
        Call EcuC_CopyRxData to try to copy data to the receive buffer
        Verify that it returns BUFREQ_E_NOT_OK and that state transferred to IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_RXINDICATION_RX_ONGOING_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
        - that EcuC_TpRxIndication returns BUFREQ_OK and changes state to IDLE while in
          state RXONGOING and E_OK was received
        - that EcuC_TpRxIndication returns E_NOT_OK and changes state to IDLE while in
          state RXONGOING and E_NOT_OK was received
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: Set up TP receive buffer and size
    02: Call EcuC_StartOfReception to enter state RXONGOING
    03: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_OK and verify that BUFREQ_OK was returned
        and state IDLE was entered
    04: Call EcuC_StartOfReception to enter state RXONGOING
    05: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_NOT_OK and verify that E_NOT_OK was returned
        and state IDLE was entered
    06: Set up pduLength == SduLength
    07: Call EcuC_StartOfReception to enter state RXONGOING
    08: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_OK and verify that BUFREQ_OK was returned
        and state IDLE was entered
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_RX_ONGOING_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies:
      - that EcuC_CopyRxDataDet returns E_NOT_OK when called with PduInfoPtr as NULL_PTR
      - that EcuC_CopyRxDataDet returns E_NOT_OK when called with rxBufferSizePtr as NULL_PTR
      - that EcuC_CopyRxDataDet returns E_NOT_OK when called with PduInfoPtr.SduLength &gt; 0
        and PduInfoPtr.SduDataPtr as NULL_PTR
      - that EcuC_StartOfReceptionDet returns E_NOT_OK when called with RxBufferSizePtr
        as NULL_PTR
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    none
  
Test Execution: 
    01: Set up the source data and number of bytes for copying
    02: VP(EcuC.CopyRxData.Det.PduInfoPtr.NULL_PTR)
        Call EcuC_CopyRxDataDet with PduInfoPtr set as NULL_PTR and verify that it returned
        E_NOT_OK
    03: VP(EcuC.CopyRxData.Det.rxBufferSizePtr.NULL_PTR)
        Call EcuC_CopyRxDataDet with rxBufferSizePtr set as NULL_PTR and verify that it returned
        E_NOT_OK
    04: Set up the source data to be NULL_PTR and number of bytes for copying to be greater than 0
    05: VP(EcuC.CopyRxData.Det.PduInfoPtr.SduDataPtr.NULL_PTR)
        Call EcuC_CopyRxDataDet and verify that it returned E_NOT_OK
    06: VP(EcuC.StartOfReception.Det.RxBufferSizePtr.NULL_PTR)
        Call EcuC_StartOfReceptionDet with RxBufferSizePtr set as NULL_PTR and verify that it
        returned E_NOT_OK
    07: VP(EcuC.StartOfReception.Det.PduInfoPtr.notNULL_PTR)
        Call EcuC_StartOfReceptionDet with PduInfoPtr set NOT as NULL_PTR and verify that it
        returned E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.CopyRxData.Det.PduInfoPtr.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyRxData.Det.rxBufferSizePtr.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyRxData.Det.PduInfoPtr.SduDataPtr.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>EcuC.StartOfReception.Det.RxBufferSizePtr.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>EcuC.StartOfReception.Det.PduInfoPtr.notNULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION_DET_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies transition IDLE -&gt; RXONGOING -&gt; IDLE with checking that there are no
    det errors.
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: Set up TP receive buffer and size
    02: Check that TP receive buffer is not a NULL_PTR
    03: Call EcuC_StartOfReception to enter state RXONGOING
    04: Set up TP receiving buffer and size lesser than message needed to be copied
        Set up the source data and number of bytes for copying
    05: Check that the remaining buffer size and the source data and number of bytes for copying
        are correctly set
    06: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle)
        Call EcuC_CopyRxData to try to copy data to the receive buffer
        Verify that it returns BUFREQ_E_NOT_OK and that state transferred to IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_RECEPTION</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify reception of data
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: VP(EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing)
        Call EcuC_StartOfReception with TpSduLength smaller than receive buffer size
        Verify that it returns BUFREQ_OK and that state transfered to RXONGOING
    02: VP(EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing)
        Call EcuC_CopyRxData until all data is copied
        Verify that it returns BUFREQ_OK and that state remained RXONGOING
        Verify that remainingBuffSize is 0 when all data is copied
    03: VP(EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle)
        Call EcuC_TpRxIndication with E_OK and verify that BUFREQ_OK was returned
        and state IDLE was entered
        Verify that data is copied correctly
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpReception.Tr.StartOfReception.Idle.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.CopyRxData.RxOngoing.RxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpReception.Tr.RxIndication.RxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_IDLE_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC transitions IDLE -&gt; IDLE via :
      - TxConfirmation
      - CopyTxData
      - Transmit
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - none
  
Test Execution: 
    01: VP (EcuC.TpTransmission.Init.Idle)
        Verify transition init idle via EcuC_InitTx
    02: VP (EcuC.TpTransmit.Tr.TxConfirmation.Idle.Idle)
        Verify transition idle idle via TxConfirmation
        Check that TxConfimration returns E_OK if Result = E_OK
        Check that TxConfimration returns E_NOT_OK if Result = E_NOT_OK
    03: VP (EcuC.TpTransmit.Tr.CopyTxData.Idle.Idle)
        Verify transition idle idle via CopyTxData
        Check that CopyTxData returns BUFREQ_E_NOT_OK
    04: VP (EcuC.TpTransmit.Tr.Transmit.Idle.Idle)
        Verify transition idle idle via Transmit
        Check that Transmit return E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmission.Init.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.TxConfirmation.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_IDLE_TXONGOING</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC transitions IDLE -&gt; TXONGOING
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized
  
Test Execution: 
    01: VP (EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing)
        Verify transition idle TxOngoing via Transmit
        Check that Transmit return E_OK
        Check that state changed to ECUC_STATE_TXONGOING
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_TXONGOING</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC transitions TXONGOING -&gt; TXONGOING via :
      - Transmit
      - CopyTxData
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: VP (EcuC.TpTransmit.Tr.Transmit.TxOngoing.TxOngoing)
        Verify transition TxOngoing TxOngoing via Transmit
        Check that Transmit return E_NOT_OK
    02: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing)
        Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    03: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.zeroLength)
        Verify transition TxOngoing TxOngoing via CopyTxData zero length
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter stays the same since length is 0
    04: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing)
        Verify transition TxOngoing TxOngoing via CopyTxData with RetryInfoPtr set as NULL_PTR
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.TxOngoing.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.zeroLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC transitions TXONGOING -&gt; IDLE
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: VP (EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle)
        Verify transition TxOngoing IDLE via TxConfimration, Result = E_OK
        Check that TxConfimration return E_OK
    02: VP (EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle)
        Verify transition TxOngoing IDLE via TxConfimration, Result = E_NOT_OK
        Check that TxConfimration return E_NOT_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_COPY_TXDATA_HIGHER_LENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1636</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that if EcuC_CopyTxData is called with data size needed to be copied
    higher than remaining message size then BUFREQ_E_BUSY shall be returned and no data copied.
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: Set size of buffer where data is copied greater than message size
    02: VP(EcuC.CopyTxData.Higher.SduLength)
        Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_E_BUSY
        Check that data wasn't copied
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.CopyTxData.Higher.SduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TRANSMIT_IDLE_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that state remained IDLE after calling Transmit with:
        - loTpTrasnmitFunct set as NULL_PTR
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized
  
Test Execution: 
    01: Set loTpTrasnmitFunct as NULL_PTR
    02: VP (EcuC.TpTransmit.loTpTrasnmitFunctPtr.NULL_PTR)
        Call EcuC_TpTransmit and verify that E_NOT_OK was returned and that state remained IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.loTpTrasnmitFunctPtr.NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_IS_LOCKED_IDLE_TXONGOING</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1805</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that EcuC is unlocked in state ECUC_STATE_IDLE and
    locked in state ECUC_STATE_TXONGOING.
  
Test Object: 
    EcuC transmission
  
Test Precondition: 
    - EcuC transmission is initialized
  
Test Execution: 
    01: VP(EcuC.TxBufferIsLocked.unlocked)
        Call EcuC_TxBufferIsLocked and verify that FALSE is returned
    02: Call EcuC_TpTransmit to change the state to ECUC_STATE_TXONGOING
    03: VP(EcuC.TxBufferIsLocked.locked)
        Call EcuC_TxBufferIsLocked and verify that TRUE is returned
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TxBufferIsLocked.unlocked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>EcuC.TxBufferIsLocked.locked</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TP_TRANSMISSION</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>1891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify data transmission
  
Test Object: 
    Reception TP API
  
Test Precondition: 
    EcuC receiving is initialized
  
Test Execution: 
    01: VP (EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing)
        Verify transition idle TxOngoing via Transmit
        Check that Transmit return E_OK
        Check that state changed to ECUC_STATE_TXONGOING
    02: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing)
        Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    03: VP (EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle)
        Verify transition TxOngoing IDLE via TxConfimration, Result = E_OK
        Check that TxConfimration return E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.Idle.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.TxConfirmation.TxOngoing.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_COPY_RETRY</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>2023</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC additional data copy with retry state set as TP_DATARETRY.
  
Test Object: 
    EcuC transmission copy
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    02: Corrupt data and setup buffers for copying
    03: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry):
        Verify that data was copied correctly, but data transmit counter wasn't decremented
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_COPY_RETRY_LESS_DATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>2165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC data copy with retry state set as TP_DATARETRY and copy length is
    lesser than length of the data needed to be copied.
  
Test Object: 
    EcuC transmission copy
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    02: Corrupt data and setup buffers for copying, copy just the part of the corrupted message
    03: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry):
        Verify that data was copied correctly, but data transmit counter wasn't decremented
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_COPY_RETRY_BUSY</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>2310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC should not copy additional data with retry state set as TP_DATARETRY.
    Length of recopied data is set to be larger than the already copied data.
  
Test Object: 
    EcuC transmission copy
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    02: Corrupt data and setup buffers for copying, set the length for the retry copy data to be
        larger than already copied
    03: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryBUSY):
        Verify that no data was copied
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryBUSY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>TST_ECUC_TX_TXONGOING_COPY_RETRY_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>2449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that BUFREQ_E_NOT_OK will be returned if EcuC_CopyTxData was called in
    state ECUC_STATE_TXONGOING and retry state TP_DATARETRY.
  
Test Object: 
    EcuC error check
  
Test Precondition: 
    - EcuC transmission is initialized and in state TXONGOING
  
Test Execution: 
    01: Verify transition TxOngoing TxOngoing via CopyTxData
        Check that CopyTxData returns BUFREQ_OK
        Check that data counter is correctly decremented
    02: Corrupt data and setup buffers for copying
        Setup too big retry offset
    03: VP(EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryError):
        Verify that data wasn't copied correctly and BUFREQ_E_NOT_OK was returned
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.CopyTxData.TxOngoing.TxOngoing.retryError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>TS_EcuC_ConTest_01_TX_IDLE_TxConfirmInterruptTransmit_IDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_01/source/application/EbTest.c</sourcefile>
      <sourceline>2594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies EcuC transitions from IDLE to IDLE via:
      - EcuC_TpTxConfirmation in context of EcuC_TpTransmit (interruption)
  
Test Object: 
    EcuC_TpTransmit
  
Test Precondition: 
    - EcuC transmission is uninitialized
  
Test Execution: 
    01: Call EcuC_InitTx with some Control Info
    02: Prepare EcuC_TpTransmit callout for interruption with EcuC_TpTxConfirmation
        (TpTxConfirmation called in context of TpTransmit)
    03: Call EcuC_TpTransmit
    04: VP: State is set to ECUC_STATE_IDLE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.EcuCTpTransmit.StateHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>EcuC.TpTransmit.Tr.Transmit.Idle.Idle</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TST_ECUC_META_DATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the meta data item types are configured for the PduId, check that set functions shall store
    the values and get functions shall return the correct stored values.

    This test case is also a regression test for bug ASCECUC-285
    This test verifies that if the same MetaDataType is referenced by more than one PDU
    then the CopyMetaDataTypeToPdu function stores the values and CopyMetaDataTypeFromPdu
    function returns the correct stored values for the configured meta data type.
    This means that for each valid MetaDataType reference in the PDU container a new memory area
    is allocated thus sharing one memory area between different PDUs is not possible.
  
Test Object: 
    Meta Data Handling
  
Test Precondition: 
    - Trace Checks are Flushed
    - Two PDUs referencing the same MetaDataType
  
Test Execution: 
    01: VP(EcuC.MetaDataSetEthMac)
        Call EcuC_SetMetaDataEthMac to set meta data item Ethernet address and verify it returns
        E_OK
    02: VP(EcuC.MetaDataGetEthMac)
        Call EcuC_GetMetaDataEthMac to get meta data Ethernet address
        Verify that it gets correct Ethernet address and it returns E_OK
    03: VP(EcuC.MetaDataSetEthMac)
        Verify that meta data item Ethernet address was set on correct address in cache
    04: VP(EcuC.MetaDataSetCanId)
        Call EcuC_SetMetaDataCanId to set meta data item Can Id and verify it returns E_OK
    05: VP(EcuC.MetaDataGetCanId)
        Call EcuC_GetMetaDataCanId to get meta data can Id
        Verify that it gets correct Can Id and it returns E_OK
    06: VP(EcuC.MetaDataSetCanId)
        Verify that meta data item Can Id was set on correct address in cache
    07: VP(EcuC.MetaDataSetSoConId)
        Call EcuC_SetMetaDataSoConId to set meta data item Socket connection and verify it returns
        E_OK
    08: VP(EcuC.MetaDataGetSoConId)
        Call EcuC_GetMetaDataSoConId to get meta data item Socket connection
        Verify that it gets correct Socket connection and it returns E_OK
    09: VP(EcuC.MetaDataSetSoConId)
        Verify that meta data item Socket connection was set on correct address in cache
    10: VP(EcuC.MetaDataSetSourceAddr)
        Call EcuC_SetMetaDataSourceAddr to set meta data item Source address and verify it returns
        E_OK
    11: VP(EcuC.MetaDataGetSourceAddr)
        Call EcuC_GetMetaDataSourceAddr to get meta data item Source address
        Verify that it gets correct Source address and it returns E_OK
    12: VP(EcuC.MetaDataSetSourceAddr)
        Verify that meta data item Source address was set on correct address in cache
    13: VP(EcuC.MetaDataSetTargetAddr)
        Call EcuC_SetMetaDataTargetAddr to set meta data item Target address and verify it returns
        E_OK
    14: VP(EcuC.MetaDataGetTargetAddr)
        Call EcuC_GetMetaDataTargetAddr to get meta data item Target address
        Verify that it gets correct Target address and it returns E_OK
    15: VP(EcuC.MetaDataSetTargetAddr)
        Verify that meta data item Target address was set on correct address in cache
    16: VP(EcuC.MetaDataSetAddrExtension)
        Call EcuC_SetMetaDataAddrExtension to set meta data item Address Extension and verify it
        returns E_OK
    17: VP(EcuC.MetaDataGetAddrExtension)
        Call EcuC_GetMetaDataAddrExtension to get meta data item Address Extension
        Verify that it gets correct Address Extension and it returns E_OK
    18: VP(EcuC.MetaDataSetAddrExtension)
        Verify that meta data item Address Extension was set on correct address in cache
    19: VP(EcuC.MetaDataSetLinNad)
        Call EcuC_SetMetaDataLinNad to set meta data item Lin node address and verify it returns
        E_OK
    20: VP(EcuC.MetaDataGetLinNad)
        Call EcuC_GetMetaDataLinNad to get meta data item Lin node address
        Verify that it gets correct Lin node address and it returns E_OK
    21: VP(EcuC.MetaDataSetLinNad)
        Verify that meta data item Lin node address was set on correct address in cache
    22: VP(EcuC.MetaDataSetPriority)
        Call EcuC_SetMetaDataPriority to set meta data item Priority and verify it returns E_OK
    23: VP(EcuC.MetaDataGetPriority)
        Call EcuC_GetMetaDataPriority to get meta data item Priority
        Verify that it gets correct Priority and it returns E_OK
    24: VP(EcuC.MetaDataSetPriority)
        Verify that meta data item Priority was set on correct address in cache
    25: VP(EcuC.MetaDataSetPayloadType)
        Call EcuC_SetMetaDataPayloadType to set meta data item Payload type and verify it returns E_OK
    26: VP(EcuC.MetaDataGetPayloadType)
        Call EcuC_GetMetaDataPayloadType to get meta data item Payload type
        Verify that it gets correct Payload type and it returns E_OK
    27: VP(EcuC.CopyMetaDataTypeToPdu)
        Call EcuC_CopyMetaDataTypeToPdu to copy meta data type to the PDU for a valid PDU ID (1st)
        and verify it returns E_OK
    28: VP(EcuC.CopyMetaDataTypeToPdu)
        Call EcuC_CopyMetaDataTypeToPdu to copy meta data type to the PDU for a valid PDU ID (2nd)
        that references the same MetaDataType with different source data content than for the
        previous PDU and verify it returns E_OK
    29: VP(EcuC.CopyMetaDataTypeFromPdu)
        Call EcuC_CopyMetaDataTypeFromPdu to copy meta data type out from the PDU for the previously used
        PDU ID (1st) and verify that it gets correct data and it returns E_OK
    30: VP(EcuC.CopyMetaDataTypeFromPdu)
        Call EcuC_CopyMetaDataTypeFromPdu to copy meta data type out from the PDU for the previously used
        PDU ID (2nd) and verify that it gets correct data and it returns E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetCanId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetEthMac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetPriority</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetTargetAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetPayloadType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeToPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeFromPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ITEMS_DIFF_LENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If the meta data item types are configured for the PduId with larger lengths than needed,
    check that set functions shall store the values and get functions shall return the correct
    stored values if correct length is provided.
  
Test Object: 
    Meta Data Handling
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetAddrExtension)
        Call EcuC_SetMetaDataAddrExtension to set meta data item Address Extension and verify it
        returns E_OK
    02: VP(EcuC.MetaDataGetAddrExtension)
        Call EcuC_GetMetaDataAddrExtension to get meta data item Address Extension
        Verify that it gets correct Address Extension and returns E_OK
    03: VP(EcuC.MetaDataSetLinNad)
        Call EcuC_SetMetaDataLinNad to set meta data item Lin node address and verify it returns
        E_OK
    04: VP(EcuC.MetaDataGetLinNad)
        Call EcuC_GetMetaDataLinNad to get meta data item Lin node address
        Verify that it gets correct Lin node address and returns E_OK
    05: VP(EcuC.MetaDataSetSoConId)
        Call EcuC_SetMetaDataSoConId to set meta data item Socket connection and verify it returns
        E_OK
    06: VP(EcuC.MetaDataGetSoConId)
        Call EcuC_GetMetaDataSoConId to get meta data item Socket connection
        Verify that it gets correct Socket connection and returns E_OK
    07: VP(EcuC.MetaDataSetSourceAddr)
        Call EcuC_SetMetaDataSourceAddr to set meta data item Source address and verify it returns
        E_OK
    08: VP(EcuC.MetaDataGetSourceAddr)
        Call EcuC_GetMetaDataSourceAddr to get meta data item Source address
        Verify that it gets correct Source address and returns E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetAddrExtension</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSoConId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSourceAddr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ETH_MAC_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Ethernet address is not
    configured for the PduId, EcuC_SetMetaDataEthMac and EcuC_GetMetaDataEthMac shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetEthMac.Det.PduId)
        Call EcuC_SetMetaDataEthMac to set meta data item Ethernet address to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetEthernetMac.Det.PduId)
        Call EcuC_GetMetaDataEthMac to get meta data item Ethernet address from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetEthernetMac.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetEthMac.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_CAN_ID_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>621</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Can Id is not
    configured for the PduId, EcuC_SetMetaDataCanId and EcuC_GetMetaDataCanId shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetCanId.Det.PduId)
        Call EcuC_SetMetaDataCanId to set meta data item Can Id to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetCanId.Det.PduId)
        Call EcuC_GetMetaDataCanId to get meta data item Can Id from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetCanId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetCanId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOCKET_CONNECTION_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Socket connection is not
    configured for the PduId, EcuC_SetMetaDataSoConId and EcuC_GetMetaDataSoConId shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetSoConId.Det.PduId)
        Call EcuC_SetMetaDataSoConId to set meta data item Socket connection to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetSoConId.Det.PduId)
        Call EcuC_GetMetaDataSoConId to get meta data item Socket connection from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSoConId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSoConId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOURCE_ADDRESS_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Source address is not
    configured for the PduId, EcuC_SetMetaDataSourceAddr and EcuC_GetMetaDataSourceAddr shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetSourceAddr.Det.PduId)
        Call EcuC_SetMetaDataSourceAddr to set meta data item Source address to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetSourceAddr.Det.PduId)
        Call EcuC_GetMetaDataSourceAddr to get meta data item Source address from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSourceAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSourceAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_TARGET_ADDRESS_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>828</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Target address is not
    configured for the PduId, EcuC_SetMetaDataTargetAddr and EcuC_GetMetaDataTargetAddr shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetTargetAddr.Det.PduId)
        Call EcuC_SetMetaDataTargetAddr to set meta data item Target address to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetTargetAddr.Det.PduId)
        Call EcuC_GetMetaDataTargetAddr to get meta data item Target address from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetTargetAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetTargetAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>897</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Address Extension is not
    configured for the PduId, EcuC_SetMetaDataAddrExtension and EcuC_GetMetaDataAddrExtension shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetAddrExtension.Det.PduId)
        Call EcuC_SetMetaDataAddrExtension to set meta data item Address Extension to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetAddrExtension.Det.PduId)
        Call EcuC_GetMetaDataAddrExtension to get meta data item Address Extension from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetAddrExtension.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetAddrExtension.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Lin node address is not
    configured for the PduId, EcuC_SetMetaDataLinNad and EcuC_GetMetaDataLinNad shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetLinNad.Det.PduId)
        Call EcuC_SetMetaDataLinNad to set meta data item Lin node address to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetLinNad.Det.PduId)
        Call EcuC_GetMetaDataLinNad to get meta data item Lin node address from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetLinNad.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_PRIORITY_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Priority is not
    configured for the PduId, EcuC_SetMetaDataPriority and EcuC_GetMetaDataPriority shall report
    the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetPriority.Det.PduId)
        Call EcuC_SetMetaDataPriority to set meta data item Priority to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetPriority.Det.PduId)
        Call EcuC_GetMetaDataPriority to get meta data item Priority from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetPriority.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetPriority.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ETH_MAC_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the ethernet mac pointer is a NULL_PTR,
    EcuC_MetaDataGetEthMac and EcuC_MetaDataSetEthMac shall report the development error
    ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataEthMac to set meta data item Ethernet address
    02: Call EcuC_GetMetaDataEthMac with ethernet mac pointer set as a NULL_PTR
        to attempt to get meta data item Ethernet address from PDU
    03: VP: (EcuC.MetaDataGetEthernetMac.Det.value.NullPtr)
        Verify EcuC_GetMetaDataEthMac returns E_NOT_OK and reports the development
        error ECUC_E_PARAM_POINTER
    04: Call EcuC_SetMetaDataEthMac with ethernet mac pointer set as a NULL_PTR
        to attempt to get meta data item Ethernet address from PDU
    05: VP: (EcuC.MetaDataGetEthernetMac.Det.value.NullPtr)
        Verify EcuC_SetMetaDataEthMac returns E_NOT_OK and reports the development
        error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetEthernetMac.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetEthernetMac.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_CAN_ID_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the can id is a NULL_PTR, EcuC_MetaDataGetCanId
    shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataCanId to set meta data item Can Id
    02: VP(EcuC.MetaDataGetCanId.Det.value.NullPtr)
        Call EcuC_GetMetaDataCanId to get meta data item Can Id from pdu with can id set
        as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetCanId.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOCKET_CONNECTION_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the socket connection id is a NULL_PTR,
    EcuC_MetaDataGetSoConId shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataSoConId to set meta data item Socket connection to pdu
    02: VP(EcuC.MetaDataGetSoConId.Det.value.NullPtr)
        Call EcuC_GetMetaDataSoConId to get meta data item Socket connection with socket
        connection id set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSoConId.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOURCE_ADDRESS_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1306</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the source address is a NULL_PTR,
    EcuC_MetaDataSourceAddr shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataSourceAddr to set meta data item Source address to pdu
    02: VP(EcuC.MetaDataGetSourceAddr.Det.value.NullPtr)
        Call EcuC_GetMetaDataSourceAddr to get meta data item Source address from pdu with
        source address set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSourceAddr.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_TARGET_ADDRESS_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the target address is a NULL_PTR,
    EcuC_MetaDataTargetAddr shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataTargetAddr to set meta data item Target address to pdu
    02: VP(EcuC.MetaDataGetTargetAddr.Det.value.NullPtr)
        Call EcuC_GetMetaDataTargetAddr to get meta data item Target address from pdu with
        target address set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetTargetAddr.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the address extension is a NULL_PTR,
    EcuC_MetaDataAddrExtension shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataAddrExtension to set meta data item Address Extension to pdu
    02: VP(EcuC.MetaDataGetAddrExtension.Det.value.NullPtr)
        Call EcuC_GetMetaDataAddrExtension to get meta data item Address Extension from pdu with
        address extension set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetAddrExtension.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1480</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the lin nad is a NULL_PTR,
    EcuC_MetaDataGetLinNad shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataLinNad to set meta data item Lin node address to pdu
    02: VP(EcuC.MetaDataGetLinNad.Det.value.NullPtr)
        Call EcuC_GetMetaDataLinNad to get meta data item Lin node address from pdu with the
        lin nad set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_PRIORITY_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the priority is a NULL_PTR,
    EcuC_MetaDataPriority shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataPriority to set meta data item Priority to pdu
    02: VP(EcuC.MetaDataGetPriority.Det.value.NullPtr)
        Call EcuC_GetMetaDataPriority to get meta data item Priority from pdu with the priority
        set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetPriority.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ETH_MAC_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1595</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured, EcuC_SetMetaDataEthMac
    and EcuC_GetMetaDataEthMac shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetEthMac.Det.PduId)
        Call EcuC_SetMetaDataEthMac to set meta data item Ethernet address to pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetEthernetMac.Det.PduId)
        Call EcuC_GetMetaDataEthMac to get meta data item Ethernet address from pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetEthernetMac.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetEthMac.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_CAN_ID_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1668</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured, EcuC_SetMetaDataCanId
    and EcuC_GetMetaDataCanId shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetCanId.Det.PduId)
        Call EcuC_SetMetaDataCanId to set meta data item Can Id to pdu that isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetCanId.Det.PduId)
        Call EcuC_GetMetaDataCanId to get meta data item Can Id from pdu that isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetCanId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetCanId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOCKET_CONNECTION_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured, EcuC_SetMetaDataSoConId
    and EcuC_GetMetaDataSoConId shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetSoConId.Det.PduId)
        Call EcuC_SetMetaDataSoConId to set meta data item Socket connection to pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetSoConId.Det.PduId)
        Call EcuC_GetMetaDataSoConId to get meta data item Socket connection from pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSoConId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSoConId.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SOURCE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured,
    EcuC_SetMetaDataSourceAddr and EcuC_GetMetaDataSourceAddr shall report the development error
    ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetSourceAddr.Det.PduId)
        Call EcuC_SetMetaDataSourceAddr to set meta data item Source address to pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetSourceAddr.Det.PduId)
        Call EcuC_GetMetaDataSourceAddr to get meta data item Source address from pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetSourceAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetSourceAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_TARGET_ADDRESS_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1885</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured,
    EcuC_SetMetaDataTargetAddr and EcuC_GetMetaDataTargetAddr shall report the development error
    ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetTargetAddr.Det.PduId)
        Call EcuC_SetMetaDataTargetAddr to set meta data item Target address to pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetTargetAddr.Det.PduId)
        Call EcuC_GetMetaDataTargetAddr to get meta data item Target address from pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetTargetAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetTargetAddr.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_ADDRESS_EXTENSION_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>1958</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured,
    EcuC_SetMetaDataAddrExtension and EcuC_GetMetaDataAddrExtension shall report the development
    error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetAddrExtension.Det.PduId)
        Call EcuC_SetMetaDataAddrExtension to set meta data item Address Extension to pdu that
        isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetAddrExtension.Det.PduId)
        Call EcuC_GetMetaDataAddrExtension to get meta data item Address Extension from pdu that
        isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetAddrExtension.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetAddrExtension.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_LIN_NODE_ADDRESS_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2031</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured, EcuC_SetMetaDataLinNad
    and EcuC_GetMetaDataLinNad shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetLinNad.Det.PduId)
        Call EcuC_SetMetaDataLinNad to set meta data item Lin node address to pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetLinNad.Det.PduId)
        Call EcuC_GetMetaDataLinNad to get meta data item Lin node address from pdu that isn't
        configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetLinNad.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_PRIORITY_INVALID_PDU_INDEX_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PduId is not configured, EcuC_SetMetaDataPriority
    and EcuC_GetMetaDataPriority shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetPriority.Det.PduId)
        Call EcuC_SetMetaDataPriority to set meta data item Priority to pdu that isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetPriority.Det.PduId)
        Call EcuC_GetMetaDataPriority to get meta data item Priority from pdu that isn't configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetPriority.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetPriority.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_PAYLOAD_TYPE_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data item type Payload Type is not
    configured for the PduId, EcuC_SetMetaDataPayloadType and EcuC_GetMetaDataPayloadType shall
    report the development error ECUC_E_INV_ARG to Det and return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: VP(EcuC.MetaDataSetPayloadType.Det.PduId)
        Call EcuC_SetMetaDataPayloadType to set meta data item Payload type to pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.MetaDataGetPayloadType.Det.PduId)
        Call EcuC_GetMetaDataPayloadType to get meta data item Payload type from pdu that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataSetPayloadType.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataGetPayloadType.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_PAYLOAD_TYPE_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the payload type is a NULL_PTR,
    EcuC_GetMetaDataPayloadType shall report the development error ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
  
Test Execution: 
    01: Call EcuC_SetMetaDataPayloadType to set meta data item Payload type to pdu
    02: VP(EcuC.MetaDataGetPayloadType.Det.value.NullPtr)
        Call EcuC_GetMetaDataPayloadType to get meta data item Payload type from pdu with the payload
        type set as a NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_PARAM_POINTER
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetPayloadType.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_SameMetaDataTypeRef_MultiplePdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Regression test for bug ASCECUC-285

    This test verifies that if the same MetaDataType is referenced by more than one PDU
    then the set function stores the values and get function returns the correct stored values
    for the configured meta data item type.

    This means that for each valid MetaDataType reference in the PDU container a new memory area
    is allocated thus sharing one memory area between different PDUs is not possible.

    The tested MetaDataItem is only an example for the correct behavior within one MetaDataType,
    all other MetaDataItems configured for the same MetaDataType shall work the same way.
  
Test Object: 
    Meta Data Handling
  
Test Precondition: 
    - Two PDUs referencing the same MetaDataType
    - The referenced MetaDataType has a valid MetaDataItem of MetaDataItemType LIN_NAD_8
  
Test Execution: 
    00: Set different initial values to both Lin node source test data variables
    01: Call EcuC_SetMetaDataLinNad to set meta data item Lin node address for PDU 1
    02: Call EcuC_GetMetaDataLinNad to get meta data item Lin node address for PDU 1
    03: VP: source and retrieved Lin node address meta data items are identical for PDU 1

    04: Call EcuC_SetMetaDataLinNad to set meta data item Lin node address for PDU 2
    05: Call EcuC_GetMetaDataLinNad to get meta data item Lin node address for PDU 2
    06: VP: source and retrieved Lin node address meta data items are identical for PDU 2

    07: Call EcuC_GetMetaDataLinNad to get meta data item Lin node address for PDU 1 again
    08: VP: Lin node address meta data item remained unchanged for PDU 1
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.MetaDataGetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EcuC.MetaDataSetLinNad</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_TYPE_INVALID_PDU_ID_INV_ARG</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2409</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and PDU-ID is not configured, EcuC_CopyMetaDataTypeToPdu
    and EcuC_CopyMetaDataTypeFromPdu shall report the development error ECUC_E_INV_ARG to Det and
    return E_NOT_OK.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
    - Development Error Detection is enabled
  
Test Execution: 
    01: VP(EcuC.CopyMetaDataTypeToPdu.Det.PduId)
        Call EcuC_CopyMetaDataTypeToPdu to set meta data type to PDU that does not
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
    02: VP(EcuC.CopyMetaDataTypeFromPdu.Det.PduId)
        Call EcuC_CopyMetaDataTypeFromPdu to get meta data type from PDU that doesn't
        have it configured
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_ARG
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeToPdu.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeFromPdu.Det.PduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_TYPE_INV_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If development error detection is enabled and the meta data type pointer is a NULL_PTR,
    EcuC_CopyMetaDataTypeToPdu/EcuC_CopyMetaDataTypeFromPdu shall report the development error
    ECUC_E_INV_PARAM_POINTER to Det.
  
Test Object: 
    Error Reporting
  
Test Precondition: 
    - Trace Checks are Flushed
    - Development Error Detection is enabled
  
Test Execution: 
    01: VP(EcuC.CopyMetaDataTypeToPdu.Det.value.NullPtr)
        Call EcuC_CopyMetaDataTypeToPdu to with meta data type pointer set to NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_PARAM_POINTER
    02: VP(EcuC.CopyMetaDataTypeFromPdu.Det.value.NullPtr)
        Call EcuC_CopyMetaDataTypeFromPdu to with meta data type pointer set to NULL_PTR
        Verify it returns E_NOT_OK and reports the development error ECUC_E_INV_PARAM_POINTER
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeToPdu.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EcuC.CopyMetaDataTypeFromPdu.Det.value.NullPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>TST_ECUC_META_DATA_MetaDataTypeLengthCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuC)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuC/test/ts5/Conformance/IN/EcuC_Conformance_Meta_Data/source/application/Tests.c</sourcefile>
      <sourceline>2533</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the custom XPath API asc_ecuc:getMetaDataTypeLength
    (global resource) calculates correctly the sum of the accumulated meta data
    items for each referenced meta data type.

    The calculated length does not contain any padding bytes.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    | -- For x of all PDUs configured
    | 01: Sum the length of the all meta data item belonging to the PDU Id
    | 02: Read out configured MetaDataTypeLength from the EcuC_ConfigData
    | 03: VP: Calculated and stored MetaDataTypeLength are equal
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuC.EB.MetaDataItemsAccumulated.Length</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
