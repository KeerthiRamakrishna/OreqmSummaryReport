<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_SomeIpXfCV_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_SomeIpXfCV_requirements_SomeIpXfCheck.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_SomeIpXfCV_safetyanalysis_SEEA_Safety_Verification_Rules_SomeIpXf.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_XfrmCV_requirements_Xfrm_Checker.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</commandline>
    <timestamp>Mon Jun 17 20:59:49 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_SomeIpXfCV_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_SomeIpXfCV_requirements_SomeIpXfCheck.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_SomeIpXfCV_safetyanalysis_SEEA_Safety_Verification_Rules_SomeIpXf.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_Native/asc_XfrmCV_requirements_Xfrm_Checker.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

    <specobject>
      <id>SomeIpXfCheck.CommandLine</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SomeIpXfCheck application shall be implemented as command line tool.
      </description>
      <rationale>
        Command line tools require the least amount of resources, i.e. they can be executed
        in a console w/o GUI support. Command line tools allow integration into automated
        build environments
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.CommandLine.NameAndVersionNumber</srcid><srcstatus/><internalId>1</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.CommandLine.Help</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.CommandLine.Check</srcid><srcstatus/><internalId>3</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_28</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.CommandLine.NameAndVersionNumber</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If requested via command line parameter, the SomeIpXfCheck application shall display its name, its version
        number and the version number of the checker library it is using.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_85</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testNameAndVersion</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.CommandLine.Help</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        If unknown parameters were handed over, or if help is requested via command line,
        the SomeIpXfCheck shall display a usage string that contains the list of supported command line
        switches and their parameters.
      </description>
      <rationale>
        Adhere to the conventions of command line tools.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_76</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testHelp</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.CommandLine.Check</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The SomeIpXfCheck application shall hand over all its command line parameters to the checker library.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_39</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHaveNoPartitionName</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHavePartitionName</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.ReturnValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Upon completion, the The SomeIpXfCheck application shall return 0 to its calling process, or a
        value greater than zero on error.
      </description>
      <rationale>
        Adhere to the conventions of command line tools.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_53</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.ExceptionHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SomeIpXfCheck application shall catch any exceptions and forward the stack trace of the
        exception to standard error.
      </description>
      <rationale>
        Exceptions are most likely caused by programming errors in the checker application or
        checker library. A stack trace helps in finding the cause of the exception.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_47</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.StatusMessages</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The SomeIpXfCheck application shall forward any status message it obtains from the checker
        library to standard error.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_94</srcid><srcstatus/><internalId>436</internalId></linkedfrom><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_103</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testLogMessageAndLogErrorToStdErr</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The SomeIpXfCheck application shall use the checker library to execute application-specific 
        SQL queries and shall provide a report of the executed checks.
      </description>
      <rationale>
        The application-specific queries will be executed by the checker library, and
        any failing check will be handed back to the SomeIpXfCheck application.
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.JsonFiles</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions</srcid><srcstatus/><internalId>9</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.ReportAction</srcid><srcstatus/><internalId>33</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.JsonFiles</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The SomeIpXfCheck application shall hand over its application-specific SQL queries to the 
        checker library.
      </description>
      <rationale>
        The application-specific checker queries will be executed after the syntax parsing 
        was successful and after the execution of generic checker queries of the library.
      </rationale>
      <comment>
        The queries shall be provided in .json format.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_64</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        To verify the fulfillment of application related needs, there shall be checks that detect an occurred 
        incident of an application-specific hazard while executing the checker actions.
      </description>
      <comment>
        The allowed types of source code are .c and .h files.
      </comment>
      <rationale>
        Regardless why a source code contains wrong elements, and depending on the severeness and the definition 
        in the safety verification rules, the checker must be able to detect violations of these rules.
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.GoldenConfiguration</srcid><srcstatus>destination version 2 does not match required version 1.</srcstatus><internalId>10</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.1</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.2</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.3</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.4</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.5</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.6</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</srcid><srcstatus/><internalId>28</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHaveNoPartitionName</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHavePartitionName</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_cfg_missing_no_consts_pass</srcid><srcstatus/><internalId>458</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_PARTITIONAPI_H_wrong</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_PARTITIONAPI_H_missing</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.GoldenConfiguration</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The execution of checker queries on golden files shall pass without reported violation.
      </description>
      <comment>
        Golden files are refence files that contain a configuration that is used by the customer.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SAS_SomeIpXf</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linkerror</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror>destination version 2 does not match required version 1.</linkerror><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify if source code files contain a configuration of a wrong transformer. The 
        appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Wrong_Transformer_Files_E2EXf</srcid><srcstatus/><internalId>459</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Wrong_Transformer_Files_ComXf</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify missing or double entries and differences between the IDs of configuration 
        structure and size of the configuration array macro. The appropriate checker queries shall print an error to 
        the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_missing</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_wrong</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_more</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ConfigArraySizeMacroAndStructName_SOMEIPXF_INT_CFG_H_wrong</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_DataTypeConfigIdUnique_SOMEIPXF_CFG_C_wrong</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with missing, double or wrong include statements. The 
        appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</srcid><srcstatus/><internalId>454</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configurations that have configured sender/receiver, client/server 
        or external trigger communication. The appropriate checker queries shall print an error to the validation 
        report file.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.4.CS</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    
        <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configurations that have configured sender/receiver communication.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</srcid><srcstatus/><internalId>461</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</srcid><srcstatus/><internalId>462</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_Datatype_wrong</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_ArraySizeConfigIds_Datatype_mismatch</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    
        <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.4.CS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configurations that have configured client/server communication.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    
        <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configurations that have configured external trigger communication.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with Variable Size Arrays. The 
        appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_VsaPayload_VsaDimPayload</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_SetVsaConfigSetVsaDimConfigPayloadCheck_SOMEIPXF_CFG_C_wrong</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with Fixed Size Arrays. The 
        appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify configurations with Tag Length Value. The 
        appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.1</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.2</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.3</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.4</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.5</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.6</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.7</srcid><srcstatus/><internalId>27</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_ARGUMENT_AVAILABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_STRUCT_AVAILABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration with missing or wrong 
        SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE macro or invalid value assigned.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>513</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall be able to verify TLV configuration where the comparison between TLVDataIDs 
        of macro SOMEIPXF_TLV_DATA_ID and TLVDataIDs of either macro SOMEIPXF_SET_TLV_STRUCT_MEMBER_CONFIG 
        or SOMEIPXF_SET_TLV_STRUCT_OPT_MEMBER_CONFIG do not match or are not unique.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberId_SOMEIPXF_CFG_C_wrong</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdCount_SOMEIPXF_CFG_C_wrong</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdUnique_SOMEIPXF_CFG_C_wrong</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>


    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with erroneous preprocessor macros or macro values. 
        The appropriate checker queries shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.1</srcid><srcstatus/><internalId>29</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.2</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.3</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.4</srcid><srcstatus/><internalId>32</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with missing, double or wrong 
        SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32 macro or invalid value assigned. The appropriate checker queries 
        shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with missing, double or wrong 
        SOMEIPXF_MSGERRORCALLOUT_AVAILABLE macro or invalid value assigned. The appropriate checker queries 
        shall print an error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with missing, double or wrong 
        SOMEIPXF_ERROR_MESSAGE_TYPE macro or invalid value assigned. The appropriate checker queries shall print an 
        error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker shall be able to verify configuration with missing, double or wrong 
        SOMEIPXF_STRUCT_WITH_LF_AVAILABLE macro or invalid value assigned. The appropriate checker queries shall print an 
        error to the validation report file.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>SomeIpXfCheck.SQLQueries.ReportAction</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The checker shall generate a validation report file after checker execution containing the results of the 
        executed application-specific report actions.
      </description>
      <rationale>
        The report output shall contain all safety relevant data which cannot be veryfied automatically, but has to be 
        reviewed by the user.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_67</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHaveNoPartitionName</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHavePartitionName</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_PartitionName_independent_from_Filename</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SAS_SomeIpXf</srcid><srcstatus/><internalId>453</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_FSA_Configs</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_TLV_Configs</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

</specobjects>
    <specobjects doctype="safetyanalysis">
    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.009000</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_API_GEN_H" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>758</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009001</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_API_GEN_H" exists only once.</description>
      <comment>Multiple appearances are covered by query in GenericCheckerQueries/IncludeProtectionSymbolOnlyOnce</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>616</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_more_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>759</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009002</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_API_GEN_H".</description>
      <comment>Wrong entries are covered by query in GenericCheckerQueries/IncludeProtectionSymbol</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>615</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>760</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009003</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify each TRANSFORMER of the PARTITION, The number of transformers and partitions shall equal the number of transformers and partitions in the generated SomeIpXf_Api_Gen.h file.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009009</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>1</version>
      <description>The Checker shall verify that unique include:includeFile = "SomeIpXf_S_PartitionApi.h" exists. Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009010</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>1</version>
      <description>The Checker shall verify that unique include:includeFile = "SomeIpXf_S_PartitionApi.h" exists only once. Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009004</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>1</version>
      <description>The Checker shall verify that unique include:includeFile = "SomeIpXf_S_PartitionApi.h". Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009007</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_api_gen_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>750</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009008</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Api_Gen.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_api_gen_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>754</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.009100</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_INT_CFG_H" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>764</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009101</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_INT_CFG_H" exists only once.</description>
      <comment>Multiple appearances are covered by query in GenericCheckerQueries/IncludeProtectionSymbolOnlyOnce</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>616</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_more_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>765</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009102</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_INT_CFG_H".</description>
      <comment>Wrong entries are covered by query in GenericCheckerQueries/IncludeProtectionSymbol</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>615</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>766</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009103</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009104</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009105</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009106</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Api_Stc.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009107</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Api_Stc.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009108</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Api_Stc.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009109</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecConstSym:SOMEIPXF_START_SEC_CONST16 | someIpXfStartSecConstSym:SOMEIPXF_START_SEC_CONST32 = "SOMEIPXF_START_SEC_CONST16" | "SOMEIPXF_START_SEC_CONST32" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>785</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009110</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecConstSym:SOMEIPXF_START_SEC_CONST16 | someIpXfStartSecConstSym:SOMEIPXF_START_SEC_CONST32 = "SOMEIPXF_START_SEC_CONST_16" |  "SOMEIPXF_START_SEC_CONST_32" and someIpXfStartSecConstSym:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>787</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009111</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify  each CONFIGURATIONARRAY used by a TRANSFORMER. The number of configurationarrays and transformers shall equal the number of configurationarrays and transformers in the generated SomeIpXf_Int_Cfg.h file</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009112</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if:
someIpXfExtDataParam:someIpXfConfBufferLengthType = "SOMEIPXF_XFRMBUFFERLENGTH_TYPE", someIpXfExtDataParam:MEMCLASS = "SOMEIPXF_CONST", 
someIpXfExtDataDef:someIpXfConfigId starts with "SomeIpXf_Config_"  and
ends with SOMEIPXF_ID, someIpXfExtDataDef:someIpXfArraySizeConfigId starts with "SOMEIPXF_CONFIG_ARRAY_SIZE_SomeIpXf_Config_"
and ends with SOMEIPXF_ID.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfExtDataParam_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>779</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009118</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if dynamic parts "%SOMEIPXF_ID%" of 
someIpXfExtDataDef:someIpXfConfigId:SOMEIPXF_CONFIG_ID and
someIpXfExtDataDef:someIpXfArraySizeConfigId:SOMEIPXF_CONF_ARR_SIZE are equal.</description>
      <comment>Ids compared by query "SOMEIPXF_Array_Config_Struct_And_Size_Ids".</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ConfigArraySizeMacroAndStructName_SOMEIPXF_INT_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>484</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009119</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify that all occurrences of someIpXfExtDataDef:someIpXfConfigId:SOMEIPXF_CONFIG_ID are also present as occurrences of someIpXfConfigStructWithDef:someIpXfDefDataTypeConfigID:SOMEIPXF_ID in SomeIpXf_Cfg.c files and the other way round.
</description>
      <comment>Check of presence of %SOMEIPXF_ID% in SomeIpXf_Cfg.c files and in SomeIpXf_Int_Cfg.h files is checked by queries "SOMEIPXF_ConfigurationArrayIds_Present_Cfg_c" and "SOMEIPXF_ConfigurationArrayIds_Present_Int_Cfg_h"</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>474</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>776</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009120</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description> The Checker shall verify that someIpXfExtDataDef:someIpXfConfigId shall be unique.</description>
      <comment>Uniqueness checked by query "SomeIpXfSpecificCheckerQueries/SOMEIPXF_ConfigurationArrayId_Unique_Int_Cfg_h".</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_more</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>476</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009121</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that someIpXfExtDataDef:someIpXfConfigId:SOMEIPXF_CONFIG_ID:SOMEIPXF_ID is equal to someIpXfExtDataDef:someIpXfArraySizeConfigId:SOMEIPXF_CONF_ARR_SIZE:SOMEIPXF_ID.
</description>
      <comment>Comparison between both SOMEIPXF_ID in same file SomeIpXf_Int_Cfg.h is checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Array_Config_Struct_And_Size_Ids.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>475</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009113</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify  if configurationArrayId=SOMEIPXF_ID is correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009114</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST16 | someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST32 = "SOMEIPXF_STOP_SEC_CONST_16" | "SOMEIPXF_STOP_SEC_CONST_32" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>793</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009115</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST16 | someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST32 = "SOMEIPXF_STOP_SEC_CONST_16" | "SOMEIPXF_STOP_SEC_CONST_32" and someIpXfStopSecConstSym:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>795</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009116</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_int_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>751</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009117</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Int_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_int_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>756</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.019200</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_CFG_H" exists</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>761</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019201</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_CFG_H" exists only once.</description>
      <comment>Multiple appearances are covered by query in GenericCheckerQueries/IncludeProtectionSymbolOnlyOnce</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>616</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_more_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>762</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019317</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_CFG_H"</description>
      <comment>Wrong entries are covered by query in GenericCheckerQueries/IncludeProtectionSymbol</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>615</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>763</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>480</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019205</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019206</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019207</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019209</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "stddef.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019211</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_VERSION_INFO_API" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019212</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019213</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019215</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_CS_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019216</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019217</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019219</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_SR_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019220</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019221</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019223</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_ET_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019224</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019225</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019310</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019314</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019315</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019344</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32 exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32 in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>486</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>485</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019345</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32 is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>487</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019313</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_XFRMBUFFERLENGTHTYPE_ISUINT32" is correct.</description>
      <comment>Since the value of this macro is configurable and the extent of integration tests on the users side is unknown to us the user shall verify the generated value in the report.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019335</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MSGERRORCALLOUT_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019336</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019337</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019338</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_MSGERRORCALLOUT_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_MSGERRORCALLOUT_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>488</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>489</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019339</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if SOMEIPXF_MSGERRORCALLOUT_AVAILABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>490</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019340</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_MSGERRORCALLOUT_AVAILABLE" is correct.</description>
      <comment>Since the value of this macro is configurable and the extent of integration tests on the users side is unknown to us the user shall verify the generated value in the report.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019355</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_ERROR_MESSAGE_TYPE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019356</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019357</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019358</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_ERROR_MESSAGE_TYPE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_ERROR_MESSAGE_TYPE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>491</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>492</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019359</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if %MESSAGE_TYPE% is of type HEX value and either 0x80 or 0x81.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>493</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019360</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_ERROR_MESSAGE_TYPE" is correct.</description>
      <comment>Since the value of this macro is configurable and the extent of integration tests on the users side is unknown to us the user shall verify the generated value in the report.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019239</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify each  CONFIGURATIONARRAY used by a TRANSFORMER. The number of configurationarrays and transformers shall equal the number of configurationarrays and transformers in the generated SomeIpXf_Cfg.h file.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019240</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.
Dynamic part % SOMEIPXF_ID % is not checked.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_CONFIG_ARRAY_SIZE_SomeIpXf_Config_%SOMEIPXF_ID%" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019241</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019242</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019243</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_CONFIG_ARRAY_SIZE_SomeIpXf_Config_" % SOMEIPXF_ID % and defineDirective:defineSymbolVal = " configrationarray_sizeU". Dynamic part % SOMEIPXF_ID %  is not checked.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfdefineSymbolVal_Cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>778</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019244</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify if the  configuration of variable size arrays of type VSA_LINEAR, VSA_SQUARE or
VSA_RECTANGULAR  for serialization/deserialization is configured as intended.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019361</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_VSA_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019362</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019363</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019364</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_VSA_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_VSA_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>495</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>494</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019365</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_VSA_AVAILABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>496</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019366</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_VSA_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019265</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol SOMEIPXF_VSA_MAX_DIM" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019266</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019316</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019279</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_NESTED_VSA_DEPTH" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019280</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019281</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019440</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify if the configuration of TLV structures and/or TLV arguments for serialization/deserialization is configured as intended.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_TLV_Configs</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>473</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019373</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_ARGUMENT_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019374</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019375</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019376</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_STRUCT_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>498</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>497</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019377</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_AVAILABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>499</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019378</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARGUMENT_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019367</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_STRUCT_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019368</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019369</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019370</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_STRUCT_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>501</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>500</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019371</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_AVAILABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>502</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019372</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_STRUCT_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019382</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019383</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019384</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019385</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>504</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>503</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019386</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>505</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019387</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARGUMENT_UNIQUE_DATAID_CHECK_ENABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019388</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019389</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019390</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019391</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>506</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>507</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019392</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>508</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019393</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_STRUCT_MEMBER_UNIQUE_DATAID_CHECK_ENABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019294</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_TLV_IDS_BYTES" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019295</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019296</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019297</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_ARGUMENT_TLV_IDS_BYTES" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019298</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019299</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019400</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019401</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019402</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019403</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>510</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>509</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019404</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>511</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019405</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_STRUCT_MEMBER_REORDERING_ENABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019406</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019407</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019408</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019409</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>513</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>512</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019410</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>514</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019411</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARGUMENT_REORDERING_ENABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019412</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_NESTED_TLV_DEPTH" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019413</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019414</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019330</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify the condition "if Fixed Size Arrays are configured for serialization/deserialization" is set correctly.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_FSA_Configs</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>472</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019342</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019343</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019415</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_NESTED_ARRAY_DEPTH" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019416</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019417</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019418</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_FSA_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019419</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019420</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019421</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_FSA_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_FSA_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>516</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>515</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019422</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_FSA_AVAILABLE is in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>517</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019423</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_FSA_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019424</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_FSA_WITH_LF_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019425</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019426</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019427</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_FSA_WITH_LF_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_FSA_WITH_LF_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>519</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>518</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019428</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_FSA_WITH_LF_AVAILABLE in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>520</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019429</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_FSA_WITH_LF_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019430</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_STRUCT_WITH_LF_AVAILABLE" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019431</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019432</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019433</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_STRUCT_WITH_LF_AVAILABLE exists.</description>
      <comment>Appearance of Preprocessor Symbol SOMEIPXF_STRUCT_WITH_LF_AVAILABLE in the appropriate file is ensured by checker query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_In_Appropriate_Files.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>522</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>521</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019434</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if SOMEIPXF_STRUCT_WITH_LF_AVAILABLE in range STD_ON or STD_OFF.</description>
      <comment>Wrong define symbol values are covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_Preprocessor_Symbols_Valid_Value_Ranges</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>523</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019435</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the defineDirective:defineSymbolVal of defineDirective:PREPROC_SYMBOL = "SOMEIPXF_STRUCT_WITH_LF_AVAILABLE" is correct.</description>
      <comment>user shall check output in report</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019436</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_MAX_NESTED_STRUCT_WITH_LF_DEPTH" in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019437</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>753</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.019438</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.h</source>
      <version>1</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>755</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.009300</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_S_PARTITIONAPI_H" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>767</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009301</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_S_PARTITIONAPI_H" exists only once.</description>
      <comment>Multiple appearances are covered by query in GenericCheckerQueries/IncludeProtectionSymbolOnlyOnce</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>616</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_more_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>768</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009302</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify ifNotDefPart:HEADER_SYMBOL = definePart:HEADER_SYMBOL = "SOMEIPXF_S_PARTITIONAPI_H".</description>
      <comment>Wrong entries are covered by query in GenericCheckerQueries/IncludeProtectionSymbol</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>615</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>769</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_PARTITIONAPI_H_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>481</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009306</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "TransformerTypes.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009307</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "TransformerTypes.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009308</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "TransformerTypes.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009309</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009310</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009311</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SchM_SomeIpXfType.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009312</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009313</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009314</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009315</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Version.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009316</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Version.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009317</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Version.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009318</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h" exists.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009319</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009320</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h"</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009321</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecCode:SOMEIPXF_START_SEC_CODE = "SOMEIPXF_START_SEC_CODE" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>781</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009322</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecCode:SOMEIPXF_START_SEC_CODE = "SOMEIPXF_START_SEC_CODE" and someIpXfStartSecCode:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>783</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009343</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_COUNT_" % XF_NAME % exists.</description>
      
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009344</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_COUNT_" % XF_NAME % and defineDirective:defineSymbolVal = someIpXfTlvArgValueU. Dynamic part % XF_NAME %  is not checked.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvArgPreproc</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>825</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009345</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_COUNT_" % XF_NAME % exists only once.</description>
      
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009348</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_ARG_IDS_COUNT_" % XF_NAME % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009338</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_" % XF_NAME % exists.</description>
      
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009346</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_" % XF_NAME % and defineDirective:defineSymbolVal = a sequence of "someIpXfTlvArgValueU" separated by comma. Dynamic part % XF_NAME %  is not checked.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvArgPreproc</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>825</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009347</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_TLV_ARG_IDS_" % XF_NAME %  exists only once.</description>
      
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009349</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_TLV_ARG_IDS_"% XF_NAME % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009339</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_CLIENT_" [ XF | INVXF ] "ARG_" % XF_NAME % and defineDirective:defineSymbolVal = ("paramType","someIpXfCSTArgIndex", % SOMEIPXF_PASS_METHOD %, "someIpXfCSTDataElementConfig"). Dynamic part % SOMEIPXF_PASS_METHOD % is optional.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefineArgSymbolVal</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>826</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009350</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_CLIENT_" XF | INVXF % XF_NAME % "_ARG_" % ARG_ID % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009341</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_SERVER_" [ XF | INVXF ] "ARG_" % XF_NAME % and defineDirective:defineSymbolVal = ("paramType","someIpXfCSTArgIndex", % SOMEIPXF_PASS_METHOD %, "someIpXfCSTDataElementConfig"). Dynamic part % SOMEIPXF_PASS_METHOD % is optional.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefineArgSymbolVal</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>826</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009352</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_SERVER_" XF | INVXF % XF_NAME % "_ARG_" % ARG_ID % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009340</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_CLIENT_SEQ" [XF | INVXF] % XF_NAME % and defineDirective:defineSymbolVal = [list of "someIpXfCSTDefSeqParam"]. Dynamic part % XF_NAME %  is not checked.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefSeqParam</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>827</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009351</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_CLIENT_SEQ_" XF | INVXF % XF_NAME % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009342</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that defineDirective:PREPROC_SYMBOL = "SOMEIPXF_SERVER_SEQ" [XF | INVXF] % XF_NAME % and defineDirective:defineSymbolVal = [list of "someIpXfCSTDefSeqParam"]. Dynamic part % XF_NAME %  is not checked.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefSeqParam</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>827</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009353</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify that errorDirective:PREPROC_SYMBOL = defineDirective:PREPROC_SYMBOL.</description>
      <comment>double appearances of preprocessor symbol "SOMEIPXF_SERVER_SEQ_" XF | INVXF  % XF_NAME % in macro guard are covered by query in GenericCheckerQueries/PreprocessorSymbolErrorMsgName</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>617</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009323</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify each TRANSFORMER of the PARTITION. The number of transformers and partitions shall equal the number of transformers and partitions in the generated SomeIpXf_PartitionApi.h file</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009324</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the configuration of the XF TRANSFORMER is correct</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009325</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfSRFuncDeclSend:SOMEIPXF_IDENTIFIER in someIpXfSRFuncDeclSend:SOMEIPXF_S_SR_DECL_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>461</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009354</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRFuncDeclSend:SOMEIPXF_IDENTIFIER = someIpXfSRSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>462</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009362</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfSRFuncDeclSend:paramType = someIpXfSRSerialization:someIpXfDataType in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>462</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009332</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfETFuncDeclSend:SOMEIPXF_IDENTIFIER, in someIpXfETFuncDeclSend:SOMEIPXF_S_ET_DECL_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>465</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009356</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETFuncDeclSend:SOMEIPXF_IDENTIFIER = someIpXfETSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>466</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009333</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfClientFuncDeclSend:SOMEIPXF_IDENTIFIER, in someIpXfClientFuncDeclSend:SOMEIPXF_S_CLIENT_DECL_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>467</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009358</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfClientFuncDeclSend:SOMEIPXF_IDENTIFIER = someIpXfClientSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>468</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009334</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfServerFuncDeclSend:SOMEIPXF_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfServerFuncDeclSend:someIpXfInterfaceVersion, the RETVAL which corresponds to someIpXfServerFuncDeclSend:SOMEIPXF_RETVAL, and the AUTONERR which corresponds to someIpXfServerFuncDeclSend:SOMEIPXF_AUTONERR, in someIpXfServerFuncDeclSend:SOMEIPXF_S_SERVER_DECL_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>469</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009360</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfServerFuncDeclSend:SOMEIPXF_IDENTIFIER = someIpXfServerSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>470</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009326</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the configuration of the INVXF TRANSFORMER is correct</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009327</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfSRFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER in someIpXfSRFuncDeclReceive:SOMEIPXF_S_SR_DECL_FUNC_INVXF is correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>461</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009355</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER = someIpXfSRDeSerialization:SOMEIPXF_INV_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>462</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009363</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfSRFuncDeclReceive:paramType = someIpXfSRDeSerialization:someIpXfDataType in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_Datatype_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>463</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009335</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfETFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER in someIpXfETFuncDeclReceive:SOMEIPXF_S_ET_DECL_FUNC_INVXF is correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>465</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009357</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETFuncDeclReceive:SOMEIPXF_IDENTIFIER = someIpXfETDeSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>466</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009336</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfClientFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfClientFuncDeclReceive:someIpXfInterfaceVersion, the RETVAL which corresponds to someIpXfClientFuncDeclReceive:SOMEIPXF_RETVAL in someIpXfClientFuncDeclReceive:SOMEIPXF_S_CLIENT_DECL_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>467</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009359</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfClientFuncDeclReceive:SOMEIPXF_IDENTIFIER = someIpXfClientDeSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>468</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009337</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfServerFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfServerFuncDeclReceive:someIpXfInterfaceVersion in someIpXfServerFuncDeclReceive:SOMEIPXF_S_SERVER_DECL_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>469</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009361</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfServerFuncDeclReceive:SOMEIPXF_IDENTIFIER = someIpXfServerDeSerialization:SOMEIPXF_IDENTIFIER in PartitionApi.c file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>470</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009329</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecCode:SOMEIPXF_STOP_SEC_CODE = "SOMEIPXF_STOP_SEC_CODE" and someIpXfStopSecCode:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>791</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009330</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) does not exist</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_partitionapi_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>752</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009331</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.h</source>
      <version>2</version>
      <description>The Checker shall verify if ENDIF_DIRECTIVE exists only once.</description>
      <comment>The ENDIF_DIRECTIVE tests prove the occurrence of parse errors if ENDIF (#endif) exists more than once</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_partitionapi_h</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>757</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.009412</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_PARTITIONINFIX _PartitionApi.h" exists. Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009413</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_PARTITIONINFIX _PartitionApi.h" exists only once. Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009414</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_PARTITIONINFIX _PartitionApi.h". Dynamic part % PARTITIONINFIX % ist not checked.</description>
      <comment>User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009415</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecCode:SOMEIPXF_START_SEC_CODE = "SOMEIPXF_START_SEC_CODE" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>780</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009416</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecCode:SOMEIPXF_START_SEC_CODE = "SOMEIPXF_START_SEC_CODE" and someIpXfStartSecCode:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>782</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009417</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify each TRANSFORMER of the PARTITION. The number of transformers and partitions shall equal the number of transformers and partitions in the generated SomeIpXf_PartitionApi.c file.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009418</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the configuration of the XF TRANSFORMER is correct</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009430</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRSerialization:someIpXfConfigurationArrayId = "CONFIGURATIONARRAYID" = someIpXfDefDataTypeConfigID:SOMEIPXF_ID that someIpXfSRSerialization:someIpXfDataType = "DATATYPE" = someIpXfDefDataTypeName:someIpXfDataTypeName in SomeIpXf_Cfg.c file. </description>
      <comment>Match of Datatypes in SomeIpXf_Cfg.c and SomeIpXf_PartitionApi.c is covered by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_DataType_Compatibility_of_SR_API_and_configuration_array. Comparison between both SOMEIPXF_ID in same file SomeIpXf_Int_Cfg.h is checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Array_Config_Struct_And_Size_Ids. Comparison of data types between PartitionApi.h and PartitionApi.c file is checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match.
</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_ArraySizeConfigIds_Datatype_mismatch</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>464</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009432</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRSerialization:SOMEIPXF_IDENTIFIER = someIpXfSRFuncDeclSend:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>462</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009440</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfSRSerialization:someIpXfDataType = someIpXfSRFuncDeclSend:paramType in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_Datatype_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>463</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009419</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfSRSerialization:SOMEIPXF_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfSRSerialization:someIpXfInterfaceVersion, the MESSAGETYPE which corresponds to someIpXfSRSerialization:SOMEIPXF_MESSAGE_TYPE, and the SESSIONHANDLINGACTIVITY which corresponds to someIpXfSRSerialization:SOMEIPXF_SESSIONHANDLING_ACTIVITY in someIpXfSRSerialization:SOMEIPXF_S_SR_DEF_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>461</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009433</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETSerialization:SOMEIPXF_IDENTIFIER = someIpXfETFuncDeclSend:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>466</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009424</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfETSerialization:SOMEIPXF_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfETSerialization:someIpXfInterfaceVersion, and the SESSIONHANDLINGACTIVITY which corresponds to someIpXfETSerialization:SOMEIPXF_SESSIONHANDLING_ACTIVITY in someIpXfETSerialization:SOMEIPXF_S_ET_DEF_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>465</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009434</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfClientSerialization:SOMEIPXF_IDENTIFIER = someIpXfClientFuncDeclSend:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>468</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009425</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfClientSerialization:SOMEIPXF_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfClientSerialization:someIpXfInterfaceVersion, in someIpXfClientSerialization:SOMEIPXF_S_CLIENT_DEF_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>467</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009435</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfServerSerialization:SOMEIPXF_IDENTIFIER = someIpXfServerFuncDeclSend:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>470</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009426</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfServerSerialization:SOMEIPXF_IDENTIFIER, the INTERFACEVERSION which corresponds to someIpXfServerSerialization:someIpXfInterfaceVersion, the RETVAL which corresponds to someIpXfServerSerialization:SOMEIPXF_RETVAL and the AUTONERR which corresponds to someIpXfServerSerialization:SOMEIPXF_AUTONERR, in someIpXfServerSerialization:SOMEIPXF_S_SERVER_DEF_FUNC_XF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>469</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009420</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify that the configuration of the INVXF TRANSFORMER is correct</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009431</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRDeSerialization:someIpXfConfigurationArrayId = "CONFIGURATIONARRAYID" = someIpXfDefDataTypeConfigID:SOMEIPXF_ID that someIpXfSRDeSerialization:someIpXfDataType = "DATATYPE" = someIpXfDefDataTypeName:someIpXfDataTypeName in SomeIpXf_Cfg.c file. </description>
      <comment>Match of Datatypes in SomeIpXf_Cfg.c and SomeIpXf_PartitionApi.c is covered by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_DataType_Compatibility_of_SR_API_and_configuration_array. Comparison between both SOMEIPXF_ID in same file SomeIpXf_Int_Cfg.h is checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_Array_Config_Struct_And_Size_Ids. Comparison of data types between PartitionApi.h and PartitionApi.c file is checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match.
</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_ArraySizeConfigIds_Datatype_mismatch</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>464</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009436</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall verify if someIpXfSRDeSerialization:SOMEIPXF_INV_IDENTIFIER = someIpXfSRFuncDeclReceive:SOMEIPXF_INV_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>462</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009441</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfSRDeSerialization:someIpXfDataType = someIpXfSRFuncDeclReceive:paramType in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_SR_Func_DataType_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_Datatype_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>463</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009421</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfSRDeSerialization:someIpXfXfrmInvName, the INTERFACEVERSION which corresponds to someIpXfSRDeSerialization:someIpXfInterfaceVersion in someIpXfSRDeSerialization:SOMEIPXF_S_SR_DEF_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>461</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009437</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETDeSerialization:SOMEIPXF_IDENTIFIER = someIpXfETFuncDeclReceive:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>466</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009427</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfETDeSerialization:someIpXfXfrmInvName, and the INTERFACEVERSION which corresponds to someIpXfETDeSerialization:someIpXfInterfaceVersion, in someIpXfETDeSerialization:SOMEIPXF_S_ET_DEF_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>465</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009438</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETDeSerialization:SOMEIPXF_IDENTIFIER = someIpXfETFuncDeclReceive:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>468</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009428</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfClientDeSerialization:someIpXfXfrmInvName, the INTERFACEVERSION which corresponds to someIpXfClientDeSerialization:someIpXfInterfaceVersion and the RETVAL which corresponds to someIpXfClientDeSerialization:SOMEIPXF_RETVAL in someIpXfClientDeSerialization:SOMEIPXF_S_CLIENT_DEF_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>467</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009439</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfETDeSerialization:SOMEIPXF_IDENTIFIER = someIpXfETFuncDeclReceive:SOMEIPXF_IDENTIFIER in PartitionApi.h file.</description>
      <comment>checked by query SomeIpXfSpecificCheckerQueries/SOMEIPXF_ET_CLIENT_SERVER_Func_TransformerName_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>470</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009429</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>2</version>
      <description>The Checker shall report the following Review Rule: The user shall verify that the TRANSFORMERNAME which corresponds to someIpXfServerDeSerialization:someIpXfXfrmInvName, the INTERFACEVERSION which corresponds to someIpXfServerDeSerialization:someIpXfInterfaceVersion in someIpXfServerDeSerialization:SOMEIPXF_S_SERVER_DEF_FUNC_INVXF are correct.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>469</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009422</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConst:SOMEIPXF_STOP_SEC_CODE = "SOMEIPXF_STOP_SEC_CODE" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>788</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009423</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_PartnApi.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConst:SOMEIPXF_STOP_SEC_CODE = "SOMEIPXF_STOP_SEC_CODE" and someIpXfStopSecConst:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>790</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <!-- Safety analysis -->

    <specobject>
      <id>E2E.SEEA.009503</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h" exists.</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009504</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009505</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Cfg.h"</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009506</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int_Stc.h" exists.</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009507</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int_Stc.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009508</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_S_Int_Stc.h"</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009509</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h" exists.</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>454</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>455</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009510</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h" exists only once.</description>
      <comment>Multiple appearances of header file inclusion is prohibited by include guard and will be detected by compiler and by generic query "GenericCheckerQueries/IncludeHeaderFileOnlyOnce". User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>619</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>456</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009511</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that include:includeFile = "SomeIpXf_Int_Cfg.h"</description>
      <comment>Only if SomeIpXf_Cfg.c file is present. User has to verify that all required generated files are actually present in the report file.</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>457</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009512</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecConst:SOMEIPXF_START_SEC_CONST16 | SOMEIPXF_START_SEC_CONST32 = "SOMEIPXF_START_SEC_CONST_16" | "SOMEIPXF_START_SEC_CONST_32" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>784</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009513</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStartSecConst:SOMEIPXF_START_SEC_CONST16 | SOMEIPXF_START_SEC_CONST32 = "SOMEIPXF_START_SEC_CONST_16" | "SOMEIPXF_START_SEC_CONST_32" and someIpXfStartSecConst16:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>786</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009514</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall report  the following Review Rule: The user shall verify each CONFIGURATIONARRAY used by a TRANSFORMER. The number of configurationarrays, transformers and dataelements shall equal the number of configurationarrays, transformers and dataelements in the generated SomeIpXf_Cfg.c file.</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009525</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>2</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:ENDIANNESS = "LE" | "BE" | "OP" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>770</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>772</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009526</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>2</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:ENDIANNESS = "LE" | "BE" | "OP" is set correctly</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>771</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>773</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009516</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>2</version>
      <description>The Checker shall verify that someIpXfDefDataTypeName:someIpXfDataTypeName = "DATATYPE_NAME" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>774</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009517</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>2</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:someIpXfDataTypeName = "DATATYPE_NAME" is set correctly.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>775</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009533</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:someIpXfDataTypeConfigID = "DATATYPE_CONFIGID" exists.</description>
      <comment>Check of presence of %SOMEIPXF_ID% in SomeIpXf_Cfg.c files and in SomeIpXf_Int_Cfg.h files is checked by queries "SOMEIPXF_ConfigurationArrayIds_Present_Cfg_c" and "SOMEIPXF_ConfigurationArrayIds_Present_Int_Cfg_h"</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>776</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_missing</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>474</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009534</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:someIpXfDataTypeConfigID = "DATATYPE_CONFIGID" is set correctly.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>777</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009537</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description> The Checker shall verify that someIpXfDefDataTypeName:someIpXfDataTypeConfigID = "DATATYPE_CONFIGID" shall be unique.</description>
      <comment>Covered by queries "SomeIpXfSpecificCheckerQueries/SOMEIPXF_ConfigurationArrayId_Unique_Int_Cfg_h" and "SomeIpXfSpecificCheckerQueries/SOMEIPXF_ConfigurationArrayId_Unique_Cfg_c".</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_DataTypeConfigIdUnique_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>524</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009539</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description> The Checker shall verify that each someIpXfTlvDataId:tlvDataId has a corresponding match with either someIpXfSetTlvStructMemberConfig:tlvDataId or someIpXfSetTlvStructOptMemberConfig:tlvDataId.</description>
      <comment>Covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_TlvStruct_Member_DataId_Match</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberId_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>526</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009540</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that the count of all someIpXfSetTlvStructMemberConfig:tlvDataId plus all someIpXfSetTlvStructOptMemberConfig:tlvDataId matches the count of all someIpXfTlvDataId:tlvDataId. 
The Checker shall verify that all someIpXfTlvDataId:tlvDataId are unique.</description>
      <comment>Covered by queries in SomeIpXfSpecificCheckerQueries/SOMEIPXF_TlvStruct_Member_DataId_Unique and SomeIpXfSpecificCheckerQueries/SOMEIPXF_TlvStruct_Member_DataId_Count</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdCount_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>527</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdUnique_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>528</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009541</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that the count of all someIpXfSetTlvStructMemberConfig:tlvDataId plus all someIpXfSetTlvStructOptMemberConfig:tlvDataId matches the count of all someIpXfTlvDataId:tlvDataId. 
The Checker shall verify that all someIpXfTlvDataId:tlvDataId are unique.</description>
      <comment>Covered by queries in SomeIpXfSpecificCheckerQueries/SOMEIPXF_TlvStruct_Member_DataId_Unique and SomeIpXfSpecificCheckerQueries/SOMEIPXF_TlvStruct_Member_DataId_Count</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdCount_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>527</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdUnique_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>528</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009538</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify that someIpXfSetVsaConfig:payload is identical to someIpXfSetVsaDimConf:payload. Both macros are optional, but if present, they must appear in pairs as described in Category/Elements.</description>
      <comment>Covered by query in SomeIpXfSpecificCheckerQueries/SOMEIPXF_VSA_VSADim_PayloadCheck</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_SetVsaConfigSetVsaDimConfigPayloadCheck_SOMEIPXF_CFG_C_wrong</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>525</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_VsaPayload_VsaDimPayload</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>471</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009518</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>2</version>
      <description>"The Checker shall report  the following Review Rule: The user shall verify all the valid data elements of the configuration array are present, which can include :

someIpXfArgTlv:someIpXfArgTlvConfig and/or
someIpXfBasicDataType:someIpXfBasicDataTypeSize and/or 
someIpXfFsaOfFsa:someIpXfSetFsaConfig and/or 
someIpXfFsaOfBasicType:someIpXfSetFsaConfig and/or 
someIpXfFsaOfBasicType:someIpXfBasicDataType and/or 
someIpXfFsaOfStruct:someIpXfSetFsaConfig and/or 
someIpXfFsaWithLF:someIpXfSetFsaWLfConf and/or 
someIpXfFsaWithLf:someIpXfSetFsaWLfDimConf and/or 
someIpXfFsaOfBasicTypeWithLf:someIpXfSetScalarConfig and/or 
someIpXfStructWithLf:someIpXfSetStrLenFConf and/or 
someIpXfVsa:someIpXfSetVsaConfig and/or 
someIpXfVsa:someIpXfSetScalarConfig and/or 
someIpXfVsa:someIpXfSetVsaDimConfSec and/or 
someIpXfTlvStruct:someIpXfSetTlvStructFixMemberConfig and/or 
someIpXfTlvStruct:someIpXfSetTlvStructConf and/or 
someIpXfTlvStruct:someIpXfStructTlvMemberOpt and/or 
someIpXfTlvStruct:someIpXfStructTlvMemberFix  . "</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_TLV_Configs</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>473</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009519</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>3</version>
      <description>"The Checker shall report the following Review Rule: The user shall verify all the data elements of the configuration array present are correct, which includes verfication of: 

someIpXfBasicDataType:someIpXfBasicDataTypeSize and/or 
someIpXfSetScalarConfig:SOMEIPXF_SET_INTEGER_CONFIG and/or 

someIpXfSetScalarConfig:SOMEIPXF_SET_STRUCT_CONFIG and/or 

someIpXfSetFsaConfig:maxNumArrayElem, someIpXfSetFsaConfig:arrayElementType and/or 
someIpXfSetStrLenFConf:sizeLengthField, 
someIpXfSetStrLenFConf:someIpXfSetScalarConfig and/or 

someIpXfSetFsaWLfConf:numDimArray, someIpXfSetFsaWLfConf:sizeLengthField and/or 

someIpXfSetFsaWLfDimConf:numArrayElements,
someIpXfSetFsaWLfDimConf:dataType, 
someIpXfSetFsaWLfDimConf:elementsInCurrentDim and/or 

someIpXfSetVsaConfig:numOfDim, someIpXfSetVsaConfig:lfByteSize, someIpXfSetVsaConfig:sizeIndicatorType and/or 

someIpXfSetTlvStructFixMemberConfig:lfByteSize, someIpXfSetTlvStructFixMemberConfig:fixMemCount, someIpXfSetTlvStructFixMemberConfig:tlvDataIdCount, someIpXfSetTlvStructConf:lfByteSize,  someIpXfSetTlvStructConf:fixMemCount, someIpXfSetTlvStructConf:tlvDataIdCount, someIpXfSetTlvStructOptMemberConfig:wireType, someIpXfSetTlvStructOptMemberConfig:tlvDataId, someIpXfSetTlvStructOptMemberConfig:memberIndex, someIpXfSetTlvStructMemberConfig:wireType, someIpXfArgTlvConfig:wireType, someIpXfArgTlvConfig:tlvDataId, someIpXfArgTlvConfig:lfByteSize."</description>
      <comment>Can be checked by the user in the Report output</comment>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>452</internalId></ffbObj>
         <ffbObj>
          <ffbId>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_TLV_Configs</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>473</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009535</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeConfigID exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>800</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009536</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeConfigID:DATATYPECONFIGID = "SOMEIPXF_DATA_TYPE_CONFIG_ID" is set correctly.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>801</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009521</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeName exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>796</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009522</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeName:DATATYPENAME = "SOMEIPXF_DATA_TYPE_NAME" is set correctly.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>799</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009529</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeConfigEndian exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>797</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009530</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfUndefDataTypeConfigEndian:DATATYPECONFIGENDIAN = "SOMEIPXF_DATA_TYPE_CONFIG_ENDIAN" is set correctly.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>798</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009523</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST16 | SOMEIPXF_STOP_SEC_CONST32 = "SOMEIPXF_STOP_SEC_CONST_16" | "SOMEIPXF_STOP_SEC_CONST_16" exists.</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>792</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>E2E.SEEA.009524</id>
      <status>approved</status>
      <source>E2E_SEEA_SomeIpXf_Cfg.c</source>
      <version>1</version>
      <description>The Checker shall verify if someIpXfStopSecConstSym:SOMEIPXF_STOP_SEC_CONST16 | SOMEIPXF_STOP_SEC_CONST32 = "SOMEIPXF_STOP_SEC_CONST_16" | "SOMEIPXF_STOP_SEC_CONST_32" and someIpXfStopSecConst16:includeMemMap = #include &lt;SomeIpXf_MemMap.h&gt;</description>
      
      
        <fulfilledby>
         <ffbObj>
          <ffbId>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_c</ffbId>
          <ffbType>tcs</ffbType>
          <ffbVersion>1</ffbVersion>
         <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>794</internalId></ffbObj>
        <containerCovstatus>covered</containerCovstatus></fulfilledby>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>XfrmCheck.InputFiles</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall accept a set of files as input and
        verify the validity of that file set before it is handed over 
        for further checks.
      </description>
      <rationale>
        Some checks can be done before the actual parser is being executed, e.g. verifying that
        the handed over file list is not empty, that all files actually exist, and that the file
        names use the extensions of C language source and header files.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testNoChecks</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckNonExistentCheckFile</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckUnknownFileExtension</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java_78</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>XfrmCheck.OutputFolder</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall accept an output folder as input and verify the validity of
        that folder.
      </description>
      <rationale>
        For the output folder it must be verified that it either exists already or that 
        the checker process is allowed to create it.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testInvalidOutputFolder</srcid><srcstatus/><internalId>538</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testOutputFolderIsAFile</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testOutputFolderIsCreated</srcid><srcstatus/><internalId>540</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java_81</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall generate a report file.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.ReportFile.OutputLocation</srcid><srcstatus/><internalId>319</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.HeaderInformation</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.MD5HashCalculator</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.XMLConversion</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.VersionNumbers</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.Timestamp</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.InputFiles</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.OverallStatus</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.ExecutedCheckerQueries</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.FailedChecks</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ReportFile.ManualChecks</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.OutputLocation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall generate a report file at the output path location 
        provided by the user via command line input parameter.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testGenerateReportWithDefaultNameWhenPathIsValidDirectory</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testIllegalStateExceptionShallBeThrownIfOutputPathRepresentsAFile</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.HeaderInformation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall generate a report file containing the header information
        result of the executed check, the checker library version, timestamp of the 
        executed check, input and output file list.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.MD5HashCalculator</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall calculate a checksum for the checked files and write it into the report.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.MD5HashCalculatorTestCase.test_hashCalculation</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.XMLConversion</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall generate a report file in XML format.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.ReportFile.XMLConversion.DataSeparator</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testEmptyLeafNodeConversion</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testSingleRootTag</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testRootTagWithSingleSubtagWithContentAndAttr</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testThreeLevelXMLTree</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIntermediateNodesWithAttributes</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testXMLLeafNodeComparison</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnExceptionShallBeThrownIfMultipleRootNodesAreProduced</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.XmlNodeTest.testEqualsShallReturnFalseForTwoNodesWithTheSameClassVariableValues</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.XmlNodeTest.testHashCodeShallReturnDifferentHashesForTwoNodesWithTheSameClassVariableValues</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.XMLConversion.DataSeparator</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall be able to distinguish between review messages and the actual fetched 
        parsed data from the database in the SQL result set of the report query with the help of a 
        data separator "--data-start--". The distinction shall be done so that the checker library is able 
        to add review messages to the XML report output only once per provided path.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testMergeOfIdenticalReviewItemNodes</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testThatDataStartSeparatorIsNotTurnedIntoAnXmlNode</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfNoDataSeparatorIsFound</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfDataSeparatorIsAtIndexZero</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfDataSeparatorOccursMoreThanOnce</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIncorrectValueOfDataSeparatorShallNotBeRecognizedAsActualDataSeparator</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAppendChildNodesToTheSameParentNode</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIdenticalChildNodesShallBothBeAddedToTheSameParent</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.VersionNumbers</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report file shall contain the version number of the
        checker library and the version number of the checker application.
      </description>
      <rationale>
        Allow to track the tool versions that were used during a checker execution.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.Timestamp</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report file shall contain information about
        the date and time when the checking process took place.
      </description>
      <rationale>
        Allow to track the date and time when a given checker execution was triggered.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.InputFiles</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report shall contain a list of checked input files and their checksums 
        where the checksum shall be calculated on the file content.
      </description>
      <rationale>
        Allow to track the files that have been examined during a given checker execution,
        allow to determine whether the content of the checked files was equal or differs
        with respect to a given file set with known content.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.OverallStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report file shall contain the information on the overall result of the check,
        i.e. whether all automated checks have passed or whether one or more have failed.
      </description>
      <rationale>
        Provide information on whether problems occurred during the checker execution or
        whether any automated checks were failing. The execution of manual checks only makes
        sense if all automated checks were passing.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.ExecutedCheckerQueries</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report file shall contain the list of automated checker queries that 
        were processed during a checker execution.
      </description>
      <rationale>
        Allow to track the checks that have been executed on a given input file set.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testManualChecksFromApplication</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.FailedChecks</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker report file shall contain the error messages issued by failed checks.
      </description>
      <rationale>
        Allow to track the checks that have failed on a given input file set.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.CommandLineParser</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide a command line parser for passing input files or folders,
        for passing the output folder for the report file, as well as for querying the tool
        version numbers.
      </description>
      <rationale>
        The checker applications using the checker library are currently implemented as command 
        line tools, adding the command line parser to the checker library enforces consistent 
        parameters along all checker applications.
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.CommandLineParser.ParameterHandling</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.CommandLineParser.Usage</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.CommandLineParser.VersionInfo</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.CommandLineParser.ParameterHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide an API to process the input parameters provided by 
        the user via command line.
      </description>
      <rationale>
        If a client application is handed over supported parameters, the checker library must
        be able to process the input internally.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnEmptyParamList</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyVersionParam</srcid><srcstatus/><internalId>530</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyHelpParam</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testLogErrorOnInvalidInput</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testThrowsExceptionOnInvalidCommandLineArgument</srcid><srcstatus/><internalId>533</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testValidParameterSet</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testInvalidParameterSet</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testUsageOutput</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.CommandLineParser.Usage</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide an API by which it can convey the command line
        parameters it accepts.
      </description>
      <rationale>
        If a client application has handed over unsupported parameters, it can display the
        set of supported parameters.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyHelpParam</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_135</srcid><srcstatus/><internalId>438</internalId></linkedfrom><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/CommandLineHandler.java_25</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.CommandLineParser.VersionInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide an API by which it can convey the version info
        if requested from the client.
      </description>
      <rationale>
        If a client requests to see the version info on the checker library and on the 
        client checker application, the library can hand over that information to the client
        checker application which in turn can display that information to the user.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyVersionParam</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_146</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>XfrmCheck.DataModel</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide an API by which it can process the correct 
        translation of the input files.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModel.Verification.TransformerChecks</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.Normalizer</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.FileStructure</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.ProtectionSymbol</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.IncludeStatement</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.PreprocSymbol</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.FunctionMacro</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Verification.ExternVariableDeclaration</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Execution</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.ReportQueries.Application</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Common</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Internal</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Internal.CodeDB</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Internal.SQLStatementCollector</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.Internal.File</srcid><srcstatus/><internalId>423</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Application</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Specification</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.ReportQueries.Specification</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.TransformerChecks</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify the type of the transformer with help of the passed ID 
        and thus that the handed over files are parsed correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnTrueForActualE2EXfCAPIFile</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnFalseForComXfCAPIFile</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnFalseForSomeIpXfCAPIFile</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.Normalizer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that the data contained in the files that have 
        been handed over are normalized correctly before being parsed.
      </description>
      <rationale>
        Verify proper replacement of whitespace sequenced by single blanks, the removal of 
        C style comments, and the normalizations of blanks after commas before the handed 
        over file is parsed. Files that have not been normalized cannot be compared reliably.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SourceCodeNormalizerTestCase.testNormalizingCode</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.FileStructure</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that the file structure, the number of files and 
        the file path are correct before the file content is being parsed.
      </description>
      <rationale>
        Verify the correct setup of the input files before the are translated into the 
        data model. Generated transformer files do have a certain structure. If this structure 
        is not found, executing further checks does not make sense since the checks would 
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testAllFilesDeleted</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.test2xSameFile</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testDeleteOneFile</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFilePathManipulation</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.ProtectionSymbol</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that the protection against multiple inclusion is 
        set up correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFileProtectionSymbolManipulation</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFileincludeProtectionSymbolIFNDEFTestManipulation</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.IncludeStatement</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that the include statements are configured correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testIncludeStatementFileIDManipulation</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testIncludeStatementIncludeFileManipulation</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.PreprocSymbol</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that the preproc symbols are configured correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolFileIdManipulation</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolNameManipulation</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolChecknameManipulation</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolValueManipulation</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.FunctionMacro</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that function-like macros are configured correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroFileIdManipulation</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroNameManipulation</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroReturnTypeManipulation</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalTriggerAndSenderReceiverFunctionDefinitionsAreRegeneratedInSameOrderAsInSourceFile</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testSessionHandlingCounterVariablesAreRegeneratedInSameOrderAsInSourceFile</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Verification.ExternVariableDeclaration</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall verify that extern variable declarations are configured 
        correctly.
      </description>
      <rationale>
        Verify correct translation of the input files into the data model. 
        A failed verification is most likely caused by a software bug in the checker tooling.
        In that case, executing further checks does not make sense since the checks would
        operate on incorrect data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclFileIdSectionManipulation</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclArraySizeConfigIdManipulation</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclArrayConfigIdManipulation</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.CheckerQueries.Execution</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A failed checker query shall set the overall checker status to failed and
        produce an error message that contains the error cause.
      </description>
      <rationale>
        The error message and the overall checker status will show up in the generated report file. 
        The checker status is defined as "FAILED" if at least one error occurred, otherwise the 
        checker status is defined as "PASSED".
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testCheckCodeDBNoFilesInjected</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testSQLmustFindError</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testMultipleInjections</srcid><srcstatus/><internalId>640</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckerActionTestCase.test_executeCheck</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckerActionTestCase.test_checkResultSetEntries_IllegalStateException</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.ReportQueries.Application</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall accept report queries from the checker application. Any data 
        extracted by a report query shall be added to the report file.
      </description>
      <rationale>
         A report query extracts the parts of the data model that have to be checked manually
         and therefore have to show up in the report file.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testManualChecksFromApplication</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModel.Internal</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.ReportQueries.Specification</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.ManualChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ErrorHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall forward detected internal failure states to the
        application by passing a set of collected error status objects or by
        throwing exceptions.
      </description>
      <rationale>
        Conveying an unrecoverable error state by throwing Exceptions avoids additional
        logic that prevents further processing after the state occurred.
        Collecting a set of recoverable error states as error status objects allows to 
        present multiple detected errors to the user instead of just the first one.
        Unrecoverable error states may be caused by e.g. incomplete/incorrect command line
        parameters or by programming Error (referencing an unchecked variable may lead to
        a NullPointerException). Recoverable errors are e.g. failed safety checks on the
        handed over C files.
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.ErrorHandling.ExceptionHandling</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ErrorHandling.ExceptionHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Any unexpected exception shall be forwarded as IllegalStateException to the
        client application.
      </description>
      <rationale>
        Unexpected exceptions may be caused by programming errors, or by problems
        of the environment the checker application is executed in, e.g. when allocating
        or freeing resources in the OS the checker library executes in.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithoutExceptionWithInvalidFileWriter</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Unexpected exceptions of type ConsumerWithIOException or ConsumerWithSQLException 
        shall be forwarded as IllegalStateException to the client application.
      </description>
      <rationale>
        Unexpected exceptions may be caused by programming errors, or by problems
        of the environment the checker application is executed in, e.g. when allocating
        or freeing resources in the OS the checker library executes in.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithoutException</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithException</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithSQLExceptionTestCase.testExecutionWithoutException</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithSQLExceptionTestCase.testExecutionWithException</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Unexpected exceptions of type FunctionWithIOException, 
        FunctionWithNoSuchAlgorithmException or FunctionWithSQLException shall be forwarded 
        as IllegalStateException to the client application.
      </description>
      <rationale>
        Unexpected exceptions may be caused by programming errors, or by problems
        of the environment the checker application is executed in, e.g. when allocating
        or freeing resources in the OS the checker library executes in.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithIOExceptionTestCase.testExecutionWithoutException</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithIOExceptionTestCase.testExecutionWithException</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithNoSuchAlgorithmExceptionTestCase.testExecutionWithoutException</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithNoSuchAlgorithmExceptionTestCase.testExecutionWithException</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithSQLExceptionTestCase.testExecutionWithoutException</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithSQLExceptionTestCase.testExecutionWithException</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide an API by which it provides all status messages collected
        during a checker execution.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.StatusMessage.Log</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.File</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.ComXf</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.E2EXf</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.1</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.2</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.3</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.4</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.5</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.6</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.7</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.8</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.SomeIpXf.9</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.StatusMessage.Content</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.Log</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker application shall print all collected status messages that occurred during 
        the file checking process with log level Severity.INFO or Severity.ERROR.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_157</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_171</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.File</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall report all error messages that occur while reading 
        the input files.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testValidParameters</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckNonExistentCheckFile</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckUnknownFileExtension</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.ComXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        ComXf configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_ComXfCFileChecks</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.E2EXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        E2EXf configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_memPartitioning</srcid><srcstatus/><internalId>548</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_INVXFNoCheck</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_Xstatevar_INVXFNoCheck</srcid><srcstatus/><internalId>550</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceCheckCheck</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceProtectCheck</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceProtectCheck</srcid><srcstatus/><internalId>553</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceCheckCheck</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_dataIdListsCheck</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_e2eXfProfileSymbolParamCheck</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksStructWithLengthField</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_13_SR_ExtStructs_p7</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksFixedSizeArrayWithWithLengthFieldDimension</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf sender/receiver configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p0</srcid><srcstatus/><internalId>558</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p1</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p0</srcid><srcstatus/><internalId>560</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p1</srcid><srcstatus/><internalId>561</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_20_SR_ExtStructs_p10</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_37_SR_StressTest_ExtArrays_p1</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_41_SR_ExtArrays_In_Struct_p6</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_42_SR_ExtArrays_In_ExtStruct_p6</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ImpTest_03_SR_64Bit_p1</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing 
        functions of SomeIpXf sender/receiver configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p1</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p3</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p2</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p3</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_40_SR_Functions_Bitfield_p0</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf SenderReceiver configuration with session handling enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p1</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p3</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf Client configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p2</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p3</srcid><srcstatus/><internalId>574</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_22_CS_Server_MemoryPartitionsNoRetVal</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_07_CS_Client_Functions_p5</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_23_CS_Client_NoReturnValue_p1</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p2</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p3</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_30_CS_Client_Functions_StressTest_p0</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_39_CS_Client_Functions_Bitfield_p0</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf Server configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_10_CS_Server_Functions_p2</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_11_CS_Server_NoReturnValue_p1</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p2</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p3</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_29_CS_Server_NoArgument_p1</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf External Trigger configuration.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_12_ET_Functions_p1</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p1</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p1</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p3</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf configuration with VariableSizeArrays.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_05_SR_VarSizeArrays_p4</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_06_SR_VarSizeArrays_p1</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_25_SR_VSA_FulFlex_p2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_36_SR_StressTest_p1</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_38_SR_VSA_FulFlex_p2</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_56_SR_VarSizeArrays_p2</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_57_CS_VarSizeArrays_p2</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.8</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf configuration with nested VariableSizeArrays.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_45_SR_NestedVarSizeArrays_p2</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_46_SR_NestedVarSizeArrays_FSA_p2</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_47_SR_NestedVarSizeArrays_ExtStruct_p2</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_55_SR_NestedVarSizeArrays_Ext_Array_p2</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.SomeIpXf.9</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall collect all status messages occurring while parsing a 
        SomeIpXf configuration with TagLengthValues.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p0</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p4</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p5</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_51_SR_TLV_ExtArrays_p1</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_52_SR_TLV_VSALinear_p1</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_53_CS_Client_Functions_TLVStruct_p2</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_54_CS_Server_Functions_TLVStruct_p2</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.StatusMessage.Content</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The status message API shall provide a mechanism to convey the message text and
        the information on whether the message is an error or not.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_160</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_174</srcid><srcstatus/><internalId>443</internalId></linkedfrom><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java_37</srcid><srcstatus/><internalId>444</internalId></linkedfrom><linkedfrom><srcid>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java_50</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.testGetOverallStatus</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.testContainsEntriesOfSeverity</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.test_SeverityasString</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be applied onto the files handed over to the checker library.
        If any handed over file does not match the required syntax, the checking process
        shall stop with an error.
      </description>
      <rationale>
        A failed syntax check is either caused by an error in the handed over generated source
        file or by an incorrect (i.e. too strict) syntax check. In either case, further
        checking does not make sense since it would operate on erroneous data.
      </rationale>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testValidParameters</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.ParseErrorListenerTestCase.testUnderlineError</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_defineSymbolVal_missing_U_suffix</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_defineSymbolVal_wrong_unexpectedChars</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_INCLUDE_PartitionnameParseCheck_c</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        No syntax check on golden files shall result in an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_PartitionApi_P01</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_PartitionApi_P04</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_KaFAS</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_SAS</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_SomeIpXf_KaFAS</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_SomeIpXf_SAS</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_ComXf_KaFAS</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on files containing a ComXf configuration before 
        being handed over to the checker library. If any handed over file does not match 
        the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ConfigurationCheck</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on ComXf files containing C code that matches to 
        a specific parser rule to verify the correctness of the grammar. If any handed over 
        file does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.testParsePassing</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on ComXf files containing an invalid configuration 
        where C Code that matches to a specific parser rule is missing. If any handed 
        over file does not match the required syntax, the checking process shall stop 
        with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_missing_h</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_missing_c</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_missing_h</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_missing_c</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_missing_h</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_api_h</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_cfg_h</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_partitionapi_h</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on ComXf files containing an invalid configuration 
        where C Code that matches to a specific parser rule occurs more than once. If any 
        handed over file does not match the required syntax, the checking process shall stop 
        with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_COMXF_Mandatory_Define_Symbol_COMXF_API_H_only_once_h</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_COMXF_Mandatory_Define_Symbol_COMXF_CFG_H_only_once_h</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_more_h</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_api_h</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_cfg_h</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_partitionapi_h</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on ComXf files containing an invalid configuration 
        where C Code that matches to a specific parser rule is wrong. If any handed over 
        file does not match the required syntax, the checking process shall stop with an 
        error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.testParseFailing</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_wrong_h</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfDeserFuncStart_c</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfSerFuncStop_c</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_wrong_c</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_wrong_h</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_wrong_c</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_wrong_h</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfSerFuncStart_c</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfDeserFuncStop_c</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ConfigurationCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on files containing a ComXf configuration before being 
        handed over to the checker library. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_ComXfCFileChecks</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on files containing a E2EXf configuration before 
        being handed over to the checker library. If any handed over file does not match 
        the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.1</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.2</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.3</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.6</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.8</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.9</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.10</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf files containing C code that matches to 
        a specific parser rule to verify the correctness of the grammar. If any handed over 
        file does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.testParsePassing</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule is missing. If any handed over file 
        does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_partitionapi_c</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the macro 
        section is missing. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfDeInitFuncMacro_missing_c</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfInitFuncMacro_missing_c</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfMacroSection_missing_c</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the internal 
        data section is missing. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStateVarSection_missing_c</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfXfrmConfigSection_missing_c</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the external 
        function definitions block is missing. If any handed over file does not match the 
        required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeElements_missing_c</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_missing_c</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartDeInitMacro_missing_c</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitMacro_missing_c</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitSection_missing_c</srcid><srcstatus/><internalId>731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule is missing. If any handed over file 
        does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_missing_h</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_missing_h</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclReceive_missing_h</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclSend_missing_h</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStartSecCode_missing_h</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStopSecCode_missing_h</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_cfg_h</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_exists_e2exf_api_h</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_exists_e2exf_partitionapi_h</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule occurs more than once. If any 
        handed over file does not match the required syntax, the checking process shall stop 
        with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_more_c</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_partitionapi_c</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule occurs more than once. If any 
        handed over file does not match the required syntax, the checking process shall 
        stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_E2EXF_Mandatory_Define_Symbol_E2EXF_API_H_only_once_h</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_E2EXF_Mandatory_Define_Symbol_E2EXF_CFG_H_only_once_h</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_more_h</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_more_h</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_more_h</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_cfg_h</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_more_e2exf_api_h</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_more_e2exf_partitionapi_h</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.8</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule is wrong. If any handed over file 
        does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.testParseFailing</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.9</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the macro 
        section is wrong. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfDeInitFuncMacro_wrong_c</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfInitFuncMacro_wrong_c</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfMacroSection_wrong_c</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.10</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the internal 
        data section is wrong. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStateVarSection_wrong_c</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfXfrmConfigSection_wrong_c</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the external 
        function definitions block is wrong. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeElements_wrong_c</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_wrong_c</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartDeInitMacro_wrong_c</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitMacro_wrong_c</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitSection_wrong_c</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule is wrong. If any handed over file 
        does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.testParseFailing</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_wrong_h</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStartSecCode_wrong_h</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStopSecCode_wrong_h</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_cfg_h</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_defineSymbolVal_Cfg_h</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on E2EXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the external 
        function declarations block is wrong. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_missing_h</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_wrong_h</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_wrong_h</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclReceive_wrong_h</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclSend_wrong_h</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on files containing a E2EXf configuration before being 
        handed over to the checker library. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_memPartitioning</srcid><srcstatus/><internalId>548</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_INVXFNoCheck</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_Xstatevar_INVXFNoCheck</srcid><srcstatus/><internalId>550</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceCheckCheck</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceProtectCheck</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceProtectCheck</srcid><srcstatus/><internalId>553</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceCheckCheck</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_dataIdListsCheck</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_e2eXfProfileSymbolParamCheck</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on files containing a SomeIpXf configuration before 
        being handed over to the checker library. If any handed over file does not match 
        the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.9</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.12</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.19</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</srcid><srcstatus/><internalId>416</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing C code that matches to 
        a specific parser rule to verify the correctness of the grammar. If any handed over 
        file does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.testParsePassing</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule is missing. If any handed over file does 
        not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_c</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_c</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_missing_c</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_c</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the external 
        function definitions block is missing. If any handed over file does not match the 
        required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_missing_c</srcid><srcstatus/><internalId>770</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_missing_c</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_missing_c</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_missing_c</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_missing_c</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_missing_c</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_missing_c</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a VSA macro nesting in 
        config structs is missing. If any handed over file does not match the required syntax, 
        the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaElementCheckPoint</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaElementEnter</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStopIndex</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStart</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStop</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a TLV macro nesting in 
        config structs is missing. If any handed over file does not match the required syntax, 
        the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvStruct</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStart</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvStructStopIndex</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructConf</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStop</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvDataId</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a TLV fixed member macro 
        nesting in config structs is missing. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFix</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStart</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStop</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructFixMemberConfig</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructMemberConfig</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberId</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a TLV optional member 
        macro is missing. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOpt</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStart</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStop</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStopIndex</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberStartIndex</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid 
        configuration where C Code that matches to a specific parser rule is missing. 
        If any handed over file does not match the required syntax, the checking 
        process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_api_gen_h</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_int_cfg_h</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_partitionapi_h</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_h</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_h</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_missing_h</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_h</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the 
        protection against multiple includes section is missing. If any handed over 
        file does not match the required syntax, the checking process shall stop with an error.
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_missing_h</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_missing_h</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_missing_h</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_missing_h</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.9</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the 
        preprocessor symbol section is missing. If any handed over file does not match 
        the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvArgPreproc</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefineArgSymbolVal</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefSeqParam</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule occurs more than once. If any 
        handed over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_api_gen_h</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_int_cfg_h</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_partitionapi_h</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_more_h</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_more_h</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_more_h</srcid><srcstatus/><internalId>765</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_more_h</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule is wrong. If any handed over file 
        does not match the required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.testParseFailing</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_c</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_c</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_c</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_c</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.12</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a VSA macro nesting in 
        config structs is wrong. If any handed over file does not match the required syntax, 
        the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStopIndex</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStart</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStop</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a TLV macro nesting in 
        config structs is wrong. If any handed over file does not match the required syntax, 
        the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStart</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvStructStopIndex</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructConf</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStop</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvDataId</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a TLV fixed member macro 
        nesting in config structs is wrong. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStart</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStop</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructFixMemberConfig</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructMemberConfig</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a configuration where 
        a parser rule related to a TLV optional member macro nesting in config structs in the 
        grammar is wrong to verify the correctness of the C-grammar. If any handed over 
        file does not match the required syntax, the checking process shall stop with an 
        error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStart</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStop</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStopIndex</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberStartIndex</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .c files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the external 
        function definitions block is wrong. If any handed over file does not match the required 
        syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_wrong_c</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_wrong_c</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_wrong_c</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_wrong_c</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_wrong_c</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_wrong_c</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_wrong_c</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfArraySizeConfigId_wrong</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule is wrong. If any handed over file does not match the required syntax, 
        the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.testParseFailing</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfdefineSymbolVal_Cfg_h</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfExtDataParam_h</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_h</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_h</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_h</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_h</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the protection 
        against multiple includes section is wrong. If any handed over file does not match the 
        required syntax, the checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_wrong_h</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_wrong_h</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_wrong_h</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_wrong_h</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.19</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf .h files containing an invalid configuration 
        where C Code that matches to a specific parser rule related to a macro of the preprocessor 
        symbol section is wrong. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvArgPreproc</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefineArgSymbolVal</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefSeqParam</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files before being handed over to the 
        checker library. If any handed over file does not match the required syntax, the 
        checking process shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksStructWithLengthField</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_13_SR_ExtStructs_p7</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksFixedSizeArrayWithWithLengthFieldDimension</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a SenderReceiver 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p0</srcid><srcstatus/><internalId>558</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p1</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p0</srcid><srcstatus/><internalId>560</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p1</srcid><srcstatus/><internalId>561</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_37_SR_StressTest_ExtArrays_p1</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_41_SR_ExtArrays_In_Struct_p6</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_42_SR_ExtArrays_In_ExtStruct_p6</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p1</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p3</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ImpTest_03_SR_64Bit_p1</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a SenderReceiver 
        configuration with functions before being handed over to the checker library. 
        If any handed over file does not match the required syntax, the checking process 
        shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p1</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p3</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p2</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p3</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_20_SR_ExtStructs_p10</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_40_SR_Functions_Bitfield_p0</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a Client 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p2</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p3</srcid><srcstatus/><internalId>574</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_22_CS_Server_MemoryPartitionsNoRetVal</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_07_CS_Client_Functions_p5</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_23_CS_Client_NoReturnValue_p1</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p2</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p3</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_30_CS_Client_Functions_StressTest_p0</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_39_CS_Client_Functions_Bitfield_p0</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a Server 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_10_CS_Server_Functions_p2</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_11_CS_Server_NoReturnValue_p1</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p2</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p3</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_29_CS_Server_NoArgument_p1</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing an ExternalTrigger 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p0</srcid><srcstatus/><internalId>558</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p1</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_12_ET_Functions_p1</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p1</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p1</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p3</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a VariableSizeArray 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_05_SR_VarSizeArrays_p4</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_06_SR_VarSizeArrays_p1</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_25_SR_VSA_FulFlex_p2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_36_SR_StressTest_p1</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_38_SR_VSA_FulFlex_p2</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_56_SR_VarSizeArrays_p2</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_57_CS_VarSizeArrays_p2</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a nested 
        VariableSizeArray configuration before being handed over to the checker library. 
        If any handed over file does not match the required syntax, the checking process 
        shall stop with an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_45_SR_NestedVarSizeArrays_p2</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_46_SR_NestedVarSizeArrays_FSA_p2</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_47_SR_NestedVarSizeArrays_ExtStruct_p2</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_55_SR_NestedVarSizeArrays_Ext_Array_p2</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Syntax checks shall be performed on SomeIpXf files containing a TagLengthValue 
        configuration before being handed over to the checker library. If any handed 
        over file does not match the required syntax, the checking process shall stop with 
        an error.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p0</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p4</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p5</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_51_SR_TLV_ExtArrays_p1</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_52_SR_TLV_VSALinear_p1</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_53_CS_Client_Functions_TLVStruct_p2</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_54_CS_Server_Functions_TLVStruct_p2</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.CheckerQueries.Common</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall execute common checker queries on the data model.
      </description>
      <rationale>
        There are checks that apply to all kinds of source files, for instance 
        checks on a correctly implemented protection against multiple include in a 
        header file. These generic checks can be provided by the checker library itself.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</srcid><srcstatus/><internalId>617</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolCheckName</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Specification</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Internal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide a mechanism to expose parsed data
        to checker queries and report queries contained in the checker
        applications.
      </description>
      <rationale>
        The checker library parses the files that have been handed over and presents 
        the extracted data in a way that allows the application of concise checker 
        queries and report queries.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.common.PairTestCase.testEquals</srcid><srcstatus/><internalId>652</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.common.PairTestCase.testHash</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.common.StringHelperTest.testQuote</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testRemoveE2EXfNamePrefix</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Internal.CodeDB</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide a mechanism to store parsed data
        into the data base before providing the data to the checker queries and 
        report queries.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_createCodeDBOnTheFileSystem</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_columnWithGeneratedPlaceHolderValueShallBeRemovedFromResultSet</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_labelWithNoPlaceHolderShallRemainUnchanged</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_labelContainsOnePlaceHolderWhichShallBeReplaced</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.CodeDBTestCase.test_executeSQLShallStopFetchingResultsAfterAnExceptionIsThrown</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.testRuntimeExceptionWhenParsingSQLFile</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.test_SQL_ScriptfileParseNoErrors</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.test_SQLScriptfileCommentOnly</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Internal.SQLStatementCollector</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall provide a mechanism to collect a series of 
        SQL statements before storing the data to the data base and providing 
        the data to the checker queries and report queries.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testInsertionOfRegularStatements</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testInsertionOfFullyAndPartlyFilledSQLStatements</srcid><srcstatus/><internalId>665</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testExceptionOnResolvingEmptyContextStack</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testExceptionOnRetrievalOfSQLQueriesWithUnresolvedSQLStack</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.Internal.File</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall be able to extract the file name from a handed over file path.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testGetFileNameFromPath_NoSlashesAndBackslashesInPath</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testGetFileNameFromPath_ValidPathWithSubDirs</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.CheckerQueries.Application</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall accept checker queries from the checker applications and 
        execute them on the data model.
      </description>
      <rationale>
        Checker queries that depend on the type of source code that is checked are
        maintained in the respective checker application.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_setupAndTearDown</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModel.Internal</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>XfrmCheck.DataModel.CheckerQueries.Specification</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
  
    <specobject>
      <id>XfrmCheck.DataModel.CheckerQueries.Specification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall be able to process a data format by which checker 
        queries on the data model can be specified in a structured way. The data format shall 
        support the specification of an Id field that identifies the query, of the query code 
        itself, and an error message that is issued if the check fails.
      </description>
      <rationale>
        A checker query specification language is a simple Domain Specific Language that allows
        to implement checks w/o having to use the general purpose programming language the
        checker library and checker applications are implemented in.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testMultipleInjectionsSameFile</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testResourceIsNull</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testUnsupportedJSONFileStructure</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testSupportedJSONFileStructure</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testIsIOExceptionPresentInParserStatusCollection</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testFileNotFoundException</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testGetCheckActionsFromTwoFiles</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testWrongCheckID</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.common.StringHelperTest.testStripQuotes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.DataModel.ReportQueries.Specification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The checker library shall be able to process a data format by which report 
        queries on the data model can be specified in a structured way. The data format shall 
        support the specification of an Id which identifies the query, and the query code.
      </description>
      <rationale>
        A report query specification language is a simple Domain Specific Language that allows
        to extract data w/o having to use the general purpose programming language the
        checker library and checker applications are implemented in.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testDuplicateReportActions</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testResourceIsNull</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testUnsupportedJSONFileStructure</srcid><srcstatus/><internalId>644</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testSupportedJSONFileStructure</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testIsIOExceptionPresentInParserStatusCollection</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testFileNotFoundException</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testGetCheckActionsFromTwoFiles</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testWrongCheckID</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.xfrmcheck.test.common.StringHelperTest.testStripQuotes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    
    <specobject>
      <id>XfrmCheck.ReportFile.ManualChecks</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the input files contain data that has to be verified manually,
        the checker library shall provide a mechanism to a checker application that enables
        the application to provide this data along with instructions on how to verify the data.
      </description>
      <rationale>
        Some configuration data can only be manually checked for correctness, e.g.
        by comparing parameter values against specification data that is not
        available in a machine readable representation, e.g. a pdf requirements document.
        The information on which data to present for manual verification depends on
        the code generator tool the files come from, therefore that information
        has to be provided by the checker application.
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>XfrmCheck.DataModel.ReportQueries.Application</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    
</specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.Check</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.ExceptionHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_53</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.ReturnValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.JsonFiles</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.Help</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.NameAndVersionNumber</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.StatusMessages</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/src/SomeIpXfCheck/Java/eb/tresos/someipxfcheck/SomeIpXfCheckerApp.java</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.StatusMessages</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.Usage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.VersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Log</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Log</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java_174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/client/AbstractCheckerApp.java</sourcefile>
      <sourceline>174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/AbstractCheckerStatus.java</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/Checker.java</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.OutputFolder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/CommandLineHandler.java_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/src/XfrmCheck/Java/eb/tresos/xfcheck/lib/api/internal/CommandLineHandler.java</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.Usage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHaveNoPartitionName</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.Check</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_generatedReportShallHavePartitionName</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.Check</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_PartitionName_independent_from_Filename</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_KaFAS_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.GoldenConfiguration</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009003</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>37</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009111</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>54</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009113</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>60</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019313</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>89</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019340</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>95</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019360</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>101</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019239</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>102</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019244</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>107</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019366</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>113</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019378</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>126</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019372</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>132</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019387</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>138</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019393</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>144</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019405</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>156</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019411</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>162</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019423</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>177</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019429</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>183</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019435</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>189</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009323</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>229</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009324</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>230</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009326</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>240</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009417</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>258</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009418</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>259</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009420</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>270</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009514</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>294</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009518</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>306</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009519</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>3</ffbSrcVersion><internalId>307</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SAS_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.GoldenConfiguration</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009009</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>38</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009103</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>46</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009106</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>49</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019205</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>68</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009306</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>196</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009309</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>199</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009312</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>202</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009315</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>205</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009318</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>208</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009412</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>253</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009503</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>283</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009506</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>286</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009509</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>289</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_in_wrong_file</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009009</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>38</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009103</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>46</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009106</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>49</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019205</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>68</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009306</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>196</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009309</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>199</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009312</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>202</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009315</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>205</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009318</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>208</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009412</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>253</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009503</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>283</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009506</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>286</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009509</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>289</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statements_more_than_once</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009010</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>39</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009104</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>47</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009107</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>50</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019206</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>69</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019209</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>71</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009307</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>197</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009310</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>200</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009313</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>203</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009316</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>206</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009319</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>209</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009413</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>254</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009504</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>284</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009507</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>287</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009510</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>290</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_SomeIpXf_Mandatory_Include_Statement_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009004</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>40</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009105</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>48</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009108</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>51</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019207</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>70</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009308</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>198</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009311</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>201</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009314</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>204</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009317</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>207</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009320</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>210</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009414</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>255</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009505</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>285</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009508</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>288</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009511</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>291</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_cfg_missing_no_consts_pass</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Wrong_Transformer_Files_E2EXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Wrong_Transformer_Files_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SR_Cfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009325</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>231</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009327</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>241</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009419</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>263</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009421</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>274</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_TransformerName_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009354</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>232</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009362</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>233</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009355</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>242</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009432</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>261</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009436</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>272</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_Datatype_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009363</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>243</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009440</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>262</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009441</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>273</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SR_Cfg_ArraySizeConfigIds_Datatype_mismatch</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009430</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>260</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009431</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>271</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_ET_Cfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009332</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>234</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009335</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>244</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009424</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>265</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009427</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>276</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_ET_Cfg_TransformerName_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009356</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>235</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009357</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>245</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009433</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>264</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009437</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>275</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_CLIENT_Cfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.CS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009333</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>236</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009336</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>246</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009425</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>267</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009428</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>278</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_CLIENT_Cfg_TransformerName_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009358</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>237</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009359</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>247</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009434</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>266</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009438</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>277</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SERVER_Cfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.CS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009334</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>238</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009337</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>248</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009426</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>269</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009429</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>280</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_SomeIpXf_SERVER_Cfg_TransformerName_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.4.ET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009360</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>239</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009361</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>249</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009435</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>268</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009439</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>279</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_VsaPayload_VsaDimPayload</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009538</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>305</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_FSA_Configs</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019330</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>166</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_TLV_Configs</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.ReportAction</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019440</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>120</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009518</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>306</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009519</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>3</ffbSrcVersion><internalId>307</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009119</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>57</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009533</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>299</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009121</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>59</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.GeneratedReportTestCase.test_Report_ArraySizeConfigIds_more</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/GeneratedReportTestCase.java</sourcefile>
      <sourceline>550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009120</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>58</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testHelp</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfCheckerAppTestCase.java</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.Help</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testNameAndVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfCheckerAppTestCase.java</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.CommandLine.NameAndVersionNumber</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfCheckerAppTestCase.testLogMessageAndLogErrorToStdErr</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfCheckerAppTestCase.java</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.StatusMessages</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019317</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>67</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_PARTITIONAPI_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009302</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>195</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_Define_Symbol_SOMEIPXF_PARTITIONAPI_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ConfigArraySizeMacroAndStructName_SOMEIPXF_INT_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009118</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>56</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019344</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>87</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019344</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>87</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_BufferLengthTypeMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019345</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>88</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019338</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>93</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019338</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>93</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_MsgErrorCalloutAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019339</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>94</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019358</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>99</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019358</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>99</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_ErrorMessageTypeMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019359</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>100</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019364</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>111</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019364</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>111</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_VsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019365</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>112</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019376</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>124</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019376</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>124</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019377</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>125</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019370</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>130</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019370</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>130</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.2</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019371</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>131</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019385</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>136</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019385</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>136</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentUniqueDataidCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.3</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019386</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>137</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.4</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019391</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>142</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>489</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.4</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019391</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>142</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberUniqueDataIdCheckEnableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.4</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019392</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>143</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.5</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019403</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>154</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.5</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019403</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>154</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvStructMemberReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.5</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019404</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>155</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019409</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>160</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019409</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>160</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_TlvArgumentReorderingEnableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.6</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019410</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>161</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019421</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>175</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019421</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>175</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019422</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>176</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019427</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>181</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019427</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>181</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_FsaWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019428</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>182</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroDoesntExist_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019433</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>187</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroInWrongFile_SOMEIPXF_CFG_H_missing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019433</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>187</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructWithLfAvailableMacroValue_SOMEIPXF_CFG_H_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.PreprocessorMacros.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019434</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>188</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_DataTypeConfigIdUnique_SOMEIPXF_CFG_C_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009537</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>301</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_SetVsaConfigSetVsaDimConfigPayloadCheck_SOMEIPXF_CFG_C_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009538</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>305</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberId_SOMEIPXF_CFG_C_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009539</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>302</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdCount_SOMEIPXF_CFG_C_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009540</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>303</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009541</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>304</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.someipxfcheck.test.SomeIpXfElementValidityCheckerActionsTestCases.test_StructTlvMemberDataIdUnique_SOMEIPXF_CFG_C_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_SomeIpXfCV/test/junit/TestSomeIpXfCheck/Java/eb/tresos/someipxfcheck/test/SomeIpXfElementValidityCheckerActionsTestCases.java</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SomeIpXfCheck.SQLQueries.CheckerActions.TLV.7</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009540</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>303</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009541</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>304</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnEmptyParamList</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/CheckerAppTestCase.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyVersionParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/CheckerAppTestCase.java</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.VersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testStatusOnOnlyHelpParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/CheckerAppTestCase.java</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.Usage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testLogErrorOnInvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/CheckerAppTestCase.java</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.CheckerAppTestCase.testThrowsExceptionOnInvalidCommandLineArgument</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/CheckerAppTestCase.java</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.testGetOverallStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerStatusTestCase.java</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.testContainsEntriesOfSeverity</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerStatusTestCase.java</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerStatusTestCase.test_SeverityasString</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerStatusTestCase.java</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.Content</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testNoChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testInvalidOutputFolder</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.OutputFolder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testOutputFolderIsAFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.OutputFolder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testOutputFolderIsCreated</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.OutputFolder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testValidParameters</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.File</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckNonExistentCheckFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.File</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testCheckUnknownFileExtension</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.File</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksStructWithLengthField</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_13_SR_ExtStructs_p7</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.testSomeIpXfCFileChecksFixedSizeArrayWithWithLengthFieldDimension</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_ComXfCFileChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.ComXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_memPartitioning</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_INVXFNoCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_Xstatevar_INVXFNoCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceCheckCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceProtectCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_OutOfPlaceProtectCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_InPlaceCheckCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_dataIdListsCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_E2EXfCAPIFileChecks_e2eXfProfileSymbolParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ConfigurationCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.E2EXf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_setupAndTearDown</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_13_SR_ET_MemoryPartitions_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_14_SR_MultipleReceivers_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_01_SR_Functions_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>553</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_02_SR_Functions_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>571</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_20_SR_ExtStructs_p10</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_37_SR_StressTest_ExtArrays_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_40_SR_Functions_Bitfield_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_41_SR_ExtArrays_In_Struct_p6</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_42_SR_ExtArrays_In_ExtStruct_p6</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_43_SR_SessionHandling_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_21_CS_AutoErrorReact_NoComplexArgument_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_22_CS_Server_MemoryPartitionsNoRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_07_CS_Client_Functions_p5</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_23_CS_Client_NoReturnValue_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_28_CS_Client_NoArgument_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_30_CS_Client_Functions_StressTest_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_39_CS_Client_Functions_Bitfield_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>863</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_10_CS_Server_Functions_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_11_CS_Server_NoReturnValue_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_27_CS_AutonomousErrorReact_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_29_CS_Server_NoArgument_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_12_ET_Functions_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ComTest_11_ET_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1015</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_44_ET_SessionHandling_p3</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_05_SR_VarSizeArrays_p4</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_06_SR_VarSizeArrays_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1091</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_25_SR_VSA_FulFlex_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_36_SR_StressTest_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_38_SR_VSA_FulFlex_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_45_SR_NestedVarSizeArrays_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_46_SR_NestedVarSizeArrays_FSA_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_47_SR_NestedVarSizeArrays_ExtStruct_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p0</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p4</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_50_SR_Functions_TLVStructs_p5</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_51_SR_TLV_ExtArrays_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_52_SR_TLV_VSALinear_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_53_CS_Client_Functions_TLVStruct_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_54_CS_Server_Functions_TLVStruct_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_55_SR_NestedVarSizeArrays_Ext_Array_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_56_SR_VarSizeArrays_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ConTest_57_CS_VarSizeArrays_p2</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_SomeIpXf_ImpTest_03_SR_64Bit_p1</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ConfigurationCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.StatusMessage.SomeIpXf.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CheckerTestCase.test_createCodeDBOnTheFileSystem</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CheckerTestCase.java</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testValidParameterSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommandLineHandlerTestCase.java</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testInvalidParameterSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommandLineHandlerTestCase.java</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommandLineHandlerTestCase.testUsageOutput</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommandLineHandlerTestCase.java</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.CommandLineParser.ParameterHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbol</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommonCheckerTestCase.java</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009002</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>36</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009102</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>45</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019317</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>67</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009302</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>195</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeProtectionSymbolOnlyOnce</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommonCheckerTestCase.java</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009001</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>35</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009101</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>44</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019201</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>66</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009301</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>194</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolErrorMsgName</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommonCheckerTestCase.java</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019211</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>72</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019215</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>75</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019219</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>78</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019223</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>81</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019310</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>84</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019335</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>90</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019355</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>96</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019240</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>103</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019243</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>106</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019361</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>108</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019265</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>114</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019279</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>117</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019373</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>121</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019367</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>127</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019382</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>133</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019388</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>139</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019294</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>145</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019297</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>148</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019400</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>151</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019406</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>157</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019412</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>163</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019415</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>169</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019418</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>172</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019424</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>178</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019430</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>184</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019436</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>190</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009348</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>216</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009349</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>220</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009350</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>222</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009352</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>224</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009351</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>226</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009353</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>228</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLPreprocessorSymbolCheckName</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommonCheckerTestCase.java</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.api.internal.CommonCheckerTestCase.testSQLIncludeHeaderFileOnlyOnce</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/api/internal/CommonCheckerTestCase.java</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Common</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009010</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>39</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009104</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>47</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009107</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>50</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019206</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>69</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019209</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>71</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009307</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>197</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009310</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>200</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009313</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>203</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009316</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>206</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009319</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>209</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009413</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>254</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009504</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>284</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009507</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>287</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009510</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>290</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/ConsumerWithIOExceptionTestCase.java</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/ConsumerWithIOExceptionTestCase.java</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithIOExceptionTestCase.testExecutionWithoutExceptionWithInvalidFileWriter</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/ConsumerWithIOExceptionTestCase.java</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithSQLExceptionTestCase.testExecutionWithoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/ConsumerWithSQLExceptionTestCase.java</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.ConsumerWithSQLExceptionTestCase.testExecutionWithException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/ConsumerWithSQLExceptionTestCase.java</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.ConsumerException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithIOExceptionTestCase.testExecutionWithoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithIOExceptionTestCase.java</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithIOExceptionTestCase.testExecutionWithException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithIOExceptionTestCase.java</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithNoSuchAlgorithmExceptionTestCase.testExecutionWithoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithNoSuchAlgorithmExceptionTestCase.java</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithNoSuchAlgorithmExceptionTestCase.testExecutionWithException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithNoSuchAlgorithmExceptionTestCase.java</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithSQLExceptionTestCase.testExecutionWithoutException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithSQLExceptionTestCase.java</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.auxiliary.FunctionWithSQLExceptionTestCase.testExecutionWithException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/auxiliary/FunctionWithSQLExceptionTestCase.java</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ErrorHandling.ExceptionHandling.FunctionException</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_columnWithGeneratedPlaceHolderValueShallBeRemovedFromResultSet</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/CodeDBResultSetTestCase.java</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_labelWithNoPlaceHolderShallRemainUnchanged</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/CodeDBResultSetTestCase.java</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.CodeDBResultSetTestCase.test_labelContainsOnePlaceHolderWhichShallBeReplaced</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/CodeDBResultSetTestCase.java</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.CodeDBTestCase.test_executeSQLShallStopFetchingResultsAfterAnExceptionIsThrown</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/CodeDBTestCase.java</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.testRuntimeExceptionWhenParsingSQLFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/DBParserTestCase.java</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.test_SQL_ScriptfileParseNoErrors</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/DBParserTestCase.java</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedb.DBParserTestCase.test_SQLScriptfileCommentOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedb/DBParserTestCase.java</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.CodeDB</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testCheckCodeDBNoFilesInjected</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Execution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testSQLmustFindError</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Execution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testMultipleInjections</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Execution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testMultipleInjectionsSameFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testDuplicateReportActions</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.CodeDBCheckerTestCase.testResourceIsNull</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/CodeDBCheckerTestCase.java</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testUnsupportedJSONFileStructure</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testSupportedJSONFileStructure</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testIsIOExceptionPresentInParserStatusCollection</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testFileNotFoundException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testGetCheckActionsFromTwoFiles</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckDBJSONParserTestCase.testWrongCheckID</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckDBJSONParserTestCase.java</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckerActionTestCase.test_executeCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckerActionTestCase.java</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Execution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.codedbchecker.parser.CheckerActionTestCase.test_checkResultSetEntries_IllegalStateException</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/codedbchecker/parser/CheckerActionTestCase.java</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Execution</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.common.PairTestCase.testEquals</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/common/PairTestCase.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.common.PairTestCase.testHash</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/common/PairTestCase.java</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.common.StringHelperTest.testStripQuotes</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/common/StringHelperTest.java</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.CheckerQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Specification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.common.StringHelperTest.testQuote</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/common/StringHelperTest.java</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_PartitionApi_P01</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_PartitionApi_P04</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_KaFAS</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_E2EXf_SAS</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_SomeIpXf_KaFAS</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_SomeIpXf_SAS</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.GoldenProductiveTest.test_ComXf_KaFAS</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/GoldenProductiveTest.java</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.GoldenConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.ParseErrorListenerTestCase.testUnderlineError</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/ParseErrorListenerTestCase.java</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testInsertionOfRegularStatements</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/SQLStatementCollectorTestCase.java</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.SQLStatementCollector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testInsertionOfFullyAndPartlyFilledSQLStatements</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/SQLStatementCollectorTestCase.java</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.SQLStatementCollector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testExceptionOnResolvingEmptyContextStack</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/SQLStatementCollectorTestCase.java</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.SQLStatementCollector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.SQLStatementCollectorTestCase.testExceptionOnRetrievalOfSQLQueriesWithUnresolvedSQLStack</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/SQLStatementCollectorTestCase.java</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.SQLStatementCollector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testGetFileNameFromPath_NoSlashesAndBackslashesInPath</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/XfFileListenerHelperTestCase.java</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.File</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testGetFileNameFromPath_ValidPathWithSubDirs</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/XfFileListenerHelperTestCase.java</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal.File</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.XfFileListenerHelperTestCase.testRemoveE2EXfNamePrefix</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/XfFileListenerHelperTestCase.java</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Internal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.testParsePassing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.testParseFailing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_COMXF_Mandatory_Define_Symbol_COMXF_API_H_only_once_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_COMXF_Mandatory_Define_Symbol_COMXF_CFG_H_only_once_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_ComXf_PARTITIONAPI_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfDeserFuncStart_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfSerFuncStop_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStartSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfStopSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_api_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_exists_comxf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_api_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_endif_directive_more_comxf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfSerFuncStart_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.ComXfParserTestCase.test_rule_comXfDeserFuncStop_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/ComXfParserTestCase.java</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.ComXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_defineSymbolVal_missing_U_suffix</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/CommonParserTestCase.java</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_defineSymbolVal_wrong_unexpectedChars</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/CommonParserTestCase.java</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.CommonParserTestCase.test_rule_INCLUDE_PartitionnameParseCheck_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/CommonParserTestCase.java</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.testParsePassing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.testParseFailing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_E2EXF_Mandatory_Define_Symbol_E2EXF_API_H_only_once_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_E2EXF_Mandatory_Define_Symbol_E2EXF_CFG_H_only_once_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_E2EXf_PARTITIONAPI_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeElements_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeElements_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_more_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfCodeSection_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfDeInitFuncMacro_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfDeInitFuncMacro_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclDeInit_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclInit_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclReceive_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclReceive_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclSend_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfFuncDeclSend_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfInitFuncMacro_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfInitFuncMacro_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfMacroSection_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfMacroSection_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartDeInitMacro_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartDeInitMacro_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitMacro_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitMacro_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitSection_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfPartInitSection_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStartSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>658</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStartSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStateVarSection_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStateVarSection_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>706</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStopSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfStopSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>734</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfXfrmConfigSection_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_e2eXfXfrmConfigSection_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_e2exf_partitionapi_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>800</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_exists_e2exf_api_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_exists_e2exf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_more_e2exf_api_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_endif_directive_more_e2exf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>857</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.E2EXfParserTestCase.test_rule_defineSymbolVal_Cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/E2EXfParserTestCase.java</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.E2EXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.testParsePassing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.testParseFailing</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_api_gen_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009007</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>41</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_int_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009116</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>63</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009330</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>251</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_exists_someipxf_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019212</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>73</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019216</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>76</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019220</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>79</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019224</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>82</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019314</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>85</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019336</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>91</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019356</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>97</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019241</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>104</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019362</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>109</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019266</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>115</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019280</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>118</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019374</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>122</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019368</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>128</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019383</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>134</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019389</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>140</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019295</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>146</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019298</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>149</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019401</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>152</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019407</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>158</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019413</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>164</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019342</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>167</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019416</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>170</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019419</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>173</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019425</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>179</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019431</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>185</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019437</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>191</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_api_gen_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009008</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>42</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019213</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>74</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019217</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>77</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019221</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>80</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019225</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>83</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019315</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>86</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019337</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>92</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019357</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>98</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019242</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>105</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019363</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>110</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019316</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>116</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019281</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>119</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019375</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>123</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019369</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>129</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019384</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>135</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019390</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>141</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019296</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>147</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019299</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>150</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019402</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>153</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019408</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>159</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019414</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>165</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019343</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>168</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019417</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>171</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019420</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>174</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019426</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>180</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019432</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>186</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.019438</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>192</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_int_cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009117</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>64</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_endif_directive_more_someipxf_partitionapi_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009331</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>252</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009000</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>34</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009001</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>35</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_API_GEN_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009002</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>36</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019200</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>65</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019201</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>66</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_CFG_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019317</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>67</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009100</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>43</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009101</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>44</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_INT_CFG_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009102</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>45</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009300</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>193</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_more_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009301</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>194</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_ifNotDefPart_Header_Symbol_SomeIpXf_PARTITIONAPI_H_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>468</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.18</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009302</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>195</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009525</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>295</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigEndian_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009526</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>296</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009525</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>295</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDataTypeConfigEndian_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009526</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>296</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009516</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>297</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeName_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009517</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>298</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009119</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>57</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009533</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>299</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfDefDataTypeConfigId_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009534</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>300</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfdefineSymbolVal_Cfg_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.019243</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>106</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfExtDataParam_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009112</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>55</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009415</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>256</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>637</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009321</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>211</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009416</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>257</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009322</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>212</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009512</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>292</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009109</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>52</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>707</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009513</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>293</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStartSecConstSym_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>721</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009110</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>53</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009422</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>281</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>763</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009423</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>282</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecCode_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009329</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>250</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009523</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>314</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_missing_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009114</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>61</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.11</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009524</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>315</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStopSecConstSym_wrong_h</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.17</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009115</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>62</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009521</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>310</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>861</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009529</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>312</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigEndian_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009530</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>313</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeName_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009522</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>311</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_missing_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009535</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>308</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfUndefDataTypeConfigId_wrong_c</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009536</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>309</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfArraySizeConfigId_wrong</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.16</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaElementCheckPoint</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaElementEnter</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>958</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStopIndex</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>972</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>987</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfVsaStop</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.12</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvStruct</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFix</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1043</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberFixStop</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1058</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructFixMemberConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1072</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructMemberConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1086</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.14</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberId</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOpt</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvStructStopIndex</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfSetTlvStructConf</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStop</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberOptStopIndex</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvMemberStartIndex</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.15</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfStructTlvStop</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvDataId</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.13</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfTlvArgPreproc</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009344</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>214</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009346</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>218</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefineArgSymbolVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009339</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>221</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009341</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>223</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.parser.common.SomeIpXfParserTestCase.test_rule_someIpXfCSTDefSeqParam</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/parser/common/SomeIpXfParserTestCase.java</sourcefile>
      <sourceline>1288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModelTranslation.SyntaxChecks.SomeIpXf.ParserRuleCheck.19</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2E.SEEA.009340</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>225</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2E.SEEA.009342</ffbSrcId><ffbSrcType>safetyanalysis</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>227</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.MD5HashCalculatorTestCase.test_hashCalculation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/MD5HashCalculatorTestCase.java</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.MD5HashCalculator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testGenerateReportWithDefaultNameWhenPathIsValidDirectory</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ReportGeneratorTestCase.java</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.OutputLocation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testIllegalStateExceptionShallBeThrownIfOutputPathRepresentsAFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ReportGeneratorTestCase.java</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.OutputLocation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testPassedGeneratedReport</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ReportGeneratorTestCase.java</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.HeaderInformation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.Timestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.OverallStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.VersionNumbers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.ExecutedCheckerQueries</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.ManualChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.MD5HashCalculator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testFailedGeneratedReport</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ReportGeneratorTestCase.java</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.HeaderInformation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.Timestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.InputFiles</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.OverallStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.VersionNumbers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.ExecutedCheckerQueries</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.ReportFile.FailedChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ReportGeneratorTestCase.testManualChecksFromApplication</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ReportGeneratorTestCase.java</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.ExecutedCheckerQueries</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>XfrmCheck.DataModel.ReportQueries.Application</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testEmptyLeafNodeConversion</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testSingleRootTag</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testRootTagWithSingleSubtagWithContentAndAttr</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testThreeLevelXMLTree</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIntermediateNodesWithAttributes</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testMergeOfIdenticalReviewItemNodes</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testXMLLeafNodeComparison</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testThatDataStartSeparatorIsNotTurnedIntoAnXmlNode</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfNoDataSeparatorIsFound</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfDataSeparatorIsAtIndexZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnIllegalStateExceptionShallOccurIfDataSeparatorOccursMoreThanOnce</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIncorrectValueOfDataSeparatorShallNotBeRecognizedAsActualDataSeparator</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAppendChildNodesToTheSameParentNode</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testIdenticalChildNodesShallBothBeAddedToTheSameParent</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion.DataSeparator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.ResultSetToXMLConverterTestCase.testAnExceptionShallBeThrownIfMultipleRootNodesAreProduced</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/ResultSetToXMLConverterTestCase.java</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.XmlNodeTest.testEqualsShallReturnFalseForTwoNodesWithTheSameClassVariableValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/XmlNodeTest.java</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.report.XmlNodeTest.testHashCodeShallReturnDifferentHashesForTwoNodesWithTheSameClassVariableValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/report/XmlNodeTest.java</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.ReportFile.XMLConversion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testAllFilesDeleted</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FileStructure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.test2xSameFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FileStructure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testDeleteOneFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FileStructure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFilePathManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FileStructure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFileProtectionSymbolManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.ProtectionSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testFileincludeProtectionSymbolIFNDEFTestManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.ProtectionSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testIncludeStatementFileIDManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.IncludeStatement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testIncludeStatementIncludeFileManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.IncludeStatement</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolFileIdManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.PreprocSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolNameManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.PreprocSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolChecknameManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.PreprocSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testPreprocSymbolValueManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.PreprocSymbol</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroFileIdManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FunctionMacro</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroNameManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FunctionMacro</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testE2EXfFuncDeclMacroReturnTypeManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FunctionMacro</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclFileIdSectionManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.ExternVariableDeclaration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclArraySizeConfigIdManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.ExternVariableDeclaration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalArrayVarDeclArrayConfigIdManipulation</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.ExternVariableDeclaration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testExternalTriggerAndSenderReceiverFunctionDefinitionsAreRegeneratedInSameOrderAsInSourceFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FunctionMacro</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SelfCheckTestCase.testSessionHandlingCounterVariablesAreRegeneratedInSameOrderAsInSourceFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SelfCheckTestCase.java</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.FunctionMacro</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.SourceCodeNormalizerTestCase.testNormalizingCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/SourceCodeNormalizerTestCase.java</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.Normalizer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnTrueForActualE2EXfCAPIFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/e2exfcapifile/E2EXfCAPIFileTestCase.java</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.TransformerChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnFalseForComXfCAPIFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/e2exfcapifile/E2EXfCAPIFileTestCase.java</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.TransformerChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.xfrmcheck.test.selfcheck.e2exfcapifile.E2EXfCAPIFileTestCase.testIsE2EXfCAPIFileShallReturnFalseForSomeIpXfCAPIFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_SomeIpXfCV)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_XfrmCV/test/junit/TestXfrmCheck/Java/eb/tresos/xfrmcheck/test/selfcheck/e2exfcapifile/E2EXfCAPIFileTestCase.java</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>XfrmCheck.DataModel.Verification.TransformerChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
