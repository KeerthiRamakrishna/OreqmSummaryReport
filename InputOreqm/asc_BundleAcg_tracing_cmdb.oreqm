<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_BundleAcg_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER -e req,swurs,swintts,tcs,dev,swad,swdd,dsn_arch,dsn,tso,swrs,man /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/build/reqm/ReqM2_DocBookImporter/reqm_SWPAD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/build/reqm/ReqM2_DocBookImporter/reqm_SWRS.reqm</commandline>
    <timestamp>Mon Jun 17 22:36:17 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>e</name>
      <values>
        <value>req</value>
        <value>swurs</value>
        <value>swintts</value>
        <value>tcs</value>
        <value>dev</value>
        <value>swad</value>
        <value>swdd</value>
        <value>dsn_arch</value>
        <value>dsn</value>
        <value>tso</value>
        <value>swrs</value>
        <value>man</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_BundleAcg_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/build/reqm/ReqM2_DocBookImporter/reqm_SWPAD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/build/reqm/ReqM2_DocBookImporter/reqm_SWRS.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.NoDependency</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_behavioral_view.xml</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <description> Each post-build capable &amp;autocore-generic; module either obtains a valid
                            pointer to its post-build time configuration as parameter to the
                                &lt;function&gt;void &amp;lt;module&amp;gt;_Init(const
                                &amp;lt;module&amp;gt;ConfigType *config)&lt;/function&gt; API or queries the
                                &lt;package&gt;PbcfgM&lt;/package&gt; via its &lt;function&gt;Std_ReturnType
                                PbcfgM_GetConfig(uint16 moduleId, uint16 instanceId, void
                                **config)&lt;/function&gt; API to provide such a pointer based on the
                            requesting module's &lt;literal&gt;ModuleId&lt;/literal&gt; and
                                &lt;literal&gt;InstanceId&lt;/literal&gt;. This pointer is then used by the module's
                            static code to access it's post-build time configuration. This way there's
                            no pre-compile or link-time dependency between the module's static code and
                            the module's post-build time configuration. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>ACG.PostBuild.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.ConsistencyCheck</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_behavioral_view.xml</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description> Before actually using the post-build configuration, the the
                                &lt;function&gt;void &amp;lt;module&amp;gt;_Init(const
                                &amp;lt;module&amp;gt;ConfigType *config)&lt;/function&gt; API ensures the
                            validity of the post-build config w.r.t. consistency by calling its
                                &lt;function&gt;boolean &amp;lt;module&amp;gt;_IsValidConfig(const void
                                *config)&lt;/function&gt; API to ensure that the various signatures which are
                            part of the module's post-build time configuration structure (see &lt;xref linkend="sectPostBuildSignatures"/&gt;) match the respective #defines or
                            constants in the module's pre-compile or link time configuration or the
                            ECU's platform specifics. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.Resources.ReferencePlatform</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>
              The &amp;autocore-generic; shall be executable on the
              &amp;compname-er; reference platform.
            </description>
      <needscoverage>
        <needscov><needsobj>swts</needsobj><objcovstatus>uncovered</objcovstatus><coveredby/></needscov>
      <containerCovstatus>uncovered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>uncovered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>ACG.swad.Resources.Monitoring</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <description>
              Resources shall be monitored during development cycles.
              Monitoring shall be done on the Windows platform using the
              GNU C Compiler (gcc) and the optimization level -O3.
            </description>
      <needscoverage>
        <ignoreddoctype>swad</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.Relocation</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <description> To prevent the use of absolute pointers in the post-build time
                            configuration data structure (and thus lose the possibility to relocate
                            the configuration), offsets relative from the beginning of the
                            post-build time configuration structure are used instead when
                            referencing configuration (sub-)members. For this purpose special types
                            have been defined in &lt;filename&gt;TSPBConfig_Types.h&lt;/filename&gt;. The
                            corresponding access and initialization macros can be found in
                                &lt;filename&gt;TSPBConfig_Access.h&lt;/filename&gt; and
                                &lt;filename&gt;TSPBConfig_Init.h&lt;/filename&gt; of &lt;package&gt;Base&lt;/package&gt;.
                            The effective memory location where the post-build time config is
                            located to can then be decided by the integrator by using the AUTOSAR
                            memory mapping mechanism and mapping the section
                                &lt;literal&gt;PBCFGM_CONFIG_DATA_UNSPECIFIED&lt;/literal&gt; appropriately in
                            case of the binary representation of the post-build time config is
                            generated using the compiler toolchain. If direct binary generation is
                            performed, the parameter &lt;literal&gt;PbcfgMConstCfgAddress&lt;/literal&gt; of the
                                &lt;package&gt;PbcfgM&lt;/package&gt; is used for that purpose. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.FunctionReferences</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <description> Instead of storing pointers to functions implemented in the
                            module's static code or the module's link time config in the post-build
                            time config, the post-build time config may only contains function
                            indices that are then mapped via a function pointer table or via a
                            switch/case construct in either the module's static code or the module's
                            link time config (depending on whether the functions are part of the
                            static code or the link time config (or even implemented by the module's
                            client code (e.g., &lt;package&gt;Com&lt;/package&gt;'s I-PDU callouts for
                            example))) to the desired function (see &lt;package&gt;Com&lt;/package&gt;'s link
                            time config file (&lt;filename&gt;Com_Lcfg.[ch]&lt;/filename&gt;) for an example how
                            to do this). </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.RAMAllocation</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>553</sourceline>
      <version>1</version>
      <description> Post-build RAM is allocated upon link time on a per-module
                            basis by introducing a vendor specific parameter (named
                                &lt;varname&gt;&amp;lt;module&amp;gt;DataMemSize&lt;/varname&gt;), which defines
                            the amount of post build RAM that shall be allocated. The module's
                            config generator creates an array (named
                                &lt;varname&gt;&amp;lt;module&amp;gt;_DataMem&lt;/varname&gt;) in the module's
                            link time configuration which reserves exactly the amount of bytes
                            specified in the vendor specific parameter. Additionally a link-time
                            constant (named &lt;varname&gt;&amp;lt;module&amp;gt;_DataMemSize&lt;/varname&gt;)
                            is created that holds the size of the memory in units of bytes.
                                &lt;varname&gt;&amp;lt;module&amp;gt;_DataMem&lt;/varname&gt; is placed in the
                                &lt;literal&gt;VAR_NOINIT&lt;/literal&gt; memory section, since the post-build
                            RAM must be properly initialized by the module's
                                &lt;function&gt;&amp;lt;module&amp;gt;_Init()&lt;/function&gt; function anyway,
                            and thus an initialization via the C-startup code is superfluous. A
                            pointer to the post-build RAM (named
                                &lt;varname&gt;&amp;lt;module&amp;gt;_gDataMemPtr&lt;/varname&gt;) as well as
                            the constant containing the size of the post-build RAM is then exported
                            in the static (non-generated) file named
                                &lt;filename&gt;&amp;lt;module&amp;gt;_Lcfg_Static.h&lt;/filename&gt;, which can
                            then be included by the module's static code without introducing any
                            pre-compile time dependencies between the module's static code and the
                            module's link-time config. The value of
                                &lt;varname&gt;&amp;lt;module&amp;gt;DataMemSize&lt;/varname&gt; is then set to
                            a fixed value in the modules link-time parameters before compiling and
                            linking the module's static code. During generation of the modules
                            post-build time configuration, the module's config generator has to
                            check whether the amount of bytes required by the specific post-build
                            time config exceeds the amount of bytes defined in the above fixed
                                &lt;varname&gt;&amp;lt;module&amp;gt;DataMemSize&lt;/varname&gt; parameter. - If
                            this is the case, the RAM requirements of the specific post-build time
                            config would exceed the RAM allocated during compile-/link-time of the
                            module's static code. - In that case the module's config generator SHALL
                            issue an error. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.ConsistencyPlatformSpecifics</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>608</sourceline>
      <version>1</version>
      <description> To ensure the consistency of endianness and alignment
                            requirements, a dedicated &lt;literal&gt;uint32&lt;/literal&gt; member named
                                &lt;varname&gt;&amp;lt;module&amp;gt;PlatformSignature&lt;/varname&gt; shall be
                            added as first member to the post-build time root structure containing a
                            platform configuration signature with the layout depicted in &lt;xref linkend="figurePlatformSignature"/&gt;. The &lt;package&gt;Base&lt;/package&gt;
                            module provides a function named &lt;function&gt;boolean
                                TS_PlatformSigIsValid(uint32 signature)&lt;/function&gt; that facilitates
                            to check whether a particular platform signature matched the ECU's real
                            platform specifics. Furthermore the &lt;package&gt;Base&lt;/package&gt; module
                            provides an X-Path function named
                                &lt;function&gt;asc:getPlatformSignature()&lt;/function&gt; that returns the
                            computed value based on the properties contained in the platform's
                            property file. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.ConsistencyPreCompile</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <description> To ensure the consistency between the module's pre-compile and
                            post-build time configuration, a dedicated &lt;literal&gt;uint32&lt;/literal&gt;
                            member named &lt;varname&gt;CfgSignature&lt;/varname&gt; shall be added as second
                            member to the post-build time root structure containing a hash value
                            over a list of 2-tuples of SHORT-NAME(path)s and values of the module's
                            pre-compile time config parameters. Additionally a #define named
                                &lt;literal&gt;&amp;lt;MODULE&amp;gt;_CFG_SIGNATURE&lt;/literal&gt; with the
                            value of the computed hash shall be generated to
                                &lt;filename&gt;&amp;lt;module&amp;gt;_Cfg.h&lt;/filename&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.ConsistencyLink</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>677</sourceline>
      <version>1</version>
      <description> To ensure the consistency between the module's link and
                            post-build time configuration, a dedicated &lt;literal&gt;uint32&lt;/literal&gt;
                            member named &lt;varname&gt;LcfgSignature&lt;/varname&gt; shall be added as second
                            member to the post-build time root structure containing a hash value
                            over a list of 2-tuples of SHORT-NAME(path)s and values of the module's
                            link time config parameters. Additionally a constant named
                                &lt;varname&gt;&amp;lt;module&amp;gt;_LcfgSignature&lt;/varname&gt; with the
                            value of the computed hash shall be generated to
                                &lt;filename&gt;&amp;lt;module&amp;gt;_Lcfg.h&lt;/filename&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.ConsistencyPublicInfo</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>699</sourceline>
      <version>1</version>
      <description> To ensure the consistency between the module's link and
                            post-build time configuration, a dedicated &lt;literal&gt;uint32&lt;/literal&gt;
                            member named &lt;varname&gt;PublicInfoSignature&lt;/varname&gt; shall be added as
                            third member to the post-build time root structure containing a hash
                            value over a list of 2-tuples of SHORT-NAME(path)s and values of the
                            module's common public information parameters (which include the
                            module's software version, the vendor ID, etc.) except the
                                &lt;varname&gt;Release&lt;/varname&gt; config element which differs on each
                            target platform (and thus would prevent difference checks against target
                            platform independent golden reference files). Additionally a define
                            named &lt;literal&gt;&amp;lt;MODULE&amp;gt;_PUBLIC_INFO_SIGNATURE&lt;/literal&gt;
                            with the value of the computed hash in
                                &lt;filename&gt;&amp;lt;module&amp;gt;_Cfg.h&lt;/filename&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.ConsistencyRAM</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>725</sourceline>
      <version>1</version>
      <description> To ensure the that the amount of post-build RAM required by a
                            given post-build time configuration does not exceed to amount of RAM
                            allocated at link time, a dedicated &lt;literal&gt;uint16&lt;/literal&gt; member
                            member named &lt;varname&gt;PBRAMRequired&lt;/varname&gt; as third member to the
                            post-build time root structure containing the amount of RAM (in units of
                            bytes) required by this post-build time config as computed by the
                            module's config generator. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.PbcfgMSupport</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>752</sourceline>
      <version>1</version>
      <description> It shall be possible to activate and deactivate the support
                            for interaction with the &lt;package&gt;PbcfgM&lt;/package&gt; upon pre-compile time
                            in each module. For this however no specific config parameter in the
                            module is needed. Support for interaction with the
                                &lt;package&gt;PbcfgM&lt;/package&gt; shall be active of the module is
                            referenced by the &lt;package&gt;PbcfgM&lt;/package&gt;'s
                                &lt;literal&gt;PbcfgMBswMModuleRef&lt;/literal&gt; paremeter. In that case a
                                &lt;literal&gt;&amp;lt;MODULE&amp;gt;_PBCFGM_SUPPORT_ENABLED&lt;/literal&gt;
                            #define shall be generated in the module's
                                &lt;filename&gt;&amp;lt;module&amp;gt;_Cfg.h&lt;/filename&gt; file with a value
                            of &lt;literal&gt;STD_ON&lt;/literal&gt;. Otherwise the value shall be
                                &lt;literal&gt;STD_OFF&lt;/literal&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.PostBuild.BinaryWithCompiler</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <description> To generate a binary representation of the post-build time
                            configuration using the complier toolchain for the target platform, the
                            user build environment is extended with two new make targets, namely
                                &lt;literal&gt;depend_postBuildBinary&lt;/literal&gt; and
                                &lt;literal&gt;postBuildBinary&lt;/literal&gt;. Each of these two targets
                            ensures that only the translation unit containing the post-build time
                            configuration of the &lt;package&gt;PbcfgM&lt;/package&gt; (which in turn contains
                            the post-build time configuration of all other post-build capable
                            modules managed by the &lt;package&gt;PbcfgM&lt;/package&gt;) is used during the
                            build process. &lt;literal&gt;depend_postBuildBinary&lt;/literal&gt; creates the
                            dependencies for the post-build time configuration of the
                                &lt;package&gt;PbcfgM&lt;/package&gt; and &lt;literal&gt;postBuildBinary&lt;/literal&gt;
                            compiles and links the post-build time configuration of the
                                &lt;package&gt;PbcfgM&lt;/package&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.BinaryWithoutCompiler</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_physical_view.xml</sourcefile>
      <sourceline>811</sourceline>
      <version>1</version>
      <description> To generate a binary representation of the post-build time
                            configuration without using the compiler each module generates an XML
                            representation of its post-build time configuration. The
                                &lt;package&gt;PbcfgM&lt;/package&gt;'s XML representation includes those of all
                            other modules via &lt;literal&gt;XInclude&lt;/literal&gt;. Using an XSLT, this XML
                            representation is then directly converted into a binary representation
                            of the post-build configuration. A detailed description of this process
                            is contained in &lt;ulink url="http://wiki.elektrobit.com/index.php/Project:AutoCore_Binary_Code_Generation"&gt;http://wiki.elektrobit.com/index.php/Project:AutoCore_Binary_Code_Generation&lt;/ulink&gt;. </description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
  </specobjects>
    <specobjects doctype="swpad">
    <specobject>
      <id>ACG.Infrastruture.PbcfgM.1</id>
      <status>approved</status>
      <source>&amp;compname-er;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/architecture/swad_structural_view.xml</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <description>The &lt;package&gt;PbcfgM&lt;/package&gt; that manages the post-build time
                          configurations of all post-build configurable modules and provides pointers
                          to these configurations on request based on the requesting module's
                              &lt;varname&gt;ModuleId&lt;/varname&gt; and &lt;varname&gt;InstanceId&lt;/varname&gt; via the
                          API &lt;function&gt;Std_ReturnType PbcfgM_GetConfig(uint16 moduleId, uint16
                              instanceId, void **config)&lt;/function&gt; API. Furthermore the
                              &lt;package&gt;PbcfgM&lt;/package&gt; provides the API &lt;function&gt;boolean
                              PbcfgM_IsValidConfig(void *config)&lt;/function&gt; to check whether the
                          post-build time configuration of all post-build configurable modules handle
                          by the &lt;package&gt;PbcfgM&lt;/package&gt; are valid w.r.t. consistency with the
                          static code. This is achieved by invoking the
                              &lt;function&gt;&amp;lt;module&amp;gt;_IsValidConfig()&lt;/function&gt; API of each
                          of these modules.</description>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>ACG.PostBuild.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>ACG.PostBuild.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main140</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall provide network independent communication
          mechanisms for applications. AUTOSAR shall support the
          development of Software Components independently from the
          underlying communication systems.
        </description>
      <comment>
          Rationale: Independency from the underlying communication
          system is a prerequisite to support the reallocation of
          Software Components (Relocation of SW component from ECU A
          with CAN-Bus to ECU B with FlexRay.)
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>AUTOSAR.Main230</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support network topologies including gateways. -
          AUTOSAR shall support net topologies with different in-vehicle
          network technologies. Interconnection of these networks via
          gateways, bridges, or repeaters shall be supported.
        </description>
      <comment>
          Rationale: ECUs communicate via different communication
          systems. Support of today's network topologies of
          E/E-architectures in series production.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>AUTOSAR.Main430</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support automotive communication systems - The
          AUTOSAR Basic Software shall support common automotive
          communication systems. This includes at least but is not
          restricted to: CAN, LIN, FlexRay, Ethernet
        </description>
      <comment>
          Rationale: Automotive ECUs communicate over different
          standardized communication systems. These shall be supported
          by AUTOSAR. - Implementation of distributed functionality
          e.g. driving assistance systems.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>ACG.Com.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the transmission (sending and receiving)
          of signals for all types of networks (i.e., CAN, LIN,
          Ethernet, and FlexRay).
        </description>
      <comment>
          Rationale: Signal-based communication on the different types
          communication networks is a key functionality required to
          implement distributed automotive applications.
        </comment>
      <verifycrit>
          At the sender side call the API for the sending of the signal
          and verify that this triggers the transmission of a frame
          containing the signal (with the correct value) on the
          configured network. Verify that the signal contained in the
          frame can be received at the receiver side and that the
          signal's value is correct.
        </verifycrit>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.Com.1.FrEth</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.Com.1.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>ACG.Com.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the transmission (sending and receiving)
          of data items (SDU)s that are larger than the maximum transfer
          unit of the underlying network and thus requires segmentation
          at the sender and reassembly at the receiver for all types of
          networks (i.e., CAN, LIN, Ethernet, and FlexRay).
        </description>
      <comment>
          Rationale: Transmission of data items that are larger than the
          maximum transfer unit of the underlying network and thus
          requires segmentation at the sender and reassembly at the
          receiver is a key functionality required for diagnostic
          communication between a diagnostic tester and an ECU.
        </comment>
      <verifycrit>
          At the sender side call the API for the sending of a data item
          that is larger than the maximum transfer unit of the
          underlying network and verify that this triggers the
          transmission of a multiple frames containing parts of the data
          item (with the correct values) on the configured
          network. Verify that the content of the multiple frames is
          properly reassembled at the receiver side and that reassembled
          data items is equal to the sent data item.
        </verifycrit>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.Com.2.FrEth</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.Com.2.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>ACG.Com.3</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the gatewaying of protocol data units
          (PDUs) between all types of networks (i.e., CAN, LIN,
          Ethernet, and FlexRay).
        </description>
      <comment>
          Rationale: The ECUs of different domains (e.g., chassis
          domain, powertrain domain, etc.) in an automotive distributed
          system are usually placed in seperate distinct networks which
          are interconnected via gateways. - PDU-based communication
          crossing gateways is required for diagnostic purposes for
          example.
        </comment>
      <verifycrit>
          Reception of a PDU on the source network yields a transmission of
          a PDU with exactly the same contents on the destination network(s).
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>swad</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.Com.3.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ACG.Com.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>ACG.Com.4</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the gatewaying of signals
          between all types of networks (i.e., CAN, LIN, Ethernet, and
          FlexRay).
        </description>
      <comment>
          Rationale: The ECUs of different domains (e.g., chassis
          domain, powertrain domain, etc.) in an automotive distributed
          system are usually placed in seperate distinct networks which
          are interconnected via gateways. - Signal-based communication
          crossing gateways is required for non-diagnostic communication.
        </comment>
      <verifycrit>
          Reception of a PDU containing a specific signal on the source
          network yields a transmission of a PDU with containing the
          same signal (at a possibly other location within the PDU) with
          the same value on the destination network(s).
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
        <ignoreddoctype>swad</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.Com.4.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>ACG.Com.5</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>290</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL support the startup and the shutdown of communication for all
          types of networks (i.e., CAN, LIN, Ethernet, and FlexRay). </description>
      <comment> Rationale: Upon power-up of the ECU the communication needs to be started on
          potentially all networks the ECU is connected to. - This startup needs some specific
          actions on some networks (e.g., synchronization on FlexRay). Upon power-down the ECUs
          local communication facilities shall be shut down as well.</comment>
      <verifycrit> Power-up the ECU and verify that communication with other ECUs is possible.
          Power-down the ECU and verify that this ECU does no longer send any frames. </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
        <ignoreddoctype>swad</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main430</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>ACG.Com.6</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Communication_Requirements.xml</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL support the automatic recovery from loss communication for all
          types of networks (i.e., CAN, LIN, Ethernet, and FlexRay). </description>
      <comment> Rationale: In case of communication loss due to (temporary) physical
          interferences (causing e.g., a bus-off condition on CAN or a loss of synchronization on
          FlexRay), normal communication capabilities shall be re-established once the (temporary)
          physical interferences have vanished. </comment>
      <verifycrit> Deliberately produce such a (temporary) physical interference by e.g.,
          disconnecting the ECU from the network (FlexRay) or by short circuting one of the bus
          lines to the power supply (CAN). Verify that the ECU has lost communication capabilities.
          Stop producing the (temporary) physical interferences and verify that the ECU
          automatically (i.e., without application or manual intervention) recovers from this loss
          of communication and regains communication capabilities. </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
        <ignoreddoctype>swad</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main360</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support management of vehicle diversity. - Diversity management is introduced on vehicle level. This enables formal check of compatibility of Software Components, management of availability of partner Software Components in vehicle versions their release state etc. Also the number of required software versions per ECU integration can be evaluated and tracked with reasonable effort.
        </description>
      <comment>
          Rationale: Diversity of e.g. a wiring harness is reaching the amount of 10.000 to 1.000.000 different versions for the same vehicle platform. Same diversity requirements multiplied with the version management per Software Component apply for the entity of the software on the vehicle level. Unmanaged this effect can lead to deadlock situations in the logistic of vehicle software. - Potential implementations are e.g. "existence" property matrix per class, group and instance of SW components and connections.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL support the re-flashing of the post-build time configuration parameters independent from the static software of the respective modules.
        </description>
      <comment>
          Rationale: Seperate re-flashing of a module's configuration allows to use the same ECU in higher quantities because the ECU can then be used inside different cars, thus reducing cost. An easy adaption of the ECU to country specific regulations, adapt to right/left hand steering is possible.
        </comment>
      <verifycrit>Seperately flash the static code of the &amp;acg; modules and (afterwards) the  post-build time configuration of the modules. - The module shall operate in exactly the same way as if the two items were flashed together.
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.FunctionReferences</srcid><srcstatus/><internalId>5</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.RAMAllocation</srcid><srcstatus/><internalId>6</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.PostBuild.1.Com</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.1.FrEth</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.1.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL support the provision of the  post-build time configuration to use to the module upon module initialization.
        </description>
      <comment>
          Rationale: Allow the binding between a module's static code and the configuration to use to be postponed until module initialization to allow to select the configuration to use from a defined set of configuration alternatives upon ECU start-up as well as for an update of the configuration seperately from an update of the module's static code.
        </comment>
      <verifycrit>When given a valid  post-build time configuration upon module initialization, the module shall operate according to its specification.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.NoDependency</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.PbcfgMSupport</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ACG.Infrastruture.PbcfgM.1</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.3</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL NOT exhibit any pre-compile or link time dependency between the module's static code and the module's post-build time configuration.
        </description>
      <comment>
          Rationale: Allow the separate creation of binary representations of the module's static code and the module's post-build time configuration.
        </comment>
      <verifycrit>Compilation and linking of static code is possible without and existing post-build time configuration and vice versa.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.NoDependency</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>ACG.Infrastruture.PbcfgM.1</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.4</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>It SHALL be possible to re-flash the  post-build time configuration of &amp;acg; modules with an implementation configuration variant of post-build to a defined but arbitrary location in memory.
        </description>
      <comment>
          Rationale: Selection of the memory region used to store the  post-build time configuration is up to the integrator of the ECU and thus shall not be fixed by the specific module.
        </comment>
      <verifycrit>Locate the module's  post-build time configuration at various placed in the ECU's memory and use the respective address during module initialization. - The module shall operate according to its specification.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.Relocation</srcid><srcstatus/><internalId>4</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ACG.PostBuild.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.5</id>
      <status>approved</status>
      <source>&amp;eba;, VCC - Software Requirement Specification Autosar Configuration - REQPROD 181073:0 &lt;biblioref linkend="bmarkVCCSRS"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL provide means to detect if the provided  post-build time configuration is invalid w.r.t. the ECU's platform specifics (namely endianness, size of primitive data types, and alignment requirements of primitive data types), the module's pre-compile and link time configuration (i.e., the provided  post-build time configuration has been generated with a different set of pre-compile and link time configuration parameter values), and the module's version (i.e., the provided  post-build time configuration has been generated for a different version of the module), the module's vendor (i.e., the provided  post-build time configuration has been generated for a module implementation of a different vendor), and the module's identity (i.e., the provided  post-build time configuration has been generated for a completely different module).
        </description>
      <comment>
          Rationale: Any undetected mismatches w.r.t. the above specifics result in undefined behavior of the module upon run-time.
        </comment>
      <verifycrit>Deliberately provide a mismatching  post-build time configuration and verify that this is detected properly upon module initialization time and thus causes module initialization to fail.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.ConsistencyCheck</srcid><srcstatus/><internalId>1</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.ConsistencyPlatformSpecifics</srcid><srcstatus/><internalId>7</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.ConsistencyPreCompile</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.ConsistencyLink</srcid><srcstatus/><internalId>9</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.ConsistencyPublicInfo</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>ACG.PostBuild.ConsistencyRAM</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>ACG.Infrastruture.PbcfgM.1</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.6</id>
      <status>approved</status>
      <source>&amp;eba;, VCC Software Requirement Specification Autosar Configuration - chapter 6.2 "VCC post-build loadable" &lt;biblioref linkend="bmarkVCCSRS"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL provide means to generate a binary representation of the post-build time configuration without requiring a compiler toolchain for the target hardware platform.
        </description>
      <comment>
          Rationale: OEM does not have the compiler toolchains of all potential target platforms used by the Tier-1's available.
        </comment>
      <verifycrit>Creation of a binary representation of the post-build time configuration is possible without invoking any tool of the compiler toolchain.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.BinaryWithoutCompiler</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.PostBuild.6.Com</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.6.FrEth</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.6.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>ACG.PostBuild.7</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Crosscutting_Requirements.xml</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&amp;acg; modules with an implementation configuration variant of post-build SHALL provide means to generate a binary representation of the post-build time configuration using the compiler toolchain for the target hardware platform.
        </description>
      <comment>
          Rationale: Tier-1's has the compiler toolchain available for the target platform and thus shall have the possibility to use it for creation of the binary representation.
        </comment>
      <verifycrit>Creation of a binary representation of the post-build time configuration is possible using the compiler toolchain.
        </verifycrit>
      <needscoverage>
        <needscov><needsobj>swpad</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ACG.PostBuild.BinaryWithCompiler</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ignoredlink>
          <ffbId>ACG.PostBuild.7.Com</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.7.FrEth</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
        <ignoredlink>
          <ffbId>ACG.PostBuild.7.CanLin</ffbId>
          <ffbType>swrs</ffbType>
          <ffbVersion>1</ffbVersion>
        </ignoredlink>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>ACG.Debug.1</id>
      <status>rejected</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Debug_Measurement_Calibration_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means to report development errors from BSW modules and from (application) SWCs.
        </description>
      <comment>
          This requirement is not applicable because the associated Dlt AUTOSAR SWS requirements requiring an interface to Det (SWS_Dlt_00430, SWS_Dlt_00431, SWS_Dlt_00376, SWS_Dlt_00480, SWS_Dlt_00432) are rejected in Dlt module design.
        </comment>
      <verifycrit>&lt;verifycrit/&gt;</verifycrit>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>ACG.Debug.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Debug_Measurement_Calibration_Requirements.xml</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for synchronous data acquisition from BSW modules and from (application) SWCs without halting the ECU and transfer of the aquired data from the ECU to a remote testing device.
        </description>
      <comment>
          Rationale: Allow remote monitoring of run-time parameters of an ECU for development and testing purposes.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main410</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Library_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>AUTOSAR shall provide specifications for routines
          commonly used by Software Components to support sharing and
          optimization.
        </description>
      <comment>
          Rationale: Share routines between different SW-Component.
          Use of optimized routines by SW-Components integrated in different
          ECUs. Relocation of SW component from ECU A to ECU B with a different
          microcontroller.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main130</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/MCAL_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall provide an abstraction from hardware. - A
          MicroController Abstraction Layer (MCAL) shall provide an
          abstraction from hardware characteristics. This MCAL shall be
          limited to the software modules directly interacting with the
          HW. Other parts of the Basic Software shall be independent
          from hardware.
        </description>
      <comment>
          Rationale: Reuse of the SW if the HW is changed (e.g. new
          microcontroller). - Software sharing between multiple HW
          platforms.  Relocate SW application from one ECU with hardware
          A to ECU with hardware B without changes of the SW
          application.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>AUTOSAR.Main435</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/MCAL_Requirements.xml</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support automotive microcontrollers - The
          AUTOSAR MCAL shall support hardware features of commonly used
          automotive microcontrollers.
        </description>
      <comment>
          Rationale: Automotive ECUs use dedicated, highly integrated
          microcontrollers, which have to pass automotive qualification
          procedures. The AUTOSAR MCAL shall support the integrated
          features of these microcontrollers.  These includes, but is
          not limited to: Digital I/O, analog/digital converter,
          pulse-width modulation, bus controllers for CAN, LIN, FlexRay,
          Ethernet, multicore, memory protection units, flash. -
          Implementation of safety relevant systems; avoid complex
          drivers for commonly used features
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>ACG.Os.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means for the (pseudo) parallel execution of pieces of program code. The entities of this (pseudo) parallel execution are named tasks.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>ACG.Os.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means execute multiple different tasks in a pseudo parallel fashion on a single CPU core.
        </description>
      <comment>
          Rationale: Provide pseudo parallelism on single core CPUs
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>ACG.Os.3</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means execute multiple different tasks in a real parallel fashion on multiple CPU cores.
        </description>
      <comment>
          Rationale: Provide real parallelism on multi core CPUs.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>ACG.Os.4</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means to activate the tasks in a static cyclic time-driven fashion.
        </description>
      <comment>
          Rationale: Determinision, predictabilitly
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>ACG.Os.5</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means to activate the tasks in an event-driven fashion.
        </description>
      <comment>
          Rationale: Flexibility
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>ACG.Os.6</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means to trigger events after a definable amount of time has elapsed.
        </description>
      <comment>
          Rationale: Flexibility
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>ACG.Os.7</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means for the invocation of user-defineable interrupt services routines (ISRs) upon the occurrence of an interrupt.
        </description>
      <comment>
          Rationale: Handling of asynchronous events caused by peripheral hardware devices.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>ACG.Os.8</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means for tasks to wait for the occurrence of one or more specific events.
        </description>
      <comment>
          Rationale: Synchronization among tasks and/or tasks and ISRs
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>ACG.Os.9</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means to ensure mutual exclusion between sequences of program code executed in the context of different tasks and/or different interrupt services routines.
        </description>
      <comment>
          Rationale: Prevent race conditions in case of concurrent access to shared resources (e.g., memory).
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>ACG.Os.10</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide means to assign (static) execution priorities to tasks and ISRs and allow for the preemption of tasks/ISRs with lower priority by tasks/ISR with higher priority.
        </description>
      <comment>
          Rationale: Give the user the possibility to distinguish between tasks/ISRs of different importance.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>ACG.Os.11</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide partitioning support to prevent mutual interference between tasks/ISRs assigned to different partitions in the spatial (i.e., memory) domain.
        </description>
      <comment>
          Rationale: Allow for the integration of independent units of software with different requirements regarding their level of integrity on a single ECU. - Prevent non-critical units of software from corrupting memory regions owned by safety-critical units of software.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>ACG.Os.12</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide partitioning support to prevent mutual interference between tasks/ISRs assigned to different partitions in the time domain.
        </description>
      <comment>
          Rationale: Allow for the integration of independent units of software with different requirements regarding their level of integrity on a single ECU. - Prevent non-critical units of software from corruption the timing behavior of safety-critical units of software.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>ACG.Os.13</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/OS_Requirements.xml</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <description>&amp;acg; SHALL provide best effort means to detect the mutual interference between tasks/ISRs spatial (i.e., memory) domain.
        </description>
      <comment>
          Rationale: In case real partitioning in the spatial domain is not possible due to limited hardware support, at least a best effort detection of mutual interference between tasks/ISRs spatial (i.e., memory) domain shall be possible. - E.g., Provide means to detect stack overflows.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main150</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support the reallocation of Software Components
          - AUTOSAR shall develop mechanisms, methods, and processes to
          enable reallocation of Software Components independent from
          communication infrastructure.
        </description>
      <comment>
          Rationale: Enable the reallocation of Software Components to
          different ECUs (e.g., reallocation of yaw rate control from
          one ECU to another). - Optimization of overall system
          architecture.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>AUTOSAR.Main60</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall provide a standardized software interface for
          communication between Software Components. As the interface
          definition of Software Components is a prerequisite to reuse
          Software Components AUTOSAR shall provide such a standardized
          interface.
        </description>
      <comment>
          Rationale: From a Software Components point of view the
          interface to another Software Component shall be identical,
          independent whether the Software Components are located (on
          the same ECU on the same core, on the same ECU on another
          core, on the same ECU on another microcontroller, on another
          ECU). - Application SW is developed independently from the
          underlying communication system.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>AUTOSAR.Main330</id>
      <status>approved</status>
      <source>AUTOSAR - Main Requirements; Document Version 3.0.0; Part of Release 4.0 rev 3 &lt;biblioref linkend="bmarkAUTOSARMainRequirements"/&gt;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>
          AUTOSAR shall support the principle of information hiding. -
          AUTOSAR shall provide protection mechanisms for internal
          information of Software Components.
        </description>
      <comment>
          Rationale: Well-defined interfaces and data flow between
          Software Components. Reduce impact of modifications within a
          Software Component.
        </comment>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>ACG.Rte.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the division of SWCs into one or more runnable entities
        </description>
      <comment>
          Rationale: (Application) SWCs shall be independent from the used operating system. Thus an abstraction from the OS tasks is needed.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>ACG.Rte.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the division of BSW modules into one or more BSW schedulable entities
        </description>
      <comment>
          Rationale: BSW modules shall be independent from the used operating system. Thus an abstraction from the OS tasks is needed.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>ACG.Rte.3</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support activation of runnable entities upon the reception of data
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>ACG.Rte.4</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support activation of runnable entities upon the invocation of an operation
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>ACG.Rte.5</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support activation of runnable entities and BSW schedulable entities based on periodic timing
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>ACG.Rte.6</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the notion of different modes of operation
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>ACG.Rte.7</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support to suppress the activation of runnable entities and BSW schedulable entities in specific modes of operation
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>ACG.Rte.8</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the switching between different modes of operation during run-time
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>ACG.Rte.9</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the placing of instances of SWCs in different (memory) partitions.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>ACG.Rte.10</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the placing of instances of SWCs on different CPU cores.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>ACG.Rte.11</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the placing of instances of SWCs on different ECUs.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>ACG.Rte.12</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support communication among instances of SWCs placed in different (memory) partitions.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main60</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>ACG.Rte.13</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support communication among instances of SWCs placed on different CPU cores.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main60</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>ACG.Rte.14</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>368</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support communication among instances of SWCs placed on different ECUs.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main60</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>ACG.Rte.15</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the sender-receiver communication pattern between software component instance, where one sender
          distributes information to one or several receivers or one receiver receives information
          from  one or several senders by means of message passing.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main60</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>ACG.Rte.16</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the client-server communication pattern between software component instance, where one server acts as the provider of a service and one or more clients use the provided service by means of (remote) method invocations.</description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main60</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>AUTOSAR.Main330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>ACG.Rte.17</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL support the restart of all runnables placed in a specific partition.
        </description>
      <comment>
          Rationale: Restart of a single partition without needing to restart the whole EUC in case a failure of this partition has been detected.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>ACG.Rte.18</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>468</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL provide a standardized interface to the BSW modules to the application SWCs.
        </description>
      <comment>
          Rationale: Facilitate relocation of SWCs among different ECUs.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>ACG.Rte.19</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/RTE_Requirements.xml</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <description>
          &amp;acg; SHALL provide means to ensure data consistency and mutual exclusion to the application SWCs.
        </description>
      <comment>
          Rationale:
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>AUTOSAR.Main170</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description> AUTOSAR shall provide secure access to ECU  (e.g. by user
          authentication), including standardized up- and download of data and
          software. For this mechanisms and methods shall be defined.
        </description>
      <comment>
          Rationale: The update and upgrade feasibility provided by AUTOSAR includes
          technical challenges (e.g. standardized up-/download protocol, partly
          update of the software) and mechanisms (e.g. how to authorize the user).
          Download of dedicated Software Components in ECU.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>swrs</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>ACG.Security.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means to compute and verify checksums over a block of data elements.
        </description>
      <comment>
          Rationale: Detect accidental modification such as corruption to stored data or errors in a communication channel.
        </comment>
      <verifycrit>Compute the checksum over a known sequence of data. Deliberately modify the data. Subsequent verification of the checksum must detect the modification.
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>ACG.Security.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means to compute hash values over a block of data elements.
        </description>
      <comment>
          Rationale: Detect accidental or incidental modification of stored or exchanged data.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>ACG.Security.3</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means to compute and verify a message authentication code (MAC).
        </description>
      <comment>
          Rationale: Protect the integrity of a message and ensure the message's authenticity.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>ACG.Security.4</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means to generate random number.
        </description>
      <comment>
          Rationale: Random numbers are commonly used cryptographic algorithms and in algorithms computing hash values.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>ACG.Security.5</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for symmetric en- and decryption of data (i.e., identical cryptographic keys are used for both en- and decryption).
        </description>
      <comment>
          Rationale: Exchange of encrypted information between communication parties sharing a common secret.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>ACG.Security.6</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for asymmetric en- and decryption of data (i.e., different cryptographic keys are used for en- and decryption).
        </description>
      <comment>
          Rationale: Exchange of encrypted information between communication parties using a public key infrastucture.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>ACG.Security.7</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for digital signatures to authenticate the source of messages as well as to
          prove integrity of signed messages.
        </description>
      <comment>
          Rationale: Exchange of information in a way that the receipient is able to authenticate the source of messages as well as to
          prove integrity of signed messages.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>ACG.Security.8</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for the derivation of one or more secret keys using a key derivation function.
        </description>
      <comment>
          Rationale: Derive one or more secret keys from a secret value and/or other known information such as a
          passphrase or a cryptographic key. - Support for the automated generation of on-time session keys.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>ACG.Security.9</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>230</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for wrapping and serialization of keys for transportation purposes.
        </description>
      <comment>
          Rationale: Exchange of cryptographic keys among ECUs over vehicle networks.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>ACG.Security.11</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>253</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for deserialization and extraction of keys for transportation purposes.
        </description>
      <comment>
          Rationale: Exchange of cryptographic keys among ECUs over vehicle networks.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>ACG.Security.12</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Security_Requirements.xml</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL provide means for the generation and the secure exchange of a shared key.
        </description>
      <comment>
          Rationale: Two users that each have a private secret can use a key exchange protocol to obtain
          a common secret, e.g. a key for a symmetric-key algorithm, without telling each other
          their private secret and without any listener being able to obtain the common secret
          or their private secrets.
        </comment>
      <verifycrit>
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>AUTOSAR.Main170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>ignored</linkstatus><linkdestdoctype>swrs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
  </specobjects>
    <specobjects doctype="swrs">
    <specobject>
      <id>ACG.Wdg.1</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Watchdog_Requirements.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL support the supervision of the reliability of the execution of one or multiple (application) SWCs w.r.t. timing constraints (i.e., temporal program flow monitoring).
        </description>
      <comment>
          Rationale: Prevent the (application) SWCs from getting and keeping stuck in a state where they can no longer provide their intended service due to a transient fault.
        </comment>
      <verifycrit>Implement an (application) SWC that deliberately (i.e., by design) does not regularly service &amp;acg;'s temporal supervision services. - Executing this (application) SWC SHALL yield a reset of the ECU or a non-maskable interrupt (NMI) caused by the ECU's watchdog.
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>ACG.Wdg.2</id>
      <status>approved</status>
      <source>&amp;eba;</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_BundleAcg/doc/project/requirements/Watchdog_Requirements.xml</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description> &amp;acg; SHALL support the supervision of the reliability of the execution of one or multiple application SWCs w.r.t. execution order constraints (i.e., logical program flow monitoring).
        </description>
      <comment>
          Rationale: Prevent (application) SWCs from violating their correct oder of execution and thus providing a faulty service due to a transient fault.
        </comment>
      <verifycrit>Implement an (application) SWC that deliberately (i.e., by design) deviates from its correct order of execution. - Executing this (application) SWC SHALL yield a reset of the ECU or a non-maskable interrupt (NMI) caused by the ECU's watchdog.
        </verifycrit>
      <needscoverage>
        <ignoreddoctype>man</ignoreddoctype>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
