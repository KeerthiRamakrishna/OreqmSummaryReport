<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_Tm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_Native/asc_Tm_requirements_AUTOSAR_SWS_TimeService_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_Native/asc_Tm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:08:02 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_Tm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_Native/asc_Tm_requirements_AUTOSAR_SWS_TimeService_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_Native/asc_Tm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>Tm.</idprefix>
    </defaults>

    <specobject>
      <id>Tm.ECUC_Tm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmGeneral
        Container Type: Container
        Description: General configuration of Time Service module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.TmGeneral</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmDevErrorDetect
        Parameter Type: Boolean
        Parent Containers: TmGeneral
        Description: Switches the development error detection and notification on or off.
        Introduction: * true: detection and notification is enabled. * false: detection and 
        notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Default value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmDevErrorDetect</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmEnablePredefTimer1us16bit
        Parameter Type: Boolean
        Parent Containers: TmGeneral
        Description: Specifies if the Predef Timer 1µs16bit shall be enabled (functionality and set of API services). ON or OFF.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmEnablePredefTimer1us24bit
        Parameter Type: Boolean
        Parent Containers: TmGeneral
        Description: Specifies if the Predef Timer 1µs24bit shall be enabled (functionality and set of 
        API services). ON or OFF.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmEnablePredefTimer1us32bit
        Parameter Type: Boolean
        Parent Containers: TmGeneral,
        Description: Specifies if the Predef Timer 1µs32bit shall be enabled (functionality and set of 
        API services). ON or OFF.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmEnablePredefTimer100us32bit
        Parameter Type: Boolean
        Parent Containers: TmGeneral
        Description: Specifies if the Predef Timer 100µs32bit shall be enabled (functionality and set 
        of API services). ON or OFF.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: TmVersionInfoApi
        Parameter Type: Boolean
        Parent Containers: TmGeneral,
        Description: Adds / removes the service Tm_GetVersionInfo() from the code. ON or OFF.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Parameter.TmVersionInfoApi</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>Tm.ECUC_Tm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module Name | Tm
        Module Description | Configuration of the Time Service module.
        Post-Build Variant Support | false
        Supported Config Variants | VARIANT-PRE-COMPILE
        Included Containers
        Container Name | Multiplicity | Scope / Dependency 
        TmGeneral | 1 | General configuration of Time Service module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Tm</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The Time Service module shall use the GPT driver service Gpt_GetPredefTimerValue to get the
        current time value for the desired Predef Timer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_124</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_169</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_260</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_270</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_313</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_358</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_452</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_462</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_505</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_550</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_639</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_649</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_691</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_736</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The "1us16bit" functions shall use the Timer GPT_PREDEF_TIMER_1US_16BIT as time base if a time 
        base is needed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_124</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_169</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_260</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_270</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The "1us24bit" functions shall use the Timer GPT_PREDEF_TIMER_1US_24BIT as time base if a time base is needed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_313</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_358</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_452</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_462</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The "1us32bit" functions shall use the Timer GPT_PREDEF_TIMER_1US_32BIT as time base if a time base is needed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_505</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_550</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_639</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_649</srcid><srcstatus/><internalId>196</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The "100us32bit" functions shall use the Timer GPT_PREDEF_TIMER_100US_32BIT as time base if a time base is needed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_691</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_736</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ResetTimer functions shall reset the timer instance passed by the parameter TimerPtr. This 
        means, the reference time of the timer instance shall be set to the current time of the related 
        GPT Predef Timer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_129</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_318</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_510</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_696</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ResetTimer functions shall be reentrant, if the timer instances used in concurrent calls 
        are different.
      </description>
      <verifycrit>
        Testing reentrancy shall be done by simulating an interrupt call in the function body
        through redefining the debug macros. The simulated interrupt shall be a call to same reset
        timer function, occur more than one time and each time a parameter different from
        preceding calls parameters shall be passed. Testing success shall occur if all parameters
        are updated to different timestamps provided by a simulated time source.
      </verifycrit>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.ResetFunctionReEntry</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If the pointer parameter
        is a null pointer, the ResetTimer functions shall raise the error TM_E_PARAM_POINTER and shall
        return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_118</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_307</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_499</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_685</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The GetTimeSpan functions shall calculate and deliver the time difference between the current 
        time and the reference time of the timer instance.
      </description>
      <comment>
        The restriction of maximal measurable time span has to be considered on user software
        level.

        Because the GetTimeSpan functions deliver time differences as integer values, the theory
        of quantization error has to be considered on user software level at using/interpretation
        of the values

        To ensure correct behavior under every possible circumstance, the user of the GetTimeSpan
        service has to check:
          - which Predef Timer is required/sufficient
          - the task scheduling
          - whether an interrupt or resource lock is necessary on user software level
          - whether the user software is tolerant of such problems
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_174</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_363</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_555</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_741</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The GetTimeSpan functions shall perform proper wrap-around handling at subtraction (current
        time - reference time), if value of current time is less than value of reference time.
      </description>
      <comment>
        Proper wrap-around handling can be achieved e.g. by following C code:

        For 16bit timer:
          ui16TimeSpan = (uint16)(ui16CurrentTime - TimerPtr-&gt;ui16RefTime);

        For 24bit timer:
          ui32TimeSpan = (uint32)(ui32CurrentTime - TimerPtr-&gt;ui32RefTime) &amp; (uint32)0x00FFFFFFu;

        For 32bit timer:
          ui32TimeSpan = (uint32)(ui32CurrentTime - TimerPtr-&gt;ui32RefTime;
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_174</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_363</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_555</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_741</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The GetTimeSpan functions shall be fully reentrant, this means even for the same timer instance.
      </description>
      <verifycrit>
        Testing reentrancy shall be done by simulating an interrupt call in the function body 
        through redefining the debug macros. The simulated interrupt shall be a call to same 
        GetTimeSpan timer function and occur more than one time. Each GetTimeSpan call shall have 
        the same timer parameter and different timestamp parameters where to store the elapsed time.
        Testing success shall occur if all timespan parameters are updated to different values 
        representing the time elapsed at different simulated points in time.
      </verifycrit>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.GetTmeSpanFunctionReEntry</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If a pointer parameter 
        is a null pointer, the GetTimeSpan functions shall raise the error TM_E_PARAM_POINTER and shall 
        return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</srcid><srcstatus/><internalId>72</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ShiftTimer functions shall shift the reference time of the timer instance. This means, the 
        value TimeValue shall be added to the reference time of the timer instance.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_213</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_407</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_594</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_780</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US16BIT</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US32BIT</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER100US32BIT</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ShiftTimer functions shall perform proper wrap-around handling at adding (reference time + 
        TimeValue), if the sum is greater than the maximum value of the timer.
      </description>
      <comment>
        Proper wrap-around handling can be achieved e.g. by following C code:

        For 16bit timer:
          TimerPtr-&gt;ui16RefTime = (uint16)(TimerPtr-&gt;ui16RefTime + TimeValue);

        For 24bit timer:
          TimerPtr-&gt;ui32RefTime = (uint32)(TimerPtr-&gt;ui32RefTime + TimeValue)
                                            &amp; (uint32)0x00FFFFFFu;

        For 32bit timer:
          TimerPtr-&gt;ui32RefTime = (uint32)(TimerPtr-&gt;ui32RefTime + TimeValue;
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_213</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_407</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_594</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_780</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US16BIT</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US32BIT</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER100US32BIT</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ShiftTimer functions with range 24bit shall limit the value of the parameter TimeValue to 0xFFFFFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_407</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If the value of the
        parameter TimeValue is greater than 0xFFFFFF, the ShiftTimer functions with range 24bit shall
        raise the error TM_E_PARAM_VALUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_401</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SHIFTTIMER_TM_E_PARAM_VALUE</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ShiftTimer functions shall be reentrant, if the timer instances used in concurrent calls 
        are different.
      </description>
      <verifycrit>
        Testing reentrancy shall be done by simulating an interrupt call in the function body 
        through redefining the debug macros. The simulated interrupt shall be a call to same 
        ShiftTimer function and occur more than one time. Each ShiftTimer call shall have a 
        different set(timer,shift value) of parameters. Testing success shall occur if all 
        timer parameters are updated with their corresponding shift value.
      </verifycrit>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.ShiftTimerFunctionReEntry</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If the pointer parameter 
        is a null pointer, the ShiftTimer functions shall raise the error TM_E_PARAM_POINTER.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_207</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_396</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_588</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_774</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SHIFTTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The SyncTimer functions shall synchronize two timer instances. This means, the reference time 
        of the destination timer instance shall be set to the reference time of the source timer 
        instance.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_240</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_432</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_619</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_805</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER1US16BIT</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US24BIT</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US32BIT</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER100US32BIT</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The SyncTimer functions shall be reentrant, if the destination timer instances used in 
        concurrent calls are different.
      </description>
      <verifycrit>
        Testing reentrancy shall be done by simulating an interrupt call in the function body 
        through redefining the debug macros. The simulated interrupt shall be a call to same 
        SyncTimer function and occur more than one time. Each SyncTimer call shall have different
        parameters sets(timer destination, timer source). Testing success shall occur if all timer
        destination parameters are updated to the coresponding timer source parameters.
      </verifycrit>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.SyncTimerFunctionReEntry</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If a pointer parameter 
        is a null pointer, the SyncTimer functions shall raise the error TM_E_PARAM_POINTER.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_234</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_426</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_613</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_799</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SYNCTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The BusyWait functions shall perform busy waiting for the minimum time passed by the parameter 
        WaitingTimeMin.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_265</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_457</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_644</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US16BIT</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US32BIT</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The BusyWait functions shall not disable the interrupts. This means the real waiting time may 
        be greater than the desired waiting time.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.BusyWaitInterrupts</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The BusyWait functions shall guarantee the minimum waiting. This means, n+1 ticks must be 
        observed to ensure that an interval of at least n ticks has passed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_265</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_457</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_644</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US16BIT</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US32BIT</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        The BusyWait functions shall be reentrant.
      </description>
      <verifycrit>
        Testing reentrancy shall be done by simulating an interrupt call in the function body 
        through redefining the debug macros. The simulated interrupt shall be a call to same
        BusyWait function and occur more than one time. Each BusyWait call shall have different 
        waiting time parameters. Testing success shall occur if the overall simulated waiting time
        is more than the combined simulated waiting times of each call.
      </verifycrit>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.BusyWaitReEntry</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each Predef Timer enabled by configuration the following set of API services shall be 
        available: ResetTimer, GetTimeSpan, ShiftTimer, SyncTimer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00026.1us16bit</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00026.1us24bit</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00026.1us32bit</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00026.100us32bit</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        For each Predef Timer with tick duration 1µs enabled by configuration the API service BusyWait shall be available.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00027.1us16bit</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00027.1us24bit</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00027.1us32bit</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value
        API parameter checking: invalid pointer | TM_E_PARAM_POINTER | 0x01
        API parameter checking: invalid value | TM_E_PARAM_VALUE | 0x02
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00028.ParamPointer</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00028.ParamValue</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00030</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Additional errors that are detected because of specific implementation shall be added in the 
        specific implementation specification. The classification and enumeration shall be compatible 
        to the errors listed.
      </description>
      <comment>
        This requirement is not applicable: no additional implementation specific errors are added.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module      | Header File | Imported Type
        Gpt         | Gpt.h       | Gpt_PredefTimerType
        Std         | Std_Types.h | Std_ReturnType
                    | Std_Types.h | Std_VersionInfoType
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00031.Gpt</srcid><srcstatus/><internalId>89</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00031.Std_ReturnType</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00031.Std_VersionInfoType</srcid><srcstatus/><internalId>91</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | Tm_PredefTimer1us16bitType 
        Kind | Structure 
        Description | Data type of Time Service Predef Timer 1us16bit. The structure contains the reference time.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.PredefTimer1us16bitType</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | Tm_PredefTimer1us24bitType
        Kind | Structure
        Description | Data type of Time Service Predef Timer 1us24bit. The structure contains the reference time.
        Available via | Tm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.PredefTimer1us24bitType</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | Tm_PredefTimer1us32bitType 
        Kind | Structure 
        Description | Data type of Time Service Predef Timer 1us32bit. The structure contains the reference time.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.PredefTimer1us32bitType</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | Tm_PredefTimer100us32bitType 
        Kind | Structure 
        Description | Data type of Time Service Predef Timer 100µs32bit. The structure contains the reference time.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.PredefTimer100us32bitType</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_GetVersionInfo 
        Syntax | void Tm_GetVersionInfo (Std_VersionInfoType* VersionInfoPtr)
        Service ID [hex] | 0x1
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | VersionInfoPtr | Pointer to where to store the version information of this module.
        Return value | None 
        Description | Returns the version information of this module.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Interface.GetVersionInfo</srcid><srcstatus/><internalId>256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If the parameter
        VersionInfoPtr is a null pointer, the function Tm_GetVersionInfo shall raise the error
        TM_E_PARAM_POINTER.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_85</srcid><srcstatus/><internalId>115</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_VERSIONINFOPTR_NULLPTR</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ResetTimer1us16bit 
        Syntax | Std_ReturnType Tm_ResetTimer1us16bit (Tm_PredefTimer1us16bitType* TimerPtr)
        Service ID [hex] | 0x2
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same timer instance
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | TimerPtr | Pointer to a timer instance defined by the user.
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and 
                                              no development error has been detected 
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected 
        Description | Resets a timer instance (user point of view)
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us16Bit.Interface.ResetTimer</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_GetTimeSpan1us16bit 
        Syntax Std_ReturnType Tm_GetTimeSpan1us16bit (const Tm_PredefTimer1us16bitType* TimerPtr, uint16* 
        TimeSpanPtr)
        Service ID [hex] | 0x3 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (inout) | None 
        Parameters (out) | TimeSpanPtr | Pointer to time span destination data in RAM 
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and 
                                              no development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected 
        Description | Delivers the time difference (current time - reference time)
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us16Bit.Interface.GetTimeSpan</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ShiftTimer1us16bit 
        Syntax | void Tm_ShiftTimer1us16bit (Tm_PredefTimer1us16bitType* TimerPtr, uint16 TimeValue)
        Service ID [hex] | 0x4 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | TimeValue | Time value in µs, the reference time has to be shifted.
        Parameters (inout) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (out) | None 
        Return value | None 
        Description | Shifts the reference time of the timer instance.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us16Bit.Interface.ShiftTimer</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_SyncTimer1us16bit
        Syntax | void Tm_SyncTimer1us16bit (Tm_PredefTimer1us16bitType* TimerDstPtr, const Tm_PredefTimer1us16bitType* TimerSrcPtr)
        Service ID [hex] | 0x5
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same destination timer instance 
        Parameters (in) | TimerSrcPtr | Pointer to the source timer instance defined by the user.
        Parameters (inout) | None
        Parameters (out) | TimerDstPtr | Pointer to the destination timer instance defined by the user.
        Return value | None
        Description | Synchronizes two timer instances.
        Available via | Tm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us16Bit.Interface.SyncTimer</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_BusyWait1us16bit 
        Syntax | Std_ReturnType Tm_BusyWait1us16bit (uint8 WaitingTimeMin)
        Service ID [hex] | 0x6 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | WaitingTimeMin | Minimum waiting time in microseconds.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and 
                                              no development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected 
        Description | Performs busy waiting by polling with a guaranteed minimum waiting time.
        Available via | Tm.h 
      </description>
      <comment>
        Because the BusyWait service is based on polling, the user of the BusyWait service is
        responsible for avoiding unintentional behaviour
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us16Bit.Interface.BusyWait</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ResetTimer1us24bit 
        Syntax | Std_ReturnType Tm_ResetTimer1us24bit (Tm_PredefTimer1us24bitType* TimerPtr)
        Service ID [hex] | 0x7 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | TimerPtr | Pointer to a timer instance defined by the user.
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Resets a timer instance (user point of view)
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us24Bit.Interface.ResetTimer</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_GetTimeSpan1us24bit
        Syntax | Std_ReturnType Tm_GetTimeSpan1us24bit (const Tm_PredefTimer1us24bitType* TimerPtr, uint32* TimeSpanPtr)
        Service ID [hex] | 0x8
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (inout) | None 
        Parameters (out) | TimeSpanPtr | Pointer to time span destination data in RAM 
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Delivers the time difference (current time - reference time)
        Available via | Tm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us24Bit.Interface.GetTimeSpan</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ShiftTimer1us24bit
        Syntax | void Tm_ShiftTimer1us24bit (Tm_PredefTimer1us24bitType* TimerPtr, uint32 TimeValue)
        Service ID [hex] | 0x9
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | TimeValue | Time value in µs, the reference time has to be shifted. Range: 0-0xFFFFFF 
        Parameters (inout) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (out) | None 
        Return value | None 
        Description | Shifts the reference time of the timer instance.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us24Bit.Interface.ShiftTimer</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_SyncTimer1us24bit
        Syntax | void Tm_SyncTimer1us24bit (Tm_PredefTimer1us24bitType* TimerDstPtr, const
        Tm_PredefTimer1us24bitType* TimerSrcPtr)
        Service ID [hex] | 0xa
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same destination timer instance 
        Parameters (in) | TimerSrcPtr | Pointer to the source timer instance defined by the user.
        Parameters (inout) | None 
        Parameters (out) | TimerDstPtr | Pointer to the destination timer instance defined by the user.
        Return value | None 
        Description | Synchronizes two timer instances.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us24Bit.Interface.SyncTimer</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_BusyWait1us24bit 
        Syntax | Std_ReturnType Tm_BusyWait1us24bit (uint8 WaitingTimeMin)
        Service ID [hex] | 0xb 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | WaitingTimeMin | Minimum waiting time in microseconds.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Performs busy waiting by polling with a guaranteed minimum waiting time.
        Available via | Tm.h 
      </description>
      <comment>
        Because the BusyWait service is based on polling, the user of the BusyWait service is
        responsible for avoiding unintentional behaviour
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us24Bit.Interface.BusyWait</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ResetTimer1us32bit
        Syntax | Std_ReturnType Tm_ResetTimer1us32bit (Tm_PredefTimer1us32bitType* TimerPtr)
        Service ID [hex] | 0xc
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same timer instance
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | TimerPtr | Pointer to a timer instance defined by the user.
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and
        no development error has been detectedE_NOT_OK: The underlying GPT driver service has returned
        E_NOT_OK, or a development error has been detected 
        Description | Resets a timer instance (user point of view)
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us32Bit.Interface.ResetTimer</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_GetTimeSpan1us32bit 
        Syntax | Std_ReturnType Tm_GetTimeSpan1us32bit (const Tm_PredefTimer1us32bitType* TimerPtr, uint32* TimeSpanPtr)
        Service ID [hex] | 0xd
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (inout) | None
        Parameters (out) | TimeSpanPtr | Pointer to time span destination data in RAM
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Delivers the time difference (current time - reference time).
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us32Bit.Interface.GetTimeSpan</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ShiftTimer1us32bit 
        Syntax | void Tm_ShiftTimer1us32bit (Tm_PredefTimer1us32bitType* TimerPtr, uint32 TimeValue)
        Service ID [hex] | 0xe 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | TimeValue | Time value in µs, the reference time has to be shifted.
        Parameters (inout) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (out) | None 
        Return value | None 
        Description | Shifts the reference time of the timer instance.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us32Bit.Interface.ShiftTimer</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_SyncTimer1us32bit 
        Syntax | void Tm_SyncTimer1us32bit (Tm_PredefTimer1us32bitType* TimerDstPtr, const Tm_PredefTimer1us32bitType* TimerSrcPtr)
        Service ID [hex] | 0xf 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant but not for the same destination timer instance 
        Parameters (in) | TimerSrcPtr | Pointer to the source timer instance defined by the user.
        Parameters (inout) | None 
        Parameters (out) | TimerDstPtr | Pointer to the destination timer instance defined by the user.
        Return value | None 
        Description | Synchronizes two timer instances.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us32Bit.Interface.SyncTimer</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_BusyWait1us32bit
        Syntax | Std_ReturnType Tm_BusyWait1us32bit (uint8 WaitingTimeMin)
        Service ID [hex] | 0x10
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | WaitingTimeMin | Minimum waiting time in microseconds.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Performs busy waiting by polling with a guaranteed minimum waiting time.
        Available via | Tm.h 
      </description>
      <comment>
        Because the BusyWait service is based on polling, the user of the BusyWait service is
        responsible for avoiding unintentional behaviour
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.1us32Bit.Interface.BusyWait</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ResetTimer100us32bit
        Syntax | Std_ReturnType Tm_ResetTimer100us32bit (Tm_PredefTimer100us32bitType* TimerPtr)
        Service ID [hex] | 0x11
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | TimerPtr | Pointer to a timer instance defined by the user.
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and no
                                              development error has been detected
                                        E_NOT_OK: The underlying GPT driver service has returned E_NOT_OK,
                                                  or a development error has been detected
        Description | Resets a timer instance (user point of view)
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.100us32Bit.Interface.ResetTimer</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_GetTimeSpan100us32bit
        Syntax | Std_ReturnType Tm_GetTimeSpan100us32bit (const Tm_PredefTimer100us32bitType* TimerPtr, uint32* TimeSpanPtr)
        Service ID [hex] | 0x12
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (inout) | None
        Parameters (out) | TimeSpanPtr | Pointer to time span destination data in RAM
        Return value | Std_ReturnType | E_OK: The underlying GPT driver service has returned E_OK and 
        no development error has been detectedE_NOT_OK: The underlying GPT driver service has returned 
        E_NOT_OK, or a development error has been detected
        Description | Delivers the time difference (current time - reference time)
        Available via | Tm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.100us32Bit.Interface.GetTimeSpan</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_ShiftTimer100us32bit 
        Syntax | void Tm_ShiftTimer100us32bit (Tm_PredefTimer100us32bitType* TimerPtr, uint32 TimeValue)
        Service ID [hex] | 0x13 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant but not for the same timer instance 
        Parameters (in) | TimeValue | Time value in unit 100µs, the reference time has to be shifted.
        Parameters (inout) | TimerPtr | Pointer to a timer instance defined by the user.
        Parameters (out) | None 
        Return value | None 
        Description | Shifts the reference time of the timer instance.
        Available via | Tm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.100us32Bit.Interface.ShiftTimer</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | Tm_SyncTimer100us32bit
        Syntax | void Tm_SyncTimer100us32bit (Tm_PredefTimer100us32bitType* TimerDstPtr, const Tm_PredefTimer100us32bitType* TimerSrcPtr)
        Service ID [hex] | 0x14
        Sync/Async | Synchronous
        Reentrancy | Reentrant but not for the same destination timer instance
        Parameters (in) | TimerSrcPtr | Pointer to the source timer instance defined by the user.
        Parameters (inout) | None
        Parameters (out) | TimerDstPtr | Pointer to the destination timer instance defined by the user.
        Return value | None
        Description | Synchronizes two timer instances.
        Available via | Tm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.100us32Bit.Interface.SyncTimer</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        Det_ReportRuntimeError | Det.h | Service to report runtime errors. If a callout has been configured then this callout shall be called.
        Gpt_GetPredefTimerValue | Gpt.h | Delivers the current value of the desired GPT Predef Timer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00057.ReportRuntimeError</srcid><srcstatus/><internalId>92</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00057.GetPredefTimerValue</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00059</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
        (SRS_BSW_00344, SRS_BSW_00159, SRS_BSW_00167, SRS_BSW_00170, SRS_BSW_00398, SRS_BSW_00416,
        SRS_BSW_00437, SRS_BSW_00168, SRS_BSW_00423, SRS_BSW_00424, SRS_BSW_00425, SRS_BSW_00426,
        SRS_BSW_00427, SRS_BSW_00428, SRS_BSW_00429, SRS_BSW_00432, SRS_BSW_00433, SRS_BSW_00422,
        SRS_BSW_00417, SRS_BSW_00161, SRS_BSW_00162, SRS_BSW_00005, SRS_BSW_00415, SRS_BSW_00325,
        SRS_BSW_00342, SRS_BSW_00160, SRS_BSW_00007, SRS_BSW_00413, SRS_BSW_00347, SRS_BSW_00307,
        SRS_BSW_00373, SRS_BSW_00335, SRS_BSW_00353, SRS_BSW_00361, SRS_BSW_00328, SRS_BSW_00006,
        SRS_BSW_00439, SRS_BSW_00357, SRS_BSW_00377, SRS_BSW_00378, SRS_BSW_00306, SRS_BSW_00308,
        SRS_BSW_00309, SRS_BSW_00359, SRS_BSW_00360, SRS_BSW_00440, SRS_BSW_00330, SRS_BSW_00331,
        SRS_BSW_00009, SRS_BSW_00172, SRS_BSW_00010, SRS_BSW_00333, SRS_BSW_00321, SRS_BSW_00341,
        SRS_BSW_00334)
      </description>
      <comment>
        This requirement is informational only. No tests needed for missing requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        Det_ReportError | Det.h | Service to report development errors.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Det_ReportError</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        When an error occurs the corresponding Time Service function shall return without any action, 
        unless it is specified for the specific function differently / more in detail.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.SWS_Tm_00008</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00012</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00016</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00018</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00021</srcid><srcstatus/><internalId>28</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00037</srcid><srcstatus/><internalId>43</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00064</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00065</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>Tm.SWS_Tm_00066</srcid><srcstatus/><internalId>69</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_81</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_114</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_203</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_228</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_303</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_392</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_422</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_495</srcid><srcstatus/><internalId>172</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_584</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_609</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_681</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_770</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_795</srcid><srcstatus/><internalId>216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the underlying GPT driver service returns E_NOT_OK, the functions ResetTimer, GetTimeSpan 
        and BusyWait shall raise the error TM_E_HARDWARE_TIMER.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00064.1us16bit</srcid><srcstatus/><internalId>85</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00064.1us24bit</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00064.1us32bit</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00064.100us32bit</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        When an error is detected and the parameter TimeSpanPtr is not a null pointer, the GetTimeSpan 
        functions shall deliver the time span "0"
      </description>
      <comment>
        This is to achieve defined (repeatable) behavior on user software level, even if the
        return value (E_OK, E_NOT_OK) is not used.

        The verification for null pointer occurs when checking for det error, without det error
        reporting enabled this verification is not done.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_179</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_368</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_560</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_746</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        When an error is detected, the BusyWait functions shall return E_NOT_OK and shall abort "waiting" immediately.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us16bit</srcid><srcstatus/><internalId>73</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us24bit</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us32bit</srcid><srcstatus/><internalId>75</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>Tm.SWS_Tm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TimeService.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        Access to underlying hardware timer failed | TM_E_HARDWARE_TIMER | 0x03
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.4.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.ReportRuntimeError</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>Tm.EB_Ref.</idprefix>
      <source>EB Refinement</source>
    </defaults>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If TimerPtr pointer
        parameter is a null pointer, the GetTimeSpan functions shall raise the error
        TM_E_PARAM_POINTER and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_158</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_347</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_539</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_725</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If development error detection for the Time Service module is enabled: If TimeSpanPtr
        pointer parameter is a null pointer, the GetTimeSpan functions shall raise the error
        TM_E_PARAM_POINTER and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_158</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_347</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_539</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_725</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us16bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When an error is detected, the Tm_BusyWait1us16bit function shall return E_NOT_OK and shall abort "waiting" immediately.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_265</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_BUSYWAIT_ERROR_DETECTED</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us24bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When an error is detected, the Tm_BusyWait1us24bit function shall return E_NOT_OK and shall abort "waiting" immediately.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_457</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_BUSYWAIT_ERROR_DETECTED</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        When an error is detected, the Tm_BusyWait1us32bit function shall return E_NOT_OK and shall abort "waiting" immediately.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_644</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_BUSYWAIT_ERROR_DETECTED</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00026.1us16bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If "1us16bit" Predef Timer is enabled the following set of API services shall be
        available: Tm_ResetTimer1us16bit, Tm_GetTimeSpan1us16bit, Tm_ShiftTimer1us16bit,
        Tm_SyncTimer1us16bit.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_31</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_192</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US16BIT</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US16BIT</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00026.1us24bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If "1us24bit" Predef Timer is enabled the following set of API services shall be
        available: Tm_ResetTimer1us24bit, Tm_GetTimeSpan1us24bit, Tm_ShiftTimer1us24bit,
        Tm_SyncTimer1us24bit.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_39</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_290</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US24BIT</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00026.1us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If "1us32bit" Predef Timer is enabled the following set of API services shall be
        available: Tm_ResetTimer1us32bit, Tm_GetTimeSpan1us32bit, Tm_ShiftTimer1us32bit,
        Tm_SyncTimer1us32bit.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_47</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_387</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US32BIT</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US32BIT</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00026.100us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If "100us32bit" Predef Timer is enabled the following set of API services shall be
        available: Tm_ResetTimer100us32bit, Tm_GetTimeSpan100us32bit, Tm_ShiftTimer100us32bit,
        Tm_SyncTimer100us32bit.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_55</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_484</srcid><srcstatus/><internalId>104</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER100US32BIT</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER100US32BIT</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00027.1us16bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        For "1us16bit" Predef Timer enabled by configuration the API service Tm_BusyWait1us16bit shall be available.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_31</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_192</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US16BIT</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00027.1us24bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        For "1us24bit" Predef Timer enabled by configuration the API service Tm_BusyWait1us24bit shall be available.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_39</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_290</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00027.1us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        For "1us32bit" Predef Timer enabled by configuration the API service Tm_BusyWait1us32bit shall be available.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_47</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Tm.h_387</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US32BIT</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00028.ParamPointer</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The following error shall be detectable by the Time Service module depending on its build version (development / production):
        Type of error:      API parameter checking: invalid pointer
        Relevance:          Development
        Related error code: TM_E_PARAM_POINTER
        Value [hex]:        0x01
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Err_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00028.ParamValue</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        The following error shall be detectable by the Time Service module depending on its build version (development / production):
        Type of error:      API parameter checking: invalid value
        Relevance:          Development
        Related error code: TM_E_PARAM_VALUE
        Value [hex]:        0x02
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Err_TM_E_PARAM_VALUE</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00064.1us16bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the underlying GPT driver service returns E_NOT_OK, the functions Tm_ResetTimer1us16bit,
        Tm_GetTimeSpan1us16bit and Tm_BusyWait1us16bit shall raise the error TM_E_HARDWARE_TIMER.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_135</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_183</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_277</srcid><srcstatus/><internalId>142</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00064.1us24bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the underlying GPT driver service returns E_NOT_OK, the functions Tm_ResetTimer1us24bit,
        Tm_GetTimeSpan1us24bit and Tm_BusyWait1us24bit shall raise the error TM_E_HARDWARE_TIMER.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_324</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_372</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_469</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00064.1us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the underlying GPT driver service returns E_NOT_OK, the functions Tm_ResetTimer1us32bit,
        Tm_GetTimeSpan1us32bit and Tm_BusyWait1us32bit shall raise the error TM_E_HARDWARE_TIMER.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_516</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_564</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_656</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00064.100us32bit</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        If the underlying GPT driver service returns E_NOT_OK, the functions Tm_ResetTimer100us32bit,
        Tm_GetTimeSpan100us32bit and Tm_BusyWait100us32bit shall raise the error TM_E_HARDWARE_TIMER.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_702</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_750</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00031.Gpt</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Imported type:
        Module:         Gpt
        Header File:    Gpt.h
        Imported Type:  Gpt_PredefTimerType
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Gpt_PredefTimerType</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00031.Std_ReturnType</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Imported type:

        Module:         Std_Types
        Header File:    Std_Types.h
        Imported Type:  Std_ReturnType
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Std_ReturnType</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00031.Std_VersionInfoType</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Imported type:
        
        Module:         Std_Types
        Header File:    Std_Types.h
        Imported Type:  Std_VersionInfoType
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Std_VersionInfoType</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00057.ReportRuntimeError</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Interface which is required to fulfill the core functionality of the module:

        API function:   Det_ReportRuntimeError
        Header File:    Det.h
        Description:    Service to report runtime errors. If a callout has been configured then this callout shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Det_ReportRuntimeError</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>Tm.EB_Ref.SWS_Tm_00057.GetPredefTimerValue</id>
      <status>approved</status><source>EB Refinement</source>
      <version>1</version>
      <description>
        Interface which is required to fulfill the core functionality of the module:

        API function:   Gpt_GetPredefTimerValue
        Header File:    Gpt.h
        Description:    Delivers the current value of the desired GPT Predef Timer.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tm.swdd.Gpt_GetPredefTimerValue</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmVersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_47</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Tm_Cfg.h.m4_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/generate/include/Tm_Cfg.h.m4</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Tm.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Std_ReturnType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Std_VersionInfoType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm.h_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm.h</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm.h_290</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm.h</sourcefile>
      <sourceline>290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm.h_387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm.h</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm.h_484</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm.h</sourcefile>
      <sourceline>484</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/Tm_Types.h_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm_Types.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us16bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm_Types.h_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm_Types.h</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us24bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm_Types.h_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm_Types.h</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us32bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Tm_Types.h_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/include/Tm_Types.h</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.PredefTimer100us32bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Gpt_PredefTimerType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_GetPredefTimerValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Det_ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Det_ReportError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_69</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.CodeSection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Interface.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_118</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_183</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.BusyWaitInterrupts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_270</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_335</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>335</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_350</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_VALUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_414</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>414</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.BusyWaitInterrupts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_457</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_539</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>539</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_576</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_594</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_613</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>613</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_619</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>619</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_627</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.BusyWaitInterrupts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_671</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>671</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_681</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>681</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_685</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_725</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>725</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_762</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>762</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Tm.c.m4_805</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/src/Tm.c.m4</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Tm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.TmGeneral</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmVersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Tm.xdm.m4_181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/src/Autosar/config/Tm.xdm.m4</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>Tm.swdd.100us32Bit.Interface.GetTimeSpan</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>4959</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_GetTimeSpan100us32bit for getting the time difference between current time and reference time</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_713</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>Tm.swdd.100us32Bit.Interface.ResetTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>4976</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ResetTimer100us32bit to set a reference time from which relative measurements are derived</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_671</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>Tm.swdd.100us32Bit.Interface.ShiftTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>4993</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ShiftTimer100us32bit for shifting the time reference</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_762</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER100US32BIT</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>Tm.swdd.100us32Bit.Interface.SyncTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5010</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_SyncTimer100us32bit for synchronizing two timer instances</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_787</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER100US32BIT</srcid><srcstatus/><internalId>295</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us16Bit.Interface.BusyWait</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5027</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_BusyWait1us16bit for busy waiting by polling</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_247</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US16BIT</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us16Bit.Interface.GetTimeSpan</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5044</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_GetTimeSpan1us16bit for getting the time difference between current time and reference time</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_146</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us16Bit.Interface.ResetTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5061</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ResetTimer1us16bit to set a reference time from which relative measurements are derived</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_104</srcid><srcstatus/><internalId>116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us16Bit.Interface.ShiftTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5078</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ShiftTimer1us16bit for shifting the time reference</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_195</srcid><srcstatus/><internalId>129</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US16BIT</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us16Bit.Interface.SyncTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5095</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_SyncTimer1us16bit for synchronizing two timer instances</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_220</srcid><srcstatus/><internalId>133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER1US16BIT</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us24Bit.Interface.BusyWait</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5112</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_BusyWait1us24bit for busy waiting by polling</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_439</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us24Bit.Interface.GetTimeSpan</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5129</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_GetTimeSpan1us24bit for getting the time difference between current time and reference time</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_335</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us24Bit.Interface.ResetTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5146</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ResetTimer1us24bit to set a reference time from which relative measurements are derived.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_293</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us24Bit.Interface.ShiftTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5163</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ShiftTimer1us24bit for shifting the time reference</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_384</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us24Bit.Interface.SyncTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5180</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_SyncTimer1us24bit for synchronizing two timer instances</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_414</srcid><srcstatus/><internalId>161</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER1US24BIT</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us32Bit.Interface.BusyWait</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5197</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_BusyWait1us32bit for busy waiting by polling</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_626</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US32BIT</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us32Bit.Interface.GetTimeSpan</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5214</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_GetTimeSpan1us32bit for getting the time difference between current time and reference time</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_527</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us32Bit.Interface.ResetTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5231</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ResetTimer1us32bit to set a reference time from which relative measurements are derived</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_485</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us32Bit.Interface.ShiftTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5248</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_ShiftTimer1us32bit for shifting the time reference</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_576</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US32BIT</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>Tm.swdd.1us32Bit.Interface.SyncTimer</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5265</sourceline>
      <version>1</version>
      <description>The TM module shall provide the API Tm_SyncTimer1us32bit for synchronizing two timer instances</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_601</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER1US32BIT</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>Tm.swdd.BusyWaitInterrupts</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5282</sourceline>
      <version>1</version>
      <description>The TM module shall not disable interrupts while Busy Waiting, Busy waiting functions does not uses critical sections or atomic operations</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_248</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_440</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_627</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>Tm.swdd.BusyWaitReEntry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5298</sourceline>
      <version>1</version>
      <description>The BusyWait functions shall be re-entrant. No atomic operations are needed since value passed as a parameter is not a pointer</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_247</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_439</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_626</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_BUSYWAIT1US16BIT</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US24BIT</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>TS_TM_BUSYWAIT1US32BIT</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>Tm.swdd.CodeSection</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5315</sourceline>
      <version>1</version>
      <description>All functions shall be under TM_START_SEC_CODE section</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_69</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RTE_MEM_SECTION_TEST</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Det_ReportError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5326</sourceline>
      <version>1</version>
      <description>In case Det reporting is enabled and Tm module needs to report a development error, the Tm module shall call Det_ReportError</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_28</srcid><srcstatus/><internalId>111</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SYNCTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Det_ReportRuntimeError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5343</sourceline>
      <version>1</version>
      <description>In case Tm module is not able to retrieve the time from GPT module (via function: Gpt_GetPredefTimerValue) Tm module shall call Det_ReportRuntimeError</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_14</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00057.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Err_TM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5360</sourceline>
      <version>1</version>
      <description>In case the Tm module gets a pointer input parameter as NULL_PTR, the TM module shall report TM_E_PARAM_POINTER to the Det</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_85</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_118</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_161</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_207</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_234</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_307</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_350</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_396</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_426</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_499</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_542</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_588</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_613</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_685</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_728</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_774</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_799</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SYNCTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>302</internalId></linkedfrom><linkedfrom><srcid>TS_SHIFTTIMER_TM_E_PARAM_POINTER</srcid><srcstatus/><internalId>303</internalId></linkedfrom><linkedfrom><srcid>TS_TM_VERSIONINFOPTR_NULLPTR</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00028.ParamPointer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Err_TM_E_PARAM_VALUE</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5377</sourceline>
      <version>1</version>
      <description>In case function Tm_ShiftTimer1us24bit gets an input parameter TimeValue larger than 0xFFFFFF Det error shall be reported with Det error id TM_E_PARAM_VALUE</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_401</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_SHIFTTIMER_TM_E_PARAM_VALUE</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00028.ParamValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>Tm.swdd.GetTmeSpanFunctionReEntry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5394</sourceline>
      <version>1</version>
      <description>The TM module shall assure that GetTimeSpan functions output data is consistent, this is assured by using atomic assign operation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_174</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_363</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_555</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_741</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN100US32BIT</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Gpt_GetPredefTimerValue</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5411</sourceline>
      <version>1</version>
      <description>The TM module shall call Gpt_GetPredefTimerValue in order to get the current time</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_11</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00057.GetPredefTimerValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Gpt_PredefTimerType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5428</sourceline>
      <version>1</version>
      <description>The TM module shall include Gpt.h in order to use Gpt_PredefTimerType needed by Gpt_GetPredefTimerValue</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_11</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00031.Gpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Interface.GetVersionInfo</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5445</sourceline>
      <version>1</version>
      <description>Cdd shall use function Tm_GetVersionInfo to retrieve module version info</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_74</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GET_VERSION_INFO</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmDevErrorDetect</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5462</sourceline>
      <version>1</version>
      <description>In case parameter TmDevErrorDetect is set to true, Tm module shall report development errors</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_15</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_60</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5479</sourceline>
      <version>1</version>
      <description>In case parameter TmEnablePredefTimer100us32bit is set to true, 100uS 32 bit functions shall be available</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_55</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_181</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5496</sourceline>
      <version>1</version>
      <description>In case parameter TmEnablePredefTimer1us16bit is set to true, 1uS 16 bit functions shall be available</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_31</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_115</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5513</sourceline>
      <version>1</version>
      <description>In case parameter TmEnablePredefTimer1us24bit is set to true, 1uS 24 bit functions shall be available</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_39</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_137</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5530</sourceline>
      <version>1</version>
      <description>In case parameter TmEnablePredefTimer1us32bit is set to true, 1uS 32 bit functions shall be available</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_47</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_159</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Parameter.TmVersionInfoApi</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5547</sourceline>
      <version>1</version>
      <description>In case parameter TmVersionInfoApi is set to true, function Tm_GetVersionInfo shall be available</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Tm_Cfg.h.m4_23</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_93</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Tm_00001</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>TS_Tm_00002</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>Tm.swdd.PointerClass</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5564</sourceline>
      <version>1</version>
      <description>All pointers passed to Tm functions shall have pointer class TM_APPL_DATA</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_74</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_104</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_146</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_195</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_220</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_293</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_335</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_384</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_414</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_485</srcid><srcstatus/><internalId>171</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_527</srcid><srcstatus/><internalId>177</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_576</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_601</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_671</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_713</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_762</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_787</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RTE_MEM_SECTION_TEST</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>Tm.swdd.PredefTimer100us32bitType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5575</sourceline>
      <version>1</version>
      <description>The TM module shall provide define structure Tm_PredefTimer100us32bitType for 32 bit 100uS operations. The structure has a single field TimeValue which has the type uint32</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm_Types.h_62</srcid><srcstatus/><internalId>108</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>Tm.swdd.PredefTimer1us16bitType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5592</sourceline>
      <version>1</version>
      <description>The TM module shall provide define structure Tm_PredefTimer1us16bitType for 16 bit operations. The structure has a single field TimeValue which has the type uint16</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm_Types.h_20</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>Tm.swdd.PredefTimer1us24bitType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5609</sourceline>
      <version>1</version>
      <description>The TM module shall provide define structure Tm_PredefTimer1us24bitType for 24 bit operations. The structure has a single field TimeValue which has the type uint32</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm_Types.h_34</srcid><srcstatus/><internalId>106</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>Tm.swdd.PredefTimer1us32bitType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5626</sourceline>
      <version>1</version>
      <description>The TM module shall provide define structure Tm_PredefTimer1us32bitType for 32 bit 1uS operations. The structure has a single field TimeValue which has the type uint32</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm_Types.h_48</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>Tm.swdd.ReportRuntimeError</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5643</sourceline>
      <version>1</version>
      <description>In case Tm module calls function Gpt_GetPredefTimerValue and function returns anything else than E_OK, runtime error shall be reported with error id TM_E_HARDWARE_TIMER</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_135</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_183</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_277</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_324</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_372</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_469</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_516</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_564</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_656</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_702</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_750</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>Tm.swdd.ResetFunctionReEntry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5660</sourceline>
      <version>1</version>
      <description>The TM module shall assure that ResetTimer functions output data is consistent, this is assured by using atomic assign operation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_129</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_318</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_510</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_696</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_RESETTIMER1US16BIT</srcid><srcstatus/><internalId>280</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US24BIT</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER1US32BIT</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>TS_TM_RESETTIMER100US32BIT</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>Tm.swdd.ShiftTimerFunctionReEntry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5677</sourceline>
      <version>1</version>
      <description>The TM module shall assure that ShiftTimer functions output data is consistent this is assured by using atomic assign operation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_213</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_407</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_594</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_780</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SHIFTTIMER1US16BIT</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US24BIT</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER1US32BIT</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SHIFTTIMER100US32BIT</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Std_ReturnType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5694</sourceline>
      <version>1</version>
      <description>The TM module shall use StandardTypes.h in order to use Std_ReturnType</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm.h_8</srcid><srcstatus/><internalId>100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GETTIMESPAN1US16BIT</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US24BIT</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>TS_TM_GETTIMESPAN1US32BIT</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00031.Std_ReturnType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Std_VersionInfoType</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5711</sourceline>
      <version>1</version>
      <description>The TM module shall StandardTypes.h in order to use Std_VersionInfoType</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Tm.h_8</srcid><srcstatus/><internalId>100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_GET_VERSION_INFO</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00031.Std_VersionInfoType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>Tm.swdd.SyncTimerFunctionReEntry</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5728</sourceline>
      <version>1</version>
      <description>The TM module shall assure that SyncTimer functions output data is consistent this is assured by using atomic assign operation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_240</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_432</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_619</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Tm.c.m4_805</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_TM_SYNCTIMER1US16BIT</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US24BIT</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER1US32BIT</srcid><srcstatus/><internalId>294</internalId></linkedfrom><linkedfrom><srcid>TS_TM_SYNCTIMER100US32BIT</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>Tm.swdd.Tm</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5745</sourceline>
      <version>1</version>
      <description>Tm module shall contains the TmGeneral container.
</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_18</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>Tm.swdd.TmGeneral</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/doc/project/design/pdf/Tm_Design-profiled.xml</sourcefile>
      <sourceline>5762</sourceline>
      <version>1</version>
      <description>All Tm modules configuration parameters shall be placed under TmGeneral container</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Tm.xdm.m4_54</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Tm.ECUC_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Tm_00001</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Compile/IN/Tm_ComTest_1/source/application/test_config.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the development error detection and notification;
    Verify the Predef Timer 100μs32bit(functionality);
    Verify the Predef Timer 1μs16bit(functionality);
    Verify the Predef Timer 1μs24bit(functionality);
    Verify the Predef Timer 1μs32bit(functionality);
    Verify the service Tm_GetVersionInfo().
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "TmDevErrorDetect" is set to 'false'
      - "TmEnablePredefTimer100us32bit" is set to 'false'
      - "TmEnablePredefTimer1us16bit" is set to 'true'
      - "TmEnablePredefTimer1us24bit" is set to 'false'
      - "TmEnablePredefTimer1us32bit" is set to 'false'
      - "TmVersionInfoApi" is set to 'false'
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmVersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_Tm_00002</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Compile/IN/Tm_ComTest_2/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify the development error detection and notification;
    Verify the Predef Timer 100μs32bit(functionality);
    Verify the Predef Timer 1μs16bit(functionality);
    Verify the Predef Timer 1μs24bit(functionality);
    Verify the Predef Timer 1μs32bit(functionality);
    Verify the service Tm_GetVersionInfo().
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "TmDevErrorDetect" is set to 'true'
      - "TmEnablePredefTimer100us32bit" is set to 'true'
      - "TmEnablePredefTimer1us16bit" is set to 'false'
      - "TmEnablePredefTimer1us24bit" is set to 'true'
      - "TmEnablePredefTimer1us32bit" is set to 'true'
      - "TmVersionInfoApi" is set to 'true'
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmEnablePredefTimer1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Parameter.TmVersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_TM_RTE_MEM_SECTION_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Compile/IN/Tm_ComTest_3_Rte/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that SWCDs are generated without error when all configuration parameters
    are enabled and all APIs are called.
  
Test Object: 
  
Test Precondition: 
    TM_VERSION_INFO_API shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_GetVersionInfo();

    02: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ResetTimer1us16bit();
    03: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_GetTimeSpan1us16bit();
    04: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ShiftTimer1us16bit();
    05: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_SyncTimer1us16bit();
    06: VP (Tm.swdd.CodeSection): - Call function Tm_BusyWait1us16bit();

    07: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ResetTimer1us24bit();
    08: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_GetTimeSpan1us24bit();
    09: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ShiftTimer1us24bit();
    10: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_SyncTimer1us24bit();
    11: VP (Tm.swdd.CodeSection): - Call function Tm_BusyWait1us24bit();

    12: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ResetTimer1us32bit();
    13: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_GetTimeSpan1us32bit();
    14: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ShiftTimer1us32bit();
    15: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_SyncTimer1us32bit();
    16: VP (Tm.swdd.CodeSection): - Call function Tm_BusyWait1us32bit();

    17: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ResetTimer100us32bit();
    18: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_GetTimeSpan100us32bit();
    19: VP (Tm.swdd.PointerClass, Tm.swdd.CodeSection): - Call function Tm_ShiftTimer100us32bit();
    20: VP (Tm.swdd.CodeSection): - Call function Tm_SyncTimer100us32bit();
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.PointerClass</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.CodeSection</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_TM_GET_VERSION_INFO</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_GetVersionInfo() functionality
Test Description: 
    Check if Tm_GetVersionInfo() works as intended.
    Function Tm_GetVersionInfo() should return the version information of this module.
    Function Tm_GetVersionInfo() is reentrant.
  
Test Object: 
    Tm_GetVersionInfo()
  
Test Precondition: 
    TM_VERSION_INFO_API shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Interface.GetVersionInfo):
        - Call function Tm_GetVersionInfo();
    02: VP (Tm.swdd.Interface.GetVersionInfo, Tm.swdd.Std_VersionInfoType):
        - Check that function Tm_GetVersionInfo() returns the version information of Tm module;
    03: Enable reentrancy by setting the DBG_TM_GETVERSIONINFO_ENTRY macro to call
        Tm_GetVersionInfo() function at least two times one by one;
    04: VP (Tm.swdd.Interface.GetVersionInfo):
        - Call function Tm_GetVersionInfo();
        - Check that the returned version for each call is the same as module version;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Interface.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Std_VersionInfoType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>TS_TM_RESETTIMER1US16BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ResetTimer1us16bit() functionality
Test Description: 
    Check if Tm_ResetTimer1us16bit() works as intended.
    Function Tm_ResetTimer1us16bit() should reset a timer instance (user point of view).
    Check if function Tm_ResetTimer1us16bit() is called with different local time values.
    The function Tm_ResetTimer1us16bit() is reentrant but not for the same timer instance.
  
Test Object: 
    Tm_ResetTimer1us16bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00002):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the local time value to 0;
    02: VP (Tm.swdd.1us16Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us16bit, Tm.swdd.PredefTimer1us16bitType,
            Tm.SWS_Tm_00006, Tm.SWS_Tm_00002):
        - Call function Tm_ResetTimer1us16bit();
        - Check if call to Tm_ResetTimer1us16bit() sets the local time value to 0;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_16BIT;
    03: VP (Tm.SWS_Tm_00002):
        - Set the local time value to a value &gt; 0;
    04: VP (Tm.swdd.1us16Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us16bit, Tm.swdd.PredefTimer1us16bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us16bit();
        - Check if call to Tm_ResetTimer1us16bit() sets the local time value
          to value set in VP of step 03;
    05: VP (Tm.SWS_Tm_00002):
        - Set the local time value equal with max value;
    06: VP (Tm.swdd.1us16Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us16bit, Tm.swdd.PredefTimer1us16bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us16bit();
        - Check if call to Tm_ResetTimer1us16bit() sets the local time value
          to value set in VP of step 05;
    07: VP (Tm.SWS_Tm_00002):
        - Enable reentrancy by setting the DBG_TM_RESETTIMER1US16BIT_ENTRY macro to call
          Tm_ResetTimer1us16bit() at least two more times;
        - Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
          different values (ex 0x1AA1U, 0x2AA2U, 0x3AA3U, 0x4AA4U);
    08: VP (Tm.swdd.ResetFunctionReEntry):
        - Call Tm_ResetTimer1us16bit();
        - Check that after call of Tm_ResetTimer1us16bit(), is delivered each timer value referred
          in VP of step 7(0x1AA1U, 0x2AA2U, 0x3AA3U, 0x4AA4U).
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer set to not ok;
        Set the reference time value to a value &gt; 0;
        Set the local time value to a value different then the reference time;
    10: VP (Tm.SWS_Tm_00063):
        - Call function Tm_ResetTimer1us16bit()
        - Check that the reference time value didn't change (remain the value set in step 09).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us16bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>TS_TM_RESETTIMER1US24BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>331</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ResetTimer1us24bit() functionality
Test Description: 
    Check if Tm_ResetTimer1us24bit() works as intended.
    Function Tm_ResetTimer1us24bit() should reset a timer instance (user point of view).
    Check if function Tm_ResetTimer1us24bit() is called with different local time values.
    The function Tm_ResetTimer1us24bit() is reentrant but not for the same timer instance.
  
Test Object: 
    Tm_ResetTimer1us24bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the local time value to 0;
    02: VP (Tm.swdd.1us24Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us24bit, Tm.swdd.PredefTimer1us24bitType,
            Tm.SWS_Tm_00006, Tm.SWS_Tm_00003):
        - Call function Tm_ResetTimer1us24bit();
        - Check if call to Tm_ResetTimer1us24bit() sets the local time value to 0;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_24BIT;
    03: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local time value to a value &gt; 0;
    04: VP (Tm.swdd.1us24Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us24bit, Tm.swdd.PredefTimer1us24bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us24bit();
        - Check if call to Tm_ResetTimer1us24bit() sets the local time value
          to value set in VP of step 03;
    05: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local time value equal with max value;
    06: VP (Tm.swdd.1us24Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us24bit, Tm.swdd.PredefTimer1us24bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us24bit();
        - Check if call to Tm_ResetTimer1us24bit() sets the local time value
          to value set in VP of step 05;
    07: VP (Tm.SWS_Tm_00001):
        - Enable reentrancy by setting the DBG_TM_RESETTIMER1US24BIT_ENTRY macro to call
          Tm_ResetTimer1us24bit() at least two more times;
        - Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
          different values (ex 0x1BB1BBUL, 0x2BB2BBUL, 0x3BB3BBUL, 0x4BB4BBUL);
    08: VP (Tm.swdd.ResetFunctionReEntry):
        - Call Tm_ResetTimer1us24bit();
        - Check that after call of Tm_ResetTimer1us24bit(), is delivered each timer value referred
          in VP of step 7(0x1BB1BBUL, 0x2BB2BBUL, 0x3BB3BBUL, 0x4BB4BBUL).
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer set to not ok;
        Set the reference time value to a value &gt; 0;
        Set the local time value to a value different then the reference time;
    10: VP (Tm.SWS_Tm_00063):
        - Call function Tm_ResetTimer1us24bit()
        - Check that the reference time value didn't change (remain the value set in step 09).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us24bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>TS_TM_RESETTIMER1US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ResetTimer1us32bit() functionality
Test Description: 
    Check if Tm_ResetTimer1us32bit() works as intended.
    Function Tm_ResetTimer1us32bit() should reset a timer instance (user point of view).
    Check if function Tm_ResetTimer1us32bit() is called with different local time values.
    The function Tm_ResetTimer1us32bit() is reentrant but not for the same timer instance.
  
Test Object: 
    Tm_ResetTimer1us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00004):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the local time value to 0;
    02: VP (Tm.swdd.1us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us32bit, Tm.swdd.PredefTimer1us32bitType,
            Tm.SWS_Tm_00006, Tm.SWS_Tm_00004):
        - Call function Tm_ResetTimer1us32bit();
        - Check if call to Tm_ResetTimer1us32bit() sets the local time value to 0;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_32BIT;
    03: VP (Tm.SWS_Tm_00004):
        - Set the local time value to a value &gt; 0;
    04: VP (Tm.swdd.1us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us32bit, Tm.swdd.PredefTimer1us32bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us32bit();
        - Check if call to Tm_ResetTimer1us32bit() sets the local time value
          to value set in VP of step 03;
    05: VP (Tm.SWS_Tm_00004):
        - Set the local time value equal with max value;
    06: VP (Tm.swdd.1us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.1us32bit, Tm.swdd.PredefTimer1us32bitType,
            Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer1us32bit();
        - Check if call to Tm_ResetTimer1us32bit() sets the local time value
          to value set in VP of step 05;
    07: VP (Tm.SWS_Tm_00004):
        - Enable reentrancy by setting the DBG_TM_RESETTIMER1US32BIT_ENTRY macro to call
          Tm_ResetTimer1us32bit() at least two more times;
        - Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
          different values (ex 0x1CC1CC1CUL, 0x2CC2CC2CUL, 0x3CC3CC3CUL, 0x4CC4CC4CUL);
    08: VP (Tm.swdd.ResetFunctionReEntry):
        - Call Tm_ResetTimer1us32bit();
        - Check that after call of Tm_ResetTimer1us32bit(), is delivered each timer value referred
          in VP of step 7(0x1CC1CC1CUL, 0x2CC2CC2CUL, 0x3CC3CC3CUL, 0x4CC4CC4CUL).
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer set to not ok;
        Set the reference time value to a value &gt; 0;
        Set the local time value to a value different then the reference time;
    10: VP (Tm.SWS_Tm_00063):
        - Call function Tm_ResetTimer1us32bit()
        - Check that the reference time value didn't change (remain the value set in step 09).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PredefTimer1us32bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>TS_TM_RESETTIMER100US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ResetTimer100us32bit() functionality
Test Description: 
    Check if Tm_ResetTimer100us32bit() works as intended.
    Function Tm_ResetTimer100us32bit() should reset a timer instance (user point of view).
    Check if function Tm_ResetTimer100us32bit() is called with different local time values.
    The function Tm_ResetTimer100us32bit() is reentrant but not for the same timer instance.
  
Test Object: 
    Tm_ResetTimer100us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00005):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the local time value to 0;
    02: VP (Tm.swdd.100us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.100us32bit,
            Tm.swdd.PredefTimer100us32bitType, Tm.SWS_Tm_00006, Tm.SWS_Tm_00005):
        - Call function Tm_ResetTimer100us32bit();
        - Check if call to Tm_ResetTimer100us32bit() sets the local time value to 0;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_100US_32BIT;
    03: VP (Tm.SWS_Tm_00005):
        - Set the local time value to a value &gt; 0;
    04: VP (Tm.swdd.100us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.100us32bit,
            Tm.swdd.PredefTimer100us32bitType, Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer100us32bit();
        - Check if call to Tm_ResetTimer100us32bit() sets the local time value
          to value set in VP of step 03;
    05: VP (Tm.SWS_Tm_00005):
        - Set the local time value equal with max value;
    06: VP (Tm.swdd.100us32Bit.Interface.ResetTimer, Tm.EB_Ref.SWS_Tm_00026.100us32bit,
            Tm.swdd.PredefTimer100us32bitType, Tm.SWS_Tm_00006):
        - Call function Tm_ResetTimer100us32bit();
        - Check if call to Tm_ResetTimer100us32bit() sets the local time value
          to value set in VP of step 05;
    07: VP (Tm.SWS_Tm_00005):
        - Enable reentrancy by setting the DBG_TM_RESETTIMER100US32BIT_ENTRY macro to call
          PredefTimer100us32bitType() at least two more times;
        - Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
          different values (ex 0x1DD1DD1DUL, 0x2DD2DD2DUL, 0x3DD3DD3DUL, 0x4DD4DD4DUL);
    08: VP (Tm.swdd.ResetFunctionReEntry):
        - Call Tm_ResetTimer100us32bit();
        - Check that after call of Tm_ResetTimer100us32bit(), is delivered each timer value
          referred in VP of step 7(0x1DD1DD1DUL, 0x2DD2DD2DUL, 0x3DD3DD3DUL, 0x4DD4DD4DUL);
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer set to not ok;
        Set the reference time value to a value &gt; 0;
        Set the local time value to a value different then the reference time;
    10: VP (Tm.SWS_Tm_00063):
        - Call function Tm_ResetTimer100us32bit()
        - Check that the reference time value didn't change (remain the value set in step 09).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ResetFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.PredefTimer100us32bitType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>TS_TM_GETTIMESPAN1US16BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_GetTimeSpan1us16bit() functionality
Test Description: 
    Check if Tm_GetTimeSpan1us16bit() works as intended.
    Function Tm_GetTimeSpan1us16bit() shall deliver the time difference
    (current time - reference time).
    Check if function Tm_GetTimeSpan1us16bit() return time difference between current time and
    reference time when different values are used.
  
Test Object: 
    Tm_GetTimeSpan1us16bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Gpt_GetPredefTimerValue, Tm.swdd.Gpt_PredefTimerType, Tm.swdd.Std_ReturnType):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
    02: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to 0;
    03: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 02) - (simulated hardware time value set in VP from step 02));
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_16BIT;
    04: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to a value &gt; 0;
        simulated hardware time value should be set &lt; local reference timer time value;
    05: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 04) - (simulated hardware time value set in VP from step 04));
    06: Set the local reference time value to max value;
        Set the simulated hardware time value to a value &gt; 0;
    07: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 06) - (simulated hardware time value set in VP from step 06));
    08: Set the local reference time value to 0;
        Set the simulated hardware time value to max value;
    09: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 08) - (simulated hardware time value set in VP from step 08));
    10: Set the local reference time value to max value;
        Set the simulated hardware time value to 0;
    11: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 10) - (simulated hardware time value set in VP from step 10));
    12: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to max value;
    13: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 12) - (simulated hardware time value set in VP from step 12));
    14: Set the local reference time value to a value &gt; 0;
        - Set the simulated hardware time value to a value &gt; 0;
        simulated hardware time value should be set &gt; local reference timer time value;
    15: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 14) - (simulated hardware time value set in VP from step 14));
    16: Set the local reference time value to null pointer (shall be considered = 0);
        Set the simulated hardware time value to a value &gt; 0;
    17: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00065, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that call of Tm_GetTimeSpan1us16bit() returns value of ((local reference time set
        in VP from step 16) - (simulated hardware time value set in VP from step 16));
    18: Enable reentrancy by setting the DBG_TM_RESETTIMER1US16BIT_ENTRY macro to call
        Tm_GetTimeSpan1us16bit() at least three more times;
        Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
        four different local reference time values (ex 0x1AA1U, 0x2AA2U, 0x3AA3U, 0x4AA4U);
        Set the simulated hardware time value &gt; 0 (ex 0x1000UL);
    19: VP (Tm.swdd.GetTmeSpanFunctionReEntry):
        - Call Tm_GetTimeSpan1us16bit();
        - Check that after call of Tm_GetTimeSpan1us16bit(), is delivered the value of
        ((local reference time set in VP from step 18) - (simulated hardware time values set in VP from step 18));
        ex (((0x1AA1U, 0x2AA2U, 0x3AA3U, 0x4AA4U) - (0x1000UL)) = (0xAA1UL, 0x1AA2UL, 0x2AA3UL, 0x3AA4UL));
    20: Set the local reference time value to a value &gt; 0;
    21: VP (Tm.SWS_Tm_00063):
        - Call function Tm_GetTimeSpan1us16bit() with a valid timer parameter and a null
        timespan parameter;
        - Check that the reference time didn't change (remain the value set in step 20).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_GetPredefTimerValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_PredefTimerType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Std_ReturnType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>TS_TM_GETTIMESPAN1US24BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>999</sourceline>
      <version>1</version>
      <description>Test Synopsis: To test Tm_GetTimeSpan1us24bit() functionality
Test Description: 
    Check if Tm_GetTimeSpan1us24bit() works as intended.
    Function Tm_GetTimeSpan1us24bit() shall deliver the time difference
    (current time - reference time).
    Check if function Tm_GetTimeSpan1us24bit() return time difference between current time and
    reference time when different values are used.
  
Test Object: 
    Tm_GetTimeSpan1us24bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Gpt_GetPredefTimerValue, Tm.swdd.Gpt_PredefTimerType, Tm.swdd.Std_ReturnType,
            Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
    02: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):Set the local reference time value to a value &gt; 0;
        - Set the local reference time value to a value &gt; 0;
        - Set the simulated hardware time value to 0;
    03: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit,
            Tm.SWS_Tm_00003):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 02) - (simulated hardware time value set in VP from step 02));
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_24BIT;
    04: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to a value &gt; 0;
        - Set the simulated hardware time value to a value &gt; 0;
        - simulated hardware time value should be set &lt; local reference timer time value;
    05: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 04) - (simulated hardware time value set in VP from step 04));
    06: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to max value;
        - Set the simulated hardware time value to a value &gt; 0;
    07: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 06) - (simulated hardware time value set in VP from step 06));
    08: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to 0;
        - Set the simulated hardware time value to max value;
    09: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 08) - (simulated hardware time value set in VP from step 08));
    10: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to max value;
        - Set the simulated hardware time value to 0;
    11: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 10) - (simulated hardware time value set in VP from step 10));
    12: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to a value &gt; 0;
        - Set the simulated hardware time value to max value;
    13: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 12) - (simulated hardware time value set in VP from step 12));
    14: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to a value &gt; 0;
        - Set the simulated hardware time value to a value &gt; 0. simulated hardware time value
        should be set &gt; local reference timer time value;
    15: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 14) - (simulated hardware time value set in VP from step 14));
    16: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Set the local reference time value to null pointer (shall be considered = 0);
        - Set the simulated hardware time value to a value &gt; 0;
    17: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00065, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that call of Tm_GetTimeSpan1us24bit() returns value of ((local reference time set
        in VP from step 16) - (simulated hardware time value set in VP from step 16));
    18: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Enable reentrancy by setting the DBG_TM_RESETTIMER1US24BIT_ENTRY macro to call
          Tm_GetTimeSpan1us24bit() at least three more times;
        - Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
          four different local reference time values (ex 0x1BB1BBUL, 0x2BB2BBUL, 0x3BB3BBUL, 0x4BB4BBUL );
        - Set the simulated hardware time value &gt; 0 (ex 0x100UL);
    19: VP (Tm.swdd.GetTmeSpanFunctionReEntry):
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that after call of Tm_GetTimeSpan1us24bit(), is delivered the value of
        ((local reference time set in VP from step 18) - (simulated hardware time values set in VP from step 18));
        ex (((0x1BB1BBUL, 0x2BB2BBUL, 0x3BB3BBUL, 0x4BB4BBUL ) - (0x100UL)) = (0x1BB0BBUL, 0x2BB1BBUL, 0x3BB2BBUL, 0x4BB3BBUL));
    20: Set the local reference time value to a value &gt; 0;
    21: VP (Tm.SWS_Tm_00063):
        - Call function Tm_GetTimeSpan1us24bit() with a valid timer parameter and a null
        timespan parameter;
        - Check that the reference time didn't change (remain the value set in step 20).
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_GetPredefTimerValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_PredefTimerType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Std_ReturnType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>TS_TM_GETTIMESPAN1US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>1246</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_GetTimeSpan1us32bit() functionality
Test Description: 
    Check if Tm_GetTimeSpan1us32bit() works as intended.
    Function Tm_GetTimeSpan1us32bit() shall deliver the time difference
    (current time - reference time).
    Check if function Tm_GetTimeSpan1us32bit() return time difference between current time and
    reference time when different values are used.
  
Test Object: 
    Tm_GetTimeSpan1us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Gpt_GetPredefTimerValue, Tm.swdd.Gpt_PredefTimerType, Tm.swdd.Std_ReturnType):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
    02: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to 0;
    03: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 02) - (simulated hardware time value set in VP from step 02));
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_32BIT;
    04: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to a value &gt; 0. simulated hardware time value
        should be set &lt; local reference timer time value;
    05: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 04) - (simulated hardware time value set in VP from step 04));
    06: Set the local reference time value to max value;
        Set the simulated hardware time value to a value &gt; 0;
    07: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 06) - (simulated hardware time value set in VP from step 06));
    08: Set the local reference time value to 0;
        Set the simulated hardware time value to max value;
    09: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 08) - (simulated hardware time value set in VP from step 08));
    10: Set the local reference time value to max value;
        Set the simulated hardware time value to 0;
    11: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 10) - (simulated hardware time value set in VP from step 10));
    12: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to max value;
    13: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 12) - (simulated hardware time value set in VP from step 12));
    14: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to a value &gt; 0. simulated hardware time value
        should be set &gt; local reference timer time value;
    15: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 14) - (simulated hardware time value set in VP from step 14));
    16: Set the local reference time value to null pointer (shall be considered = 0);
        Set the simulated hardware time value to a value &gt; 0;
    17: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00065, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that call of Tm_GetTimeSpan1us32bit() returns value of ((local reference time set
        in VP from step 16) - (simulated hardware time value set in VP from step 16));
    18: Enable reentrancy by setting the DBG_TM_RESETTIMER1US32BIT_ENTRY macro to call
        Tm_GetTimeSpan1us32bit() at least three more times;
        Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
        four different local reference time values
        (ex 0x1CC1CC1CUL, 0x2CC2CC2CUL, 0x3CC3CC3CUL, 0x4CC4CC4CUL );
        Set the simulated hardware time value &gt; 0 (ex 0x10000UL );
    19: VP (Tm.swdd.GetTmeSpanFunctionReEntry):
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that after call of Tm_GetTimeSpan1us32bit(), is delivered the value of
        ((local reference time set in VP from step 18) - (simulated hardware time values set in VP from step 18));
        ex (((0x1CC1CC1CUL, 0x2CC2CC2CUL, 0x3CC3CC3CUL, 0x4CC4CC4CUL ) - (0x10000UL )) =
            = (0x1CC0CC1CUL, 0x2CC1CC2CUL, 0x3CC2CC3CUL, 0x4CC3CC4CUL)).
    20: Set the local reference time value to a value &gt; 0;
    21: VP (Tm.SWS_Tm_00063):
        - Call function Tm_GetTimeSpan1us32bit() with a valid timer parameter and a null
        timespan parameter;
        - Check that the reference time didn't change (remain the value set in step 20).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_GetPredefTimerValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Gpt_PredefTimerType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Std_ReturnType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>TS_TM_GETTIMESPAN100US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>1480</sourceline>
      <version>1</version>
      <description>Test Synopsis: To test Tm_GetTimeSpan100us32bit() functionality
Test Description: 
    Check if Tm_GetTimeSpan100us32bit() works as intended.
    Function Tm_GetTimeSpan100us32bit() shall deliver the time difference
    (current time - reference time).
    Check if function Tm_GetTimeSpan100us32bit() return time difference between current time and
    reference time when different values are used.
  
Test Object: 
    Tm_GetTimeSpan100us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
    02: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to 0;
    03: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 02) - (simulated hardware time value set in VP from step 02));
        - Check that the predeftimer used is GPT_PREDEF_TIMER_100US_32BIT;
    04: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to a value &gt; 0. simulated hardware time value
        should be set &lt; local reference timer time value;
    05: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 04) - (simulated hardware time value set in VP from step 04));
    06: Set the local reference time value to max value;
        Set the simulated hardware time value to a value &gt; 0;
    07: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 06) - (simulated hardware time value set in VP from step 06));
    08: Set the local reference time value to 0;
        Set the simulated hardware time value to max value;
    09: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 08) - (simulated hardware time value set in VP from step 08));
    10: Set the local reference time value to max value;
        Set the simulated hardware time value to 0;
    11: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00010, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 10) - (simulated hardware time value set in VP from step 10));
    12: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to max value;
    13: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
         - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 12) - (simulated hardware time value set in VP from step 12));
    14: Set the local reference time value to a value &gt; 0;
        Set the simulated hardware time value to a value &gt; 0. simulated hardware time value
        should be set &gt; local reference timer time value;
    15: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 14) - (simulated hardware time value set in VP from step 14));
    16: Set the local reference time value to null pointer (shall be considered = 0);
        Set the simulated hardware time value to a value &gt; 0;
    17: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan, Tm.SWS_Tm_00065, Tm.SWS_Tm_00009, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that call of Tm_GetTimeSpan100us32bit() returns value of ((local reference time set
        in VP from step 16) - (simulated hardware time value set in VP from step 16));
    18: Enable reentrancy by setting the DBG_TM_RESETTIMER100US32BIT_ENTRY macro to call
        Tm_GetTimeSpan100us32bit() at least three more times;
        Set the Gpt_GetPredefTimerValue stub function to return, in order for reentry,
        four different local reference time values
        (ex 0x1DD1DD1DUL, 0x2DD2DD2DUL, 0x3DD3DD3DUL, 0x4DD4DD4DUL);
        Set the simulated hardware time value &gt; 0 (ex 0x10UL);
    19: VP (Tm.swdd.GetTmeSpanFunctionReEntry):
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that after call of Tm_GetTimeSpan100us32bit(), is delivered the value of
        ((local reference time set in VP from step 18) - (simulated hardware time values set in VP from step 18));
        ex (((0x1DD1DD1DUL, 0x2DD2DD2DUL, 0x3DD3DD3DUL, 0x4DD4DD4DUL) - (0x10UL)) =
            = (0x1DD1DD0DUL, 0x2DD2DD1DUL, 0x3DD3DD2DUL, 0x4DD4DD3DUL));
    20: Set the local reference time value to a value &gt; 0;
    21: VP (Tm.SWS_Tm_00063):
        - Call function Tm_GetTimeSpan100us32bit() with a valid timer parameter and a null
        timespan parameter;
        - Check that the reference time didn't change (remain the value set in step 20).
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.GetTmeSpanFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>TS_TM_SHIFTTIMER1US16BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>1710</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ShiftTimer1us16bit() functionality
Test Description: 
    Check if Tm_ShiftTimer1us16bit() works as intended.
    Function Tm_ShiftTimer1us16bit() shall shift the reference time of the timer instance.
    Check if Tm_ShiftTimer1us16bit() shift the reference time of the timer instance with different
    values.
  
Test Object: 
    Tm_ShiftTimer1us16bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the local reference time value to 0;
        Set the time shift value to 0;
    02: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value 0 and represents value of local
        reference time shifted with time shift value;
    03: Set the local reference time value to 0;
        Set the time shift value to a value &gt; 0;
    04: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of time shift set in VP of step
        03, and represents value of local reference time shifted with time shift value;
    05: Set the local reference time value to 0;
        Set the time shift value to max value;
    06: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of time shift set in VP of step
        05, and represents value of local reference time shifted with time shift value;
    07: Set the local reference time value to a value &gt; 0;
        Set the time shift value to 0;
    08: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of local reference time set in VP
        of step 07, and represents value of local reference time shifted with time shift value;
    09: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &lt;= max value;
    10: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of local reference time shifted
        with time shift value;
    11: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &gt; max value;
    12: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of local reference time shifted
        with time shift value;
    13: Set the local reference time value to a value &gt; 0;
        Set the time shift value to max value;
    14: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return (value of local reference time set in VP
        of step 13) - 1, and represents value of local reference time shifted with time shift value;
    15: Set the local reference time value to max value;
        Set the time shift value to 0;
    16: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value of local reference time set in VP
        of step 15, and represents value of local reference time shifted with time shift value;
    17: Set the local reference time value to max value;
        Set the time shift value to a value &gt; 0;
    18: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return (value of time shift set in VP of
        step 17) - 1, and represents value of local reference time shifted with time shift value;
    19: Set the local reference time value to max value;
        Set the time shift value to max value;
    20: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_ShiftTimer1us16bit();
        - Check if function Tm_ShiftTimer1us16bit() return value = (max value) - 1 and represents
        value of local reference time shifted with time shift value;
    21: Enable reentrancy by setting the DBG_TM_RESETTIMER1US16BIT_ENTRY macro to call
        Tm_ShiftTimer1us16bit() at least three more times with three different timers;
        Set the reference time of the four timer parameters of Tm_ShiftTimer1us16bit() calls
        (ex 0xA000UL, 0xA111UL, 0xA222UL, 0xA333UL);
        Set the shift value used for each reentry to four different times
        (ex 0x100U, 0x200U, 0x300U, 0x400U);
    22: VP (Tm.swdd.ShiftTimerFunctionReEntry):
        - Call Tm_ShiftTimer1us16bit();
        - Check that after call of Tm_ShiftTimer1us16bit(), reference time of the timer instance
          referred in VP of step 22(0xA000UL, 0xA111UL, 0xA222UL, 0xA333UL) shifts with shift value
          referred in VP of step 22(0x100U, 0x200U, 0x300U, 0x400U) and return value sifted
          (0xA100UL, 0xA311UL, 0xA522UL, 0xA733UL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>TS_TM_SHIFTTIMER1US24BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>1946</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ShiftTimer1us24bit() functionality
Test Description: 
    Check if Tm_ShiftTimer1us24bit() works as intended.
    Function Tm_ShiftTimer1us24bit() shall shift the reference time of the timer instance.
    Check if Tm_ShiftTimer1us24bit() shift the reference time of the timer instance with different
    values.
  
Test Object: 
    Tm_ShiftTimer1us24bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the local reference time value to 0;
        Set the time shift value to 0;
    02: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value 0 and represents value of local
        reference time shifted with time shift value;
    03: Set the local reference time value to 0;
        Set the time shift value to a value &gt; 0;
    04: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of time shift set in VP of step
        03, and represents value of local reference time shifted with time shift value;
    05: Set the local reference time value to 0;
        Set the time shift value to max value;
    06: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00015, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of time shift set in VP of step
        05, and represents value of local reference time shifted with time shift value;
    07: Set the local reference time value to a value &gt; 0;
        Set the time shift value to 0;
    08: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of local reference time set in VP
        of step 07, and represents value of local reference time shifted with time shift value;
    09: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &lt;= max value;
    10: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of local reference time shifted
        with time shift value;
    11: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &gt; max value;
    12: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of local reference time shifted
        with time shift value;
    13: Set the local reference time value to a value &gt; 0;
        Set the time shift value to max value;
    14: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00015, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013,
            Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return (value of local reference time set in VP
        of step 13) - 1, and represents value of local reference time shifted with time shift value;
    15: Set the local reference time value to max value;
        Set the time shift value to 0;
    16: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00015, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013,
            Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value of local reference time set in VP
        of step 15, and represents value of local reference time shifted with time shift value;
    17: Set the local reference time value to max value;
        Set the time shift value to a value &gt; 0;
    18: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00015, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013,
            Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return (value of time shift set in VP of
        step 17) - 1, and represents value of local reference time shifted with time shift value;
    19: Set the local reference time value to max value;
        Set the time shift value to max value;
    20: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer, Tm.SWS_Tm_00015, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013,
            Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_ShiftTimer1us24bit();
        - Check if function Tm_ShiftTimer1us24bit() return value = (max value) - 1 and represents
        value of local reference time shifted with time shift value;
    21: Enable reentrancy by setting the DBG_TM_RESETTIMER1US24BIT_ENTRY macro to call
        Tm_ShiftTimer1us24bit() at least three more times with three different timers;
        Set the reference time of the four timer parameters of Tm_ShiftTimer1us24bit() calls
        (ex 0xB00000UL, 0xB11111UL, 0xB22222UL, 0xB33333UL);
        Set the shift value used for each reentry to four different times
        (ex 0x10000UL, 0x20000UL, 0x30000UL, 0x40000UL);
    22: VP (Tm.swdd.ShiftTimerFunctionReEntry):
        - Call Tm_ShiftTimer1us24bit();
        - Check that after call of Tm_ShiftTimer1us24bit(), reference time of the timer instance
          referred in VP of step 22(0xB00000UL, 0xB11111UL, 0xB22222UL, 0xB33333UL) shifts with
          shift value referred in VP of step 22(0x10000UL, 0x20000UL, 0x30000UL, 0x40000UL) and
          return value sifted (0xB10000UL, 0xB31111UL, 0xB52222UL, 0xB73333UL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>TS_TM_SHIFTTIMER1US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>2191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ShiftTimer1us32bit() functionality
Test Description: 
    Check if Tm_ShiftTimer1us32bit() works as intended.
    Function Tm_ShiftTimer1us32bit() shall shift the reference time of the timer instance.
    Check if Tm_ShiftTimer1us32bit() shift the reference time of the timer instance with different
    values.
  
Test Object: 
    Tm_ShiftTimer1us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the local reference time value to 0;
        Set the time shift value to 0;
    02: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value 0 and represents value of local
        reference time shifted with time shift value;
    03: Set the local reference time value to 0;
        Set the time shift value to a value &gt; 0;
    04: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of time shift set in VP of step
        03, and represents value of local reference time shifted with time shift value;
    05: Set the local reference time value to 0;
        Set the time shift value to max value;
    06: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of time shift set in VP of step
        05, and represents value of local reference time shifted with time shift value;
    07: Set the local reference time value to a value &gt; 0;
        Set the time shift value to 0;
    08: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of local reference time set in VP
        of step 07, and represents value of local reference time shifted with time shift value;
    09: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &lt;= max value;
    10: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of local reference time shifted
        with time shift value;
    11: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &gt; max value;
    12: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of local reference time shifted
        with time shift value;
    13: Set the local reference time value to a value &gt; 0;
        Set the time shift value to max value;
    14: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return (value of local reference time set in VP
        of step 13) - 1, and represents value of local reference time shifted with time shift value;
    15: Set the local reference time value to max value;
        Set the time shift value to 0;
    16: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value of local reference time set in VP
        of step 15, and represents value of local reference time shifted with time shift value;
    17: Set the local reference time value to max value;
        Set the time shift value to a value &gt; 0;
    18: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return (value of time shift set in VP of
        step 17) - 1, and represents value of local reference time shifted with time shift value;
    19: Set the local reference time value to max value;
        Set the time shift value to max value;
    20: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_ShiftTimer1us32bit();
        - Check if function Tm_ShiftTimer1us32bit() return value = (max value) - 1 and represents
        value of local reference time shifted with time shift value;
    21: Enable reentrancy by setting the DBG_TM_RESETTIMER1US32BIT_ENTRY macro to call
        Tm_ShiftTimer1us32bit() at least three more times with three different timers;
        Set the reference time of the four timer parameters of Tm_ShiftTimer1us32bit() calls
        (ex 0xC0000000UL, 0xC1111111UL, 0xC2222222UL, 0xC3333333UL);
        Set the shift value used for each reentry to four different times
        (ex 0x1000000UL, 0x2000000UL, 0x3000000UL, 0x4000000UL);
    22: VP (Tm.swdd.ShiftTimerFunctionReEntry):
        - Call Tm_ShiftTimer1us32bit();
        - Check that after call of Tm_ShiftTimer1us32bit(), reference time of the timer instance
          referred in VP of step 22(0xC0000000UL, 0xC1111111UL, 0xC2222222UL, 0xC3333333UL) shifts
          with shift value referred in VP of step 22(0x1000000UL, 0x2000000UL, 0x3000000UL, 0x4000000UL)
          and return value sifted (0xC1000000UL, 0xC3111111UL, 0xC5222222UL, 0xC7333333UL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>TS_TM_SHIFTTIMER100US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>2427</sourceline>
      <version>1</version>
      <description>Test Synopsis: To test Tm_ShiftTimer100us32bit() functionality
Test Description: 
    Check if Tm_ShiftTimer100us32bit() works as intended.
    Function Tm_ShiftTimer100us32bit() shall shift the reference time of the timer instance.
    Check if Tm_ShiftTimer100us32bit() shift the reference time of the timer instance with different
    values.
  
Test Object: 
    Tm_ShiftTimer100us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the local reference time value to 0;
        Set the time shift value to 0;
    02: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value 0 and represents value of local
          reference time shifted with time shift value;
    03: Set the local reference time value to 0;
        Set the time shift value to a value &gt; 0;
    04: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of time shift set in VP of step
          03, and represents value of local reference time shifted with time shift value;
    05: Set the local reference time value to 0;
        Set the time shift value to max value;
    06: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of time shift set in VP of step
          05, and represents value of local reference time shifted with time shift value;
    07: Set the local reference time value to a value &gt; 0;
        Set the time shift value to 0;
    08: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of local reference time set in
          VP of step 07, and represents value of local reference time shifted with time shift value;
    09: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &lt;= max value;
    10: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of local reference time shifted
          with time shift value;
    11: Set the local reference time value to a value &gt; 0;
        Set the time shift value to a value &gt; 0. The time shift value + local reference time value
        should be &gt; max value;
    12: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of local reference time shifted
          with time shift value;
    13: Set the local reference time value to a value &gt; 0;
        Set the time shift value to max value;
    14: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return (value of local reference time set in
          VP of step 13) - 1, and represents value of local reference time shifted with time shift
          value;
    15: Set the local reference time value to max value;
        Set the time shift value to 0;
    16: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value of local reference time set in
          VP of step 15, and represents value of local reference time shifted with time shift value;
    17: Set the local reference time value to max value;
        Set the time shift value to a value &gt; 0;
    18: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return (value of time shift set in VP of
          step 17) - 1, and represents value of local reference time shifted with time shift value;
    19: Set the local reference time value to max value;
        Set the time shift value to max value;
    20: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer, Tm.SWS_Tm_00014, Tm.SWS_Tm_00013, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_ShiftTimer100us32bit();
        - Check if function Tm_ShiftTimer100us32bit() return value = (max value) - 1 and represents
          value of local reference time shifted with time shift value;
    21: Enable reentrancy by setting the DBG_TM_RESETTIMER100US32BIT_ENTRY macro to call
        Tm_ShiftTimer100us32bit() at least three more times with three different timers;
        Set the reference time of the four timer parameters of Tm_ShiftTimer100us32bit() calls
        (ex 0xD0000000UL, 0xD1111111UL, 0xD2222222UL, 0xD3333333UL);
        Set the shift value used for each reentry to four different times
        (ex 0x10000000UL, 0x20000000UL, 0x30000000UL, 0x40000000UL);
    22: VP (Tm.swdd.ShiftTimerFunctionReEntry):
        - Call Tm_ShiftTimer100us32bit();
        - Check that after call of Tm_ShiftTimer100us32bit(), reference time of the timer instance
          referred in VP of step 22(0xD0000000UL, 0xD1111111UL, 0xD2222222UL, 0xD3333333UL) shifts
          with shift value referred in VP of step 22(0x10000000UL, 0x20000000UL, 0x30000000UL, 0x40000000UL)
          and return value sifted (0xE0000000UL, 0xF1111111UL, 0x02222222UL, 0x13333333UL).
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ShiftTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>TS_TM_SYNCTIMER1US16BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>2664</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_SyncTimer1us16bit() functionality
Test Description: 
    Check if Tm_SyncTimer1us16bit() works as intended.
    Function Tm_SyncTimer1us16bit() shall synchronize two timer instances.
    Check if function Tm_SyncTimer1us16bit() synchronize two timer instances correctly.
    After call of Tm_SyncTimer1us16bit() shall result both timers equal with source timer value.
  
Test Object: 
    Tm_SyncTimer1us16bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to 0;
    02: VP (Tm.swdd.1us16Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_SyncTimer1us16bit();
        - Check after call of Tm_SyncTimer1us16bit(), destination timer gets value of source
          timer value;
    03: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to a value &gt; 0;
    04: VP (Tm.swdd.1us16Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_SyncTimer1us16bit();
        - Check after call of Tm_SyncTimer1us16bit(), destination timer gets value of source
          timer value;
    05: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to max value;
    06: VP (Tm.swdd.1us16Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us16bit):
        - Call function Tm_SyncTimer1us16bit();
        - Check after call of Tm_SyncTimer1us16bit(), destination timer gets value of source
          timer value;
    07: Enable reentrancy by setting the DBG_TM_RESETTIMER1US16BIT_ENTRY macro to call
        Tm_SyncTimer1us16bit() at least three more times with four different sets of destination
        timer and source timer parameters;
        Set four different time references of the destination timer parameter
        (ex 0x1111UL, 0x2222UL, 0x3333UL, 0x4444UL);
        Set four different time references of the source timer parameter
        (ex 0x1AAAUL, 0x2BBBUL, 0x3CCCUL, 0x4DDDUL);
    08: VP (Tm.swdd.SyncTimerFunctionReEntry):
        - Call Tm_SyncTimer1us16bit();
        - Check that after call of Tm_SyncTimer1us16bit(), references of the source timer parameter
          are resulted as synchronize values(0x1AAAUL, 0x2BBBUL, 0x3CCCUL, 0x4DDDUL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>TS_TM_SYNCTIMER1US24BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>2797</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_SyncTimer1us24bit() functionality
Test Description: 
    Check if Tm_SyncTimer1us24bit() works as intended.
    Function Tm_SyncTimer1us24bit() shall synchronize two timer instances.
    Check if function Tm_SyncTimer1us24bit() synchronize two timer instances correctly.
    After call of Tm_SyncTimer1us16bit() shall result both timers equal with source timer value.
  
Test Object: 
    Tm_SyncTimer1us24bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to 0;
    02: VP (Tm.swdd.1us24Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_SyncTimer1us24bit();
        - Check after call of Tm_SyncTimer1us24bit(), destination timer gets value of source
          timer value;
    03: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to a value &gt; 0;
    04: VP (Tm.swdd.1us24Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_SyncTimer1us24bit();
        - Check after call of Tm_SyncTimer1us24bit(), destination timer gets value of source
          timer value;
    05: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to max value;
    06: VP (Tm.swdd.1us24Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us24bit):
        - Call function Tm_SyncTimer1us24bit();
        - Check after call of Tm_SyncTimer1us24bit(), destination timer gets value of source
          timer value;
    07: Enable reentrancy by setting the DBG_TM_RESETTIMER1US24BIT_ENTRY macro to call
        Tm_SyncTimer1us24bit() at least three more times with four different sets of destination
        timer and source timer parameters;
        Set four different time references of the destination timer parameter
        (ex 0x111111UL, 0x222222UL, 0x333333UL, 0x444444UL);
        Set four different time references of the source timer parameter
        (ex 0xAAAA1AUL, 0xBBBB2BUL, 0xCCCC3CUL, 0xDDDD4DUL);
    08: VP (Tm.swdd.SyncTimerFunctionReEntry):
        - Call Tm_SyncTimer1us24bit();
        - Check that after call of Tm_SyncTimer1us24bit(), references of the source timer parameter
          are resulted as synchronize values(0xAAAA1AUL, 0xBBBB2BUL, 0xCCCC3CUL, 0xDDDD4DUL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>TS_TM_SYNCTIMER1US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>2930</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_SyncTimer1us32bit() functionality
Test Description: 
    Check if Tm_SyncTimer1us32bit() works as intended.
    Function Tm_SyncTimer1us32bit() shall synchronize two timer instances.
    Check if function Tm_SyncTimer1us32bit() synchronize two timer instances correctly.
    After call of Tm_SyncTimer1us32bit() shall result both timers equal with source timer value.
  
Test Object: 
    Tm_SyncTimer1us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to 0;
    02: VP (Tm.swdd.1us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_SyncTimer1us32bit();
        - Check after call of Tm_SyncTimer1us32bit(), destination timer gets value of source
          timer value;
    03: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to a value &gt; 0;
    04: VP (Tm.swdd.1us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_SyncTimer1us32bit();
        - Check after call of Tm_SyncTimer1us32bit(), destination timer gets value of source
          timer value;
    05: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to max value;
    06: VP (Tm.swdd.1us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.1us32bit):
        - Call function Tm_SyncTimer1us32bit();
        - Check after call of Tm_SyncTimer1us32bit(), destination timer gets value of source
          timer value;
    07: Enable reentrancy by setting the DBG_TM_RESETTIMER1US32BIT_ENTRY macro to call
        Tm_SyncTimer1us32bit() at least three more times with four different sets of destination
        timer and source timer parameters;
        Set four different time references of the destination timer parameter
        (ex 0x11111111UL, 0x22222222UL, 0x33333333UL, 0x44444444UL);
        Set four different time references of the source timer parameter
        (ex 0xA1AAAAAAUL, 0xB2BBBBBBUL, 0xC3CCCCCCUL, 0xD4DDDDDDUL);
    08: VP (Tm.swdd.SyncTimerFunctionReEntry):
        - Call Tm_SyncTimer1us32bit();
        - Check that after call of Tm_SyncTimer1us32bit(), references of the source timer parameter
          are resulted as synchronize values(0xA1AAAAAAUL, 0xB2BBBBBBUL, 0xC3CCCCCCUL, 0xD4DDDDDDUL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>TS_TM_SYNCTIMER100US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>3063</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_SyncTimer100us32bit() functionality
Test Description: 
    Check if Tm_SyncTimer100us32bit() works as intended.
    Function Tm_SyncTimer100us32bit() shall synchronize two timer instances.
    Check if function Tm_SyncTimer100us32bit() synchronize two timer instances correctly.
    After call of Tm_SyncTimer100us32bit() shall result both timers equal with source timer value.
  
Test Object: 
    Tm_SyncTimer100us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to 0;
    02: VP (Tm.swdd.100us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_SyncTimer100us32bit();
        - Check after call of Tm_SyncTimer100us32bit(), destination timer gets value of source
          timer value;
    03: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to a value &gt; 0;
    04: VP (Tm.swdd.100us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_SyncTimer100us32bit();
        - Check after call of Tm_SyncTimer100us32bit(), destination timer gets value of source
          timer value;
    05: Set the reference time of destination value to a value &gt; 0;
        Set the reference time of source value to max value;
    06: VP (Tm.swdd.100us32Bit.Interface.SyncTimer, Tm.SWS_Tm_00019, Tm.EB_Ref.SWS_Tm_00026.100us32bit):
        - Call function Tm_SyncTimer100us32bit();
        - Check after call of Tm_SyncTimer100us32bit(), destination timer gets value of source
          timer value;
    07: Enable reentrancy by setting the DBG_TM_RESETTIMER100US32BIT_ENTRY macro to call
        Tm_SyncTimer100us32bit() at least three more times with four different sets of destination
        timer and source timer parameters;
        Set four different time references of the destination timer parameter
        (ex 0x11111111UL, 0x22222222UL, 0x33333333UL, 0x44444444UL);
        Set four different time references of the source timer parameter
        (ex 0xA111AAAAUL, 0xB222BBBBUL, 0xC333CCCCUL, 0xD444DDDDUL);
    08: VP (Tm.swdd.SyncTimerFunctionReEntry):
        - Call Tm_SyncTimer100us32bit();
        - Check that after call of Tm_SyncTimer100us32bit(), references of the source timer parameter
          are resulted as synchronize values(0xA111AAAAUL, 0xB222BBBBUL, 0xC333CCCCUL, 0xD444DDDDUL).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00026.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.SyncTimerFunctionReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>TS_TM_BUSYWAIT1US16BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>3196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_BusyWait1us16bit() functionality
Test Description: 
    Check if Tm_BusyWait1us16bit() works as intended.
    API service Tm_BusyWait1us16bit() shall be available if each Predef Timer with tick duration
    1μs is enabled by configuration.
    Function Tm_BusyWait1us16bit() shall perform busy waiting by polling with a guaranteed
    minimum waiting time. The BusyWait functions shall be reentrant.
    Check if function Tm_BusyWait1us16bit() perform busy waiting by polling with a guaranteed
    minimum waiting time(n+1 ticks must be observed to ensure that an interval of at least n
    ticks has passed), with different value of local timer.
  
Test Object: 
    Tm_BusyWait1us16bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
  
Test Execution: 
    01: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to 0;
        Set the waiting time value to a value to 0;
    02: VP (Tm.swdd.1us16Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us16bit):
         - Call function Tm_BusyWait1us16bit();
         - Check if after call of Tm_BusyWait1us16bit(), number of calls of Gpt_GetPredefTimerValue
           stub equals with at least waiting time value set in VP of step 01;
         - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_16BIT;
    03: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to 0;
        Set the waiting time value to a value &gt; 0;
    04: VP (Tm.swdd.1us16Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us16bit):
         - Call function Tm_BusyWait1us16bit();
         - Check if after call of Tm_BusyWait1us16bit(), number of calls of Gpt_GetPredefTimerValue
           stub equals with at least waiting time value set in VP of step 03.
    05: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value &gt; 0;
        Set the waiting time value to a value &gt; 0;
    06: VP (Tm.swdd.1us16Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us16bit):
         - Call function Tm_BusyWait1us16bit();
         - Check if after call of Tm_BusyWait1us16bit(), number of calls of Gpt_GetPredefTimerValue
           stub equals with at least waiting time value set in VP of step 05.
    07: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value &gt; max value;
        Set the waiting time value to a value &gt; 0;
        If (current local time + waiting time) &gt; max value, the time counter overflow;
    08: VP (Tm.swdd.1us16Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us16bit):
         - Call function Tm_BusyWait1us16bit();
         - Check if after call of Tm_BusyWait1us16bit(), number of calls of Gpt_GetPredefTimerValue
           stub equals with at least waiting time value set in VP of step 07.
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to max value;
        Set the waiting time value to max value;
    10: VP (Tm.swdd.1us16Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us16bit):
         - Call function Tm_BusyWait1us16bit();
         - Check if after call of Tm_BusyWait1us16bit(), number of calls of Gpt_GetPredefTimerValue
           stub equals with at least waiting time value set in VP of step 09.
    11: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Enable reentrancy by setting the DBG_TM_RESETTIMER1US16BIT_ENTRY macro to call
        Tm_BusyWait1us16bit() at least four more times with four different waiting time parameters;
        Set the current local time value to a value &gt; 0;
        Set four different time references of the waiting time parameter
        (ex 0x10U, 0x20U, 0x30U, 0x40U);
    12: VP (Tm.swdd.BusyWaitReEntry):
        - Call function Tm_BusyWait1us16bit();
        - Check that after call of Tm_BusyWait1us16bit(), the amount of calls is at least the sum
        of all wait times
        (0x10U + 0x20U + 0x30U + 0x40U = 0xA0U =&gt; result al least 0xA0U; 0xA0U &lt; 0xA8U).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>TS_TM_BUSYWAIT1US24BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>3386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_BusyWait1us24bit() functionality
Test Description: 
    Check if Tm_BusyWait1us24bit() works as intended.
    API service Tm_BusyWait1us24bit() shall be available if each Predef Timer with tick duration
    1μs is enabled by configuration.
    Function Tm_BusyWait1us24bit() shall perform busy waiting by polling with a guaranteed
    minimum waiting time. The BusyWait functions shall be reentrant.
    Check if function Tm_BusyWait1us24bit() perform busy waiting by polling with a guaranteed
    minimum waiting time(n+1 ticks must be observed to ensure that an interval of at least n
    ticks has passed), with different value of local timer.
  
Test Object: 
    Tm_BusyWait1us24bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the current local time value to 0;
        - Set the waiting time value to a value to 0;
    02: VP (Tm.swdd.1us24Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us24bit,
            Tm.SWS_Tm_00003):
        - Call function Tm_BusyWait1us24bit();
        - Check if after call of Tm_BusyWait1us24bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 01;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_24BIT;
    03: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the current local time value to 0;
        - Set the waiting time value to a value &gt; 0;
    04: VP (Tm.swdd.1us24Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us24bit):
        - Call function Tm_BusyWait1us24bit();
        - Check if after call of Tm_BusyWait1us24bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 03.
    05: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the current local time value &gt; 0;
        - Set the waiting time value to a value &gt; 0;
    06: VP (Tm.swdd.1us24Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us24bit):
        - Call function Tm_BusyWait1us24bit();
        - Check if after call of Tm_BusyWait1us24bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 05.
    07: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the current local time value &gt; max value;
        - Set the waiting time value to a value &gt; 0;
          If (current local time + waiting time) &gt; max value, the time counter overflow;
    08: VP (Tm.swdd.1us24Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us24bit):
        - Call function Tm_BusyWait1us24bit();
        - Check if after call of Tm_BusyWait1us24bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 07.
    09: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Set the current local time value to max value;
        - Set the waiting time value to max value;
    10: VP (Tm.swdd.1us24Bit.Interface.BusyWait, Tm.SWS_Tm_00022, Tm.SWS_Tm_00024, Tm.EB_Ref.SWS_Tm_00027.1us24bit):
        - Call function Tm_BusyWait1us24bit();
        - Check if after call of Tm_BusyWait1us24bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 09.
    11: VP (Tm.SWS_Tm_00001, Tm.SWS_Tm_00003):
        - Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
          the desired Predef Timer;
        - Enable reentrancy by setting the DBG_TM_RESETTIMER1US24BIT_ENTRY macro to call
          Tm_BusyWait1us24bit() at least four more times with four different waiting time
          parameters;
        - Set the current local time value to a value &gt; 0;
        - Set four different time references of the waiting time parameter
          (ex 0x11U, 0x22U, 0x33U, 0x44U);
    12: VP (Tm.swdd.BusyWaitReEntry):
        - Call function Tm_BusyWait1us24bit();
        - Check that after call of Tm_BusyWait1us24bit(), the amount of calls is at least the sum
          of all wait times
          (0x11U + 0x22U + 0x33U + 0x44U = 0xAAU =&gt; result al least 0xAAU; 0xAAU &lt; 0xB2U).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>TS_TM_BUSYWAIT1US32BIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_1/source/application/Tests.c.m4</sourcefile>
      <sourceline>3587</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_BusyWait1us32bit() functionality
Test Description: 
    Check if Tm_BusyWait1us32bit() works as intended.
    API service Tm_BusyWait1us32bit() shall be available if each Predef Timer with tick duration
    1μs is enabled by configuration.
    Function Tm_BusyWait1us32bit() shall perform busy waiting by polling with a guaranteed
    minimum waiting time. The BusyWait functions shall be reentrant.
    Check if function Tm_BusyWait1us32bit() perform busy waiting by polling with a guaranteed
    minimum waiting time(n+1 ticks must be observed to ensure that an interval of at least n
    ticks has passed), with different value of local timer.
  
Test Object: 
    Tm_BusyWait1us32bit()
  
Test Precondition: 
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to 0;
        Set the waiting time value to a value to 0;
    02: VP (Tm.swdd.1us32Bit.Interface.BusyWait, Tm.SWS_Tm_00024, Tm.SWS_Tm_00022, Tm.EB_Ref.SWS_Tm_00027.1us32bit):
        - Call function Tm_BusyWait1us32bit();
        - Check if after call of Tm_BusyWait1us32bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 01;
        - Check that the predeftimer used is GPT_PREDEF_TIMER_1US_32BIT;
    03: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to 0;
        Set the waiting time value to a value &gt; 0;
    04: VP (Tm.swdd.1us32Bit.Interface.BusyWait, Tm.SWS_Tm_00024, Tm.SWS_Tm_00022, Tm.EB_Ref.SWS_Tm_00027.1us32bit):
        - Call function Tm_BusyWait1us32bit();
        - Check if after call of Tm_BusyWait1us32bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 03.
    05: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value &gt; 0;
        Set the waiting time value to a value &gt; 0;
    06: VP (Tm.swdd.1us32Bit.Interface.BusyWait, Tm.SWS_Tm_00024, Tm.SWS_Tm_00022, Tm.EB_Ref.SWS_Tm_00027.1us32bit):
        - Call function Tm_BusyWait1us32bit();
        - Check if after call of Tm_BusyWait1us32bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 05.
    07: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value &gt; max value;
        Set the waiting time value to a value &gt; 0;
        If (current local time + waiting time) &gt; max value, the time counter overflow;
    08: VP (Tm.swdd.1us32Bit.Interface.BusyWait, Tm.SWS_Tm_00024, Tm.SWS_Tm_00022, Tm.EB_Ref.SWS_Tm_00027.1us32bit):
        - Call function Tm_BusyWait1us32bit();
        - Check if after call of Tm_BusyWait1us32bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 07.
    09: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Set the current local time value to max value;
        Set the waiting time value to max value;
    10: VP (Tm.swdd.1us32Bit.Interface.BusyWait, Tm.SWS_Tm_00024, Tm.SWS_Tm_00022, Tm.EB_Ref.SWS_Tm_00027.1us32bit):
        - Call function Tm_BusyWait1us32bit();
        - Check if after call of Tm_BusyWait1us32bit(), number of calls of Gpt_GetPredefTimerValue
          stub equals with at least waiting time value set in VP of step 09.
    11: Use the GPT driver service Gpt_GetPredefTimerValue to get the current time value for
        the desired Predef Timer;
        Enable reentrancy by setting the DBG_TM_RESETTIMER1US32BIT_ENTRY macro to call
        Tm_BusyWait1us32bit() at least four more times with four different waiting time
        parameters;
        Set the current local time value to a value &gt; 0;
        Set four different time references of the waiting time parameter
        (ex 0x15U, 0x25U, 0x35U, 0x45U);
    12: VP (Tm.swdd.BusyWaitReEntry):
        - Call function Tm_BusyWait1us32bit();
        - Check that after call of Tm_BusyWait1us32bit(), the amount of calls is at least the sum
          of all wait times
          (0x15U + 0x25U + 0x35U + 0x45U = 0xB4U =&gt; result al least 0xB4U; 0xB4U &lt; 0xBCU).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00027.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.BusyWaitReEntry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_BUSYWAIT_ERROR_DETECTED</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To BusyWait functions and development error detection functionality
Test Description: 
    Check if development error detection and BusyWait functions works as intended.
    When an error is detected, the BusyWait functions shall return E_NOT_OK and shall abort
    “waiting” immediately.
  
Test Object: 
    Tm_BusyWait1us16bit()
    Tm_BusyWait1us24bit()
    Tm_BusyWait1us32bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: Set 1us16bit, 1us24bit and 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
    02: VP (Tm.EB_Ref.SWS_Tm_00066.BusyWait1us16bit):
        - Call Tm_BusyWait1us16bit() and return E_NOT_OK when error is detected;
    03: VP (Tm.EB_Ref.SWS_Tm_00066.BusyWait1us24bit):
        - Call Tm_BusyWait1us24bit() and return E_NOT_OK when error is detected;
    04: VP (Tm.EB_Ref.SWS_Tm_00066.BusyWait1us32bit):
        - Call Tm_BusyWait1us32bit() and return E_NOT_OK when error is detected.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00066.BusyWait1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>TS_SYNCTIMER_TM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test SyncTimer functions and development error detection functionality
Test Description: 
    Check if development error detection and SyncTimer functions works as intended.
    If a pointer parameter is a null pointer, the SyncTimer functions shall raise the
    error TM_E_PARAM_POINTER.
  
Test Object: 
    Tm_SyncTimer1us16bit()
    Tm_SyncTimer1us24bit()
    Tm_SyncTimer1us32bit()
    Tm_SyncTimer100us32bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value to null pointer and a 16bit timer reference as the source timer;
        - Call function Tm_SyncTimer1us16bit();
        - Check that Tm_SyncTimer1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set source timer to null pointer and a 16bit timer reference as the destination timer;
        - Call function Tm_SyncTimer1us16bit();
        - Check that Tm_SyncTimer1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value and source timer value to null pointer;
        - Call function Tm_SyncTimer1us16bit();
        - Check that Tm_SyncTimer1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value to null pointer and a 24bit timer reference as the source timer;
        - Call function Tm_SyncTimer1us24bit();
        - Check that Tm_SyncTimer1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    05: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set source timer to null pointer and a 24bit timer reference as the destination timer;
        - Call function Tm_SyncTimer1us24bit();
        - Check that Tm_SyncTimer1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    06: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value and source timer value to null pointer;
        - Call function Tm_SyncTimer1us24bit();
        - Check that Tm_SyncTimer1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    07: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value to null pointer and a 32bit timer reference as the source timer;
        - Call function Tm_SyncTimer1us32bit();
        - Check that Tm_SyncTimer1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    08: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set source timer to null pointer and a 32bit timer reference as the destination timer;
        - Call function Tm_SyncTimer1us32bit();
        - Check that Tm_SyncTimer1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    09: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value and source timer value to null pointer;
        - Call function Tm_SyncTimer1us32bit();
        - Check that Tm_SyncTimer1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
    10: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value to null pointer and a 32bit timer reference as the source timer;
        - Call function Tm_SyncTimer100us32bit();
        - Check that Tm_SyncTimer100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    11: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set source timer to null pointer and a 32bit timer reference as the destination timer;
        - Call function Tm_SyncTimer100us32bit();
        - Check that Tm_SyncTimer100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    12: VP (Tm.swdd.Det_ReportError, Tm.SWS_Tm_00021, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set destination timer value and source timer value to null pointer;
        - Call function Tm_SyncTimer100us32bit();
        - Check that Tm_SyncTimer100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Det_ReportError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>TS_GETTIMESPAN_TM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GetTimeSpan functions and development error detection functionality
Test Description: 
    Check if development error detection and GetTimeSpan functions works as intended.
    If a pointer parameter is a null pointer, the GetTimeSpan functions shall raise the
    error TM_E_PARAM_POINTER and shall return E_NOT_OK.
  
Test Object: 
    Tm_GetTimeSpan1us16bit()
    Tm_GetTimeSpan1us24bit()
    Tm_GetTimeSpan1us32bit()
    Tm_GetTimeSpan100us32bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value to null pointer and a 16bit timer reference as the reference timer;
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that Tm_GetTimeSpan1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set reference timer value to null pointer and a 16bit timer reference as the current timer;
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that Tm_GetTimeSpan1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value and reference timer value to null pointer;
        - Call function Tm_GetTimeSpan1us16bit();
        - Check that Tm_GetTimeSpan1us16bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value to null pointer and a 24bit timer reference as the reference timer;
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that Tm_GetTimeSpan1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    05: VP (Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set reference timer value to null pointer and a 24bit timer reference as the current timer;
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that Tm_GetTimeSpan1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    06: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value and reference timer value to null pointer;
        - Call function Tm_GetTimeSpan1us24bit();
        - Check that Tm_GetTimeSpan1us24bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    07: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value to null pointer and a 32bit timer reference as the reference timer;
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that Tm_GetTimeSpan1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    08: VP (Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set reference timer value to null pointer and a 32bit timer reference as the current timer;
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that Tm_GetTimeSpan1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    09: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value and reference timer value to null pointer;
        - Call function Tm_GetTimeSpan1us32bit();
        - Check that Tm_GetTimeSpan1us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    10: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value to null pointer and a 32bit timer reference as the reference timer;
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that Tm_GetTimeSpan100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    11: VP (Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set reference timer value to null pointer and a 32bit timer reference as the current timer;
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that Tm_GetTimeSpan100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    12: VP (Tm.EB_Ref.SWS_Tm_00012.TimerPtr, Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set current timer value and reference timer value to null pointer;
        - Call function Tm_GetTimeSpan100us32bit();
        - Check that Tm_GetTimeSpan100us32bit() returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimerPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00012.TimeSpanPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>TS_RESETTIMER_TM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test ResetTimer functions and development error detection functionality
Test Description: 
    Check if development error detection and ResetTimer functions works as intended.
    If the pointer parameter is a null pointer, the ResetTimer functions shall raise the
    error TM_E_PARAM_POINTER and shall return E_NOT_OK.
  
Test Object: 
    Tm_ResetTimer1us16bit()
    Tm_ResetTimer1us24bit()
    Tm_ResetTimer1us32bit()
    Tm_ResetTimer100us32bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00008, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us16bit timer parameter to null pointer;
        - Call Tm_ResetTimer1us16bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.SWS_Tm_00008, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us24bit timer parameter to null pointer;
        - Call Tm_ResetTimer1us24bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.SWS_Tm_00008, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us32bit timer parameter to null pointer;
        - Call Tm_ResetTimer1us32bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.SWS_Tm_00008, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 100us32bit timer parameter to null pointer;
        - Call Tm_ResetTimer100us32bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>TS_SHIFTTIMER_TM_E_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test ShiftTimer functions and development error detection functionality
Test Description: 
    Check if development error detection and ShiftTimer functions works as intended.
    If the pointer parameter is a null pointer, the ShiftTimer functions shall raise the
    error TM_E_PARAM_POINTER.
  
Test Object: 
    Tm_ShiftTimer1us16bit()
    Tm_ShiftTimer1us24bit()
    Tm_ShiftTimer1us32bit()
    Tm_ShiftTimer100us32bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00018, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us16bit timer parameter to null pointer;
        - Call Tm_ShiftTimer1us16bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.SWS_Tm_00018, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us24bit timer parameter to null pointer;
        - Call Tm_ShiftTimer1us24bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.SWS_Tm_00018, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 1us32bit timer parameter to null pointer;
        - Call Tm_ShiftTimer1us32bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.SWS_Tm_00018, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set the 100us32bit timer parameter to null pointer;
        - Call Tm_ShiftTimer100us32bit() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>TS_SHIFTTIMER_TM_E_PARAM_VALUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>951</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_ShiftTimer1us24bit() functionality
Test Description: 
    Check if development error detection and Tm_ShiftTimer1us24bit() works as intended.
    If the value of the parameter TimeValue is greater than 0xFFFFFF, the ShiftTimer functions
    with range 24bit shall raise the error TM_E_PARAM_VALUE.
  
Test Object: 
    Tm_ShiftTimer1us24bit()
  
Test Precondition: 
    DET is enabled
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00016, Tm.swdd.Err_TM_E_PARAM_VALUE):
        - Set the 1us24bit timer value greater than 0xFFFFFF;
        - Call Tm_ShiftTimer1us24bit() and check that returns error TM_E_PARAM_VALUE;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.SWS_Tm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_VALUE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>TS_RESETTIMER_TM_E_HARDWARE_TIMER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>1020</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function ResetTimer shall raise
    the error TM_E_HARDWARE_TIMER.
  
Test Object: 
    Tm_ResetTimer1us16bit()
    Tm_ResetTimer1us24bit()
    Tm_ResetTimer1us32bit()
    Tm_ResetTimer100us32bit()
  
Test Precondition: 
    Gpt.h included
    GPT driver service configured E_NOT_OK
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer1us16bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer1us24bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer1us32bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.EB_Ref.SWS_Tm_00064.100us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 100us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer100us32bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>1153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function GetTimeSpan shall raise
    the error TM_E_HARDWARE_TIMER.
  
Test Object: 
    Tm_GetTimeSpan1us16bit()
    Tm_GetTimeSpan1us24bit()
    Tm_GetTimeSpan1us32bit()
    Tm_GetTimeSpan100us32bit()
  
Test Precondition: 
    Gpt.h included
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us16bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us24bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us32bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    04: VP (Tm.EB_Ref.SWS_Tm_00064.100us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 100us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan100us32bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>TS_BUSYWAIT_TM_E_HARDWARE_TIMER</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>1288</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function BusyWait shall raise
    the error TM_E_HARDWARE_TIMER.
  
Test Object: 
    Tm_BusyWait1us16bit()
    Tm_BusyWait1us24bit()
    Tm_BusyWait1us32bit()
  
Test Precondition: 
    Gpt.h included
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us16bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportRuntimeError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us24bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportRuntimeError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us32bit() and check that error TM_E_HARDWARE_TIMER is returned;
        - Check that the call count to Det_ReportRuntimeError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Det_ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>TS_TM_VERSIONINFOPTR_NULLPTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>1398</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test Tm_GetVersionInfo() functionality
Test Description: 
    Check if Tm_GetVersionInfo() works as intended.
    If development error detection is enabled and if the parameter VersionInfoPtr is
    a null pointer, the function Tm_GetVersionInfo shall raise the error TM_E_PARAM_POINTER.
  
Test Object: 
    Tm_GetVersionInfo()
  
Test Precondition: 
    TM_VERSION_INFO_API shall be set to STD_ON
    DET is enabled
  
Test Execution: 
    01: VP (Tm.SWS_Tm_00037, Tm.swdd.Err_TM_E_PARAM_POINTER):
        - Set VersionInfoPtr to null pointer;
        - Call Tm_GetVersionInfo() and check that returns error TM_E_PARAM_POINTER;
        - Check that the call count to Det_ReportError stub is 1, and reset the count to 0;
        - Check that the module id for the reported det error is the same as TEST_TM_MODULE_ID;
        - Check that the instance id for the reported det error is returned;
        - Check that the api id for the reported det error is returned;
        - Check that the error id for the reported det error is returned;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Err_TM_E_PARAM_POINTER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>Tm.SWS_Tm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>TS_TM_FUNCTIONALITY_WITH_DET_ENABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_2_DET/source/application/Tests.c</sourcefile>
      <sourceline>1466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test all external apis with Det error reporting enabled
Test Description: 
    Check if Tm_GetVersionInfo() works as intended.
    Check if Tm_ResetTimer1us16bit() works as intended.
  
Test Object: 
    Tm_BusyWait1us32bit()
  
Test Precondition: 
    Det on and all timers on
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.swdd.Interface.GetVersionInfo):
        - Check if after call of Tm_GetVersionInfo() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    02: VP (Tm.swdd.1us16Bit.Interface.ResetTimer):
        - Check if after call of Tm_ResetTimer1us16bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    03: VP (Tm.swdd.1us16Bit.Interface.GetTimeSpan):
        - Check if after call of Tm_ResetTimer1us16bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    04: VP (Tm.swdd.1us16Bit.Interface.ShiftTimer):
        - Check if after call of Tm_ShiftTimer1us16bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    05: VP (Tm.swdd.1us16Bit.Interface.SyncTimer):
        - Check if after call of Tm_SyncTimer1us16bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    06: VP (Tm.swdd.1us16Bit.Interface.BusyWait):
        - Check if after call of Tm_BusyWait1us16bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    07: VP (Tm.swdd.1us24Bit.Interface.ResetTimer):
        - Check if after call of Tm_ResetTimer1us24bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    08: VP (Tm.swdd.1us24Bit.Interface.GetTimeSpan):
        - Check if after call of Tm_GetTimeSpan1us24bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
    09: VP (Tm.swdd.1us24Bit.Interface.ShiftTimer):
        - Check if after call of Tm_ShiftTimer1us24bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    10: VP (Tm.swdd.1us24Bit.Interface.SyncTimer):
        - Check if after call of Tm_SyncTimer1us24bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    11: VP (Tm.swdd.1us24Bit.Interface.BusyWait):
        - Check if after call of Tm_BusyWait1us24bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    12: VP (Tm.swdd.1us32Bit.Interface.ResetTimer):
        - Check if after call of Tm_ResetTimer1us32bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    13: VP (Tm.swdd.1us32Bit.Interface.GetTimeSpan):
        - Check if after call of Tm_GetTimeSpan1us32bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
    14: VP (Tm.swdd.1us32Bit.Interface.ShiftTimer):
        - Check if after call of Tm_ShiftTimer1us32bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    15: VP (Tm.swdd.1us32Bit.Interface.SyncTimer):
        - Check if after call of Tm_SyncTimer1us32bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    16: VP (Tm.swdd.1us32Bit.Interface.BusyWait):
        - Check if after call of Tm_BusyWait1us32bit() no det error/runtime error is reported for
        valid entries, and a E_OK is returned in this case;
    17: VP (Tm.swdd.100us32Bit.Interface.ResetTimer):
        - Check if after call of Tm_ResetTimer100us32bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
    18: VP (Tm.swdd.100us32Bit.Interface.GetTimeSpan):
        - Check if after call of Tm_GetTimeSpan100us32bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
    19: VP (Tm.swdd.100us32Bit.Interface.ShiftTimer):
        - Check if after call of Tm_ShiftTimer100us32bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
    20: VP (Tm.swdd.100us32Bit.Interface.SyncTimer):
        - Check if after call of Tm_SyncTimer100us32bit() no det error/runtime error is reported
        for valid entries, and a E_OK is returned in this case;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.Interface.GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us16Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us24Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.GetTimeSpan</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.1us32Bit.Interface.BusyWait</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ResetTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.ShiftTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.100us32Bit.Interface.SyncTimer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_RESETTIMER_TM_E_HARDWARE_TIMER_NO_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_3_No_RuntimeError/source/application/Tests.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function ResetTimer shall not raise
    the error TM_E_HARDWARE_TIMER if Det runtime check is disabled.
  
Test Object: 
    Tm_ResetTimer1us16bit()
    Tm_ResetTimer1us24bit()
    Tm_ResetTimer1us32bit()
    Tm_ResetTimer100us32bit()
  
Test Precondition: 
    Gpt.h included
    GPT driver service configured E_NOT_OK
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer1us16bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_ResetTimer1us24bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Check that the call count to Det_ReportRuntimeError stub is 0
    04: VP (Tm.EB_Ref.SWS_Tm_00064.100us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 100us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Check that the call count to Det_ReportRuntimeError stub is 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>TS_GETTIMESPAN_TM_E_HARDWARE_TIMER_NO_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_3_No_RuntimeError/source/application/Tests.c</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function GetTimeSpan shall not raise
    the error TM_E_HARDWARE_TIMER if Det runtime check is disabled.
  
Test Object: 
    Tm_GetTimeSpan1us16bit()
    Tm_GetTimeSpan1us24bit()
    Tm_GetTimeSpan1us32bit()
    Tm_GetTimeSpan100us32bit()
  
Test Precondition: 
    Gpt.h included
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_100US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us16bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us24bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan1us32bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    04: VP (Tm.EB_Ref.SWS_Tm_00064.100us32bit, Tm.swdd.ReportRuntimeError):
        - Set the 100us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_GetTimeSpan100us32bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.100us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>TS_BUSYWAIT_TM_E_HARDWARE_TIMER_NO_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_Tm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Tm/test/ts5/Conformance/IN/Tm_ConTest_3_No_RuntimeError/source/application/Tests.c</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: To test GPT driver service functionality
Test Description: 
    Check if GPT driver service works as intended.
    If the underlying GPT driver service returns E_NOT_OK, the function BusyWait shall not raise
    the error TM_E_HARDWARE_TIMER if Det runtime check is disabled.
  
Test Object: 
    Tm_BusyWait1us16bit()
    Tm_BusyWait1us24bit()
    Tm_BusyWait1us32bit()
  
Test Precondition: 
    Gpt.h included
    TM_ENABLE_PREDEF_TIMER_1US_16BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_24BIT shall be set to STD_ON
    TM_ENABLE_PREDEF_TIMER_1US_32BIT shall be set to STD_ON
  
Test Execution: 
    01: VP (Tm.EB_Ref.SWS_Tm_00064.1us16bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us16bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us16bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    02: VP (Tm.EB_Ref.SWS_Tm_00064.1us24bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us24bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us24bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
    03: VP (Tm.EB_Ref.SWS_Tm_00064.1us32bit, Tm.swdd.ReportRuntimeError, Tm.swdd.Det_ReportRuntimeError):
        - Set the 1us32bit Gpt_GetPredefTimerValue stub to E_NOT_OK;
        - Call Tm_BusyWait1us32bit()
        - Check that the call count to Det_ReportRuntimeError stub is 0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us16bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us24bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>Tm.EB_Ref.SWS_Tm_00064.1us32bit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>Tm.swdd.Det_ReportRuntimeError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
