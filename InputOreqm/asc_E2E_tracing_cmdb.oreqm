<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_E2E_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_ASR_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_AUTOSAR_SWS_E2ETransformer_NoCheck.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_AUTOSAR_SWS_E2ETransformer_NoPXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_DummyCoverage_E2EXf_NoPxx_DummyCoverage.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_DummyCoverage_E2EXf_Pxx_DummyCoverage.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_Pxx_DummyCoverage_E2E_Pxx_DummyCoverage.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_TL_Standalone_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ComXf_S_TL_Requirements_ComXf_S.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/common_req/E2E_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:46:37 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_E2E_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_ASR_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_AUTOSAR_SWS_E2ETransformer_NoCheck.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_AUTOSAR_SWS_E2ETransformer_NoPXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_DummyCoverage_E2EXf_NoPxx_DummyCoverage.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_DummyCoverage_E2EXf_Pxx_DummyCoverage.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_Pxx_DummyCoverage_E2E_Pxx_DummyCoverage.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_TL_Standalone_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ComXf_S_TL_Requirements_ComXf_S.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/common_req/E2E_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

    <specobject>
      <id>ASR_E2E020048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
      <para>
        Design Item SWS_E2E_00048
      <para>
           <itemizedlist>
             <listitem>
               <para>
                 <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00048'])"/>
               </para>
              </listitem>
            </itemizedlist>
      </para>
        applies, but the follwing files shall be provided by this module:
        E2E.h (common header), E2E_UnPackSig.h (Signal packing and unpacking macros),
        E2E_ComXf_S_Stc.h, and E2E.c.
      </para>
      <para>
        Note: E2E.h (common header) is shared with all E2E profiles.
        The profile-specific implementation is not part of this module
        (i.e. &lt;code&gt;E2E_PXX.h&lt;/code&gt;,  &lt;code&gt;E2E_PXX.c&lt;/code&gt;,
        &lt;code&gt;E2E_SM.c&lt;/code&gt;, and &lt;code&gt;E2E_SM.h&lt;/code&gt;
        do not exist in this module).
        E2E_UnPackSig.h, E2E_ComXf_S_Stc.h are the implementation of the
        Safe COM Based Transformer.
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_03_Files</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Design Item SWS_E2E_00047
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00047'])"/>
              </para>
            </listitem>
          </itemizedlist>
      </para>
        applies, but the usage of these return values
        for the functions E2E_PXXProtect() and E2E_PXXCheck()
        cannot be tested,
        because the existence of these functions is not known
        for the generic E2E module.
      </description>
      <comment>
        Refined, for sake of traceability to individual macros definitions.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020047.1</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020047.2</srcid><srcstatus/><internalId>3</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020047.3</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020047.4</srcid><srcstatus/><internalId>5</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020047.5</srcid><srcstatus/><internalId>6</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020047 applies for macro E2E_E_INPUTERR_NULL.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_IsMacro_001</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020047 applies for macro E2E_E_INPUTERR_WRONG.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_IsMacro_002</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020047 applies for macro E2E_E_INTERR.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_IsMacro_003</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020047 applies for macro E2E_E_OK.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_IsMacro_004</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>ASR_E2E020047.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020047 applies for macro E2E_E_INVALID.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_IsMacro_005</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>ASR_E2E020032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00032
      <para>
          <itemizedlist>
             <listitem>
                <para>
                   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00032'])"/>
                </para>
             </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ComTest_01</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_01_GetVersionInfo_002</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>ASR_E2E020033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00033
      <para>
          <itemizedlist>
             <listitem>
                <para>
                   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00033'])"/>
                </para>
             </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_GetVersionInfo_002</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>ASR_E2E020037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00037.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00037'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
       <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_NoConfigParams</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>ASR_E2E020038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00038
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00038'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      applies,
      but the version numbers shall be published
      as stated in SWS_BSW_00059 according to the General Specification of Basic Software Modules
      of ASR CP R22-11.
      <para>
        That is, the following version numbers shall be defined in the header file
        according to SWS_BSW_00059 (General Specification of Basic Software Modules):
        <itemizedlist>
          <listitem>E2E_VENDOR_ID</listitem>
          <listitem>E2E_AR_RELEASE_MAJOR_VERSION</listitem>
          <listitem>E2E_AR_RELEASE_MINOR_VERSION</listitem>
          <listitem>E2E_AR_RELEASE_REVISION_VERSION</listitem>
          <listitem>E2E_SW_MAJOR_VERSION</listitem>
          <listitem>E2E_SW_MINOR_VERSION</listitem>
          <listitem>E2E_SW_PATCH_VERSION</listitem>
        </itemizedlist>
      </para>
      <para>
        For sake of compatibility, the following additional version numbers
        shall be defined in the header file
        according to [BSW00318] (General Requirements on Basic Software Modules
        of ASR V2.3.0 R3.1 Rev 5):
        <itemizedlist>
          <listitem>E2E_AR_MAJOR_VERSION</listitem>
          <listitem>E2E_AR_MINOR_VERSION</listitem>
          <listitem>E2E_AR_REVISION_VERSION</listitem>
        </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PublishedInformation</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00347
      <para>
          <itemizedlist>
             <listitem>
                <para>
                   <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00347'])"/>
                </para>
             </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020347.1</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347.2</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347.3</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347.4</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347.5</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347.6</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020597</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_OK.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_001</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_REPEATED.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_002</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.3</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_WRONGSEQUENCE.
      </description>
      <releases>
       <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_003</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.4</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_ERROR.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_004</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.5</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_NOTAVAILABLE.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_005</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>ASR_E2E020347.6</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ASR_E2E020347 applies for macro E2E_P_NONEWDATA.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_01_PCheckStatusMacro_006</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00105.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (SRS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09101_IOValidParamCheck</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00105</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_10101_IOValidParamCheck</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00103</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_07001_CopyUpperHeader</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_Memcpy_CON_11001_Test_E2EMemCpy</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00112</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
            (upperHeaderBitsToShift).(SRS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_08001_CopyUpperHeader</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00113</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00116.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_10103_CopyUpperHeader</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00116</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09104_BufLength</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10104_BufLength</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00114</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00154.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration option EndToEndTransformationComSpecProps.disableEndToEndCheck is set
            for a given &lt;transformerId&gt;, then E2E Transformer shall skip the invocation
            of the E2E Library - it shall only perform buffer processing (e.g. copying from inputBuffer
            to buffer). Return value shall be E_OK.(RS_E2E_08538)
      </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09102_NoCheckInvoke</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10102_NoCheckInvoke</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00154</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00030.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_ConfigType
            Name:  E2EXf_ConfigType
            Type:  Structure
            Element:  implementation-specific Type: -
            Description:  Parent container for the configuration of E2E Transformer. The content is
            implementation-specific.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/E2E_E2EXf_Stc.h_35</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00030</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsTo
            Shift &gt; 0), in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBits
            ToShiftbits, in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            This refinement handles a profile independent use-case of E2E
            transformation where End-to-End verification is disabled via setting
            EndToEndTransformationComSpecProps.disableEndToEndCheck = true.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09101_IOValidParamCheck</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10101_IOValidParamCheck</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <comment>
            This refinement handles a profile independent use-case of E2E
            transformation where End-to-End verification is disabled via setting
            EndToEndTransformationComSpecProps.disableEndToEndCheck = true.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09101_IOValidParamCheck</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10101_IOValidParamCheck</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00051</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00032.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            A safety transformer shall return one of the errors (SRS_Xfrm_00010)
            E_OK
            E_SAFETY_VALID_REP
            E_SAFETY_VALID_SEQ
            E_SAFETY_VALID_ERR
            E_SAFETY_VALID_NND
            E_SAFETY_INVALID_SEQ
            E_SAFETY_INVALID_ERR
            E_SAFETY_INVALID_NND
            E_SAFETY_NOSM_OK
            E_SAFETY_NOSM_REP
            E_SAFETY_NOSM_SEQ
            E_SAFETY_NOSM_ERR
            E_SAFETY_NOSM_NND
            E_SAFETY_NOSM_DEC
            E_E2E_HARD_SAFETY_ERR
            E_SAFETY_HARD_RUNTIMEERROR
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_07001_CopyUpperHeader</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_08001_CopyUpperHeader</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_09102_NoCheckInvoke</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_09103_CopyUpperHeader</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_09104_BufLength</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10102_NoCheckInvoke</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10103_CopyUpperHeader</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10104_BufLength</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying.NoCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            The setting upperHeaderBitsToShift == 0 implicits the use of ComXf
            which is applicable for the combination with the setting
            EndToEndTransformationComSpecProps.disableEndToEndCheck = true.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09103_CopyUpperHeader</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133.NoCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E
            Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            This refinement handles a profile independent use-case of E2E
            transformation where End-to-End verification is disabled via setting
            EndToEndTransformationComSpecProps.disableEndToEndCheck = true.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_E2EXf_CON_09100_NotInitialized</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_E2EXf_CON_10100_NotInitialized</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00133</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208.NoCheck</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
            forwardedCode           CheckStatus
            E_OK                    E2E_P_OK
            E_SAFETY_INVALID_REP    E2E_P_REPEATED
            E_SAFETY_INVALID_SEQ    E2E_P_WRONGSEQUENCE
            E_SAFETY_INVALID_CRC    E2E_P_ERROR
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_MapCodeToStatus_010</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00208</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--
        duplicated placeholder from AUTOSAR_SWS_TransformerGeneral.reqm
        and AUTOSAR_SWS_E2ETransformer.reqm
    -->

      <specobject>
         <id>E2E.SWS_E2EXf_00154</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration option EndToEndTransformationComSpecProps.disableEndToEndCheck is set
            for a given &lt;transformerId&gt;, then E2E Transformer shall skip the invocation
            of the E2E Library - it shall only perform buffer processing (e.g. copying from inputBuffer
            to buffer).(RS_E2E_08538)
         </description>
         <comment>
            This requirement duplicates a requirement from the E2EXf module.
            In order to make the requirement tracing for E2EXf independent from the
            profiles a duplicate of the original requirement which can be linked from
            E2EXf and the profiles is necessary.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00154.NoCheck</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00154.NoPxx</srcid><srcstatus/><internalId>34</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00030</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_ConfigType
            Name:  E2EXf_ConfigType
            Type:  Structure
            Element:  void  implementation-specific
            Description:  Parent container for the configuration of E2E Transformer. The content is
            implementation-specific.
            (RS_E2E_08538)
         </description>
         <comment>
            This requirement duplicates a requirement from the E2EXf module.
            In order to make the requirement tracing for E2EXf independent from the
            profiles a duplicate of the original requirement which can be linked from
            E2EXf and the profiles is necessary.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00030.NoCheck</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00030.NoPxx</srcid><srcstatus/><internalId>35</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00154.NoPxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00154</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00030.NoPxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00030</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_&lt;transformerId&gt; shall perform the following
            two precondition checks, without continuing further processing:
             1.  (buffer == NULL)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt;
                  EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00102.Pxx</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL
             3.  buffer == NULL
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00106.Pxx</srcid><srcstatus/><internalId>111</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBitsToShiftbits,
            in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00108.Pxx</srcid><srcstatus/><internalId>112</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
            inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting with
            offset upperHeaderBitsToShift) to parameter buffer starting with the destination offset
            of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00109.Pxx</srcid><srcstatus/><internalId>113</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
            destination offset of BufferProperties.headerLength. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00115.Pxx</srcid><srcstatus/><internalId>114</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_&lt;transformerId&gt; shall set
            *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00111.Pxx</srcid><srcstatus/><internalId>115</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt; shall perform a check of
            the *bufferLength (after the computation of *bufferLength):
            If (*bufferLength != config-&gt;DataLength/8), then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00139.Pxx</srcid><srcstatus/><internalId>116</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If DataTransformationStatusForwarding is set to no TransformerStatusForwarding and PXX
            is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44,
            The function E2EXf_&lt;transformerId&gt;() shall invoke
            E2E_PXXProtect(), passing to that function the appropriate Config and State
            structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated
            with &lt;transformerId&gt;, as well as buffer and bufferLength
            (only for P04, P05, P06, P07, P08 ,P11 ,P22 and P44) that were updated in above
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00107.Pxx</srcid><srcstatus/><internalId>117</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            In case E2E_PXXProtect() and E2E_PXXForward() returns E2E_E_OK, then E2EXf_&lt;transformerId&gt; shall
            return E_OK, otherwise E2EXf_&lt;transformerId&gt; shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00018.Pxx</srcid><srcstatus/><internalId>118</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00105.NoCheck</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00105.Pxx</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00103.NoCheck</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00103.Pxx</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
             1.  if(inputBuffer == NULL and inputBufferLength == 0), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to FALSE
             2.  else if (inputBufferLength == config-&gt;DataLength/8), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to TRUE.
             3.  else return E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00140.Pxx</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  config,
              -  state,
              -  data
            Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then
            it shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
            inputBuffer.(RS_E2E_08538)
          </description>
          <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00123.Pxx</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
            1.  If(buffer == NULL and inputBufferLength == 0), then
                - variable NewDataAvailable of state object of type
                   E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                   &lt;transformerId&gt; shall be set to FALSE.
            2.  Else if (inputBufferLength == config-&gt;DataLength/8), then
                - variable NewDataAvailable of state object of type E2E_PXXCheckState
                  Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall
                  be set to TRUE.
            3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00141.Pxx</srcid><srcstatus/><internalId>123</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  Config,
              -  State,
              -  Data
            Concerning pointer to Data: if(buffer == NULL and inputBufferLength == 0), then it shall
            pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00124.Pxx</srcid><srcstatus/><internalId>124</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration parameter profileBehavior is PRE_R4_2, then
            for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
            MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
            the corresponding configuration object. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00142.Pxx</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 04, 05, 06, 07, 11, 22: the function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
              -  config,
              -  state,
              -  data length: inputBufferLength
            pointer to data: inputBuffer (out-of-place version) or buffer (in-place
            version). (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00104.Pxx</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
            E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
            and the profiles check Status (variable Status of state object of type
            E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
            independent check status. For P1/P2 mapping functions, there is an additional call
            parameter profileBehavior:
            -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
               shall be invoked with the call parameter profileBehavior = 1
            -  if configuration parameter profileBehavior is PRE_R4_2, then
               E2E_PXXMapStatusToSM() shall be invoked with call parameter profileBehavior = 0
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00029.Pxx</srcid><srcstatus/><internalId>127</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
            E2E_SMCheck() function, passing to that function the configuration object of type
            E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088])and state
            object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are associated
            with &lt;transformerId&gt;, plus the profile-independent check status that was computed
            by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00028.Pxx</srcid><srcstatus/><internalId>128</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
            - the high nibble of the return
              of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
              of the state of the state machine (member SMState of object of type
              E2E_SMStateType that is associated with &lt;transformerId&gt;, see
              [SWS_E2EXf_00125]).
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
              shall  be set to the low nibble of the profile-independent check status
              of type E2E_PCheckStatusType.
              If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
              E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00027.Pxx</srcid><srcstatus/><internalId>129</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00112.NoCheck</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00112.Pxx</srcid><srcstatus/><internalId>130</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
            (upperHeaderBitsToShift).(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00113.NoCheck</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00113.Pxx</srcid><srcstatus/><internalId>131</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00116</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00116.NoCheck</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>E2E.ASR421.SWS_E2EXf_00116.Pxx</srcid><srcstatus/><internalId>132</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If disableEndToEndStateMachine is to TRUE,
            - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to 0x6.
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to the low nibble of the profile-independent check status of type
              E2E_PCheckStatusType. (RS_E2E_08538)
         </description>
         <comment>
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00169.Pxx</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00114.NoCheck</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00114.Pxx</srcid><srcstatus/><internalId>133</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00167.Pxx</srcid><srcstatus/><internalId>134</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Mandatory Interfaces
            API function         Description
            E2E_P01Check           Checks the Data received using the E2E profile 1. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P01CheckInit       Initializes the check state
            E2E_P01Forward (draft) Protects data which is forwarded by using the E2E profile 01.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P01MapStatusToSM   The function maps the check status of Profile 1 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 1 delivers a more fine-granular status, but this is not
                                   relevant for the E2E state machine.
            E2E_P01Protect         Protects the array/buffer to be transmitted using the E2E profile 1.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P01ProtectInit     Initializes the protection state.
            E2E_P02Check           Check the array/buffer using the E2E profile 2. This includes checksum
                                   calculation, handling of sequence counter and Data ID.
            E2E_P02CheckInit       Initializes the check state
            E2E_P02Forward (draft) Protects data which is forwarded by using the E2E profile 02.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P02MapStatusToSM   The function maps the check status of Profile 2 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 2 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P02Protect         Protects the array/buffer to be transmitted using the E2E profile 2.
                                   This includes checksum calculation, handling of sequence counter and
                                   Data ID.
            E2E_P02ProtectInit     Initializes the protection state.
            E2E_P04Check           Checks the Data received using the E2E profile 4. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P04CheckInit       Initializes the check state
            E2E_P04Forward (draft) Protects data which is forwarded by using the E2E profile 04.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04MapStatusToSM   The function maps the check status of Profile 4 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04Protect         Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04ProtectInit     Initializes the protection state.
            E2E_P04mCheckInit      Initializes the check state
            E2E_P04mForward (draft)Protects data which is forwarded by using the E2E profile 04m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04mMapStatusToSM  The function maps the check status of Profile 4m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04mProtect        Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04mProtectInit    Initializes the protection state.
            E2E_P04mSinkCheck      Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P04mSourceCheck    Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P05Check           Checks the Data received using the E2E profile 5. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P05CheckInit       Initializes the check state
            E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 5 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E profile 5. This
                                   includes checksum calculation, handling of counter.
            E2E_P05ProtectInit     Initializes the protection state.
            E2E_P06Check           Checks the Data received using the E2E profile 6. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P06CheckInit       Initializes the check state
            E2E_P06Forward (draft) Protects data which is forwarded by using the E2E profile 06.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P06MapStatusToSM   The function maps the check status of Profile 6 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 6 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P06Protect         Protects the array/buffer to be transmitted using the E2E profile 6.
                                   This includes checksum calculation, handling of counter.
            E2E_P06ProtectInit     Initializes the protection state.
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P11Check           Checks the Data received using the E2E profile 11. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P11CheckInit       Initializes the check state
            E2E_P11Forward (draft) Protects data which is forwarded by using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P11MapStatusToSM   The function maps the check status of Profile 11 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 11 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P11Protect         Protects the array/buffer to be transmitted using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P11ProtectInit     Initializes the protection state.
            E2E_P22Check           Checks the Data received using the E2E profile 22. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P22CheckInit       Initializes the check state
            E2E_P22Forward (draft) Protects data which is forwarded by using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P22MapStatusToSM   The function maps the check status of Profile 22 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 22 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P22Protect         Protects the array/buffer to be transmitted using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P22ProtectInit     Initializes the protection state.
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_SMCheck            Checks the communication channel. It determines if the data can
                                   be used for safety-related application, based on history of
                                   checks performed by a corresponding E2E_P0XCheck() function.
            E2E_SMCheckInit        Initializes the state machine.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00037.Pxx</srcid><srcstatus/><internalId>135</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsTo
            Shift &gt; 0), in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBits
            ToShiftbits, in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00108.NoCheck</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_Xfrm_00108.Pxx</srcid><srcstatus/><internalId>136</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            A safety transformer shall return one of the errors shown in Table below
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                               safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00032.Pxx</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00051.NoCheck</srcid><srcstatus/><internalId>27</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_Xfrm_00051.Pxx</srcid><srcstatus/><internalId>138</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>2</version>
         <description>
            Imported Types
            Module:Imported Type
            E2E:
            E2E_P01CheckStateType
            E2E_P01CheckStatusType
            E2E_P01ConfigType
            E2E_P01DataIDMode
            E2E_P01ProtectStateType
            E2E_P02CheckStateType
            E2E_P02CheckStatusType
            E2E_P02ConfigType
            E2E_P02ProtectStateType
            E2E_P04CheckStateType
            E2E_P04CheckStatusType
            E2E_P04ConfigType
            E2E_P04ProtectStateType
            E2E_P04mCheckStateType
            E2E_P04mCheckStatusType
            E2E_P04mConfigType
            E2E_P04mProtectStateType
            E2E_P05CheckStateType
            E2E_P05CheckStatusType
            E2E_P05ConfigType
            E2E_P05ProtectStateType
            E2E_P06CheckStateType
            E2E_P06CheckStatusType
            E2E_P06ConfigType
            E2E_P06ProtectStateType
            E2E_P07CheckStatusType
            E2E_P07CheckStateType
            E2E_P07ConfigType
            E2E_P07ProtectStateType
            E2E_P07mCheckStateType
            E2E_P07mCheckStatusType
            E2E_P07mConfigType
            E2E_P07mProtectStateType
            E2E_P08CheckStateType
            E2E_P08CheckStatusType
            E2E_P08ConfigType
            E2E_P08ProtectStateType
            E2E_P08mCheckStateType
            E2E_P08mCheckStatusType
            E2E_P08mConfigType
            E2E_P08mProtectStateType
            E2E_P11CheckStatusType
            E2E_P11CheckStateType
            E2E_P11ConfigType
            E2E_P11DataIDMode
            E2E_P11ProtectStateType
            E2E_P22CheckStateType
            E2E_P22CheckStatusType
            E2E_P22ConfigType
            E2E_P22ProtectStateType
            E2E_P44CheckStateType
            E2E_P44CheckStatusType
            E2E_P44ConfigType
            E2E_P44ProtectStateType
            E2E_P44mCheckStateType
            E2E_P44mCheckStatusType
            E2E_P44mConfigType
            E2E_P44mProtectStateType
            E2E_PCheckStatusType
            E2E_SMCheckStateType
            E2E_SMConfigType
            E2E_SMStateType
            Std_Types:
            Std_ExtractProtocolHeaderFieldsType
            Std_MessageResultType
            Std_MessageTypeType
            Std_ReturnType
            Std_TransformerForwardCode (draft)
            Std_VersionInfoType
         </description>
         <comment>
            This requirement was adapted for profile E2EP07 and E2EP11 with SWS Release 4.3.0.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00047.Pxx</srcid><srcstatus/><internalId>146</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side, if the
            E2E_PXXCheck function returns a value different from E2E_P_OK, the status shall be
            set to E2E_P_ERR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00175.Pxx</srcid><srcstatus/><internalId>147</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and
            Profile is P04, P05, P06, P07, P08, P11, P22 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1.
            (RS_E2E_08538)
         </description>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00173.Pxx</srcid><srcstatus/><internalId>148</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
            requestCounter-1.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00172.Pxx</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
            of the csTransactionHandle to the value of the local variable receivedRequestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00203.Pxx</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
            of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00202.Pxx</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
            server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the address of the local variable
            sourceID
            - data length:
              inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00201.Pxx</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the local variable sourceID
            - data length:
              inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
                . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (out-of-place version) or
                . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00200.Pxx</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00199.Pxx</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields()
            function passing the inputBuffer, the inputBufferLength,
            the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00198.Pxx</srcid><srcstatus/><internalId>155</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function
            passing the buffer, the bufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00197.Pxx</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place
            and the out-of-place E2EXf_Inv_&lt;transformerId&gt; on the client-side shall
            set a local variable sourceID to the sourceID stored in the configuration
            (see SWS_E2EXf_00126).(RS_E2E_08538).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00196.Pxx</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of a local variable named messageType,
            and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00194.Pxx</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00193.Pxx</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
            precondition checks, without continuing further processing:
            1. extractProtocolHeaderFields == NULL
            2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00192.Pxx</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and
            PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXForward(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the above requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00191.Pxx</srcid><srcstatus/><internalId>161</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00168</id>
        <status>approved</status> <!-- draft in R22-11 -->
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
          If DataTransformationStatusForwarding is set to transformerStatusForwarding and
          PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
          E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
          the appropriate Config and State structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126])
          that are associated with &lt;transformerId&gt;, as well as buffer and bufferLength
          (only for P04, P05, P06, P07, P08, P11, P22 and P44) that were updated in requirements
          SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
          In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward() function,
          which is provided by the RTE. This parameter is associated with the optional IN parameter
          ForwardStatus from Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072),
          Rte_IWrite (SWS_Rte_03744) and Rte_IWriteRef (SWS_Rte_05509)(RS_E2E_08538)
        </description>
        <releases>
          <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
          <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00168.Pxx</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
            and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXProtect(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00190.Pxx</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used in a Client-Server Communication and
            Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
            the sequence counter for protecting the response shall be set to requestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00166.Pxx</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00208.NoCheck</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>E2E.SWS_E2EXf_00208.Pxx</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used for a response in a Client-Server Communication and
            Profile is P02 or P22 the sequence counter used for protecting the response shall
            be set to requestCounter -1. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00165.Pxx</srcid><srcstatus/><internalId>166</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; on the server-side shall
            set a local variable named requestCounter to the value of the e2eCounter element
            of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00189.Pxx</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall set a local variable sourceID to the value of the e2eSourceId
            element of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00188.Pxx</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00187.Pxx</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00186.Pxx</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00185</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
           For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
           the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
           the bufferLength, the address of local messageType variable, and the address of a local
           messageResult variable as parameters.
        </description>
        <releases>
           <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
           <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00185.Pxx</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
            to the sourceID stored in the configuration (see SWS_E2EXf_00126).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00184.Pxx</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00183.Pxx</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00181.Pxx</srcid><srcstatus/><internalId>175</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the inputBuffer, the inputBufferLength, the address of a local variable
            named messageType, and the address of a local variable named messageResult as
            parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00182.Pxx</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter - 1 shall be stored as requestCounter to be accessed by the
            E2EXf_Inv_&lt;transformerId&gt; for checking the response. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00171.Pxx</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
            accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00170.Pxx</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
            additional precondition checks, without continuing further processing:
             1. extractProtocolHeaderFields == NULL
             2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall
            return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00180.Pxx</srcid><srcstatus/><internalId>178</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            the receivedRequestCounter shall be set to state-&gt;LastValidCounter of
            E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00206.Pxx</srcid><srcstatus/><internalId>179</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
            P07, P08, P11, P22, P44, P04m, P07m, P08m or P44m the receivedRequestCounter shall be
            set to state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00207.Pxx</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

     <!--
         EB requirements valid for E2E profiles
     -->

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E
            Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00133.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.SWS_E2EXf_00133.NoCheck</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>E2E.EB.SWS_E2EXf_00133.Pxx</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.ASR421.SWS_E2EXf_00115
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.InPlace.NoCopying.Pxx</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
            all state structures managed by E2E transformer, calling the corresponding
            E2E_Init() method on each state variable.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00021
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.SWS_E2EXf_00021.Pxx</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.SWS_E2EXf_00116
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.InvTransformer.InPlace.NoCopying.Pxx</srcid><srcstatus/><internalId>142</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck.Pxx</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            to set the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck.Pxx</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            While in C/S communication, at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>E2E.EB.Transformer.Init.Client</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR.Pxx</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.Client.Pxx</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00102</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00106</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &amp;gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00109</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00115</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00111</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00139</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00107</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00018</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf,  ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00105</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00103</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00140</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11 </source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00123</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00141</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00124</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00142</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00104</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00029</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00028</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00027</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00112</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00113</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

      <specobject>
         <id>E2E.ASR421.SWS_E2EXf_00116.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00116</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00114</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00167</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00037</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00032</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00051</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00133</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00169</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.Transformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00021</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00047</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all method profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00175</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all method profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00173</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00172</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00203</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00202</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00201</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00200</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00199</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00198</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00197</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00196</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00194</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00193</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00192</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00191</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00168.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00168</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00190</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00166</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00208</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00165</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00189</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00188</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00187</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00186</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00185.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00185</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00184</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00183</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00182</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00181</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00171</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00170</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00180</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00206</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00207</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.SR</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.Client</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>ASR_E2E020012</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00012
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00012'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>ASR_E2E020673</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00673
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00673'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0200673</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>ASR_E2E020597</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00597.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00597'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This Requirement is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020347</srcid><srcstatus/><internalId>11</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <!-- E2E Profiles - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201205</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01205
         In E2E Profiles, on the sender side, for the first transmission request
         of a data element the counter shall be initialized with 0 and shall be incremented
         by 1 for every subsequent send request. When the counter reaches the maximum
         value, then it shall restart with 0 for the next send request. The maximum value of the
         counter depends on the size of the counter It is 0xFF (8bit counter), 0xFF’FF (16bit
         counter) or 0xFF’FF’FF’FF (32 bit).(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201205</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201206</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01206
         E2E Profiles shall use the CRC functions listed in chapters
         section 6.7, section 6.10, section 6.11, section 6.14, for calculating the CRC.(RS_-
         E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201206</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201207</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01207
         The CRC shall be calculated over the entire E2E header (excluding
         the CRC bytes) and over the user data.(RS_E2E_08531)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201207</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201209</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01209
         The function E2E_PXXProtect() shall have the overall behavior as
         shown in Figure 3.1.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect"/>.
      </para>
      <figure id="fig_E2E_PXXProtect">
        <title>E2E_PXXProtect</title>
        <inlinegraphic fileref="images/E2E_PXXProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201209</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201210</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01210
         The step ”Verify inputs of the protect function” in
         E2E_PXXProtect() shall behave as shown in Figure 3.2.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Verifyinputs"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Verifyinputs">
        <title>E2E_PXXProtect Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Verifyinputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201210</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201211</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01211
         The step ”Compute offset” in E2E_PXXProtect(), E2E_PXXForward() and E2E_PXXCheck()
         shall behave as shown in Figure 3.3.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset">
        <title>E2E_PXXProtect,E2E_PXXForward and E2E_PXXCheck Compute OffSet</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201211</srcid><srcstatus/><internalId>268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201212</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01212
         The step ”Write Length” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.4.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength">
        <title>E2E_PXXProtect, E2E_PXXForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_WriteLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201212</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201213</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01213
         The step ”Write Counter” in E2E_PXXProtect()
         shall behave as shown in Figure 3.5.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteCounter">
        <title>E2E_PXXProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201213</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201214</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01214
         The step ”Write DataID” in E2E_PXXProtect()
         shall behave as shown in Figure 3.6.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteDataID">
        <title>E2E_PXXProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201214</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201215</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01215
         The step ”Compute CRC” in
         E2E_PXXProtect(), E2E_PXXForward() and in E2E_PXXCheck()
         Shall behave as shown in Figure 3.7.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC">
        <title>E2E_PXXProtect, E2E_PXXForward and E2E_PXXCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201215</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201216</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01216
         The step ”Write CRC” in E2E_PXXProtect() and
         E2E_PXXForward() shall behave as shown in Figure 3.8.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_WriteCRC">
        <title>E2E_PXXProtect, E2E_PXXForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201216</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201217</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01217
         The step ”Increment Counter” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.9.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_IncrementCounter">
        <title>E2E_PXXProtect, E2E_PXXForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201217</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201218</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01218
         The function E2E_PXXForward() shall have the overall behavior
         as shown in Figure 3.10.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward"/>.
      </para>
      <figure id="fig_E2E_PXXForward">
        <title>E2E_PXXForward</title>
        <inlinegraphic fileref="images/E2E_PXXForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201218</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201228</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01228
         The step ”Verify inputs of the forward function” in
         E2E_PXXForward() shall behave as shown in Figure 3.11.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXForward_VerifyInputs">
        <title>E2E_PXXForward Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201228</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201219</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01219
         The step ”Write Counter” in E2E_PXXForward() shall behave as
         shown in Figure 3.12.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteCounter">
        <title>E2E_PXXForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201219</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201220</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01220
         The step ”Write DataID” in E2E_PXXForward() shall behave as
         shown in Figure 3.13.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteDataID">
        <title>E2E_PXXForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201220</srcid><srcstatus/><internalId>278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201221</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01221
         The function E2E_PXXCheck() shall have
         the overall behavior as shown in Figure 3.14.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck"/>.
      </para>
      <figure id="fig_E2E_PXXCheck">
        <title>E2E_PXXCheck</title>
        <inlinegraphic fileref="images/E2E_PXXCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201221</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201222</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01222
         The step ”Verify inputs of the check function” in
         E2E_PXXCheck() shall behave as shown in Figure 3.15.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_VerifyInputs">
        <title>E2E_PXXCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201222</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201223</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01223
         The step ”Read Length” in E2E_PXXCheck()
         shall behave as shown in Figure 3.16.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadLength">
        <title>E2E_PXXCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201223</srcid><srcstatus/><internalId>281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201224</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01224
         The step ”Read Counter” in E2E_PXXCheck()
         shall behave as shown in Figure 3.17.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCounter">
        <title>E2E_PXXCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201224</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201225</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01225
         The step ”Read DataID” in E2E_PXXCheck()
         shall behave as shown in Figure 3.18.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadDataID">
        <title>E2E_PXXCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201225</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201226</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01226
         The step ”Read CRC” in E2E_PXXCheck()
         shall behave as shown in Figure 3.19.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCRC">
        <title>E2E_PXXCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201226</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201227</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01227
         The step ”Do Checks” in E2E_PXXCheck()
         shall behave as shown in Figure 3.20.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_DoChecks">
        <title>E2E_PXXCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201227</srcid><srcstatus/><internalId>285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201250</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01250
         The E2E_PXXProtect and E2E_PXXForward functions ’state’
         shall have the members defined in (see Table 6.5).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the next
         Data. The initial value is 0, which means that in the first cycle, Counter is 0. Each
         time E2E_PXXProtect() is called, it increments the counter up to the maximum
         value (0xFF for 8 bit counter, 0xFF’FF for a 16 bit counter and 0xFF’FF’FF’FF for a 32
         bit counter). After the maximum value is reached, the next value is 0x0. The overflow
         is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201250</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201251</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01251
         The E2E_PXXCheck functions ’State’ shall have the members
         defined in (see Table 6.6).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201251</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201252</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01252
         The E2E_PXXCheck functions ’State-&gt;Status’ enumeration type
         shall consist the following enumeration values (see Table 6.7).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXSTATUS_REPEATED.|
         E2E_PXXSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong crc, wrong length, wrong options, wrong Data ID).|
         E2E_PXXSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, with the exception of the repetition.|
         E2E_PXXSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).|
         E2E_PXXSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, with the exception of counter jump, which changed more than the
         allowed delta|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201252</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <!-- E2E Profiles for Methods - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201156</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01156
         In E2E profiles for methods, the counter on the sender side shall
         be initialized with 0 for the first transmission request of a data element the counter
         and shall be incremented by 1 for every subsequent send request. When the counter
         reaches the maximum value (0xFF’FF for a 16bit counter, 0xFF’FF’FF’FF for a 32bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64bit counter), then it shall restart with
         0 for the next send request.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201156</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201157</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01157
         In the E2E profiles for methods, the Data ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201157</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201159</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01159
         E2E profiles for methods shall use the function defined in PXXMCALCULATE_CRC
         of the SWS CRC supervision for calculating the CRC.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201159</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201160</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01160
         In E2E profiles for methods, the CRC shall be calculated over
         the entire E2E header (excluding the CRC bytes) and over the user data.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201160</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201161</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01161
         In the E2E profiles for methods the Message Type field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201161</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201162</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01162
         A Message Type field with a value of 0 indicates a request message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201162</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201163</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01163
         A Message Type field with a value of 1 indicates a response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201163</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201203</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01203
         In the E2E profiles for methods the Message Result field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.c(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201203</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201164</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01164
         A Message Result field with a value of 0 indicates a normal response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201164</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201165</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01165
         A Message Result field with a value of 1 indicates an error response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201165</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201166</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01166
         The Message Result field shall be set to 0 for request messages
         (i.e., in case the Message Type field is set to 0).(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201166</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201167</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01167
         In the E2E profiles for methods, the Source ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201167</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201169</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01169
         The function E2E_PXXmProtect() shall have the overall behavior as shown in Figure 3.21.
         (RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect">
        <title>E2E_PXXmProtect()</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201169</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01170
         The step ”Verify inputs of the protect function” in
         E2E_PXXmProtect() shall behave as shown in Figure 3.22.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_VerifyInputs">
        <title>E2E_PXXmProtect Input Verification</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201170</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01171
         The step ”Compute offset” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.23.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset">
        <title>E2E_PXXmProtect/Forward/SourceCheck/SinkCheck offset Computation</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201171</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201172</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01172
         The step ”Write Length” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.24.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteLength">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201172</srcid><srcstatus/><internalId>304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01173
         The step ”Write Counter” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.25.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteCounter">
        <title>E2E_PXXmProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201173</srcid><srcstatus/><internalId>305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201174</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01174
         The step ”Write DataID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.26.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteDataID">
        <title>E2E_PXXmProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201174</srcid><srcstatus/><internalId>306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201175</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01175
         The step ”Write SourceID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.27.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteSourceID">
        <title>E2E_PXXmProtect Write SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201175</srcid><srcstatus/><internalId>307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201176</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01176
         The step ”Write Message Type” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.28.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageType">
        <title>E2E_PXXmProtect Write Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201176</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201177</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01177
         The step ”Write Message Result” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.29.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageResult">
        <title>E2E_PXXmProtect Write Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201177</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201178</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01178
         The step ”Compute CRC” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.30.(RS_E2E_08539)
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC"/>.
        </para>
        <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC">
        <title>E2E_PXXmProtect, E2E_PXXmForward, E2E_PXXmSourceCheck and E2E_PXXmSinkCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC.png" width="70%"/>
        </figure>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201178</srcid><srcstatus/><internalId>310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201179</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01179
         The step ”Write CRC”in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.31.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteCRC">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201179</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201180</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01180
         The step ”Increment Counter” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.32.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_IncrementCounter">
        <title>E2E_PXXmProtect and E2E_PXXmForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201180</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201181</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01181
         The function E2E_PXXmForward() shall have the overall
         behavior as shown in Figure 3.33.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward"/>.
      </para>
      <figure id="fig_E2E_PXXmForward">
        <title>E2E_PXXmForward</title>
        <inlinegraphic fileref="images/E2E_PXXmForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201181</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201182</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01182
         The step ”Verify inputs of the forward function” in
         E2E_PXXmForward() shall behave as shown in Figure 3.34.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_VerifyInputs">
        <title>E2E_PXXmForward Verify inputs of the forward function</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201182</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201183</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01183
         The step ”Write Counter” in E2E_PXXmForward()
         shall behave as shown in Figure 3.35.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteCounter">
        <title>E2E_PXXmForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201183</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201184</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01184
         The step ”Write DataID” in E2E_PXXmForward()
         shall behave as shown in Figure 3.36.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteDataID">
        <title>E2E_PXXmForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201184</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201185</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01185
         The function E2E_PXXmSourceCheck() for the client side
         shall have the overall behavior as shown in Figure 3.37.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck">
        <title>E2E_PXXmSourceCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201185</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201186</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01186
         The step ”Verify inputs of the function” in
         E2E_PXXmSourceCheck() shall behave as shown in Figure 3.38.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_VerifyInputs">
        <title>E2E_PXXmSourceCheck Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201186</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201187</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01187
         The step ”Read Length” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.39.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201187</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201188</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01188
         The step ”Read Counter” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.40.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201188</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201189</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01189
         The step ”Read DataID” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.41.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201189</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201190</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01190
         The step ”Read SourceID” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.42.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_ReadSourceID">
        <title>E2E_PXXmSourceCheck SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201190</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201191</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01191
         The step ”Read Message Type” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.43.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201191</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201192</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01192
         The step ”Read Message Result” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.44.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201192</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201193</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01193
         The step ”Read CRC” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.45.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201193</srcid><srcstatus/><internalId>325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201194</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01194
         The step ”Do Checks” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.46.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_DoChecks">
        <title>E2E_PXXmSourceCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201194</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201195</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01195
         The function E2E_PXXmSinkCheck() for the server side
         shall have the overall behavior as shown in Figure 3.47.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck">
        <title>E2E_PXXmSinkCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201195</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201196</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01196
         The step ”Verify inputs of the check function” in
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.48.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_VerifyInputs">
        <title>E2E_PXXmSinkCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201196</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201197</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01197
         The step ”Read SourceID” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.49.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_ReadSourceID">
        <title>E2E_PXXmSinkCheck Read SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201197</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201198</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01198
         The step ”Do Checks” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.50.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_DoChecks">
        <title>E2E_PXXmSinkCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201198</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201199</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01199
         The E2E_PXXmProtect() and E2E_PXXmForward() functions’
         ”state” shall have the members defined in Table 6.9.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the
         next Data. The initial value is 0, which means that in the first cycle, counter
         is 0. Each time E2E_PXXmProtect() is called, it increments the counter up to
         its maximum value (0xFF’FF for a 16 bit counter, 0xFF’FF’FF’FF for a 32 bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64 bit counter). After the maximum value
         is reached, the next value is 0x0. The overflow is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201199</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201200</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01200
         The E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         functions’ ”state” shall have the members defined in Table 6.10.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201200</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201201</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01201
         The step ”Do Checks” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall set State-&gt;Status to one of the following enumeration
         values (see Table 6.11).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXMSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXMSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXMSTATUS_REPEATED.|
         E2E_PXXMSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong CRC, wrong Length, wrong Options, wrong Data ID).
         E2E_PXXMSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, except for the repetition.
         E2E_PXXMSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).
         E2E_PXXMSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, except for a counter jump, which changed more than the allowed delta.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0201201</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200739</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00739
         The MessageType argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.2).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGETYPE_REQUEST | 0 | The type of the message is a request message
         which is sent from the client to the server.
         STD_MESSAGETYPE_RESPONSE | 1 | The type of the message is a response
         message which is sent from the server to the client.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0200739</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200743</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00743
         The MessageResult argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.3).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGERESULT_OK | 0 | The type of the result in the response message
         is a normal (i.e., a non erroneus) result. This value is also used for the request
         messages, where the value of this field is fixed to this value.
         STD_MESSAGERESULT_ERROR | 1 | The type of the result int the response
         message is an error (i.e., an erroneus) result.|
      </description>
      <furtherinfo>
       Justifying rule: WRN.swurs.needscoverage.count violation.
       This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0200743</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200677</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00677
         The mapping between profile independent and profile specific
         states shall be as described in the table(Table 7.1): (yy is one of the profiles
         01,02,04,05,06,07,08,11,22,44,04m,07m)(RS_E2E_08534, RS_E2E_08528)
         Name | Value | Description |
         Profile independent result | Profile specific result with yy one of profiles
         (01,02,04,05,06,07,08,11,22,44,04m,07m)|
         OK | E2E_PyySTATUS_OK |
         OK | E2E_PyySTATUS_OKSOMELOST |
         WRONGCRC | E2E_PyySTATUS_ERROR |
         REPEATED | E2E_PyySTATUS_REPEATED |
         NONEWDATA | E2E_PyySTATUS_NONEWDATA |
         WRONGSEQUENCE | E2E_PyySTATUS_WRONGSEQUENCE |
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206300</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06300
        MaxDeltaCounter for Client-Server Communication(server) For Client-Server Communication the
        MaxDeltaCounter on server-side shall be set to the maximum of the value range of the
        sequence counter.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0206300</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206303</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06303
        MaxDeltaCounter for Client-Server Communication (client)
        For Client-Server Communication the MaxDeltaCounter on client-side shall be set
        to 1.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx0206303</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>ASR_E2EPxx0200673</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E020673</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201205</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201205</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201206</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201206</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201207</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201207</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201209</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201209</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201210</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201210</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201211</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201211</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201212</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201212</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201213</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201213</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201214</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201214</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201215</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201215</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201216</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201216</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201217</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201217</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201218</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201218</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201228</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201228</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201219</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201219</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201220</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201220</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201221</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201221</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201222</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201222</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201223</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201223</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201224</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201224</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201225</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201225</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201226</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201226</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201227</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201227</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201250</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201250</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201251</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201251</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201252</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201252</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201156</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201156</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201157</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201157</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201159</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201159</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201160</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201160</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201161</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201161</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201162</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201162</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201163</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201163</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201203</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201203</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201164</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201164</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201165</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201165</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201166</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201166</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201167</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201167</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201169</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201169</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201170</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201170</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201171</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201171</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201172</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201172</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201173</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201173</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201174</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201174</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201175</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201175</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201176</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201176</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201177</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201177</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201178</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201178</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201179</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201179</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201180</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201180</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201181</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201181</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201182</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201182</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201183</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201183</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201184</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201184</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201185</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201185</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201186</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201186</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201187</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201187</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201188</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201188</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201189</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201189</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201190</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201190</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201191</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201191</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201192</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201192</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201193</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201193</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201194</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201194</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201195</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201195</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201196</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201196</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201197</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201197</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201198</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201198</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201199</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201199</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201200</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201200</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0201201</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0201201</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0200739</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0200739</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx0200743</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0200743</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00235</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00235</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC01204</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC01204</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC01158</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC01158</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC01168</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC01168</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00239</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00239</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00238</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00238</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00325</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00325</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00236</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00236</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00170</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00170</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00171</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00171</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00062</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00062</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00063</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00063</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00320</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00320</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00173</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00173</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00055</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00055</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00071</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00071</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00606</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00606</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
      
       <specobject>
         <id>ASR_E2EPxx0206300</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0206300</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
         </providescoverage>
       <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

       <specobject>
         <id>ASR_E2EPxx0206303</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E0206303</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00741</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00741</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00313</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00313</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00202</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00202</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00203</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00203</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00204</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00204</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00205</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00205</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00232</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00232</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00206</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00206</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00207</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00207</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00209</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00209</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00233</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00233</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00277</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00277</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00278</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00278</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

      <specobject>
         <id>ASR_E2EPxx02UC00258</id>
         <status>rejected</status>
         <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR FO R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>ASR_E2E02UC00258</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!-- SWS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00313
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00313'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00313</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00202
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00202'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00202</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00203
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00203'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00203</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00204</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00205
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00205'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00205</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00232
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00232'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00232</srcid><srcstatus/><internalId>361</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00206
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00206'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00206</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00207
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00207'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00207</srcid><srcstatus/><internalId>363</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00209
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00209'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00209</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00233
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00233'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00233</srcid><srcstatus/><internalId>365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00277
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00277'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00277</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00278
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00278'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00278</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00258
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00258'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00258</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200115</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00115
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00115'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <!-- PRS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00235</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00235
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00235'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00235</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01204</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC01204</srcid><srcstatus/><internalId>337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01158</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01158
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01158'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC01158</srcid><srcstatus/><internalId>338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01168</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01168
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01168'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC01168</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00239</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00239
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00239'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00239</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00238</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00238
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00238'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00238</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00325</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00325
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00325'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00325</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00236</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00236
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00236'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00236</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00170
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00170'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00170</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00171
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00171'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00171</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00062</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00062
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00062'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00062</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00063</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00063
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00063'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00063</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00320</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00320
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00320'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00320</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00173
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00173'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00173</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00055</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00055
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00055'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00055</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00071</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00071
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00071'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00071</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00606</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00606
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00606'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00606</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00741</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00741
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_USE_00741'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EPxx02UC00741</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>EB_E2E020003</id>
         <status>rejected</status>
         <source>placeholder</source>
         <version>1</version>
         <description>
            This dummy object provides coverage for the requirement which
            demands the implementation of a sequence counter by a personalized
            extension of the E2E module (profile xx).
            This allows having a complete tracing in case the tracing of the
            E2E module is built stand-alone (without any profile).
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.001</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

      <specobject>
         <id>EB_E2E020004</id>
         <status>rejected</status>
         <source>placeholder</source>
         <version>1</version>
         <description>
            This dummy object provides coverage for the requirement which
            demands the implementation of a data ID by a personalized
            extension of the E2E module (profile xx).
            This allows having a complete tracing in case the tracing of the
            E2E module is built stand-alone (without any profile).
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.002</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

      <specobject>
         <id>EB_E2E020005</id>
         <status>rejected</status>
         <source>placeholder</source>
         <version>1</version>
         <description>
            This dummy object provides coverage for the requirement which
            demands the implementation of a Cyclic Redundancy Check by a personalized
            extension of the E2E module (profile xx).
            This allows having a complete tracing in case the tracing of the
            E2E module is built stand-alone (without any profile).
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.003</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

      <specobject>
         <id>EB_E2E020006</id>
         <status>rejected</status>
         <source>placeholder</source>
         <version>1</version>
         <description>
            This dummy object provides coverage for the requirement which
            demands the implementation of data length information by a personalized
            extension of the E2E module (profile xx).
            This allows having a complete tracing in case the tracing of the
            E2E module is built stand-alone (without any profile).
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.007</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--  E2E EB-SPECIFIC REQUIREMENTS  -->

      <specobject>
         <id>EB_E2E020001</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module's BSWMD shall be generated using a generator
            mode named "generate_swcd".
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ComTest_02_Bswmd</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.004</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

      <specobject>
         <id>EB_E2E020002</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module's BSWMD shall contain the specification
            of the memory abstraction used in the Basic Software.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ComTest_02_Bswmd</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.004</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

      <specobject>
         <id>EB_E2E.MethodChecks</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall check the value ranges of the E2E for method parameters
            SourceID, MessageType and MessageResult and shall return E2E_E_OK if all are valid.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12001_MethodChecks</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.011</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

      <specobject>
         <id>EB_E2E.MethodChecks.SourceID</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall return E2E_E_INPUTERR_WRONG, if the E2E for methods parameter SourceID
            exceeds the value range of 0xFFFFFFF.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12001_MethodChecks</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.011</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

      <specobject>
         <id>EB_E2E.MethodChecks.MessageType</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall return E2E_E_INPUTERR_WRONG, if the E2E for methods parameter MessageType
            neither equals STD_MESSAGETYPE_REQUEST (zero) nor equals STD_MESSAGETYPE_RESPONSE (one).
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12001_MethodChecks</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.011</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

      <specobject>
         <id>EB_E2E.MethodChecks.MessageResult</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall return E2E_E_INPUTERR_WRONG, if the E2E for methods parameter MessageResult
            neither equals STD_MESSAGERESULT_OK (zero) nor equals STD_MESSAGERESULT_ERROR (one).
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12001_MethodChecks</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.011</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

      <specobject>
         <id>EB_E2E020007_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The function-like macro E2E_PACKSIG() shall serialize the value of the Data Element member passed via
            arguments appData and structmember (i.e. appData-&gt;structmember) to the byte-array (pointed to by
            memptr) at bit-position bitpos with bitlength bitlength with the endianess encoded in argument sigtype.
            Note:
            sigtype=E2E_LE_-... means endianess=little endian
            sigtype=E2E_BE_-... means endianess=big endian
         </description>
         <comment>
            Packing of 64 bit signal types includes the following limitations:
            - signal shall be byte aligned
            - bitlength shall be a multiple of 8
            - bitlength shall have a proportionality constancy to nbytes
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_PackMacros</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnPackMacrosFloat</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_LE</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_BE</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_LE</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_BE</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackUnPackMacrosFLOAT64Bit_LE_BE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.008</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

      <specobject>
         <id>EB_E2E020008_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The function-like macro E2E_UNPACKSIG() shall de-serialize the byte-array (pointed to by
            memptr) at bit-position bitpos with bitlength bitlength with the endianess encoded in argument sigtype
            to the Data Element member passed via arguments appData and structmember (i.e. appData-&gt;structmember).
            Note:
            sigtype=E2E_LE_-... means endianess=little endian
            sigtype=E2E_BE_-... means endianess=big endian
         </description>
         <comment>
            Unpacking of 64 bit signal types includes the following limitations:
            - signal shall be byte aligned
            - bitlength shall be a multiple of 8
            - bitlength shall have a proportionality constancy to nbytes
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_UnPackMacrosFloat</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnpackMacros</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnPackMacrosU64Bit_LE</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnPackMacrosU64Bit_BE</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnPackMacrosS64Bit_LE</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_UnPackMacrosS64Bit_BE</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackUnPackMacrosFLOAT64Bit_LE_BE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.009</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

      <specobject>
         <id>EB_E2E020009_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The function-like macro E2E_PACKSIG() shall set the variable E2E_RangeCheckRetVal to value
            E2E_RANGECHK_INVALID, if the value of the Data Element member passed via arguments appData and
            structmember (i.e. appData-&gt;structmember) cannot be represented by the mapped Com signal with the
            passed bit-length (see argument bitlength) and signal type (see argument sigtype).
         </description>
         <comment>
            Note:
             - Range checks for float signal types are not supported.
             - Range checks for 64bit signal types are only supported on byte level.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_RangeCheckMacros</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_LE</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_BE</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_LE</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_BE</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackUnPackMacrosFLOAT64Bit_LE_BE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.010</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

      <specobject>
         <id>EB_E2E020010_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The function-like macro E2E_PACKSIG() shall set the variable E2E_RangeCheckRetVal to value
            E2E_RANGECHK_VALID, if the value of the Data Element member passed via arguments appData and
            structmember (i.e. appData-&gt;structmember) can be represented by the mapped Com signal with the
            passed bit-length (see argument bitlength) and signal type (see argument sigtype).
         </description>
         <comment>
            Note:
             - Range checks for float signal types are not supported.
             - Range checks for 64bit signal types are only supported on byte level.
         </comment>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_RangeCheckMacros</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_LE</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosU64Bit_BE</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_LE</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackMacrosS64Bit_BE</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_PackUnPackMacrosFLOAT64Bit_LE_BE</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.010</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

      <specobject>
         <id>EB_E2E020011_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The file E2E_UnPackSig.h shall define a macro E2E_RANGECHK_VALID with value 0U.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_RangeCheckRetVal</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.010</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

      <specobject>
         <id>EB_E2E020012_COMXF_S</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The file E2E_UnPackSig.h shall define a macro E2E_RANGECHK_INVALID with value 255U.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_RangeCheckRetVal</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.010</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks based on the E2EXf specification.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_InPlaceTransPreCondCheck_001</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_OutOfPlaceTransPreCondCheck_002</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceTransPreCondCheck_007</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_OutOfPlaceTransPreCondCheck_008</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.InP</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.OoP</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.InP</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.OoP</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.InP</srcid><srcstatus/><internalId>423</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.OoP</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.InP</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.OoP</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.011</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.InP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            in-place transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12002_E2EXf_PXXmSourceInPlaceTransPreCondCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.OoP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            out-of-place transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12003_E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.InP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            in-place inverse transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12004_E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.OoP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            out-of-place inverse transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12005_E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.InP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            in-place transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12006_E2EXf_PXXmSinkInPlaceTransPreCondCheck</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.OoP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            out-of-place transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12007_E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.InP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            in-place inverse transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12008_E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

      <specobject>
         <id>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.OoP</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for precondition checks for method parameters based on the E2EXf specification for
            out-of-place inverse transformers.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_12009_E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

      <specobject>
         <id>EB_E2E020017_E2EXF</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            for buffer preparation based on the E2EXf specification.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_InPlaceShiftUpperHeaderToLeft_003</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_CopyOutOfPlaceBuffer_004</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceShiftUpperHeaderToRight_005</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_CopyOutOfPlaceBuffer_006</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

      <specobject>
         <id>EB_E2E020018_E2EXF</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall provide functionality
            which sets the return value of E2E_SMCheck according to the
            E2EXf specification.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_SMCheck_009</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

      <specobject>
         <id>EB_E2E020019_E2EXF</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            For the E2EXf module usage the E2E module shall be able to instrument the bufferLength type
            of the precondition check functionality and the buffer preparation functionality (either
            with uint16 or uint32) according to the Xfrm configuration parameter XfrmBufferLengthType.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_InPlaceTransPreCondCheck_001</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_OutOfPlaceTransPreCondCheck_002</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_InPlaceShiftUpperHeaderToLeft_003</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_CopyOutOfPlaceBuffer_004</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceShiftUpperHeaderToRight_005</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_CopyOutOfPlaceBuffer_006</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceTransPreCondCheck_007</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2E_ConTest_06_E2EXf_Inv_OutOfPlaceTransPreCondCheck_008</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

      <specobject>
         <id>EB_E2E020111</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            E2E.h shall exclusively include: CRC.h, Std_Types.h,
            PlatformTypes.h; E2E.h shall not include any other files.
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_02_IncludeFiles</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.004</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

      <specobject>
         <id>EB_E2E020112</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            E2E.c shall exclusively include E2E.h
         </description>
         <needscoverage>
            <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_ConTest_02_IncludeFiles</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
            <provcov>
               <linksto>E2E.top.004</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!-- TL Requirements for providing Safe ComXf implementation -->

      <specobject>
         <id>E2E.top.008</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide functionality to pack signals (of native data types)
            into a linear memory.
         </description>
         <comment>
            This requirement aims for the implementation of the Safe COM Based Transformer
            which is part of the E2E module.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_E2E020007_COMXF_S</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

      <specobject>
         <id>E2E.top.009</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide functionality to unpack signals from a linear memory
            into native data types.
         </description>
         <comment>
            This requirement aims for the implementation of the Safe COM Based Transformer
            which is part of the E2E module.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_E2E020008_COMXF_S</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

      <specobject>
         <id>E2E.top.010</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide functionality to check if the numeric values of a signal
            is inside the range defined by the bit width of the signal.
         </description>
         <comment>
            This requirement aims for the implementation of the Safe COM Based Transformer
            which is part of the E2E module.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_E2E020009_COMXF_S</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020010_COMXF_S</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020011_COMXF_S</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020012_COMXF_S</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.007</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If used to transmit data with dynamic length, the E2E module shall
            add data length information to the E2E header.
         </description>
         <comment>
            The modules E2EPxx (if designed to transmit and receive dynamic data) contain
            the implementation of the data length information.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201212</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201223</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020006</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.001</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a sequence counter mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the sequence counter mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201205</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201213</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201217</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201219</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201224</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201250</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201251</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201156</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020003</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

      <specobject>
         <id>E2E.top.002</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a data ID mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the data ID mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201214</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201220</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201225</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201157</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020004</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

      <specobject>
         <id>E2E.top.003</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a Cyclic Redundancy Check mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the Cyclic Redundancy
            Check mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201206</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201207</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201215</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201216</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201226</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201252</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201159</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201160</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020005</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

      <!--
        Top Level requirements motivated by module specific behavior
    -->

      <specobject>
         <id>E2E.top.004</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall modularly structure static implementation files and data types.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020048</srcid><srcstatus/><internalId>0</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020037</srcid><srcstatus/><internalId>9</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020001</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020002</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020111</srcid><srcstatus/><internalId>430</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020112</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

      <specobject>
         <id>E2E.top.005</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall check input parameter for validity.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020047</srcid><srcstatus/><internalId>1</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020347</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020673</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020597</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201210</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201228</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201222</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201170</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

      <specobject>
         <id>E2E.top.006</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide a mechanism to read the version number.
      </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E020032</srcid><srcstatus/><internalId>7</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020033</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020038</srcid><srcstatus/><internalId>10</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

      <specobject>
         <id>E2E.top.011</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall support client-server communication via methods for PXXm profiles.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201161</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201162</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201163</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201203</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201164</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201165</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201166</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201167</srcid><srcstatus/><internalId>223</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>228</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201175</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201176</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201177</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201190</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201191</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201192</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201197</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>253</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>254</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200739</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200743</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206300</srcid><srcstatus/><internalId>260</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206303</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>EB_E2E.MethodChecks</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>EB_E2E.MethodChecks.SourceID</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>EB_E2E.MethodChecks.MessageType</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>EB_E2E.MethodChecks.MessageResult</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>EB_E2E020016_E2EXF.MethodsPreCondChecks</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2E.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2E_VerifyCodeStub</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.E2E.NoSupportOfBuildingCustomizedProfiles</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/E2E_E2EXf_Stc.h_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/src/Autosar/include/E2E_E2EXf_Stc.h</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00030.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/build/reqm/common_req/E2E_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(E2E.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ComTest_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Compile/IN/E2E_ComTest_01/source/application/E2E_ComTest_01.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The generic parts of the End-to-End Communication Protection Library Module
  shall be translated.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: 
1. Call E2E_GetVersionInfo()

Test Output: 
1. E2E_GetVersionInfo() shall be translated
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ComTest_02_Bswmd</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Compile/IN/E2E_ComTest_02_Bswmd/source/application/E2E_ComTest_02_Bswmd.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

  This test checks that the E2E module's generator generates a
  syntactically and semantically valid basic software module
  description (BSWMD), generated when the generator mode "generate_swcd" is
  invoked and containing the correct specification
  of the memory abstraction.

  Note: This test aspect is fulfilled by comparing the generated BSWMD
  with the BSWMD in the reference folder.


Test Object: None.
Test Precondition: 

  Folder 'reference' provides
    - E2E_Bswmd.arxml (golden reference file for comparison with generated Bswmd
                       containing the expected specification of the memory
                       abstraction)


Test Execution: 

TS5 Test environment steps (see Merged_Makefile.mak):
  01: Invoke "generate_swcd"
  02: VP
      The generated file 'E2E_Bswmd.arxml' in directory swcd
      equals the reference file
  03: VP (EB_E2E020001, EB_E2E020002)
      Include the difference of the comparison of step 02 in
      this testcase

Note: If there are differences, then due to Step 03 the included file
contains not compilable content.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ConTest_01_IsMacro_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_E_INPUTERR_NULL with the value 0x13U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 

 01: VP (ASR_E2E020047.1)
     macro E2E_E_INPUTERR_NULL is defined with value 0x13U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_IsMacro_002</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_E_INPUTERR_WRONG with the value 0x17U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 

 01: VP (ASR_E2E020047.2)
     macro E2E_E_INPUTERR_WRONG is defined with value 0x17U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_IsMacro_003</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_E_INTERR with the value 0x19U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020047.3)
     macro E2E_E_INTERR is defined with value 0x19U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_IsMacro_004</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_E_OK with the value 0x00U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 

 01: VP (ASR_E2E020047.4)
     macro E2E_E_OK is defined with value 0x00U


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_IsMacro_005</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_E_INVALID with the value 0xFFU.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020047.5)
     macro E2E_E_INVALID is defined with value 0xFFU

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020047.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_OK with the value 0x00U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.1)
     macro E2E_P_OK is defined with value 0x00U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_002</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_REPEATED with the value 0x01U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.2)
     macro E2E_P_REPEATED is defined with value 0x01U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_003</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_WRONGSEQUENCE with the value 0x02U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.3)
     macro E2E_P_WRONGSEQUENCE is defined with value 0x02U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_004</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_ERROR with the value 0x03U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.4)
     macro E2E_P_ERROR is defined with value 0x03U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_005</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_NOTAVAILABLE with the value 0x04U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.5)
     macro E2E_P_NOTAVAILABLE is defined with value 0x04U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PCheckStatusMacro_006</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check the definition of the macros
   E2E_P_NONEWDATA with the value 0x05U.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 01: VP (ASR_E2E020347.6)
     macro E2E_P_NONEWDATA is defined with value 0x05U

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020347.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_GetVersionInfo_002</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall check that the function E2E_GetVersionInfo() correctly
    returns the version information vendor ID, module ID, instanceID,
    sw_major_version, sw_minor_version, and sw_patch_version.

Test Object: None.
Test Precondition: None.
Test Execution: 

 01: VP (ASR_E2E020032)
     call function with valid pointer

 02: VP (ASR_E2E020033)
     vendorID 1U (i.e. Elektrobit) is returned

 03: VP (ASR_E2E020033)
     moduleID 207U is returned

 04: VP (ASR_E2E020033)
     sw_major_version as defined in config.mk is returned

 05: VP (ASR_E2E020033)
     sw_minor_version as defined in config.mk is returned

 06: VP (ASR_E2E020033)
     sw_patch_version as defined in config.mk is returned

 07: call function with invalid pointer (NULL_PTR)

 08: VP (ASR_E2E020032)
     NULL_PTR is returned


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>ASR_E2E020033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>571</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall check the correct definition of the common published information
    provided in the module header file as required by BSW00402 in the SRS
    General on Basic Software Modules (see also: BSW00318, BSW00441, BSW00374,
    BSW00379).

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 

  01 VP (BSW00402, BSW00441, BSW00402, BSW00374)
     E2E_VENDOR_ID is defined
     with the value globally provided by the tooling environment
  02 VP (BSW00402, BSW00441, BSW00379)
     E2E_MODULE_ID is defined with 0x2BU
  03 VP (BSW00318, BSW00441)
     E2E_AR_RELEASE_MAJOR_VERSION is defined
     with the value specified in config.mk
  04 VP (BSW00402, BSW00441, BSW00318)
     E2E_AR_RELEASE_MINOR_VERSION is defined
     with the value specified in config.mk
  05 VP (BSW00402, BSW00441, BSW00318)
     E2E_AR_RELEASE_REVISION_VERSION is defined
     with the value specified in config.mk
  06 VP (BSW00402, BSW00441, BSW00318)
     E2E_SW_MAJOR_VERSION is defined
     with the value specified in config.mk
  07 VP (BSW00402, BSW00441, BSW00318)
     E2E_SW_MINOR_VERSION is defined
     with the value specified in config.mk
  08 VP (BSW00402, BSW00441, BSW00318)
     E2E_SW_PATCH_VERSION is defined
     with the value specified in config.mk
  09 VP
     E2E_AR_MAJOR_VERSION is defined
     with the value specified in config.mk
  10 VP
     E2E_AR_MINOR_VERSION is defined
     with the value specified in config.mk
  11 VP
     E2E_AR_PATCH_VERSION is defined
     with the value specified in config.mk


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_01_NoConfigParams</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_01_General/source/application/E2E_ConTest_01_General.c</sourcefile>
      <sourceline>696</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall check that the profile does not
    have any configuration options.

Test Object: None.
Test Precondition: None.
Test Execution: 

 TS5 build process steps:
 01: Provide a reference file E2E_Config.txt
     that contains the first line of the configuration
     container of the module configuration
 02: grep all variables of the installed
     profile configuration and for the name of
     the configuration container
 02a: remove all allowed variables from the result of step 02,
     i.e parameters of CommonPublishedInformation and PublishedInformation
 03: Compare the result of Step 2a with
     E2E_Config.txt
     and store the difference into
     E2E_Config.txt.diff.
 04: VP (ASR_E2E020037)
     Step 03 reveals no difference
     (i.e. E2E_Config.txt.diff is empty)
 05: Include comparison differences of Step 04
     (i.e. E2E_Config.txt.diff)
     within this file.
 06: Compile this file
 07: VP (ASR_E2E020037)
     This file compiles without errors.
 08: Execute this test case
 09: VP (ASR_E2E0037)
     TS5ATL_RESULT_SUCCESS is returned Step 08

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ConTest_02_IncludeFiles</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_02_Includes/source/application/E2E_ConTest_02_Includes.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  This test shall check that E2E.h exclusively includes
   the files Std_Types.h, Platform_Types.h, MemMap.h, MemMap.h
   and that E2E.c exclusively includes the files E2E.h, MemMap.h.
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file includesOf_E2E.h.txt
     that contains the includes:
     Std_Types.h, Platform_Types.h, MemMap.h, MemMap.h
  2) Provide a reference file includesOf_E2E.c.txt
     that contains the includes:
     E2E.h, MemMap.h
  3) Extract all includes of E2E.h
  4) Extract all includes of E2E.c
  5) VP (EB_E2E020111)
     Compare all includes of Step 3 with the
     reference file includesOf_E2E.h.txt
     and store difference
     in file includesOf_E2E.h.txt.diff.
  6) VP (EB_E2E020112)
     Compare all includes of Step 4 with the
     reference file includesOf_E2E.c.txt
     and store difference
     in file includesOf_E2E.c.txt.diff.
  7) Include comparison differences of Step 5 and Step 6
     (i.e. includesOf_E2E.h.txt.diff and
     includesOf_E2E.c.txt.diff) within this file.
  8) VP (EB_E2E020111, EB_E2E020112)
     This file compiles without errors.
  9) Execute this test case which always returns
     TS5ATL_RESULT_SUCCESS

 
Test Input: 
 
Test Output: 

   Test pass criteria:
     1) The extracted includes of Step 5 and
        the reference file are identical.
     2) The extracted includes of Step 6 and
        the reference file are identical.
     3) In Step 8, this file compiles without errors.
     4) In Step 9, TS5ATL_RESULT_SUCCESS is returned.
   Note:
    If Criteria 1) or 2) is violated, then the
    build process is aborted and an error is reported.
    Further, if Criteria 1) or 2) is violated,
    then this file will not compile due to the
    inclusion of the diff results which contains
    not compilable text (backup in case the build process
    incorrectly does not abort).

 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ConTest_03_Files</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_03_Files/source/application/TS_E2E_ConTest_03_Files.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that the generic part
   of the E2E library shared with all profiles
   is built of the following files: E2E.h, E2E_UnPackSig.h, E2E_ComXf_S_Stc.h,
   and E2E.c
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file E2E_HeaderFiles.txt
     that contains: E2E.h
  2) Provide a reference file E2E_SourceFiles.txt
     that contains: E2E.c
  3) Search for all header files existing in the
     installed Tresos plugin of E2E
  4) Search for all source files existing in the
     installed Tresos plugin of E2E
  5) Compare the found files of Step 3 with the
     files listed in E2E_HeaderFiles.txt
     and store the difference into
     E2E_HeaderFiles.txt.diff.
  6) VP (ASR_E2E020048)
     Step 5 reveals no difference
     (i.e. E2E_HeaderFiles.txt.diff is empty)
  7) Compare the found files of Step 4 with the
     files listed in E2E_SourceFiles.txt
     and store the difference into
     E2E_SourceFiles.txt.diff.
  8) VP (ASR_E2E020048)
     Step 7 reveals no difference
     (i.e. E2E_SourceFiles.txt.diff is empty)
  9) Include comparison differences of Step 5 and Step 7
     (i.e. E2E_HeaderFiles.txt.diff and
     E2E_SourceFiles.txt.diff) within this file.
  10) Compile this file
  11) VP (ASR_E2E020048)
      This file compiles without errors.
  12) Execute this test case
  13) VP (ASR_E2E020048)
     TS5ATL_RESULT_SUCCESS is returned in 12

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E020048</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_PackMacros</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_04_ComXf_S_UnPackMacros/source/application/E2E_ConTest_04_ComXf_S_UnPackMacros.c</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test that all pack macros with different combinations of parameters
In order to ease test implementation a a simplified test macro without
range check is used.
behave correct.

Test Object: None.
Test Precondition: 

Test Execution: 

  Let val(bitlength) define a function that
  returns a value where
  only bit #0 and bit #(bitlength-1) are
  set to 1. All other bits are set to 0.

  01 Initialize target memory with 0

  For each entry IV1[i] in input vector IV1:
    02 Pack signal with parameters specified in IV1[i]
       and the value val(IV1[i].bitlength)
       into the memory

  03 VP (EB_E2E020007_COMXF_S)
     The target memory equals the byte array
     specified in OV1

  04 Initialize target memory with 0

  For each entry IV2[i] in input vector IV2:
    05 Pack signal with parameters specified in IV2[i]
       and the value val(IV2[i].bitlength)
       into the memory

  06 VP (EB_E2E020007_COMXF_S)
     The target memory equals the byte array
     specified in OV2


Test Input: 

         bitpos  bitlength     sigtype
            |         |           |
IV1 ={    1U,      1U,    E2E_TEST_LE_U8 },
     {    3U,      8U,    E2E_TEST_LE_U8 },
     {   13U,      1U,    E2E_TEST_LE_U16},
     {   17U,      8U,    E2E_TEST_LE_U16},
     {   30U,     11U,    E2E_TEST_LE_U16},
     {   42U,     11U,    E2E_TEST_LE_U16},
     {   57U,     16U,    E2E_TEST_LE_U16},
     {   97U,      1U,    E2E_TEST_LE_U32},
     {   98U,      8U,    E2E_TEST_LE_U32},
     {  108U,     11U,    E2E_TEST_LE_U32},
     {  125U,     11U,    E2E_TEST_LE_U32},
     {  140U,     16U,    E2E_TEST_LE_U32},
     {  159U,     17U,    E2E_TEST_LE_U32},
     {  178U,     24U,    E2E_TEST_LE_U32},
     {  206U,     25U,    E2E_TEST_LE_U32},
     {  233U,     32U,    E2E_TEST_LE_U32},
     {  268U,      1U,    E2E_TEST_LE_BL },
     {  361U,      1U,    E2E_TEST_LE_S8 },
     {  363U,      8U,    E2E_TEST_LE_S8 },
     {  373U,      1U,    E2E_TEST_LE_S16},
     {  377U,      8U,    E2E_TEST_LE_S16},
     {  390U,     11U,    E2E_TEST_LE_S16},
     {  402U,     11U,    E2E_TEST_LE_S16},
     {  417U,     16U,    E2E_TEST_LE_S16},
     {  457U,      1U,    E2E_TEST_LE_S32},
     {  458U,      8U,    E2E_TEST_LE_S32},
     {  468U,     11U,    E2E_TEST_LE_S32},
     {  485U,     11U,    E2E_TEST_LE_S32},
     {  500U,     16U,    E2E_TEST_LE_S32},
     {  519U,     17U,    E2E_TEST_LE_S32},
     {  538U,     24U,    E2E_TEST_LE_S32},
     {  566U,     25U,    E2E_TEST_LE_S32},
     {  593U,     32U,    E2E_TEST_LE_S32},
     {  656U,     40U,    E2E_TEST_OP_U8N},
     {  704U+  0U, 8U,    E2E_TEST_LE_U8},
     {  704U+  8U, 8U,    E2E_TEST_LE_U16},
     {  704U+ 24U,16U,    E2E_TEST_LE_U16},
     {  704U+ 40U, 8U,    E2E_TEST_LE_U32},
     {  704U+ 72U,16U,    E2E_TEST_LE_U32},
     {  704U+104U,24U,    E2E_TEST_LE_U32},
     {  704U+136U,32U,    E2E_TEST_LE_U32},
     {  704U+168U, 1U,    E2E_TEST_LE_BL},
     {  704U+176U, 8U,    E2E_TEST_LE_S8},
     {  704U+184U, 8U,    E2E_TEST_LE_S16},
     {  704U+200U,16U,    E2E_TEST_LE_S16},
     {  704U+216U, 8U,    E2E_TEST_LE_S32},
     {  704U+248U,16U,    E2E_TEST_LE_S32},
     {  704U+280U,24U,    E2E_TEST_LE_S32},
     {  704U+312U,32U,    E2E_TEST_LE_S32}

IV2 ={    1U,      1U,    E2E_TEST_BE_U8 },
     {   14U,      8U,    E2E_TEST_BE_U8 },
     {   21U,      1U,    E2E_TEST_BE_U16},
     {   19U,      8U,    E2E_TEST_BE_U16},
     {   26U,     11U,    E2E_TEST_BE_U16},
     {   46U,     11U,    E2E_TEST_BE_U16},
     {   50U,     16U,    E2E_TEST_BE_U16},
     {   65U,      1U,    E2E_TEST_BE_U32},
     {   78U,      8U,    E2E_TEST_BE_U32},
     {   85U,     11U,    E2E_TEST_BE_U32},
     {   89U,     11U,    E2E_TEST_BE_U32},
     {  109U,     16U,    E2E_TEST_BE_U32},
     {  135U,     17U,    E2E_TEST_BE_U32},
     {  149U,     24U,    E2E_TEST_BE_U32},
     {  169U,     25U,    E2E_TEST_BE_U32},
     {  205U,     32U,    E2E_TEST_BE_U32},
     {  234U,      1U,    E2E_TEST_BE_BL },
     {  373U,      1U,    E2E_TEST_BE_S8 },
     {  371U,      8U,    E2E_TEST_BE_S8 },
     {  378U,      1U,    E2E_TEST_BE_S16},
     {  376U,      8U,    E2E_TEST_BE_S16},
     {  398U,     11U,    E2E_TEST_BE_S16},
     {  401U,     11U,    E2E_TEST_BE_S16},
     {  421U,     16U,    E2E_TEST_BE_S16},
     {  436U,      1U,    E2E_TEST_BE_S32},
     {  434U,      8U,    E2E_TEST_BE_S32},
     {  455U,     11U,    E2E_TEST_BE_S32},
     {  459U,     11U,    E2E_TEST_BE_S32},
     {  478U,     16U,    E2E_TEST_BE_S32},
     {  503U,     17U,    E2E_TEST_BE_S32},
     {  514U,     24U,    E2E_TEST_BE_S32},
     {  537U,     25U,    E2E_TEST_BE_S32},
     {  573U,     32U,    E2E_TEST_BE_S32},
     {  656U,     40U,    E2E_TEST_OP_U8N},
     {  704U+  7U, 8U,    E2E_TEST_BE_U8},
     {  704U+ 15U, 8U,    E2E_TEST_BE_U16},
     {  704U+ 31U,16U,    E2E_TEST_BE_U16},
     {  704U+ 47U, 8U,    E2E_TEST_BE_U32},
     {  704U+ 79U,16U,    E2E_TEST_BE_U32},
     {  704U+111U,24U,    E2E_TEST_BE_U32},
     {  704U+143U,32U,    E2E_TEST_BE_U32},
     {  704U+168U, 1U,    E2E_TEST_BE_BL},
     {  704U+183U, 8U,    E2E_TEST_BE_S8},
     {  704U+191U, 8U,    E2E_TEST_BE_S16},
     {  704U+207U,16U,    E2E_TEST_BE_S16},
     {  704U+223U, 8U,    E2E_TEST_BE_S32},
     {  704U+255U,16U,    E2E_TEST_BE_S32},
     {  704U+287U,24U,    E2E_TEST_BE_S32},
     {  704U+319U,32U,    E2E_TEST_BE_S32}


Test Output: 

OV1 = {0x0AU, 0x24U, 0x02U, 0x41U, 0x00U, 0x05U, 0x10U, 0x02U,
       0x00U, 0x01U, 0x00U, 0x00U, 0x06U, 0x12U, 0x40U, 0x20U,
       0x80U, 0x10U, 0x00U, 0x88U, 0x00U, 0x80U, 0x04U, 0x00U,
       0x00U, 0x42U, 0x00U, 0x00U, 0x40U, 0x02U, 0x00U, 0x00U,
       0x00U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,
       0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x0AU, 0x24U, 0x02U,
       0x41U, 0x00U, 0x05U, 0x10U, 0x02U, 0x00U, 0x01U, 0x00U,
       0x00U, 0x06U, 0x12U, 0x40U, 0x20U, 0x80U, 0x10U, 0x00U,
       0x88U, 0x00U, 0x80U, 0x04U, 0x00U, 0x00U, 0x42U, 0x00U,
       0x00U, 0x40U, 0x02U, 0x00U, 0x00U, 0x00U, 0x01U, 0x00U,
       0x81U, 0x81U, 0x00U, 0x01U, 0x80U, 0x81U, 0x00U, 0x00U,
       0x00U, 0x01U, 0x80U, 0x00U, 0x00U, 0x01U, 0x00U, 0x80U,
       0x00U, 0x01U, 0x00U, 0x00U, 0x80U, 0x01U, 0x81U, 0x81U,
       0x00U, 0x01U, 0x80U, 0x81U, 0x00U, 0x00U, 0x00U, 0x01U,
       0x80U, 0x00U, 0x00U, 0x01U, 0x00U, 0x80U, 0x00U, 0x01U,
       0x00U, 0x00U, 0x80U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,}

OV2 = {0x02U, 0x40U, 0xA8U, 0x14U, 0x01U, 0x40U, 0x14U, 0x00U,
       0x0AU, 0x40U, 0xA0U, 0x0AU, 0x00U, 0xA0U, 0x00U, 0x40U,
       0x80U, 0x00U, 0xA0U, 0x00U, 0x00U, 0x42U, 0x00U, 0x00U,
       0x02U, 0x20U, 0x00U, 0x00U, 0x00U, 0x44U, 0x00U, 0x00U,
       0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,
       0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x28U, 0x15U,
       0x02U, 0x40U, 0x12U, 0x00U, 0xA0U, 0x00U, 0x54U, 0x08U,
       0x80U, 0x28U, 0x02U, 0x40U, 0x00U, 0x80U, 0x80U, 0x00U,
       0x84U, 0x00U, 0x00U, 0x0AU, 0x00U, 0x00U, 0x02U, 0x20U,
       0x00U, 0x00U, 0x00U, 0x40U, 0x00U, 0x00U, 0x00U, 0x00U,
       0x81U, 0x81U, 0x00U, 0x80U, 0x01U, 0x81U, 0x00U, 0x00U,
       0x00U, 0x80U, 0x01U, 0x00U, 0x00U, 0x80U, 0x00U, 0x01U,
       0x00U, 0x80U, 0x00U, 0x00U, 0x01U, 0x01U, 0x81U, 0x81U,
       0x00U, 0x80U, 0x01U, 0x81U, 0x00U, 0x00U, 0x00U, 0x80U,
       0x01U, 0x00U, 0x00U, 0x80U, 0x00U, 0x01U, 0x00U, 0x80U,
       0x00U, 0x00U, 0x01U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,}

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnPackMacrosFloat</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_04_ComXf_S_UnPackMacros/source/application/E2E_ConTest_04_ComXf_S_UnPackMacros.c</sourcefile>
      <sourceline>923</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the definition of the pack and unpack macro for float32 data types.
Note:
* Only float with 32 bits are supported.
* Range checks for float32 are not supported.
* In order to keep up the IEEE754 memory encoding the float macros are mapping onto
  the uint32 un/pack macros. Those macros implement a pointer cast to uint32 and a
  dereferenced pointer of the float data ( -&gt; * (uint32 const *   ) (&amp;test_float)).
  Otherwise the float would be casted explicit to uint32 which leads to truncation
  of the float value.

   float32 test_val:
   dec: -32.00
   hex: 0xC200 0000

   calculated with:
   https://www.h-schmidt.net/FloatConverter/IEEE754de.html


Test Object: None.
Test Precondition: 

Test Execution: 
  01 Initialize target memory with 0
  02 Serialize float signal on aligned bit positions - LE
  03 Serialize float signal on unaligned bit positions - LE
  04 VP Check if the float values are serialized as expected (LE)
  05 Initialize target memory with 0
  06 Serialize float signal aligned bit positions - BE
  07 Serialize float signal unaligned bit positions - BE
  08 VP Check if the float values are serialized as expected (BE)
  09 Initialize float signals with 0
  10 Deserialize float signal on aligned bit positions - LE
  11 Deserialize float signal on unaligned bit positions - LE
  12 VP Check if the float values are deserialized as expected (LE)
  13 Initialize float signals with 0
  14 Deserialize float signal aligned bit positions - BE
  15 Deserialize float signal unaligned bit positions - BE
  16 VP Check if the float values are deserialized as expected (BE)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>TS_E2E_RangeCheckMacros</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_04_ComXf_S_UnPackMacros/source/application/E2E_ConTest_04_ComXf_S_UnPackMacros.c</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the definition of the pack macro
Test the range check within the pack macros

Test Object: None.
Test Precondition: 

Test Execution: 

  for all combinations of E2E_[LE|BE]_[U8|U16|U32|S8|S16|S32] and the possible ranges of the
  data types do the following checks:

    00 use the E2E_PACKSIG macro with the selected data type
       Note: that is done in the test macros E2E_TEST_RACHK_U and E2E_TEST_RACHK_S

    for all invalid values and E2E_RangeCheckRetVal == E2E_RANGECHK_VALID:
      01 serialize value
      02 VP (EB_E2E020009_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_INVALID

    for all valid values and E2E_RangeCheckRetVal == E2E_RANGECHK_VALID:
      03 serialize value
      04 VP (EB_E2E020010_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_VALID

    for all values and E2E_RangeCheckRetVal == E2E_RANGECHK_INVALID:
      05 serialize value
      06 VP (EB_E2E020010_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_VALID


  for all E2E_[LE|BE]_BL and the possible ranges of the
  data type do the following checks:

    for all invalid values and E2E_RangeCheckRetVal == E2E_RANGECHK_VALID:
      11 serialize value
      12 VP (EB_E2E020009_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_INVALID

    for all valid values and E2E_RangeCheckRetVal == E2E_RANGECHK_VALID:
      13 serialize value
      14 VP (EB_E2E020010_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_VALID

    for all values and E2E_RangeCheckRetVal == E2E_RANGECHK_INVALID:
      15 serialize value
      16 VP (EB_E2E020010_COMXF_S)
         E2E_RangeCheckRetVal == E2E_RANGECHK_VALID


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>TS_E2E_RangeCheckRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_04_ComXf_S_UnPackMacros/source/application/E2E_ConTest_04_ComXf_S_UnPackMacros.c</sourcefile>
      <sourceline>1184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the return value used in range check within the pack macros.

Test Object: None.
Test Precondition: 

Test Execution: 

  01 VP (EB_E2E020011_COMXF_S):
     check E2E_RANGECHK_VALID is defined

  02 VP (EB_E2E020011_COMXF_S):
     check E2E_RANGECHK_VALID has the value 0

  03 VP (EB_E2E020012_COMXF_S):
     check E2E_RANGECHK_INVALID is defined

  04 VP (EB_E2E020012_COMXF_S):
      check E2E_RANGECHK_INVALID has the value 255


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020011_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020012_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnpackMacros</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_04_ComXf_S_UnPackMacros/source/application/E2E_ConTest_04_ComXf_S_UnPackMacros.c</sourcefile>
      <sourceline>1257</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test that all unpack macros with different combinations of parameters
behave correct.

Test Object: None.
Test Precondition: 

Test Execution: 


  Let val(bitlength) define a function that
  returns a value where
  only bit #0 and bit #(bitlength-1) are
  set to 1. All other bits are set to 0.
  If the signal type is signed, then
  a bit extension is performed

  01 Initialize target memory as follows:
     byte 0  byte 1 ...
       |      |
     0x0AU, 0x24U, 0x02U, 0x41U, 0x00U, 0x05U, 0x10U, 0x02U,
     0x00U, 0x01U, 0x00U, 0x00U, 0x06U, 0x12U, 0x40U, 0x20U,
     0x80U, 0x10U, 0x00U, 0x88U, 0x00U, 0x80U, 0x04U, 0x00U,
     0x00U, 0x42U, 0x00U, 0x00U, 0x40U, 0x02U, 0x00U, 0x00U,
     0x00U, 0x11U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,
     0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x0AU, 0x24U, 0x02U,
     0x41U, 0x00U, 0x05U, 0x10U, 0x02U, 0x00U, 0x01U, 0x00U,
     0x00U, 0x06U, 0x12U, 0x40U, 0x20U, 0x80U, 0x10U, 0x00U,
     0x88U, 0x00U, 0x80U, 0x04U, 0x00U, 0x00U, 0x42U, 0x00U,
     0x00U, 0x40U, 0x02U, 0x00U, 0x00U, 0x00U, 0x01U, 0x00U,
     0x81U, 0x81U, 0x00U, 0x01U, 0x80U, 0x81U, 0x00U, 0x00U,
     0x00U, 0x01U, 0x80U, 0x00U, 0x00U, 0x01U, 0x00U, 0x80U,
     0x00U, 0x01U, 0x00U, 0x00U, 0x80U, 0x01U, 0x81U, 0x81U,
     0x00U, 0x01U, 0x80U, 0x81U, 0x00U, 0x00U, 0x00U, 0x01U,
     0x80U, 0x00U, 0x00U, 0x01U, 0x00U, 0x80U, 0x00U, 0x01U,
     0x00U, 0x00U, 0x80U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,}

  For each entry IV1[i] in input vector IV1:
    02 Unpack signal with parameters specified in IV1[i]
       from the memory initialized in step 01

    03 VP (EB_E2E020008_COMXF_S)
       The value of the unpacked signal equals
       val(IV1[i].bitlength)

  04 Initialize target memory as follows:
     byte 0  byte 1 ...
       |      |
     0x02U, 0x40U, 0xA8U, 0x14U, 0x01U, 0x40U, 0x14U, 0x00U,
     0x0AU, 0x40U, 0xA0U, 0x0AU, 0x00U, 0xA0U, 0x00U, 0x40U,
     0x80U, 0x00U, 0xA0U, 0x00U, 0x00U, 0x42U, 0x00U, 0x00U,
     0x02U, 0x20U, 0x00U, 0x00U, 0x00U, 0x44U, 0x00U, 0x00U,
     0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,
     0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U, 0x28U, 0x15U,
     0x02U, 0x40U, 0x12U, 0x00U, 0xA0U, 0x00U, 0x54U, 0x08U,
     0x80U, 0x28U, 0x02U, 0x40U, 0x00U, 0x80U, 0x80U, 0x00U,
     0x84U, 0x00U, 0x00U, 0x0AU, 0x00U, 0x00U, 0x02U, 0x20U,
     0x00U, 0x00U, 0x00U, 0x40U, 0x00U, 0x00U, 0x00U, 0x00U,
     0x81U, 0x81U, 0x00U, 0x80U, 0x01U, 0x81U, 0x00U, 0x00U,
     0x00U, 0x80U, 0x01U, 0x00U, 0x00U, 0x80U, 0x00U, 0x01U,
     0x00U, 0x80U, 0x00U, 0x00U, 0x01U, 0x01U, 0x81U, 0x81U,
     0x00U, 0x80U, 0x01U, 0x81U, 0x00U, 0x00U, 0x00U, 0x80U,
     0x01U, 0x00U, 0x00U, 0x80U, 0x00U, 0x01U, 0x00U, 0x80U,
     0x00U, 0x00U, 0x01U, 0x00U, 0x00U, 0x00U, 0x00U, 0x00U,}

  For each entry IV2[i] in input vector IV2:
    05 Unpack signal with parameters specified in IV2[i]
       from the memory initialized in step 04

    06 VP (EB_E2E020008_COMXF_S)
       The value of the unpacked signal equals
       val(IV2[i].bitlength)


Test Input: 

         bitpos  bitlength     sigtype
            |         |           |
IV1 = {{    1U,      1U,    E2E_TEST_LE_U8 },
       {    3U,      8U,    E2E_TEST_LE_U8 },
       {   13U,      1U,    E2E_TEST_LE_U16},
       {   17U,      8U,    E2E_TEST_LE_U16},
       {   30U,     11U,    E2E_TEST_LE_U16},
       {   42U,     11U,    E2E_TEST_LE_U16},
       {   57U,     16U,    E2E_TEST_LE_U16},
       {   97U,      1U,    E2E_TEST_LE_U32},
       {   98U,      8U,    E2E_TEST_LE_U32},
       {  108U,     11U,    E2E_TEST_LE_U32},
       {  125U,     11U,    E2E_TEST_LE_U32},
       {  140U,     16U,    E2E_TEST_LE_U32},
       {  159U,     17U,    E2E_TEST_LE_U32},
       {  178U,     24U,    E2E_TEST_LE_U32},
       {  206U,     25U,    E2E_TEST_LE_U32},
       {  233U,     32U,    E2E_TEST_LE_U32},
       {  268U,      1U,    E2E_TEST_LE_BL },
       {  361U,      1U,    E2E_TEST_LE_S8 },
       {  363U,      8U,    E2E_TEST_LE_S8 },
       {  373U,      1U,    E2E_TEST_LE_S16},
       {  377U,      8U,    E2E_TEST_LE_S16},
       {  390U,     11U,    E2E_TEST_LE_S16},
       {  402U,     11U,    E2E_TEST_LE_S16},
       {  417U,     16U,    E2E_TEST_LE_S16},
       {  457U,      1U,    E2E_TEST_LE_S32},
       {  458U,      8U,    E2E_TEST_LE_S32},
       {  468U,     11U,    E2E_TEST_LE_S32},
       {  485U,     11U,    E2E_TEST_LE_S32},
       {  500U,     16U,    E2E_TEST_LE_S32},
       {  519U,     17U,    E2E_TEST_LE_S32},
       {  538U,     24U,    E2E_TEST_LE_S32},
       {  566U,     25U,    E2E_TEST_LE_S32},
       {  593U,     32U,    E2E_TEST_LE_S32},
       {  656U,     40U,    E2E_TEST_OP_U8N},
       {  704U+  0U, 8U,    E2E_TEST_LE_U8},
       {  704U+  8U, 8U,    E2E_TEST_LE_U16},
       {  704U+ 24U,16U,    E2E_TEST_LE_U16},
       {  704U+ 40U, 8U,    E2E_TEST_LE_U32},
       {  704U+ 72U,16U,    E2E_TEST_LE_U32},
       {  704U+104U,24U,    E2E_TEST_LE_U32},
       {  704U+136U,32U,    E2E_TEST_LE_U32},
       {  704U+168U, 1U,    E2E_TEST_LE_BL},
       {  704U+176U, 8U,    E2E_TEST_LE_S8},
       {  704U+184U, 8U,    E2E_TEST_LE_S16},
       {  704U+200U,16U,    E2E_TEST_LE_S16},
       {  704U+216U, 8U,    E2E_TEST_LE_S32},
       {  704U+248U,16U,    E2E_TEST_LE_S32},
       {  704U+280U,24U,    E2E_TEST_LE_S32},
       {  704U+312U,32U,    E2E_TEST_LE_S32}

IV2 = {{    1U,      1U,    E2E_TEST_BE_U8 },
       {   14U,      8U,    E2E_TEST_BE_U8 },
       {   21U,      1U,    E2E_TEST_BE_U16},
       {   19U,      8U,    E2E_TEST_BE_U16},
       {   26U,     11U,    E2E_TEST_BE_U16},
       {   46U,     11U,    E2E_TEST_BE_U16},
       {   50U,     16U,    E2E_TEST_BE_U16},
       {   65U,      1U,    E2E_TEST_BE_U32},
       {   78U,      8U,    E2E_TEST_BE_U32},
       {   85U,     11U,    E2E_TEST_BE_U32},
       {   89U,     11U,    E2E_TEST_BE_U32},
       {  109U,     16U,    E2E_TEST_BE_U32},
       {  135U,     17U,    E2E_TEST_BE_U32},
       {  149U,     24U,    E2E_TEST_BE_U32},
       {  169U,     25U,    E2E_TEST_BE_U32},
       {  205U,     32U,    E2E_TEST_BE_U32},
       {  234U,      1U,    E2E_TEST_BE_BL },
       {  373U,      1U,    E2E_TEST_BE_S8 },
       {  371U,      8U,    E2E_TEST_BE_S8 },
       {  378U,      1U,    E2E_TEST_BE_S16},
       {  376U,      8U,    E2E_TEST_BE_S16},
       {  398U,     11U,    E2E_TEST_BE_S16},
       {  401U,     11U,    E2E_TEST_BE_S16},
       {  421U,     16U,    E2E_TEST_BE_S16},
       {  436U,      1U,    E2E_TEST_BE_S32},
       {  434U,      8U,    E2E_TEST_BE_S32},
       {  455U,     11U,    E2E_TEST_BE_S32},
       {  459U,     11U,    E2E_TEST_BE_S32},
       {  478U,     16U,    E2E_TEST_BE_S32},
       {  503U,     17U,    E2E_TEST_BE_S32},
       {  514U,     24U,    E2E_TEST_BE_S32},
       {  537U,     25U,    E2E_TEST_BE_S32},
       {  573U,     32U,    E2E_TEST_BE_S32},
       {  656U,     40U,    E2E_TEST_OP_U8N},
       {  704U+  7U, 8U,    E2E_TEST_BE_U8},
       {  704U+ 15U, 8U,    E2E_TEST_BE_U16},
       {  704U+ 31U,16U,    E2E_TEST_BE_U16},
       {  704U+ 47U, 8U,    E2E_TEST_BE_U32},
       {  704U+ 79U,16U,    E2E_TEST_BE_U32},
       {  704U+111U,24U,    E2E_TEST_BE_U32},
       {  704U+143U,32U,    E2E_TEST_BE_U32},
       {  704U+168U, 1U,    E2E_TEST_BE_BL},
       {  704U+183U, 8U,    E2E_TEST_BE_S8},
       {  704U+191U, 8U,    E2E_TEST_BE_S16},
       {  704U+207U,16U,    E2E_TEST_BE_S16},
       {  704U+223U, 8U,    E2E_TEST_BE_S32},
       {  704U+255U,16U,    E2E_TEST_BE_S32},
       {  704U+287U,24U,    E2E_TEST_BE_S32},
       {  704U+319U,32U,    E2E_TEST_BE_S32}


Test Output: 

OV = {

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_PackMacrosU64Bit_LE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the little endian unsigned 64 bit pack macros with different combinations
of parameters. In order to ease the test implementation the correct behavior
of the range checks are verified separately through a different test function.

LE uint64 packing includes the following limitations:
- data shall be byte aligned: bitpos lsb % 8 == 0 for LE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:

uint64 ranges test with boundary values:
ULLONG_MAX: 18446744073709551615LLU - Maximum value an `unsigned long long int' can hold.
ULLONG_MID_1: 9223372036854775806LLU
ULLONG_MID_2: 9223372036854775807LLU
ULLONG_MID_3: 9223372036854775808LLU
ULLONG_MID_4: 4611686018427387903LLU
ULLONG_MID_5: 13835058055282163709LLU
ULLONG_MIN: 0LLU

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt; 64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt; 8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_PACKSIG_E2E_LE_U64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)
#endif

Test Execution: 
    01: Initialize test data
    02: VP verify packing macros
    03: VP verify range checks of packing macros. Full range values with reduced bytes
        to copy shall lead to invalid range retval

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnPackMacrosU64Bit_LE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the little endian unsigned 64 bit unpack macros with different combinations
of parameters.

LE uint64 packing includes the following limitations:
- data shall be byte aligned: bitpos lsb % 8 == 0 for LE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:

uint64 ranges test with boundary values:
ULLONG_MAX: 18446744073709551615LLU - Maximum value an `unsigned long long int' can hold.
ULLONG_MID_1: 9223372036854775806LLU
ULLONG_MID_2: 9223372036854775807LLU
ULLONG_MID_3: 9223372036854775808LLU
ULLONG_MID_4: 4611686018427387903LLU
ULLONG_MID_5: 13835058055282163709LLU
ULLONG_MIN: 0LLU

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_EXTRACTSIGTO_E2E_LE_U64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)
#endif

Test Execution: 
     01: Initialize test data
     02: VP verify unpacking macros

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>TS_E2E_PackMacrosU64Bit_BE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the big endian unsigned 64 bit pack macros with different combinations
of parameters. In order to ease the test implementation the correct behavior
of the range checks are verified separately through a different test function.

BE uint64 packing includes the following limitations:
- data shall be byte aligned: bitpos msb % 8 == 7 for BE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:

uint64 ranges test with boundary values:
ULLONG_MAX: 18446744073709551615LLU - Maximum value an `unsigned long long int' can hold.
ULLONG_MID_1: 9223372036854775806LLU
ULLONG_MID_2: 9223372036854775807LLU
ULLONG_MID_3: 9223372036854775808LLU
ULLONG_MID_4: 4611686018427387903LLU
ULLONG_MID_5: 13835058055282163709LLU
ULLONG_MIN: 0LLU

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_PACKSIG_E2E_BE_U64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
    01: Initialize test data
    02: VP verify packing macros
    03: VP verify range checks of packing macros. Full range values with reduced bytes
        to copy shall lead to invalid range retval

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnPackMacrosU64Bit_BE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>766</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the big endian unsigned 64 bit unpack macros with different combinations
of parameters.

BE uint64 packing includes the following limitations:
- data shall be byte aligned: bitpos lsb % 8 == 7 for BE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:

uint64 ranges test with boundary values:
ULLONG_MAX: 18446744073709551615LLU - Maximum value an `unsigned long long int' can hold.
ULLONG_MID_1: 9223372036854775806LLU
ULLONG_MID_2: 9223372036854775807LLU
ULLONG_MID_3: 9223372036854775808LLU
ULLONG_MID_4: 4611686018427387903LLU
ULLONG_MID_5: 13835058055282163709LLU
ULLONG_MIN: 0LLU

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_EXTRACTSIGTO_E2E_BE_U64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
     01: Initialize test data
     02: VP verify unpacking macros

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>TS_E2E_PackMacrosS64Bit_LE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>876</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the little endian signed 64 bit pack macros with different combinations
of parameters. In order to ease the test implementation the correct behavior
of the range checks are verified separately through a different test function.

LE sint64 packing includes the following limitations:
- data shall be byte aligned: bitpos msb % 8 == 0 for LE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:
sint64 ranges test with boundary values:
LLONG_MAX: 9223372036854775807LL -  Maximum values a `signed long long int' can hold.
ULLONG_MID_1: 9223372036854775806LL
ULLONG_MID_2:  0xAC6DE1273498D7F5
ULLONG_MID_3:  0x000001FABC129467
ULLONG_MID_4: 1311768467463790329
LLONG_MIN: -9223372036854775808 - Minimum values a `signed long long int' can hold.
ULLONG_MID_5: -9223372036854775807
ULLONG_MID_6:  -0xAC6DE1273498D7F5
ULLONG_MID_7: -1311768467463790329

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_PACKSIG_E2E_LE_S64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
    01: Initialize test data
    02: VP verify packing macros
    03: VP verify range checks of packing macros. Full range values with reduced bytes
        to copy shall lead to invalid range retval

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnPackMacrosS64Bit_LE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the little endian signed 64 bit unpack macros with different combinations
of parameters.

LE sint64 packing includes the following limitations:
- data shall be byte aligned: bitpos lsb % 8 == 0 for LE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:
sint64 ranges test with boundary values:
LLONG_MAX: 9223372036854775807LL -  Maximum values a `signed long long int' can hold.
ULLONG_MID_1: 9223372036854775806LL
ULLONG_MID_2:  0xAC6DE1273498D7F5
ULLONG_MID_3:  0x000001FABC129467
ULLONG_MID_4: 1311768467463790329
LLONG_MIN: -9223372036854775808 - Minimum values a `signed long long int' can hold.
ULLONG_MID_5: -9223372036854775807
ULLONG_MID_6:  -0xAC6DE1273498D7F5
ULLONG_MID_7: -1311768467463790329

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_EXTRACTSIGTO_E2E_LE_S64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
     01: Initialize test data
     02: VP verify unpacking macros

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>TS_E2E_PackMacrosS64Bit_BE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>1164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test the big endian signed 64 bit pack macros with different combinations
of parameters. In order to ease the test implementation the correct behavior
of the range checks are verified separately through a different test function.

BE sint64 packing includes the following limitations:
- data shall be byte aligned: bitpos msb % 8 == 7 for BE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:
sint64 ranges test with boundary values:
LLONG_MAX: 9223372036854775807LL -  Maximum values a `signed long long int' can hold.
ULLONG_MID_1: 9223372036854775806LL
ULLONG_MID_2:  0xAC6DE1273498D7F5
ULLONG_MID_3:  0x000001FABC129467
ULLONG_MID_4: 1311768467463790329
LLONG_MIN: -9223372036854775808 - Minimum values a `signed long long int' can hold.
ULLONG_MID_5: -9223372036854775807
ULLONG_MID_6:  -0xAC6DE1273498D7F5
ULLONG_MID_7: -1311768467463790329

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_PACKSIG_E2E_BE_S64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
    01: Initialize test data
    02: VP verify packing macros
    03: VP verify range checks of packing macros. Full range values with reduced bytes
        to copy shall lead to invalid range retval

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>TS_E2E_UnPackMacrosS64Bit_BE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>1334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the big endian signed 64 bit unpack macros with different combinations
of parameters.

BE sint64 packing includes the following limitations:
- data shall be byte aligned: bitpos lsb % 8 == 7 for BE
- bitlength shall be a multiple of 8
- bitlength shall have constancy to nbytes

Equivalence classes:
sint64 ranges test with boundary values:
LLONG_MAX: 9223372036854775807LL -  Maximum values a `signed long long int' can hold.
ULLONG_MID_1: 9223372036854775806LL
ULLONG_MID_2:  0xAC6DE1273498D7F5
ULLONG_MID_3:  0x000001FABC129467
ULLONG_MID_4: 1311768467463790329
LLONG_MIN: -9223372036854775808 - Minimum values a `signed long long int' can hold.
ULLONG_MID_5: -9223372036854775807
ULLONG_MID_6:  -0xAC6DE1273498D7F5
ULLONG_MID_7: -1311768467463790329

Bit position:
byte unaligned -&gt; not allowed
byte aligned -&gt; shall be used
The static asserts of the E2E macros ensure the correct behavior for the bit position parameter.

Bit length == nbytes:
&amp;lt; 0 -&gt; not allowed
0 - 64 -&gt; ok
&amp;gt;  64 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bit length parameter.

Bytes to copy (nbytes) == bitlength
&amp;lt; 0 -&gt; not allowed
0 - 8 -&gt; ok
&amp;gt;  8 -&gt; not allowed
The static asserts of the E2E macros ensure the correct behavior for the
bytes to copy parameter.


Test Object: 
E2E_EXTRACTSIGTO_E2E_BE_S64

Test Precondition: 
ISO C9x macro names within limits.h:
#define LLONG_MAX 9223372036854775807LL
#define LLONG_MIN (-LLONG_MAX - 1)
#define ULLONG_MAX (2ULL * LLONG_MAX + 1)

Test Execution: 
     01: Initialize test data
     02: VP verify unpacking macros

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>TS_E2E_PackUnPackMacrosFLOAT64Bit_LE_BE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit/source/application/E2E_ConTest_05_ComXf_S_UnPackMacros_64Bit.c</sourcefile>
      <sourceline>1453</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Test the definition of the pack and unpack macro for float64 data types.
Note:
* Range checks for float64 are not supported.
* In order to keep up the IEEE754 memory encoding the float macros are mapping onto
  the uint64 un/pack macros. This behavior requires a pointer cast to uint64 and a
  dereferenced pointer of the float data ( -&gt; * (uint64 const *   ) (&amp;test_float))
  as macro structmember-input (output without the const). Otherwise the float
  would be casted explicit to uint64 which leads to truncation of the float value.
* uint64 and float64 supports only byte aligned serialization.
* float64 supports only un-/packing with full range -&gt; bitlenght 64U and nbytes 8U

   float64 test_val:
   dec: -549755813678885454.56767676
   hex: 0xC39E847FFFCE24A9
   bin: 11000011 10011110 10000100 01111111 11111111 11001110 00100100 10101001

   calculated with:
   http://www.binaryconvert.com/result_double.html?hexadecimal=123456789ABCDEF9

Test Object: None.
Test Precondition: 

Test Execution: 
  01 Initialize test memory with expected bit pattern
  02 Serialize float signal on aligned bit positions - LE
  03 Verify that E2E_RangeCheckRetVal is not corrupted
  04 VP Check if the float values are serialized as expected (LE)
  05 Initialize target memory with 0
  06 Serialize float signal aligned bit positions - BE
  07  Verify that E2E_RangeCheckRetVal is not currupted
  08 VP Check if the float values are serialized as expected (BE)
  09 Initialize float signals with 0
  10 Deserialize float signal on aligned bit positions - LE
  11 Deserialize float signal on unaligned bit positions - LE
  12 VP Check if the float values are deserialized as expected (LE)
  13 Initialize float signals with 0
  14 Deserialize float signal aligned bit positions - BE
  15 Deserialize float signal unaligned bit positions - BE
  16 VP Check if the float values are deserialized as expected (BE)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020007_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020009_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020010_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020008_COMXF_S</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_InPlaceTransPreCondCheck_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_InPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_InPlaceTransPreCondCheck does not change the output buffer.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set valid test input values
01: call E2EXf_InPlaceTransPreCondCheck with valid test input values
02: VP return value is E_OK and output buffer did not change
03: call E2EXf_InPlaceTransPreCondCheck with BufferPtr == NULL_PTR
04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
05: set InputBufferLength value to 0U
06: call E2EXf_InPlaceTransPreCondCheck with InputBufferLength &amp;lt; UpperHeaderBytesToShift
07: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
08: set InputBufferLength value equal to UpperHeaderBitsToShift
09: call E2EXf_InPlaceTransPreCondCheck with InputBufferLength == UpperHeaderBytesToShift
10: VP return value is E_OK and output buffer did not change
11: set UpperHeaderBitsToShift value to 0U
12: call E2EXf_InPlaceTransPreCondCheck with InputBufferLength &amp;gt; UpperHeaderBytesToShift
13: VP return value is E_OK and output buffer did not change
14: call E2EXf_InPlaceTransPreCondCheck with BufferLengthPtr == NULL_PTR
15: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_OutOfPlaceTransPreCondCheck_002</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_OutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_OutOfPlaceTransPreCondCheck does not change the output buffer.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set valid test input values
01: call E2EXf_OutOfPlaceTransPreCondCheck with valid test input values
02: VP return value is E_OK and output buffer did not change
03: call E2EXf_OutOfPlaceTransPreCondCheck with BufferPtr == NULL_PTR
04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
05: set InputBufferLength value to 0U
06: call E2EXf_OutOfPlaceTransPreCondCheck with InputBufferLength &amp;lt; UpperHeaderBytesToShift
07: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
08: set InputBufferLength value equal to UpperHeaderBitsToShift
09: call E2EXf_OutOfPlaceTransPreCondCheck with InputBufferLength == UpperHeaderBytesToShift
10: VP return value is E_OK and output buffer did not change
11: set UpperHeaderBitsToShift value to 0U
12: call E2EXf_OutOfPlaceTransPreCondCheck with InputBufferLength &amp;gt; UpperHeaderBytesToShift
13: VP return value is E_OK and output buffer did not change
14: call E2EXf_OutOfPlaceTransPreCondCheck with BufferLengthPtr == NULL_PTR
15: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
16: call E2EXf_OutOfPlaceTransPreCondCheck with InputBuffer == NULL_PTR
17: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_InPlaceShiftUpperHeaderToLeft_003</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_InPlaceShiftUpperHeaderToLeft.

  Verifies that E2EXf specific function
  E2EXf_InPlaceShiftUpperHeaderToLeft does not change the output buffer
  in case of non valid input data (UpperHeaderBytesToShift = 0U).

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set test input values - UpperHeaderBytesToShift = 0U
01: call E2EXf_InPlaceShiftUpperHeaderToLeft with UpperHeaderBytesToShift = 0U
02: VP output buffer did not change
03: set test input values - UpperHeaderBytesToShift &amp;gt; 0U
04: call E2EXf_InPlaceShiftUpperHeaderToLeft with UpperHeaderBytesToShift &amp;gt; 0U
05: VP correct output buffer is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020017_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_CopyOutOfPlaceBuffer_004</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_CopyOutOfPlaceBuffer.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set test input values
01: call E2EXf_CopyOutOfPlaceBuffer
02: VP correct output buffer is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020017_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceShiftUpperHeaderToRight_005</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_InPlaceShiftUpperHeaderToRight.

  Verifies that E2EXf specific function
  E2EXf_Inv_InPlaceShiftUpperHeaderToRight does not change the output buffer
  in case of non valid input data.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set test input values
01: call E2EXf_Inv_InPlaceShiftUpperHeaderToRight with (BufferPtr = NULL_PTR) &amp;&amp; (UpperHeaderBytesToShift &amp;gt;  0U)
02: VP output buffer did not change
03: set test input value - UpperHeaderBitsToShift = 0U
04: call E2EXf_Inv_InPlaceShiftUpperHeaderToRight with (BufferPtr != NULL_PTR) &amp;&amp; (UpperHeaderBytesToShift = 0U)
05: VP output buffer did not change
06: set test input value - UpperHeaderBitsToShift &amp;gt; 0U
07: call E2EXf_Inv_InPlaceShiftUpperHeaderToRight with (BufferPtr != NULL_PTR) &amp;&amp; (UpperHeaderBytesToShift &amp;gt; 0U)
08: VP correct output buffer is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020017_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_Inv_CopyOutOfPlaceBuffer_006</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>533</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_CopyOutOfPlaceBuffer.

  Verifies that E2EXf specific function
  E2EXf_Inv_CopyOutOfPlaceBuffer does not change the output buffer
  in case of non valid input data.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set test input values
01: call E2EXf_Inv_CopyOutOfPlaceBuffer with InputBufferPtr = NULL_PTR &amp;&amp; UpperHeaderBytesToShift &amp;gt; 0U
02: VP output buffer did not change
03: call E2EXf_Inv_CopyOutOfPlaceBuffer with InputBufferPtr != NULL_PTR &amp;&amp; UpperHeaderBytesToShift &amp;gt; 0U
04: VP correct output buffer is returned
05: set test input values - UpperHeaderBitsToShift = 0U
06: call E2EXf_Inv_CopyOutOfPlaceBuffer with InputBufferPtr = NULL_PTR &amp;&amp; UpperHeaderBytesToShift = 0U
07: VP output buffer did not change
08: call E2EXf_Inv_CopyOutOfPlaceBuffer with InputBufferPtr != NULL_PTR &amp;&amp; UpperHeaderBytesToShift = 0U
09: VP correct output buffer is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020017_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_Inv_InPlaceTransPreCondCheck_007</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>636</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_InPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_InPlaceTransPreCondCheck does not change the output buffer.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set valid test input values
01: call E2EXf_Inv_InPlaceTransPreCondCheck with valid test input values
02: VP return value is E_OK and output buffer did not change
03: call E2EXf_Inv_InPlaceTransPreCondCheck with
    BufferPtr == NULL_PTR &amp;&amp; InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO
04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
05: set test input value - InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
06: call E2EXf_Inv_InPlaceTransPreCondCheck with
    BufferPtr != NULL_PTR &amp;&amp; InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
07: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
08: call E2EXf_Inv_InPlaceTransPreCondCheck with
    BufferPtr = NULL_PTR &amp;&amp; InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
09: VP return value is E_OK and output buffer did not change
10: set test input value - InputBufferLength &amp;lt; OverallHeaderLengthBytes
11: call E2EXf_Inv_InPlaceTransPreCondCheck with InputBufferLength &amp;lt; OverallHeaderLengthBytes
12: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
13: set test input value - InputBufferLength = OverallHeaderLengthBytes
14: call E2EXf_Inv_InPlaceTransPreCondCheck with InputBufferLength = OverallHeaderLengthBytes
15: VP return value is E_OK and output buffer did not change
16: set test input value - InputBufferLength &amp;gt; OverallHeaderLengthBytes
17: call E2EXf_Inv_InPlaceTransPreCondCheck with InputBufferLength &amp;gt; OverallHeaderLengthBytes
18: VP return value is E_OK and output buffer did not change
19: call E2EXf_Inv_InPlaceTransPreCondCheck with BufferLengthPtr == NULL_PTR
20: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_Inv_OutOfPlaceTransPreCondCheck_008</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_OutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_OutOfPlaceTransPreCondCheck does not change the output buffer.

Permutation:
  Verifies that function compiles with:
  p0......E2EXF_XFRMBUFFERLENGTH_TYPE = uint16
  p1......E2EXF_XFRMBUFFERLENGTH_TYPE = uint32
Notice: Further tests regarding the E2EXF_XFRMBUFFERLENGTH_TYPE will
be done in the future!
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set valid test input values
01: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with valid test input values
02: VP return value is E_OK and output buffer did not change
03: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with
    BufferPtr == NULL_PTR &amp;&amp; InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO
04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
05: set test input value - InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
06: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with
    BufferPtr != NULL_PTR &amp;&amp; InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
07: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
08: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with
    BufferPtr = NULL_PTR &amp;&amp; InputBufferLength = E2EXF_INPUT_BUFFER_LENGTH_ZERO
09: VP return value is E_OK and output buffer did not change
10: set test input value -  InputBufferLength &amp;lt; OverallHeaderLengthBytes
11: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with  InputBufferLength &amp;lt; OverallHeaderLengthBytes
12: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
13: set test input value - InputBufferLength = OverallHeaderLengthBytes
14: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with InputBufferLength = OverallHeaderLengthBytes
15: VP return value is E_OK and output buffer did not change
16: set test input value - InputBufferLength &amp;gt;  OverallHeaderLengthBytes
17: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with InputBufferLength &amp;gt;  OverallHeaderLengthBytes
18: VP return value is E_OK and output buffer did not change
19: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with BufferLengthPtr == NULL_PTR
20: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
21: call E2EXf_Inv_OutOfPlaceTransPreCondCheck with InputBuffer == NULL_PTR
22: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EB_E2E020019_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_Inv_SMCheck_009</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>965</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_SMCheck (SWS_E2EXf_00027).
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: init input data which are only used for E2E_SMCheck with dummy values
01: set E2EXf_Inv_SMCheck related SM input data to invalid
02: set E2E_SMCheck_Stub return value to E2E_E_INPUTERR_NULL
03: VP E_SAFETY_SOFT_RUNTIMEERROR is returned
04: set E2E_SMCheck_Stub return value to E2E_E_INPUTERR_WRONG
05: VP E_SAFETY_SOFT_RUNTIMEERROR is returned
06: set E2E_SMCheck_Stub return value to E2E_E_INTERR
07: VP E_SAFETY_SOFT_RUNTIMEERROR is returned
08: set E2E_SMCheck_Stub return value to E2E_E_WRONGSTATE
09: VP E_SAFETY_SOFT_RUNTIMEERROR is returned
10: set test input data
11: set E2E_SMCheck_Stub return value to E2E_E_OK
12: lower nibbel of SMTestCheckState.SMState on upper RetVal position and
    lower nibbel of RetValMapStatusToSM on lower RetVal position is set

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020018_E2EXF</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_06_E2EXf_MapCodeToStatus_010</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_06_E2EXf/source/application/E2E_ConTest_06_E2EXf.c</sourcefile>
      <sourceline>1083</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_MapCodeToStatus (SWS_E2EXf_00208).
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
00: set forwardedCode to E_OK
01: VP E2E_P_OK is returned
02: set forwardedCode to E_SAFETY_INVALID_REP
03: VP E2E_P_REPEATED is returned
04: set forwardedCode to E_SAFETY_INVALID_SEQ
05: VP E2E_P_WRONGSEQUENCE is returned
06: set forwardedCode to E_SAFETY_INVALID_CRC
07: VP E2E_P_ERROR is returned

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00208.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_E2EXf_CON_07001_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_07_E2EXf_NoCheck_InP_SomeIpXf/source/application/E2E_ConTest_07_E2EXf_NoCheck_InP_SomeIpXf.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that the if buffer is not null and upperHeaderBitsToShift is greater than
    zero in-place E2EXf_Inv_transformerId shall copy the first upperHeaderBitsToShift
    bits, in parameter buffer, in direction right by 'distance' of
    headerLength without E2E library dependency.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 96 bits
  - upperHeaderBitsToShift: 64 bits

  For E2EXf_Inv_NoCheck_InP_SomeIpXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  00: Reinitalize E2EXf module.
  01: Call inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift greater than 0.
  02: VP:'E2EXf_Inv_transformerId' copied the amount upperHeaderBitsToShift bits,
      in parameter buffer, with starting offset of headerLength, in direction right by
      'distance' of headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00112.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_E2EXf_CON_08001_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_08_E2EXf_NoCheck_OoP_SomeIpXf/source/application/E2E_ConTest_08_E2EXf_NoCheck_OoP_SomeIpXf.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is greater than 0),
  out-of-place inverted transformer 'E2EXf_Inv_transformerId' without E2E library dependency
  copies inputBuffer the first upperHeaderBitsToShift bits from inputBuffer to buffer,
  and then copy the remaining part of inputBuffer skipping E2E header
  (i.e. starting with offset upperHeaderBitsToShift+BufferProperties.headerLength)
  to parameter buffer starting with the destination offset of (upperHeaderBitsToShift).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 96 bits
  - upperHeaderBitsToShift: 64 bits

  For E2EXf_Inv_NoCheck_OoP_SomeIpXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = TRUE

Test Execution: 
  00: Reinitalize E2EXf module.
  01: Initialize the buffer to zero.
  02: Call inverted transformer function with inputBuffer different from NULL.
  03: VP: The function copies the inputBuffer to buffer for upperHeaderBitsToShift bits and payload.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00113.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_E2EXf_CON_09100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf/source/application/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.SWS_E2EXf_00133.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_09101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf/source/application/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the in-place
  function 'E2EXf_Inv_transformerId' without E2E profile dependency returns
  E_SAFETY_HARD_RUNTIMEERROR.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_InP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  00: Initialize module

  Case 1
  01: Set buffer to NULL and inputBufferLength different from 0 and call
      inverted transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the tested requirement since inputBufferLength cannot have a smaller value than 0U
            (inputBufferLength &amp;lt; headerLength/8U + upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

  Case 2
  03: Set bufferLength to NULL and call inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00105.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00108.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00051.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_09102_NoCheckInvoke</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf/source/application/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  with disabled E2E check does not invoke an E2E profile.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_InP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

  For E2EXf_Inv_NoCheck_InP_ComXf_Rx1:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = false

Test Execution: 
  01: Reinitialize module
  02: Call inverted transformer function with valid parameters.
  03: VP Buffer is unchanged.
  04: VP No E2E profile function is called.
  05: Call inverted transformer function with valid parameters and
      disabledEndToEndCheck = false (enabled!).
  06: VP E2E profile function is called. Verified indirectly by checking for failing CRC check
         (transformer function returns E2E_P_ERROR) and if E2E_SMCheck is called.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00154.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_09103_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf/source/application/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the buffer remains unchanged after an in-place function call
  'E2EXf_Inv_transformerId' without E2E profile dependency when upperHeaderBitsToShift
  is equal to 0.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_InP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  01: Call inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift equal to 0.
  02: VP: In-place 'E2EXf_Inv_transformerId' keeps the buffer unchanged.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.InvTransformer.InPlace.NoCopying.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_09104_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf/source/application/E2E_ConTest_09_E2EXf_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  without E2E profile dependency sets the BufferLength equal to InputBufferLength
  minus HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and Buffer == NULL).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits

  For E2EXf_Inv_NoCheck_InP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  Case 1 (Normal operation)
  01: Set InputBufferLength to configured DataLength.
  02: Call in-place inverted transformer function with valid parameters.
  03: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (No new data available: InputBufferLength equals zero and Buffer equals NULL)
  04: Set InputBufferLength to 0.
  05: Call in-place inverted transformer function with Buffer set to NULL.
  06: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00114.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_E2EXf_CON_10100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf/source/application/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.SWS_E2EXf_00133.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_10101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf/source/application/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the out-of-place
  function 'E2EXf_Inv_transformerId' without E2E profile dependency returns
  E_SAFETY_HARD_RUNTIMEERROR.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_OoP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  00: Initialize module

  Case 1
  01: Set inputBuffer to NULL and inputBufferLength different from 0 and call
      inverted transformer function.
      Note: The above condition is the only valid scenario for the first precondition check of
            the tested requirement since inputBufferLength cannot have a smaller value than 0U
            (inputBufferLength &amp;lt; headerLength/8U + upperHeaderBitsToShift/8U).
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  03: Set bufferLength to NULL and call inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 3
  05: Set buffer equal to NULL and call inverted transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00103.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00108.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00051.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_10102_NoCheckInvoke</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf/source/application/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  with disabled E2E check does not invoke an E2E profile.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_OoP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

  For E2EXf_Inv_NoCheck_OoP_ComXf_Rx1:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = false

Test Execution: 
  01: Reinitialize module
  02: Call inverted transformer function with valid parameters.
  03: VP Buffer is unchanged.
  04: VP No E2E profile function is called.
  05: Call inverted transformer function with valid parameters and
      disabledEndToEndCheck = false (enabled!).
  06: VP E2E profile function is called. Verified indirectly by checking for failing CRC check
         (transformer function returns E2E_P_ERROR) and if E2E_SMCheck is called.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00154.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_10103_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf/source/application/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  out-of-place inverted transformer 'E2EXf_Inv_transformerId' without E2E profile dependency
  copies inputBuffer to buffer starting with the destination offset of headerLength.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

  For E2EXf_Inv_NoCheck_OoP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  01: Call inverted transformer function with inputBuffer different from NULL.
  02: VP: The function copies the inputBuffer to buffer starting with the destination offset of
      headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00116.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>TS_E2E_E2EXf_CON_10104_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf/source/application/E2E_ConTest_10_E2EXf_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  without E2E profile dependency sets the BufferLength equal to InputBufferLength minus
  HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and InputBuffer == NULL).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits
  - dataLength: 96 bits

  For E2EXf_Inv_NoCheck_OoP_ComXf_Rx2:
  - EndToEndTransformationComSpecProps.disableEndToEndCheck = true

Test Execution: 
  Case 1 (Normal operation)
  01: Set InputBufferLength to configured DataLength.
  02: Call out-of-place inverted transformer function with valid parameters.
  03: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (No new data available: InputBufferLength equals zero and InputBuffer equals NULL)
  04: Set InputBufferLength to 0.
  05: Call out-of-place inverted transformer function with InputBuffer set to NULL.
  06: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00114.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00032.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_Memcpy_CON_11001_Test_E2EMemCpy</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_11_E2E_MemCpy/source/application/E2E_ConTest_11_E2E_Memcpy.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This tests checks the functionality of E2E_MemCpy and verify the Memcpy function by passing
  source and destination address with all the possible memory alignments regions.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Initialize the Source Buffer Perform the check on the Source Data.
  01: Nested loop over for 8 different memory alignments region for source and destination data.
  02: Initialize the destination buffer with a pattern 0xEB.
  03: Call E2E_Memcpy with a incremented uint8 array memory address region for source &amp; destination buffers,
      in order to test all the memory aligned region.
  04: VP: Check the data is correctly copied to the destination buffer.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00112.NoCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2E_ConTest_12001_MethodChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check if input verification of SourceID, MessageType and
   MessageResult for E2E for methods returns E2E_E_INPUTERR_WRONG
   in case of
   - SourceID is greater than 0xFFFFFFFUL or
   - MessageType is neither equal to 0U nor equal 1U or
   - MessageResult is neither equal to 0U nor equal 1U
   and E2E_E_OK otherwise.

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
 00: Call E2E_EB_MethodCheck with all valid input parameters (MessageResult = 0U)
 01: VP (EB_E2E.MethodChecks)
     E2E_EB_MethodCheck() returns expected value E2E_E_OK.
 02: Call E2E_EB_MethodCheck with all valid input parameters (MessageResult = 1U)
 03: VP (EB_E2E.MethodChecks)
     E2E_EB_MethodCheck() returns expected value E2E_E_OK.
 04: Call E2E_EB_MethodCheck with invalid SourceID
 05: VP (EB_E2E.MethodChecks.SourceID)
     E2E_EB_MethodCheck() returns expected value E2E_E_INPUTERR_WRONG.
 06: Call E2E_EB_MethodCheck with valid SourceID, invalid MessageType and
     valid MessageResult
 07: VP (EB_E2E.MethodChecks.MessageResult)
     E2E_EB_MethodCheck() returns expected value E2E_E_INPUTERR_WRONG.
 08: Call E2E_EB_MethodCheck with valid SourceID, valid MessageType and
     invalid MessageResult
 09: VP (EB_E2E.MethodChecks.MessageType)
     E2E_EB_MethodCheck() returns expected value E2E_E_INPUTERR_WRONG.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E.MethodChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EB_E2E.MethodChecks.SourceID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>EB_E2E.MethodChecks.MessageType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>EB_E2E.MethodChecks.MessageResult</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12002_E2EXf_PXXmSourceInPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_PXXmSourceInPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_PXXmSourceInPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_PXXmSourceInPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_PXXmSourceInPlaceTransPreCondCheck with BufferPtr == NULL_PTR
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_PXXmSourceInPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.InP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12003_E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck with BufferPtr == NULL_PTR
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_PXXmSourceOutOfPlaceTransPreCondCheck with InputBuffer set to NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Source.OoP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12004_E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck with
      BufferPtr == NULL_PTR and (InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO)
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_Inv_PXXmSourceInPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.InP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12005_E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck with
      BufferPtr == NULL_PTR and (InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO)
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_Inv_PXXmSourceOutOfPlaceTransPreCondCheck with InputBuffer == NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Source.OoP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12006_E2EXf_PXXmSinkInPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_PXXmSinkInPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_PXXmSinkInPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_PXXmSinkInPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_PXXmSinkInPlaceTransPreCondCheck with BufferPtr == NULL_PTR
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_PXXmSinkInPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_PXXmSinkInPlaceTransPreCondCheck with csTransactionHandlePtr set to NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.InP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12007_E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck with BufferPtr == NULL_PTR
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck with csTransactionHandlePtr set to NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  09: call E2EXf_PXXmSinkOutOfPlaceTransPreCondCheck with InputBuffer set to NULL_PTR
  10: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.Xf.Sink.OoP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12008_E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>717</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck with
      BufferPtr == NULL_PTR and (InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO)
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_Inv_PXXmSinkInPlaceTransPreCondCheck with csTransactionHandlePtr set to NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.InP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>TS_E2E_ConTest_12009_E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2E)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2E/test/ts5/Conformance/IN/E2E_ConTest_12_E2E_MethodChecks/source/application/E2E_ConTest_12_E2E_MethodChecks.c</sourcefile>
      <sourceline>812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies the correct behavior of E2EXf specific function
  E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck.

  Verifies that E2EXf specific function
  E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck does not change the output buffer.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
E2E.h is included

Test Execution: 
  00: set valid test input values
  01: call E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck with valid test input values
  02: VP return value is E_OK and output buffer did not change
  03: call E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck with
      BufferPtr == NULL_PTR and (InputBufferLength != E2EXF_INPUT_BUFFER_LENGTH_ZERO)
  04: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  05: call E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck with extractProtocolHeaderFieldsFctPtr set to NULL_PTR
  06: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  07: call E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck with csTransactionHandlePtr set to NULL_PTR
  08: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change
  09: call E2EXf_Inv_PXXmSinkOutOfPlaceTransPreCondCheck with InputBuffer == NULL_PTR
  10: VP return value is E_SAFETY_HARD_RUNTIMEERROR and output buffer did not change

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2E020016_E2EXF.MethodsPreCondChecks.InvXf.Sink.OoP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
