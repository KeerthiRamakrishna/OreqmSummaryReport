<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_UdpNm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_4.1.3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_R21-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_UdpNm_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_PduLengthType_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:07:40 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_UdpNm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_4.1.3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_AUTOSAR_SWS_UDPNetworkManagement_R21-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_Native/asc_UdpNm_requirements_UdpNm_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_PduLengthType_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.ASR413.ECUC_UdpNm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: UdpNmComUserDataSupport
        Parameter Type: Boolean
        Parent Containers: UdpNmGlobalConfig,
        Description: Enable/disable the user data support.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_218</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_419</srcid><srcstatus/><internalId>1158</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeParamCheck</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.ECUC_UdpNm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Name: UdpNmUserDataTxPdu
        Container Type: Sub-Container
        Parent Containers: UdpNmChannelConfig,
        Description: This optional container is used to configure the UserNm PDU. This container is 
        only available if UdpNmComUserDataSupport is enabled.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2539</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeParamCheck</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If the node detection functionality is enabled, the function Nm_RepeatMessageIndication shall 
        be called upon every reception of the RepeatMessageRequest bit if UDPNM_REPEAT_MSG_IND_ENABLED 
        is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2442</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Nm_RepeatMsgIndication_1</srcid><srcstatus/><internalId>1606</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Nm_RepeatMsgIndication_2</srcid><srcstatus/><internalId>1620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If UdpNm is not initialized a call of any UdpNm function except UdpNM_Init shall be rejected 
        and E_NOT_OK shall be returned. If development error detection is enabled it shall report 
        UDPNM_E_NO_INIT to the Development Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData</srcid><srcstatus/><internalId>416</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization</srcid><srcstatus/><internalId>418</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNm module shall provide the following H-files:
        UdpNm.h (for declaration of provided interface functions)
        UdpNm_Cbk.h (for declaration of provided call-back functions)
        UdpNm_Cfg.h (for pre-compile time configurable parameters)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00044.1</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00044.2</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00044.3</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>2</version>
      <description>
        After initialization the UdpNm Message Cycle Timer shall be stopped.
      </description>
      <comment>
        Note: No timer (UdpNm Message Cycle Timer) is needed if UDPNM_PASSIVE_MODE_ENABLED
        is TRUE, because no NM messages are transmitted by such nodes.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_366</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-files: ComStack_Types.h
        Note: The following header files are indirectly included by ComStack_Types.h:
        Std_Types.h (for AUTOSAR standard types)
        Platform_Types.h (for platform specific types)
        Compiler.h (for compiler specific language extensions)
        UdpNm.h (for declaration of provided interface functions)
        Nm_Cbk.h (for UdpNm specific call-backs to the Generic Network Management Interface)
        Det.h (for interface of DET - optional included only if DET is configured)
        NmStack_Types.h (for common network management types)
        SchM_UdpNm.h (for services of the Basic Software Scheduler)
        UdpNm_MemMap.h (for Memory Mapping)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.1</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.2</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.3</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.4</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.5</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.6</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.7</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00082.8</srcid><srcstatus/><internalId>347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNM module shall include the following header files containing configuration data:
        SoAd_Cfg.h (for the PDU IDs and socket connections)
        Nm_Cfg.h (for the derived configuration items from Nm)
      </description>
      <comment>
        Instead of SoAd_Cfg.h the SoAd.h file will be included.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00083.1</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00083.2</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        Support of Repeat Message Request Bit and Repeat Message State Request shall be statically 
        configurable with use of the UDPNM_NODE_DETECTION_ENABLED switch (configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_565</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1233</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_GetPduData shall be statically configurable. It shall be available 
        if UDPNM_NODE_ID_ENABLED or UDPNM_NODE_DETECTION_ENABLED or UDPNM_USER_DATA_ENABLED is TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00139.1</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00139.2</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00139.3</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        At successful reception of a NM PDU the UdpNm shall notify the upper layer by calling 
        Nm_PduRxIndication.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1326</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The optional service Nm_PduRxIndication shall be statically configurable. It shall be available 
        if UDPNM_PDU_RX_INDICATION_ENABLED is TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_416</srcid><srcstatus/><internalId>1050</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0081</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        During initialization of the UdpNm module, the UdpNm module shall enable the Network Management 
        PDU transmission (start the UdpNm Message Cycle Timer with UDPNM_MSG_CYCLE_OFFSET)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1100</srcid><srcstatus/><internalId>1090</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When the Network Management PDU transmission ability is enabled, the UdpNm module shall start 
        the UdpNm Message Cycle Timer with UDPNM_MSG_CYCLE_OFFSET in order to start transmission of 
        Network Management PDUs.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1603</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If not initialized, the NM shall reject every API service apart from UdpNm_Init; the called 
        function shall not be executed, but instead of that it shall report UDPNM_E_NO_INIT to the 
        Development Error Tracer (if development error detection is enabled) and it shall return 
        E_NOT_OK to the calling function
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication</srcid><srcstatus/><internalId>409</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication</srcid><srcstatus/><internalId>410</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData</srcid><srcstatus/><internalId>412</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>414</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest</srcid><srcstatus/><internalId>415</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData</srcid><srcstatus/><internalId>416</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState</srcid><srcstatus/><internalId>417</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization</srcid><srcstatus/><internalId>418</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication</srcid><srcstatus/><internalId>419</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The Global Scope specifies configuration parameter that shall be defined in the module's 
        configuration header file UdpNm_Cfg.h.
      </description>
      <releases>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_17</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        This service has no effect if the current state is not equal to Bus-Sleep Mode. In that case 
        E_NOT_OK is returned.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00212</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfTxConfirmation shall inform the DET (if enabled), if the 
        function call has failed because of the following reasons:
        Invalid channel handle (UDPNM_E_INVALID_CHANNEL)
        UdpNm was not initialized (UDPNM_E_NO_INIT)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00229.1</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00229.2</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If an error has to be indicated to the DET, the callback function UdpNm_SoAdIfTxConfirmation 
        shall use the value of UdpNm channel handle as the instance id.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1803</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfRxIndication shall inform the DET (if enabled), if function 
        call has failed because of the following reasons:
        Invalid channel handle (UDPNM_E_INVALID_CHANNEL)
        UdpNm was not initialized (UDPNM_E_NO_INIT)
        udpSduPtr equals NULL_PTR (UDPNM_E_NULL_POINTER)
        Invalid PDU ID (UDPNM_E_INVALID_PDUID)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00232.1</srcid><srcstatus/><internalId>395</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00232.2</srcid><srcstatus/><internalId>396</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00232.3</srcid><srcstatus/><internalId>397</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00232.4</srcid><srcstatus/><internalId>398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If an error has to be indicated to the DET, the callback function UdpNm_SoAdIfRxIndication 
        shall use the value of UdpNm channel handle as the instance id.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1891</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        When the NULL Pointer is passed as an argument to a UdpNm service, the called function shall 
        not be executed, but shall report UDPNM_E_NULL_POINTER to the Development Error Tracer instead.
        It shall return E_NOT_OK to the calling function if development error detection is enabled (
        UDPNM_DEV_ERROR_DETECT is set to TRUE)
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_SetUserData</srcid><srcstatus/><internalId>439</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetUserData</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetNodeIdentifier</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetPduData</srcid><srcstatus/><internalId>443</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState</srcid><srcstatus/><internalId>444</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_CheckRemoteSleepIndication</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNm module shall include PduR_UdpNm.h if UdpNmComUserDataSupport is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_67</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00342</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is FALSE the UdpNm module shall skip the aggregation of external and 
        internal PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_425</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1981</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PnEiraCalcEnabled_PnEraCalcEnabled_FALSE</srcid><srcstatus/><internalId>1404</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00343</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE the UdpNm module shall calculate the aggregation of external 
        and Internal PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_425</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_TX_EIRA_VERIFICATION</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00346</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNm shall only consider the PN request bits that are relevant for the ECU (defined by PN 
        filter mask). All other PN request bits are ignored. Thus the EIRA only contains those PN 
        requests, which are relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2582</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_TX_EIRA_VERIFICATION</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Tx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00350</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>2</version>
      <description>
        If a NM-PDU is send by the UdpNm, the UdpNm module shall restart the EIRA reset timer for every 
        PN request bit that has been requested in the NM message with UdpNmPnResetTime.
      </description>
      <comment>
        Note: UdpNmPnResetTime shall be configured to a value smaller than
        UdpNmTimeoutTime to avoid that the timer could elapse after NM already changed to Prepare
        Bus Sleep.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2549</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Tx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00353</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is FALSE the UdpNm module shall skip the aggregation of external PN 
        requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1751</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1970</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1990</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PnEiraCalcEnabled_PnEraCalcEnabled_FALSE</srcid><srcstatus/><internalId>1404</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00354</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE the UdpNm module shall calculate the aggregation of external 
        PN requests information.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1751</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00356</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>1</version>
      <description>
        The UdpNm shall only consider the PN request bits in the NM-PDU that are relevant for the ECU (
        defined by PN filter mask). All other PN request bits are ignored. Thus the ERA only contains 
        those PN requests, which are relevant for the ECU.
      </description>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2582</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>UdpNm.ASR413.SWS_UdpNm_00363</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ UdpNm_4_1_3.xml</source>
      <version>2</version>
      <description>
        If UdpNmPnHandleMultipleNetworkRequests is set to TRUE the UdpNm feature 'Immediate 
        Transmission' is mandatory. It shall be ensured that UdpNmImmediateNmTransmissions &gt; 0 is given.
      </description>
      <comment>
        Note: The PN Control Module (e.G. ComM) is responsible to call UdpNm_NetworkRequest if the
        PN request bits changes.
      </comment>
      <releases>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1586</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmGlobalConfig
        Parent Container:
          UdpNm
        Description:
          This container contains all global configuration parameters of UDP NM configured from the
          CanTrcv Module perspective.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_251</srcid><srcstatus/><internalId>1151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmDevErrorDetect
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Switches the development error detection and notification on or off.
          - true: detection and notification is enabled.
          - false: detection and notification is disabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_265</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_483</srcid><srcstatus/><internalId>1162</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmVersionInfoApi
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling version info API support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_907</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmUserDataEnabled
        Parent Container
        UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling user data support.
          This parameter shall be derived from NmUserDataEnabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_211</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_864</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRemoteSleepIndEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling remote sleep indication support.
          This feature is required for gateway nodes only. It must not be defined if
          UdpNmPassiveModeEnabled==true. This parameter shall be derived from
          NmRemoteSleepIndEnabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_225</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_109</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_783</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmBusSynchronizationEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling bus synchronization support. This feature is required
          for gateway nodes only. It must not be defined if UdpNmPassiveModeEnabled==true. This
          parameter shall be derived from NmBusSynchronizationEnabled.
        Multiplicity:
            1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_252</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_267</srcid><srcstatus/><internalId>1152</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmImmediateRestartEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling the immediate transmission of a NM PACKET upon
          bus-communication request in Prepare-Bus-Sleep mode.
          Must not be defined if UdpNmPassiveModeEnabled==true.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_204</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_549</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ImediateRestart_ComUserDataOn</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ImediateRestart_Disabled</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_0</srcid><srcstatus/><internalId>1517</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ImediateRestart_ComUserDataOff</srcid><srcstatus/><internalId>1565</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPassiveModeEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling support of the Passive Mode.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_190</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_641</srcid><srcstatus/><internalId>1171</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeParamCheck</srcid><srcstatus/><internalId>1335</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPduRxIndicationEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling the PDU Rx Indication.
          This parameter shall be derived from NmPduRxIndicationEnabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_197</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_674</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmStateChangeIndEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling the UDP NM state change notification.
          This parameter shall be derived from NmStateChangeIndEnabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_183</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_832</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmComControlEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling the Communication Control support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
        dependency:
          calculationFormula = If (UdpNmPassiveModeEnabled == False) then 
          Equal(NmComControlEnabled) else Equal(False)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_316</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmNumberOfChannels
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Number of NM channels allowed within one ECU.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          1 .. 255
        Default value
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_584</srcid><srcstatus/><internalId>1168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmChannelConfig
        Parent Container:
          UdpNmGlobalConfig
        Description:
          This container contains the channel-specific configuration parameters of the UdpNm.
      </description>
      <comment>
        Parameter check will be done individually.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1050</srcid><srcstatus/><internalId>1194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmComMNetworkHandleRef
        Parent Container:
          UdpNmChannelConfig
        Description:
          This reference points to the unique channel defined by the ComMChannel and provides
          access to the unique channel index value in ComMChannelId.
        Multiplicity:
          1
        Type:
          Symbolic name reference to [ ComMChannel ]
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_168</srcid><srcstatus/><internalId>765</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2296</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmTimeoutTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Network Timeout for NM packets.
          It denotes the time in [s] how long the NM shall stay in the Network Mode before
          transition into Prepare Bus-Sleep Mode shall take place. It shall be equal for all nodes
          in the cluster. It shall be greater than UdpNmMsgCycleTime. Typically, it should be equal
          to: x * UdpNmMsgCycleTime, where n denotes the number of NM PACKET cycle times in the
          Ready Sleep State before transition into the Bus-Sleep Mode is initiated. The value of n
          decremented by one determines the amount of lost NM packets that can be tolerated by the
          coordination algorithm.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0.002 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <comment>
        The dependency that UdpNmTimeoutTime = n * UdpNmMsgCycleTime cannot be imposed since
        it contradicts with system requirements of one or more customers.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_103</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2207</srcid><srcstatus/><internalId>1258</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmTimeoutTime</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmWaitBusSleepTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Timeout for bus calm down phase.
          It denotes the time in [s] how long the NM shall stay in the Prepare Bus-Sleep Mode
          before transition into Bus-Sleep Mode shall take place.
          It shall be equal for all nodes in the cluster. It shall be long enough to empty all
          Tx-buffer empty.
        Multiplicity:
          0..1
        Type:
          EcucFloatParamDef
        Range:
          [0.001 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          In case UdpNmStayInPbsEnabled is disabled this parameter shall be mandatory.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_107</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2258</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmStayInPrepareBusSleep</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>dev.UdpNm.UdpNmWaitBusSleepTimeMultiplicity</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRepeatMessageTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Timeout for Repeat Message State.
          It defines the time in seconds how long the NM shall stay in the Repeat Message State.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          UdpNmRepeatMessageTime = n * UdpNmMsgCycleTime; 
          UdpNmRepeatMessageTime &gt; UdpNmImmediateNmTransmissions * UdpNmImmediateNmCycleTime 
          Typically it should be equal to: n * UdpNmMsgCycleTime, where n denotes the number of
          NM PDUs that are normally sent in the Repeat Message State. The value of n decremented by
          one determines the amount of lost NM PDUs that can be tolerated by the node detection
          procedure. The value 0 denotes that no Repeat Message State is configured. It means that
          Repeat Message State is transient what implicates that it is left immediately after
          entrance and in result no start-up stability is guaranteed and no node detection
          procedure is possible.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_105</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2156</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RepeatMessageTimeZero</srcid><srcstatus/><internalId>1419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRemoteSleepIndTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Timeout for Remote Sleep Indication.
          It defines the time in [s] how long it shall take to recognize that all other nodes are
          ready to sleep. Typically it should be equal to: n * UdpNmMsgCycleTime, where n denotes
          the number of NM packets that are normally sent before Remote Sleep Indication is
          detected. The value of n decremented by one determines the amount of lost NM packets that
          can be tolerated by the Remote Sleep Indication procedure.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0.001 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2110</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPduNidPosition
        Parent Container:
          UdpNmChannelConfig
        Description:
          Defines the position of the source node identifier within the NM PACKET.
          ImplementationType: UdpNm_PduPositionType The value of the parameter represents the 
          location of the source node identifier in the NM PACKET (UDPNM_PDU_BYTE_0 means byte 0,
          UDPNM_PDU_BYTE_1 means byte 1, UDPNM_PDU_OFF means source node identifier is not part of
          the NM PACKET) See also UdpNmPduCbvPosition if (UDPNM_PDU_NID_POSITION != UDPNM_PDU_OFF &amp;&amp;
          UDPNM_PDU_CBV_POSITION != UDPNM_PDU_OFF) then 
          UDPNM_PDU_NID_POSITION != UDPNM_PDU_CBV_POSITION if 
          (UDPNM_PDU_NID_POSITION != UDPNM_PDU_OFF &amp;&amp; UDPNM_PDU_CBV_POSITION == UDPNM_PDU_OFF) then
          UDPNM_PDU_IND_POSITION = UDPNM_PDU_BYTE0
        Multiplicity:
          1
        Type:
          EcucEnumerationParamDef
        Range:
          UDPNM_PDU_BYTE_0    Byte 0 is used.
          UDPNM_PDU_BYTE_1    Byte 1 is used.
          UDPNM_PDU_OFF       Node Identification is not used.
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_154</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_160</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2054</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPduCbvPosition
        Parent Container:
          UdpNmChannelConfig
        Description:
          Defines the position of the control bit vector within the NM PACKET.
          The value of the parameter represents the location of the control bit vector in the
          NM PACKET (UDPNM_PDU_BYTE_0 means byte 0, UDPNM_PDU_BYTE_1 means byte 1, UDPNM_PDU_OFF
          means the control bit vector is not part of the NM PACKET)
          See also UdpNmPduNidPosition if (UdpNmPduCbvPosition != UDPNM_PDU_OFF &amp;&amp; 
          UdpNmPduNidPosition != UDPNM_PDU_OFF) then UdpNmPduCbvPosition != UdpNmPduNidPosition if
          (UdpNmPduCbvPosition != UDPNM_PDU_OFF &amp;&amp; UdpNmPduNidPosition == UDPNM_PDU_OFF) then
          UdpNmPduCbvPosition = UDPNM_PDU_BYTE0
        Multiplicity:
          1
        Type:
          EcucEnumerationParamDef
        Range:
          UDPNM_PDU_BYTE_0    --
          UDPNM_PDU_BYTE_1    --
          UDPNM_PDU_OFF       --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_156</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1994</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmMsgCycleTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Period of a NM-message. It determines the periodic rate and is the basis for transmit
          scheduling. NmTimeoutTime = n * UdpNmMsgCycleTime This parameter is only valid if
          UdpNmPassiveModeEnabled is disabled.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0.001 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME 
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_122</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1911</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmMsgCycleOffset
        Parent Container:
          UdpNmChannelConfig
        Description:
          Time offset in the periodic transmission node. It determines the start delay of the
          transmission. &lt; UdpNmMsgCycleTime This parameter is only valid if UdpNmPassiveModeEnabled
          is disabled.
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0 .. 65.535]
        Default value:
          --
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmMsgCycleOffset</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB.ECUC_UdpNm_00029</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmNodeId
        Parent Container:
          UdpNmChannelConfig
        Description:
          Node identifier of local node.
        Multiplicity:
          0..1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 255
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          This parameter is only relevant if UdpNmNodeIdEnabled == True.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1954</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmNodeIdMultiplicity</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmMainFunctionPeriod
        Parent Container:
          UdpNmChannelConfig
        Description:
          Call cycle of UdpNm_MainFunction_x for the respective instance in [s].
        Multiplicity:
          1
        Type:
          EcucFloatParamDef
        Range:
          [0 .. INF]
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <comment>
        Range changed with AUTOSAR 4.3.1 (to 0 .. INF).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmMainFunctionPeriodRange</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1755</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmTxPdu
        Parent Container:
          UdpNmChannelConfig
        Description:
          This container describes the UdpNm TX PDU's.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2436</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmTxPduRef
        Parent Container:
          UdpNmTxPdu
        Description:
          The reference to a PDU in the global PDU structure described in the AUTOSAR ECU
          Configuration Specification. This reference will be used by the UdpNm module to derive
          the PDU Id.
        Multiplicity:
          1
        Type:
          Reference to [ Pdu ]
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2499</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmRxPdu
        Parent Container:
          UdpNmChannelConfig
        Description:
          This container describes the UdpNm RX PDU's.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2330</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRxPduRef
        Parent Container:
          UdpNmRxPdu
        Description:
          The reference to a PDU in the global PDU structure described in the AUTOSAR ECU
          Configuration Specification. This reference will be used by the UdpNm module to derive
          the PDU Id.
        Multiplicity:
          1
        Type:
          Reference to [ Pdu ]
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2396</srcid><srcstatus/><internalId>1269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmTxConfirmationPduId
        Parent Container:
          UdpNmTxPdu
        Description:
          Id of the TxPdu that will be used by a TxConfirmation from the lower layer.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:
          0 .. 4294967296
        Default value:
          --
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_126</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2465</srcid><srcstatus/><internalId>1275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRxPduId
        Parent Container:
          UdpNmRxPdu
        Description:
          ID of the RxPdu that will be used by a RxIndication of the lower layer.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:
          0 .. 4294967296
        Default value:
          --
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <comment>
        UdpNmRxPduId parameter is precompile.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_129</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2358</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmComUserDataSupport
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Enable/disable the user data support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
        dependency:
          If UdpNmPassiveModeEnabled == True then UdpNmComUserDataSupport = False
      </description>
      <comment>
        Dependency not implemented (if UdpNmPassiveModeEnabled == True then
        UdpNmComUserDataSupport = False).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmComUserDataSupport</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmUserDataTxPdu
        Parent Container:
          UdpNmChannelConfig
        Description:
          Preprocessor switch for enabling the Tx path of Com User Data. Use case: Setting of
          NMUserData via SWC.
      </description>
      <comment>
        UdpNmUserDataTxPdu is a container not a preprocessor switch.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmUserDataTxPdu</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmTxUserDataPduRef
        Parent Container:
          UdpNmUserDataTxPdu
        Description:
          Reference to the NM User Data I-PDU in the global PDU collection.
        Multiplicity:
          1
        Type:
          Reference to [ Pdu ]
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2602</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmTxUserDataPduId
        Parent Container:
          UdpNmUserDataTxPdu
        Description:
          This parameter defines the Handle ID of the NM User Data I-PDU.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:
          0 .. 65535
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_132</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2568</srcid><srcstatus/><internalId>1284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCoordinatorSyncSupport
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Enables/disables the coordinator synchronization support.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
        dependency:
          UdpNmCoordinatorSyncSupport has to be set to FALSE if UdpNmPassiveModeEnabled is set
          to TRUE.
      </description>
      <comment>
        Coordinator Sleep Ready bit feature is not supported for this release.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_441</srcid><srcstatus/><internalId>1160</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the Repeat Message State is not entered via UdpNm_NetworkRequest OR 
        UdpNmImmediateNmTransmissions is zero the transmission of NM PDU shall be delayed by 
        UdpNmMsgCycleOffset after entering the repeat message state.
      </description>
      <comment>
        Note: This requirement covers also the case if Repeat Message State is entered
        from Network Operation State or Ready Sleep State due to Repeat Message Request
        or Bit (see SWS_UdpNm_00111, SWS_UdpNm_00112, SWS_UdpNm_00119, SWS_UdpNm_00120).
        This means that in this case the immediate transmission is not used (even if
        UdpNmImmediateNmTransmissions &gt; 0 and independent from configuration of
        UdpNmPnHandleMultipleNetworkRequests) i.e. UdpNmMsgCycleOffset will
        always be applied. This mechanism prevents bursts of NM messages.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00005.1</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00005.2</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The source node identifier shall be set with the configuration parameter UDPNM_NODE_ID unless 
        UDPNM_PDU_NID_POSITION is set to off.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1519</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Set_PduNid</srcid><srcstatus/><internalId>1408</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0096</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmRepeatMsgIndEnabled is set to TRUE and the Repeat Message Request bit set to 1 is 
        received UdpNm module shall call the callback function Nm_RepeatMessageIndication. In case the 
        Partial Network Learning Bit is also received and UdpNmDynamicPncToChannelMappingEnabled is set 
        to TRUE the parameter pnLearningBitSet in this function call shall be set to TRUE, otherwise to 
        FALSE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASR413.SWS_UdpNm_00014</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00014.1</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00014.2</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        API service used without module initialization | UdpNm.UDPNM_E_UNINIT | 0x01 
        API service called with wrong channel handle | UdpNm.UDPNM_E_INVALID_CHANNEL | 0x02 
        API service called with wrong PDU ID. | UdpNm.UDPNM_E_INVALID_PDUID | 0x03 
        UdpNm initialization has failed, e.g. selected configuration set doesn't exist | UdpNm.UDPNM_E_INIT_FAILED | 0x04 
        Null pointer has been passed as an argument | UdpNm.UDPNM_E_PARAM_POINTER | 0x12 
      </description>
      <comment>
        UDPNM_E_NULL_POINTER is used instead of UDPNM_E_PARAM_POINTER.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00018.1</srcid><srcstatus/><internalId>400</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00018.2</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00018.3</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00018.4</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00018.5</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.DevelopmentErrorNames</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        After initialization each byte of the user data bytes shall be set to 0xFF.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00025</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00026</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        All configuration items shall be located outside the kernel of the module.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If transmission of NM PDUs has been started, the UdpNm Message Cycle Timer expires and when 
        UdpNmSynchronizedPncShutdownEnabled is set to either FALSE or if set to TRUE and no request for 
        a synchronized PNC shutdown is pending, then the UdpNm modul shall transmit an NM PDU by 
        calling SoAd_IfTransmit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.SWS_UdpNm_00032</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        After initialization the transmission of NM messages shall be stopped.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_366</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0107</srcid><srcstatus/><internalId>1448</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Upon a call of UdpNm_SoAdIfRxIndication, the UdpNm module shall copy the data of the Network 
        Management PDU referenced in the function parameter to an internal buffer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1940</srcid><srcstatus/><internalId>977</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0099</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When an NM PDU has been received, the Nm function Nm_PduRxIndication shall be called, if 
        UdpNmPduRXIndicationEnabled (configuration parameter) is TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_416</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_896</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1326</srcid><srcstatus/><internalId>1112</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1565</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32043</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0081</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the UdpNm Message Cycle Timer expires it shall be restarted with UdpNmMsgCycleTime.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1717</srcid><srcstatus/><internalId>1141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0111</srcid><srcstatus/><internalId>1451</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Control Bit Vector shall consist of:
        Bit 0: Repeat Message Request Bit 0: Repeat Message State not requested 1: Repeat Message State 
        requested
        Bit 1: PN Shutdown Request Bit (PNSR) 0: NM message does not contain synchronized Partial 
        Network shutdown request 1: NM message does contain synchronized Partial Network shutdown 
        request for at least one PNC
        Bit 3 :NM Coordinator Sleep Bit
        0: Start of synchronized shutdown is not requested by main coordinator 1: Start of synchronized 
        shutdown is requested by main coordinator
        Bit 4 Active Wakeup Bit
        0: Node has not woken up the network (passive wakeup) 1: Node has woken up the network (active 
        Wakeup)
        Bit 5 Partial Network Learning Bit (PNL)
        0: PNC learning is not requested 1: PNC learning is requested
        Bit 6 Partial Network Information Bit (PNI)
        0: NM message contains no Partial Network request information 1: NM message contains Partial 
        Network request information
        Bit 2,7 are reserved for future extensions 0 : Disabled / Reserved for future usage
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.SWS_UdpNm_00045</srcid><srcstatus/><internalId>317</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If transmission of NM PDUs has been stopped the UdpNm Message Cycle Timer shall be canceled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_787</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The function UdpNm_Init shall select the active configuration set by means of a configuration 
        pointer parameter being passed (see 8.3.1)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_300</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The transmission of NM messages shall be configurable by means of UdpNmPassiveModeEnabled (see 
        chapter 10.2)
      </description>
      <comment>
        Note: Passive nodes do not transmit NM messages, i.e. they can not actively influence the
        shut down decision, but they do receive NM message in order to be able to shut down
        synchronously.
        Note: The transmission mechanisms described in this chapter are only relevant if
        UdpNmPassiveModeEnabled is FALSE.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_630</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_741</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_761</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_669</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_727</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_816</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The location of the source node identifier shall be configurable by means of 
        UDPNM_PDU_NID_POSITION to Byte 0, Byte 1, or off.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2087</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The location of the control Bit vector shall be configurable by means of UDPNM_PDU_CBV_POSITION 
        to Byte 0, Byte 1, or off.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2030</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00076</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The length of an NM packet shall not exceed the MTU(Maximum Transmission Unit)of the underlying 
        physical transport layer.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The code file structure shall not be fully defined within this specification. However, the code 
        file structure shall include the following files:
        UdpNm_Lcfg.c (for link time configurable parameters)
        UdpNm_PBcfg.c (for post build time configurable parameters)
        These files shall contain all link time post build time configurable parameters.
      </description>
      <comment>
        Link Time configuration of parameters is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00081</srcid><srcstatus/><internalId>336</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.LinkTimeSupport</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        After initialization the Control Bit Vector shall be set to 0x00.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00085</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00087</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every network node shall transmit periodic NM PDUs as long as it requires bus-communication; 
        otherwise it shall not transmit NM PDUs.
      </description>
      <comment>
        This requirement is informational only.
        Info - Transmission of NM PDUs by node should happen only if it requires bus communication.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00088</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmStayInPbsEnabled is disabled and bus communication in a UdpNm cluster is released and 
        there are no Network Management PDUs on the bus for a configurable amount of time determined by 
        UdpNmTimeoutTime + UdpNmWaitBusSleepTime (both configuration parameters) transition into the 
        Bus-Sleep Mode shall be performed.
      </description>
      <comment>
        This requirement is informational only.
        This requirement is covered by SWS_UdpNm_00109 and SWS_UdpNm_00115.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00089</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The AUTOSAR UdpNm state machine shall contain states, transitions and triggers required for the 
        AUTOSAR UdpNm coordination algorithm as seen from the point of view of one single node in the 
        NM cluster.
      </description>
      <comment>
        Note: A UML state chart of the AUTOSAR UdpNm state machine from the point of view of one
        single node in the NM cluster can be found in the API specifications chapter 8

        This requirement is informational only. It is a generic requirement
        for HSM design. Info - Each node should have an individual state machine.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The AUTOSAR UdpNm shall contain three operational modes visible at the modules interface:
        Network Mode
        Prepare Bus-Sleep Mode
        Bus-Sleep Mode
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1467</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32027</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32019</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32042</srcid><srcstatus/><internalId>1442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00093</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Changes of the AUTOSAR UdpNm operational modes shall be signalled to the upper layer by means 
        of call-back functions.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Network Mode shall consist of three internal states:
        Repeat Message State
        Normal Operation State
        Ready Sleep State
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1467</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32027</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32019</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Network Mode is entered from Bus-Sleep Mode or Prepare Bus-Sleep Mode, by default, the 
        Repeat Message State shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00095.1</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00095.2</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Network Mode is entered, the NM-Timeout Timer shall be started.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_456</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_1</srcid><srcstatus/><internalId>1610</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Start</srcid><srcstatus/><internalId>1621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Network Mode is entered, the UdpNm shall notify the upper layer by calling 
        Nm_NetworkMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_459</srcid><srcstatus/><internalId>1053</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32019</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32043</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32037</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Upon successful reception of an NM PDU (call of UdpNm_SoAdIfRxIndication) in Network Mode, the 
        NM-Timeout Timer shall be restarted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_521</srcid><srcstatus/><internalId>1061</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_768</srcid><srcstatus/><internalId>1072</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1561</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_2</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00099</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Upon transmission of an NM PDU (call of UdpNm_SoAdIfTxConfirmation with E_OK) in the Network 
        Mode, the NM-Timeout Timer shall be restarted.
      </description>
      <comment>
        Note: As no transmission confirmation is available from the SoAd or the TCP/IP stack it is
        assumed that each Network Management PDU transmission request results in a successful
        Network Management PDU transmission.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_532</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1591</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_2</srcid><srcstatus/><internalId>1611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Repeat Message State is entered from Bus-Sleep Mode, Prepare-Bus-Sleep Mode, Normal 
        Operation State or Ready Sleep State transmission of NM packets shall be (re-) started unless 
        passive mode is enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00100.1</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00100.2</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00100.3</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00100.4</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM-Timeout Timer expires in the Repeat Message State, the NM-Timeout Timer shall be 
        restarted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_802</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_1</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM shall stay in the Repeat Message State for a configurable amount of time determined by 
        the UdpNmRepeatMessageTime (configuration parameter); after that time the Repeat Message State 
        shall be left.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1073</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1199</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32053</srcid><srcstatus/><internalId>1439</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMsgTest</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0119</srcid><srcstatus/><internalId>1605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When Repeat Message State is left, the Normal Operation State shall be entered, if the network 
        has been requested (see SWS_UdpNm_00104)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1217</srcid><srcstatus/><internalId>1104</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32053</srcid><srcstatus/><internalId>1439</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32038</srcid><srcstatus/><internalId>1563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The function call UdpNm_NetworkRequest shall request the network. I.e. the UdpNm module shall 
        change network state to 'requested'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_560</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The function call UdpNm_NetworkRelease shall release the network. I.e. the UdpNm module shall 
        change network state to 'released'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_700</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When Repeat Message State is left, the Ready Sleep State shall be entered, if the network has 
        been released (see SWS_UdpNm_00105)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1199</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RepeatMessageTimeZero</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PassiveStartup_RMSTimeExpire</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32037</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE UdpNm shall clear the Repeat Message Bit when 
        leaving Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1171</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0132</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Ready Sleep State is entered from Repeat Message State or Normal Operation State, 
        transmission of NM PDUs shall be stopped.
      </description>
      <comment>
        Note: If passive mode is enabled no NM PDUs are transmited, no action is required.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00108.1</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00108.2</srcid><srcstatus/><internalId>362</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM-Timeout Timer expires in the Ready Sleep State, the Ready Sleep State shall be left 
        and the Prepare Bus-Sleep Mode shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_604</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_EventQueue</srcid><srcstatus/><internalId>1375</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32042</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32037</srcid><srcstatus/><internalId>1562</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Start</srcid><srcstatus/><internalId>1621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the network is requested and the current state is the Ready Sleep State, the Ready Sleep 
        State shall be left and the Normal Operation State shall be entered (refer to SWS_UdpNm_00104)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_641</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_699</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_1</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_2</srcid><srcstatus/><internalId>1385</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS2</srcid><srcstatus/><internalId>1389</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32030</srcid><srcstatus/><internalId>1440</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ConcurrencyAccess</srcid><srcstatus/><internalId>1456</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and Repeat Message Request bit is received in the 
        Ready Sleep State, UdpNm shall enter Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1295</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0125</srcid><srcstatus/><internalId>1607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and function UdpNm_RepeatMessageRequest is called 
        in the Ready Sleep State, UdpNm shall enter Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1300</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32055</srcid><srcstatus/><internalId>1441</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0139</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and function UdpNm_RepeatMessageRequest is called 
        in the Ready Sleep State, UdpNm shall set the Repeat Message Bit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1295</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32055</srcid><srcstatus/><internalId>1441</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0139</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When Prepare Bus-Sleep Mode is entered, the UdpNm shall notify the upper layer by calling 
        Nm_PrepareBusSleepMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1267</srcid><srcstatus/><internalId>1107</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32042</srcid><srcstatus/><internalId>1442</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32037</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmStayInPbsEnabled is disabled UdpNm shall stay in the Prepare Bus-Sleep Mode for a 
        configurable amount of time determined by the UdpNmWaitBusSleepTime (configuration parameter); 
        after that time the Prepare Bus-Sleep Mode shall be left and the Bus-Sleep Mode shall be 
        entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1253</srcid><srcstatus/><internalId>1105</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32022</srcid><srcstatus/><internalId>1447</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmStayInPrepareBusSleep</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Normal Operation State is entered from Ready Sleep State, transmission of NM PDUs 
        shall be started unless passive mode is enabled or the NM message transmission ability has been 
        disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00116.1</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00116.2</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM-Timeout Timer expires in the Normal Operation State, the NM-Timeout Timer shall be 
        restarted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_802</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_1</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the network is released and the current state is Normal Operation State, the Normal 
        Operation State shall be left and the Ready Sleep state shall be entered (refer to 
        SWS_UdpNm_00105)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_908</srcid><srcstatus/><internalId>1079</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1016</srcid><srcstatus/><internalId>1082</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32029</srcid><srcstatus/><internalId>1443</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ConcurrencyAccess</srcid><srcstatus/><internalId>1456</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0119</srcid><srcstatus/><internalId>1605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and Repeat Message Request bit is received in the 
        Normal Operation State, UdpNm shall enter Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2424</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1034</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Nm_RepeatMsgIndication_1</srcid><srcstatus/><internalId>1606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and function UdpNm_RepeatMessageRequest is called 
        in the Normal Operation State, UdpNm shall enter Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1300</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32054</srcid><srcstatus/><internalId>1444</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0142</srcid><srcstatus/><internalId>1604</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0132</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMsgReqCommDisable</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmNodeDetectionEnabled is set to TRUE and function UdpNm_RepeatMessageRequest is called 
        in the Normal Operation State, UdpNm shall set the Repeat Message Bit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1295</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0132</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMsgReqCommDisable</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the network has been requested (see SWS_UdpNm_00104) in the Prepare Bus-Sleep Mode and the 
        UdpNm module has entered Network Mode and if UdpNmImmediateRestartEnabled (configuration 
        parameter) is TRUE, the UdpNm module shall transmit a Network Management PDU.
      </description>
      <comment>
        Rationale: Other nodes in the cluster are still in Prepare Bus-Sleep Mode; in the
        exceptional situation described above transition into the Bus-Sleep Mode shall be avoided
        and bus-communication shall be restored as fast as possible.
        Caused by the transmission offset for Network Management PDUs in UdpNm, the transmission
        of the first Network Management PDU in Repeat Message State can be delayed significantly.
        In order to avoid a delayed re-start of the network the transmission of a Network
        Management PDU can be requested immediately.
        Note: If UdpNmImmediateRestartEnabled is TRUE and a wake-up line is used, a burst of
        Network Management PDUs occurs if all network nodes get a network request in Prepare
        Bus-Sleep Mode.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1137</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ImediateRestart_ComUserDataOn</srcid><srcstatus/><internalId>1382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the network is requested in the Prepare Bus-Sleep Mode, the Prepare Bus-Sleep Mode shall 
        be left and the Network Mode shall be entered; by default the Repeat Message State is entered (
        refer to SWS_UdpNm_00095)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1307</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32044</srcid><srcstatus/><internalId>1446</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32037</srcid><srcstatus/><internalId>1562</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Upon successful reception of an NM PDU in the Prepare Bus-Sleep Mode, the Prepare Bus-Sleep 
        Mode shall be left and the Network Mode shall be entered; by default the Repeat Message State 
        is entered (refer to SWS_UdpNm_00095)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1324</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32043</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PrepareBusSleep_To_RepeatMessage_Coverage</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When Bus-Sleep Mode is entered, the UdpNm shall notify the upper layer by calling 
        Nm_BusSleepMode; this shall not be the case if Bus-Sleep Mode is entered by default at 
        initialization.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_381</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32022</srcid><srcstatus/><internalId>1447</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0112</srcid><srcstatus/><internalId>1452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the UdpNm module receives successfully Network Management PDU in the Bus-Sleep Mode (call 
        of UdpNm_SoAdIfRxIndication), the UdpNm module shall notify the upper layer by calling the 
        callback function Nm_NetworkStartIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_402</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0092</srcid><srcstatus/><internalId>1596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_PassiveStartUp is called in the Bus-Sleep Mode or Prepare Bus Sleep Mode, the UdpNm 
        module shall enter the Network Mode; by default the Repeat Message State is entered (refer to 
        SWS_UdpNm_00095 and SWS_UdpNm_00104)
      </description>
      <comment>
        Note: In the Prepare Bus-Sleep Mode and Bus-Sleep Mode is assumed that the network is
        released, unless bus communication is explicitly requested.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00128.1</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00128.2</srcid><srcstatus/><internalId>380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service call UdpNm_RequestBusSynchronization shall trigger transmission of a single Network 
        Management PDU if UdpNmPassiveModeEnabled (configuration parameter) is FALSE.
      </description>
      <comment>
        Rationale: This service is typically used for supporting the NM gateway extensions.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1525</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0077</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RequestBusSync</srcid><srcstatus/><internalId>1509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00131</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The AUTOSAR UdpNm algorithm shall support up to 250 nodes per NM-Cluster by default. Note: The 
        AUTOSAR UdpNm algorithm can support an arbitrary number of nodes per NM-cluster (even more than 
        default 250 nodes per cluster, if necessary) - it is only a matter of configuration, since the 
        upper limit is not fixed and depends on the trade off between response time, fault-tolerance 
        and resulted bus load configured for the AUTOSAR UdpNm coordination algorithm. This might 
        depend on the physical layer used.
      </description>
      <comment>
        Note: The AUTOSAR UdpNm algorithm can support an arbitrary number of nodes per NM-cluster
        (even more than default 250 nodes per cluster, if necessary) – it is only a matter of
        configuration, since the upper limit is not fixed and depends on the trade off between
        response time, fault-tolerance and resulted bus load configured for the AUTOSAR UdpNm
        coordination algorithm. This might depend on the physical layer used.

        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service call UdpNm_GetNodeIdentifier shall provide the node identifier out of the most 
        recently received Network Management PDU if UdpNmNodeIdEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1106</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures</srcid><srcstatus/><internalId>1458</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_DET</srcid><srcstatus/><internalId>1461</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33023</srcid><srcstatus/><internalId>1508</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_1</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0097</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service call UdpNm_GetLocalNodeIdentifier shall provide the node identifier configured for 
        the local host node if UdpNmNodeIdEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1196</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures</srcid><srcstatus/><internalId>1458</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_DET</srcid><srcstatus/><internalId>1461</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33023</srcid><srcstatus/><internalId>1508</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_1</srcid><srcstatus/><internalId>1558</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0098</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the service UdpNm_RepeatMessageRequest is called in Repeat Message State, Prepare Bus-Sleep 
        Mode or Bus-Sleep Mode, the UdpNm module shall not execute the service and return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00137.1</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00137.2</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00137.3</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service call UdpNm_GetPduData shall provide whole payload (Source Node ID, Control Bit 
        Vector and User Data) of the most recently received Network Management PDU if 
        UdpNmNodeDetectionEnabled or UdpNmUserDataEnabled or UdpNmNodeIdEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1324</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0099</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        After successful initialization the Network Management state shall be set to BusSleep Mode.
      </description>
      <comment>
        Note: The UdpNm module should be initialized after SoAd is initialized and before any other
        network management service is called.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_360</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_367</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0112</srcid><srcstatus/><internalId>1452</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32050</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When initialized, by default, the UdpNm module shall set the network state to 'released'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_370</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When initialized, by default, the UdpNm module shall enter the Bus-Sleep Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_370</srcid><srcstatus/><internalId>1044</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0112</srcid><srcstatus/><internalId>1452</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32050</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00145</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If AUTOSAR UdpNm is not initialized it shall not prohibit bus traffic.
      </description>
      <comment>
        This requirement is informational only.
        Info - Network transmission shall not happen unless UdpNm is initialized.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00146</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The AUTOSAR UdpNm coordination algorithm shall be processor independent, meaning it shall not 
        rely on any processor specific hardware support and thus shall be realizable on any processor 
        architecture that is within the scope of AUTOSAR.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_PassiveStartUp is called in the Network Mode, the UdpNm module shall not execute this 
        service and shall return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_505</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33025</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00148</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        All instances of UDP NM on different ECUs in one NM cluster shall use the same UDP receive port.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Detection of remote sleep indication shall be statically configurable with use of the 
        UdpNmRemoteSleepIndEnabled switch (configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_653</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1610</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If no NM PDUs are received in the Normal Operation State for a configurable amount of time 
        determined by the UdpNmRemoteSleepIndTime (configuration parameter), the NM shall notify the 
        Generic Network Management Interface that all other nodes in the cluster are ready to sleep (
        the so-called 'Remote Sleep Indication') by calling Nm_RemoteSleepIndication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_874</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_944</srcid><srcstatus/><internalId>1080</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32057</srcid><srcstatus/><internalId>1457</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32051</srcid><srcstatus/><internalId>1506</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0105</srcid><srcstatus/><internalId>1577</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0100</srcid><srcstatus/><internalId>1588</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0128</srcid><srcstatus/><internalId>1608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if an NM PDU is received in the 
        Normal Operation State or Ready Sleep State again, the NM shall notify the Generic Network 
        Management Interface that some nodes in the cluster are not ready to sleep anymore (the so-
        called 'Remote Sleep Cancellation') by calling Nm_RemoteSleepCancellation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00151.1</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00151.2</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if Repeat Message State is entered 
        from Normal Operation State or Ready Sleep State, the UdpNm shall notify the Generic Network 
        Management Interface that some nodes in the cluster are not ready to sleep anymore (the so-
        called 'Remote Sleep Cancellation') by calling Nm_RemoteSleepCancellation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00152.1</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00152.2</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service call UdpNm_CheckRemoteSleepIndication shall provide the information about current 
        status of Remote Sleep Indication (i.e. already detected or not)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1678</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32051</srcid><srcstatus/><internalId>1506</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0100</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM shall reject a check of Remote Sleep Indication in Bus-Sleep Mode, Prepare Bus-Sleep 
        Mode and Repeat Message State; the service shall not be executed and E_NOT_OK shall be returned.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00154.1</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00154.2</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00154.3</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Support of NM user data shall be statically configurable using the UdpNmUserDataEnabled switch 
        configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_211</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When UdpNm_SetUserData is called, the NM user data for NM packets transmitted next on the bus 
        shall be set; operation of setting the NM user data shall guarantee data consistency.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_952</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0103</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When UdpNm_GetUserData is called, the NM user data contained in the payload of the most 
        recently received NM PDU shall be provided; operation of providing the NM user data shall 
        guarantee data consistency.
      </description>
      <comment>
        Note: If NM user data is configured it will be sent for sure in the Repeat Message State.
        In Ready Sleep State the user data will not be sent.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1032</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0103</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Passive Mode shall be statically configurable with use of the UdpNmPassiveModeEnabled switch (
        configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_190</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00162</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Passive Mode shall be statically configured consistent for all instances within one ECU.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Passive Mode is used (configuration parameter UdpNmPassiveModeEnabled) the following options 
        must not be used:
        Bus Synchronization (configuration parameter UdpNmBusSynchronizationEnabled)
        Remote Sleep Indication (configuration parameter UdpNmRemoteSleepIndEnabled)
        Node Detection (configuration parameter UdpNmNodeDetectionEnabled)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00163.1</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00163.2</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00163.3</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        All changes of the AUTOSAR UdpNm states shall be notified to the upper layer by calling 
        Nm_StateChangeNotification if the callback Nm_StateChangeNotification is enabled (configuration 
        parameter UdpNmStateChangeIndEnabled is TRUE)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_370</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_588</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_845</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1083</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1259</srcid><srcstatus/><internalId>1106</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32027</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32043</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32044</srcid><srcstatus/><internalId>1446</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0144</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0145</srcid><srcstatus/><internalId>1581</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0146</srcid><srcstatus/><internalId>1582</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReEnterNetworkMode</srcid><srcstatus/><internalId>1619</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_StateChangeNotification_UdpNmRemoteSleepIndEnabledFalse</srcid><srcstatus/><internalId>1622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Communication Control shall be statically configurable with use of the UdpNmComControlEnabled 
        switch (configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_176</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_DisableCommunication shall disable the NM PDU transmission ability.
      </description>
      <comment>
        Note: The NM coordination algorithm cannot work correctly if NM PDU transmission ability
        is disabled. Therefore it has to be ensured that the ECU is not shutdown as long as the
        NM PDU transmission ability is disabled.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_503</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_ReadySleepRemoteActivity_ComDisabled</srcid><srcstatus/><internalId>1415</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ReadySleepRemoteSleep_ComDisabled</srcid><srcstatus/><internalId>1416</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33028</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0116</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_DisableCommunication shall return E_NOT_OK, if the current mode is 
        not Network Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_793</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0115</srcid><srcstatus/><internalId>1584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Network Management PDU transmission ability is disabled, the UdpNm module shall stop 
        the UdpNm Message Cycle Timer in order to stop the transmission of Network Management PDUs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1617</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0116</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is disabled, the NM-Timeout Timer shall be stopped.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1620</srcid><srcstatus/><internalId>1130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NMTimeOutTimerCOMControl</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is disabled, the detection of Remote Sleep Indication 
        Timer shall be suspended.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00175</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_EnableCommunication shall enable the NM PDU transmission ability if 
        the NM PDU transmission ability is disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_862</srcid><srcstatus/><internalId>883</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_503</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_EnableCommunication shall return E_NOT_OK if the NM PDU transmission 
        ability is already enabled when the service is called.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_871</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the Network Management PDU transmission ability is enabled, the transmission of NM PDUs 
        shall be started latest within the next NM main function.
      </description>
      <comment>
        The UdpNm module start the UdpNm Message Cycle Timer with UDPNM_MSG_CYCLE_OFFSET in
        order to start transmission of Network Management PDUs.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.NmPdusTransmission</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is enabled, the NM-Timeout Timer shall be restarted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1606</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NMTimeOutTimerCOMControl</srcid><srcstatus/><internalId>1586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is enabled, the detection of Remote Sleep Indication Timer 
        shall be resumed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00180</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional service UdpNm_RequestBusSynchronization shall return E_NOT_OK if the NM PDU 
        transmission ability is disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1568</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RequestBusSync</srcid><srcstatus/><internalId>1509</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Support of bus synchronization on demand shall be statically configurable with use of the 
        UdpNmBusSynchronizationEnabled switch (configuration parameter)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_611</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_RequestBusSynchronization is called in Bus-Sleep Mode and Prepare Bus-Sleep Mode the 
        UdpNm module shall not execute the service and shall return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00187.1</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00187.2</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00189</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Development errors shall not be returned by API functions; in case of a development error, the 
        respective API function will return E_NOT_OK, if applicable.
      </description>
      <comment>
        This requirement is not applicable
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Production errors shall not be returned by API functions; in case of a production error, the 
        respective API function will return E_NOT_OK, if applicable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.DemSupport</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When NM API service with an invalid network handle is called, the called function shall not be 
        executed, but instead of that it shall report UDPNM_E_INVALID_CHANNEL to the Default Error 
        Tracer (if development error detection is enabled) otherwise it shall return E_NOT_OK to the 
        calling function
      </description>
      <comment>
        Note: The network handle is invalid if it is different from allowed configured values.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp</srcid><srcstatus/><internalId>421</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>423</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication</srcid><srcstatus/><internalId>426</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData</srcid><srcstatus/><internalId>427</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier</srcid><srcstatus/><internalId>429</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>430</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest</srcid><srcstatus/><internalId>431</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData</srcid><srcstatus/><internalId>432</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration 
        parameter), validity checks for all input parameters shall be performed for each UDP NM API 
        service call.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.Null_Pointer_UdpNm_Init</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_PassiveStartUp</srcid><srcstatus/><internalId>446</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRequest</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkGwEraRequest</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRelease</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_DisableCommunication</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_EnableCommunication</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SetUserData</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetUserData</srcid><srcstatus/><internalId>453</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetNodeIdentifier</srcid><srcstatus/><internalId>454</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetLocalNodeIdentifier</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RepeatMessageRequest</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetPduData</srcid><srcstatus/><internalId>457</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetState</srcid><srcstatus/><internalId>458</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetVersionInfo</srcid><srcstatus/><internalId>459</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestBusSynchronization</srcid><srcstatus/><internalId>460</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_CheckRemoteSleepIndication</srcid><srcstatus/><internalId>461</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfTxConfirmation</srcid><srcstatus/><internalId>462</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfRxIndication</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00197</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Parameter type checking shall be performed at compile time; if types do not match, the 
        compilation process shall be stopped and respective compilation warnings or errors shall be 
        returned as far as supported by the compiler.
      </description>
      <comment>
        This requirement is informational only.
        Info - Parameter type check should be done during compile time.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00198</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Parameter value check (for parameters of the constant value) shall be performed at 
        configuration time; if the value is invalid, the configuration process shall be stopped and the 
        respective configuration error shall be reported.
      </description>
      <comment>
        This requirement is informational only.
        Info - configuration parameter check should be done during
        configuration time.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00199</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Parameter value check (for parameters of the variable value) shall be performed at execution 
        time; if the value is invalid, execution of a service shall be denied and the respective 
        development error shall be reported.
      </description>
      <comment>
        This requirement is informational only.
        It is covered with specific requirement for each API.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The container UdpNm_ChannelConfig specifies configuration parameter that shall be located in a 
        data structure of type UdpNm_ConfigType.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1050</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_77</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Runtime configurable parameters listed in container UdpNm_ChannelConfig shall be configurable 
        for each NM-cluster separately.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1044</srcid><srcstatus/><internalId>1193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The NM-Timeout Timer shall be reset every time it is started or restarted.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_73</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_456</srcid><srcstatus/><internalId>1052</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_802</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1561</srcid><srcstatus/><internalId>1123</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1591</srcid><srcstatus/><internalId>1125</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1606</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NmTimeOut_Restart_1</srcid><srcstatus/><internalId>1610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_Init 
        Syntax 
        void UdpNm_Init (const UdpNm_ConfigType* UdpNmConfigPtr)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | UdpNmConfigPtr | Pointer to a selected configuration structure 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Initialize the complete UdpNm module, i.e. all channels which are activated at 
        configuration time are initialized. A UDP socket shall be set up with the TCP/IP stack. Caveats:
        This function has to be called after initialization of the TCP/IP stack. Configuration: 
        Mandatory 
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_290</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32050</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If an error has to be indicated to the DET the value 0x00 shall be used as the instance id.
      </description>
      <comment>
        Rationale: the value 0 x 00 is not error value but instance ID.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_244</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_PassiveStartUp 
        Syntax 
        Std_ReturnType UdpNm_PassiveStartUp (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x0e 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Passive startup of network management 
        has failed 
        Description | Passive startup of the AUTOSAR UdpNm. It triggers the transition from Bus-Sleep 
        Mode or Prepare Bus Sleep Mode to the Network Mode in Repeat Message State. Caveats: UdpNm is 
        initialized correctly.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_439</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Passive_Active</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_NetworkRequest 
        Syntax 
        Std_ReturnType UdpNm_NetworkRequest (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x02 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Requesting of network has failed 
        Description | Request the network, since ECU needs to communicate on the bus. Network state 
        shall be changed to 'requested' Caveats: UdpNm is initialized correctly. Configuration: 
        Optional (Only available if UdpNmPassiveModeEnabled == false)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_517</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0077</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33027</srcid><srcstatus/><internalId>1512</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Passive_Active</srcid><srcstatus/><internalId>1618</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_NetworkRelease 
        Syntax 
        Std_ReturnType UdpNm_NetworkRelease (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x03 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Releasing of network has failed 
        Description | Release the network, since ECU doesn't have to communicate on the bus. Network 
        state shall be changed to 'released'. Caveats: UdpNm is initialized correctly. Configuration: 
        Optional (Only available if UdpNmPassiveModeEnabled == false)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_656</srcid><srcstatus/><internalId>865</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_NetworkRelease_HandleMultipleRequests</srcid><srcstatus/><internalId>1429</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleep_NetworkRelease_1</srcid><srcstatus/><internalId>1430</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleep_NetworkRelease_2</srcid><srcstatus/><internalId>1431</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33027</srcid><srcstatus/><internalId>1512</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_DisableCommunication 
        Syntax 
        Std_ReturnType UdpNm_DisableCommunication (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x0c 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Disabling of NM PDU transmission 
        ability has failed 
        Description | Disable the NM PDU transmission ability due to a ISO14229 Communication Control (
        0x28) service Caveats: UdpNm is initialized correctly. Configuration: Optional (Only available 
        if UdpNmComControlEnabled == true)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_726</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DisableCom</srcid><srcstatus/><internalId>1381</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0116</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_EnableCommunication 
        Syntax 
        Std_ReturnType UdpNm_EnableCommunication (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x0d 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Enabling of NM PDU transmission ability 
        has failed 
        Description | Enable the NM PDU transmission ability due to a ISO14229 Communication Control (
        0x28) service Caveats: UdpNm is initialized correctly. Configuration: Optional (Only available 
        if UdpNmComControlEnabled == true)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_809</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_SetUserData 
        Syntax 
        Std_ReturnType UdpNm_SetUserData (NetworkHandleType nmChannelHandle, const uint8* nmUserDataPtr)
        Service ID [hex] | 0x04 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        nmUserDataPtr | Pointer where the user data for the next transmitted NM message shall be copied 
        from.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Setting of user data has failed 
        Description | Set user data for all NM messages transmitted on the bus after this function has 
        returned without error. Caveats: UdpNm is initialized correctly. Configuration: Optional (Only 
        available if UdpNmUserDataEnabled==true and UdpNmPassiveModeEnabled==false)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_898</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SetGetUserDataRetVal</srcid><srcstatus/><internalId>1454</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0103</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetUserData 
        Syntax 
        Std_ReturnType UdpNm_GetUserData (NetworkHandleType nmChannelHandle, uint8* nmUserDataPtr)
        Service ID [hex] | 0x05 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmUserDataPtr | Pointer where user data out of the most recently received NM 
        message shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of user data has failed 
        Description | Get user data from the most recently received NM message. Caveats: UdpNm is 
        initialized correctly. Configuration: Optional (Only available if UdpNmUserDataEnabled == true)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_975</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0103</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetNodeIdentifier 
        Syntax 
        Std_ReturnType UdpNm_GetNodeIdentifier (NetworkHandleType nmChannelHandle, uint8* nmNodeIdPtr)
        Service ID [hex] | 0x06 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmNodeIdPtr | Pointer where the source node identifier from the most 
        recently received NM PDU shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of the node identifier out of 
        the most recently received NM PDU has failed or is not configured for this network handle.
        Description | Get node identifier from the most recently received NM PDU. Caveats: UdpNm is 
        initialized correctly.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1051</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33023</srcid><srcstatus/><internalId>1508</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0097</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetLocalNodeIdentifier 
        Syntax 
        Std_ReturnType UdpNm_GetLocalNodeIdentifier (NetworkHandleType nmChannelHandle, uint8* 
        nmNodeIdPtr)
        Service ID [hex] | 0x07 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmNodeIdPtr | Pointer where node identifier of the local node shall be 
        copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of the node identifier of the 
        local node has failed or is not configured for this network handle.
        Description | Get node identifier configured for the local node. Caveats: UdpNm is initialized 
        correctly.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1136</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PassiveMode_With_Node_Id_Enabled</srcid><srcstatus/><internalId>1500</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33023</srcid><srcstatus/><internalId>1508</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0098</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_RepeatMessageRequest 
        Syntax 
        Std_ReturnType UdpNm_RepeatMessageRequest (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x08 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Setting of Repeat Message Request Bit 
        has failed or is not configured for this network handle.
        Description | Set Repeat Message Request Bit for all NM messages transmitted on the bus after 
        this function has returned without error.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1233</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_Rpt</srcid><srcstatus/><internalId>1459</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_5</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_Rpt_1</srcid><srcstatus/><internalId>1559</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0139</srcid><srcstatus/><internalId>1603</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0132</srcid><srcstatus/><internalId>1609</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMsgReqCommDisable</srcid><srcstatus/><internalId>1612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00223</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        On errors and exceptions, the UdpNm module shall not modify its current module state.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetVersionInfo 
        Syntax 
        void UdpNm_GetVersionInfo (Std_VersionInfoType* versioninfo)
        Service ID [hex] | 0x09 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | versioninfo | Pointer to where to store the version information of this 
        module.
        Return value | None 
        Description | This service returns the version information of this module.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1495</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0135</srcid><srcstatus/><internalId>1504</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32050</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_RequestBusSynchronization 
        Syntax 
        Std_ReturnType UdpNm_RequestBusSynchronization (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x14 
        Sync/Async | Asynchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Requesting of bus synchronization has 
        failed 
        Description | Request bus synchronization. Caveats: UdpNm is initialized correctly. 
        Configuration: Optional (only available if UdpNmBusSynchronizationEnabled==true and 
        UdpNmPassiveModeEnabled==false)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1525</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0077</srcid><srcstatus/><internalId>1453</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0078</srcid><srcstatus/><internalId>1593</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_BusSynchronization</srcid><srcstatus/><internalId>1613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_CheckRemoteSleepIndication 
        Syntax 
        Std_ReturnType UdpNm_CheckRemoteSleepIndication (NetworkHandleType nmChannelHandle, boolean* 
        NmRemoteSleepIndPtr)
        Service ID [hex] | 0x11 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | NmRemoteSleepIndPtr | Pointer where check result of remote sleep indication 
        shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Checking of remote sleep indication 
        bits has failed 
        Description | Check if remote sleep indication takes place or not. Caveats: UdpNm is 
        initialized correctly. Configuration: Optional (only available if UdpNmRemoteSleepIndEnabled 
        true)
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1610</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_RSI</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0100</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_SoAdIfTxConfirmation 
        Syntax 
        void UdpNm_SoAdIfTxConfirmation (PduIdType TxPduId, Std_ReturnType result)
        Service ID [hex] | 0x40 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | ID of the PDU that has been transmitted.
        result | E_OK: The PDU was transmitted. E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | The lower layer communication interface module confirms the transmission of a PDU,
        or the failure to transmit a PDU.
        Available via | UdpNm.h 
      </description>
      <comment>
        Note: The callback function UdpNm_SoAdIfTxConfirmation is called by the SoAd and is
        implemented by the UdpNm module.
        Note: The callback function UdpNm_SoAdIfTxConfirmation is either called on interrupt
        level (interrupt mode) or on task level (Polling Mode) with respect to the context.

        AUTOSAR 4.3.1 specification not implemented.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1775</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmSoAdIfTxConfirmationResultParameter</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_SoAdIfRxIndication 
        Syntax 
        void UdpNm_SoAdIfRxIndication (PduIdType RxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x42 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | RxPduId | ID of the received PDU.
        PduInfoPtr | Contains the length (SduLength) of the received PDU, a pointer to a buffer (
        SduDataPtr) containing the PDU, and the MetaData related to this PDU.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indication of a received PDU from a lower layer communication interface module.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1854</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_RxIndication</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmSoAdIfRxIndication</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_MainFunction&lt;Instance_Id&gt;
        Syntax 
        void UdpNm_MainFunction&lt;Instance_Id&gt; (void)
        Service ID [hex] | 0x13 
        Description | Main function of the UdpNm which processes the algorithm describes in that 
        document. E.g.: UdpNm_MainFunction_0() represents the UdpNm instance for the UDP channel 0 
        UdpNm_MainFunction_1() represents the UdpNm instance for the UDP channel 1 
        Available via | SchM_UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00234</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The UdpNm module shall provide the periodic transmission mode. In this transmission mode the 
        UdpNm module shall send Network Management PDUs periodically.
      </description>
      <comment>
        Note: The periodic transmission mode is used in the "Repeat Message State" and "Normal
        Operation State".
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_816</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0111</srcid><srcstatus/><internalId>1451</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00244</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The UdpNm module shall reject the execution of a service called with an invalid parameter and 
        shall inform the DET.
      </description>
      <comment>
        This requirement is informational only. It's checked with other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00246</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configuration parameter UdpNmTimeoutTime shall determine the AUTOSAR UdpNm timing parameter 
        NM-Timeout Time.
      </description>
      <comment>
        This requirement is informational only
        The NM-Timeout Time is stored in the UdpNmTimeoutTime member of UdpNm_ChanConfigType
        structure.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00247</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configuration parameter UdpNmRepeatMessageTime shall determine the AUTOSAR UdpNm timing 
        parameter Repeat Message Time.
      </description>
      <comment>
        This requirement is not applicable
        The Repeat Message Time is stored in the UniversalTimer member of UdpNm_ChanConfigType
        structure.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00248</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The configuration parameter UdpNmWaitBusSleepTime shall determine the AUTOSAR UdpNm timing 
        parameter Wait Bus-Sleep Time.
      </description>
      <comment>
        This requirement is not applicable
        The Wait Bus-Sleep Time is stored in the UniversalTimer member of UdpNm_ChanConfigType
        structure.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00249</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The optional configuration parameter UdpNmRemoteSleepIndTime shall determine the AUTOSAR UdpNm 
        timing parameter Remote Sleep Indication Time.
      </description>
      <comment>
        This requirement is not applicable
        The Remote Sleep Indication Time is stored in the UniversalTimer member
        of UdpNm_ChanConfigType structure.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00304</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | UdpNm_PduPositionType 
        Kind | Enumeration 
        Range | UDPNM_PDU_BYTE_0 | 0x00 | Byte 0 is used 
        UDPNM_PDU_BYTE_1 | 0x01 | Byte 1 is used 
        UDPNM_PDU_OFF | 0xFF | Node Identification is not used 
        Description | Used to define the position of the control bit vector within the NM PACKET.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2030</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PduPositionType</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00305</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The service UdpNm_EnableCommunication shall return E_NOT_OK, if the current mode is not Network 
        Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_877</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0115</srcid><srcstatus/><internalId>1584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00306</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the module operates in passive mode (UdpNmPassiveModeEnabled is TRUE) the service 
        UdpNm_EnableCommunication shall have no effects and shall directly return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_EnableCommunication</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the module operates in passive mode (UdpNmPassiveModeEnabled) the service 
        UdpNm_DisableCommunication shall have no effects and shall directly return E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_DisableCommunication</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00308</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | UdpNm_ConfigType 
        Kind | Structure 
        Elements | implementation specific 
        Type 
        Comment | This type shall contain the parameters of the container UdpNm_GlobalConfig and its 
        sub containers.
        Description 
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_77</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetPduData 
        Syntax 
        Std_ReturnType UdpNm_GetPduData (NetworkHandleType nmChannelHandle, uint8* nmPduDataPtr)
        Service ID [hex] | 0x0a 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmPduDataPtr | Pointer where NM PDU shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of NM PDU Data has failed or is 
        not configured for this network handle.
        Description | Get the whole PDU data out of the most recently received NM message. Caveats: 
        UdpNm is initialized correctly.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1324</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0099</srcid><srcstatus/><internalId>1600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00310</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_GetState 
        Syntax 
        Std_ReturnType UdpNm_GetState (NetworkHandleType nmChannelHandle, Nm_StateType* nmStatePtr, 
        Nm_ModeType* nmModePtr)
        Service ID [hex] | 0x0b 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmStatePtr | Pointer where state of the network management shall be copied 
        to.
        nmModePtr | Pointer where the mode of the network management shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of NM state has failed 
        Description | Returns the state and the mode of the network management. Caveats: UdpNm is 
        initialized correctly. Configuration: Mandatory 
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1407</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32050</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00312</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled the API UdpNm_SetUserData shall not be available.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_894</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_Transmit 
        Syntax 
        Std_ReturnType UdpNm_Transmit (PduIdType TxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x49 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | Identifier of the PDU to be transmitted 
        PduInfoPtr | Length of and pointer to the PDU data and pointer to MetaData.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Transmit request has been accepted.E_NOT_OK: Transmit 
        request has not been accepted.
        Description | Requests transmission of a PDU.
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2076</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Transmit</srcid><srcstatus/><internalId>1617</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_Transmit</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled and the UdpNm User Data length does not match with the 
        length of the referenced I-PDU an error shall be reported at generation time.
      </description>
      <comment>
        Note: NULL Pointer checking is specified within BSW General
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00314</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00315</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport or UdpNmPnEnabled is enabled the UdpNm implementation shall provide 
        an API UdpNm_Transmit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2088</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_BusSynchronization</srcid><srcstatus/><internalId>1613</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_TriggerTransmit</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_Transmit</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00316</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled the UdpNm shall call PduR_UdpNmTxConfirmation within the 
        message transmission confirmation function UdpNm_SoAdIfTxConfirmation called by the SoAd and 
        with result passed by SoAd
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1828</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_TriggerTransmit</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmSoAdIfTxConfirmationResultParameter</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00317</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled and NM-PDU is not configured for triggered transmission 
        in SoAd (SoAdBswModules/SoAdIfTriggerTransmit = FALSE), the UdpNm shall collect the NM User 
        Data from the referenced NM I-PDU by calling PduR_UdpNmTriggerTransmit and combine the user 
        data with the further NM bytes each time before it requests the transmission of the 
        corresponding NM message.
      </description>
      <comment>
        Note: In case of triggered transmission no data is needed at the transmission request, just
        the length is needed. The data will be collected within UdpNm_TriggerTransmit (see chapter
        8.4.3 UdpNm_TriggerTransmit).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1590</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2117</srcid><srcstatus/><internalId>986</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1642</srcid><srcstatus/><internalId>1132</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00318</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If DET is enabled for the UdpNm module, the function UdpNm_GetVersionInfo shall raise 
        UDPNM_E_PARAM_POINTER, if the argument versioninfo is a NULL pointer and return without any 
        action.
      </description>
      <comment>
        UDPNM_E_NULL_POINTER is returned instead of UDPNM_E_PARAM_POINTER.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1507</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the UdpNm called NM_CoordReadyToSleepIndication and is still in Network Mode it shall notify 
        the Nm by calling Nm_CoordReadyToSleepCancellation on the first reception of a NM message with 
        the NmCoordinatorSleepReady bit (see CBV) set it to 0
      </description>
      <comment>
        Coordinator Synchronization Support is not supported in this release
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00321</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmCoodinatorSyncSupport is set to TRUE and the API UdpNm_SetSleepReadyBit is called UdpNm 
        shall set the "NM Coordinator Sleep Ready Bit" bit to passed value and trigger a single Network 
        Management PDU.
      </description>
      <comment>
        Coordinator Synchronization Support is not supported in this release
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The API UdpNm_SetSleepReadyBit() and the feature "Coordinated Bus Shutdown" shall only be 
        available if UdpNmCoordinatorSyncSupport is set to TRUE.
      </description>
      <comment>
        Coordinator Synchronization Support is not supported in this release
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00324</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_SetSleepReadyBit 
        Syntax 
        Std_ReturnType UdpNm_SetSleepReadyBit (NetworkHandleType nmChannelHandle, boolean 
        nmSleepReadyBit)
        Service ID [hex] | 0x16 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        nmSleepReadyBit | Value written to ReadySleep Bit in CBV 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Writing of remote sleep indication bit 
        has failed 
        Description | Set the NM Coordinator Sleep Ready bit in the Control Bit Vector 
        Available via | UdpNm.h 
      </description>
      <comment>
        Coordinator Synchronization Support is not supported in this release.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnEraCalcEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies if UdpNm calculates the PN request information for external requests. (ERA)
          false: PN request are not calculated true: PN request are calculated.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_147</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1518</srcid><srcstatus/><internalId>1222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Enables or disables support of partial networking.
          false: Partial networking Range not supported
          true: Partial networking supported
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1476</srcid><srcstatus/><internalId>1218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnEiraRxNSduRef
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Reference to a Pdu in the COM-Stack. Only one SduRef is required for UdpNm because
          the EIRA is the aggregation over all Ethernet Channels.
        Multiplicity:
          0..1
        Type:
          Reference to [ Pdu ]
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          true
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel
        Included Containers:
          Container Name        Multiplicity    Scope / Dependency
          UdpNmChannelConfig    1..*            This container contains the channel-specific
                                                configuration parameters of the UdpNm.
          UdpNmPnInfo           0..1            PN information configuration
      </description>
      <comment>
        Parameter UdpNmPnEiraRxNSduRef is precompile (Post-Build Variant Value is false instead of
        true).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_366</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_934</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnHandleMultipleNetworkRequests
        Parent Container:
          UdpNmChannelConfig
        Description:
          false: UdpNm_NetworkRequest is ignored in NO.
          true: UdpNm_NetworkRequest triggers a change from NO to RM.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1552</srcid><srcstatus/><internalId>1224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnResetTime
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Specifies the runtime of the reset timer in seconds. This reset time is valid for the
          reset of PN requests in the EIRA and in the ERA. The value shall be the same for every
          channel. Thus it is a global config parameter.
        Multiplicity:
          0..1
        Type:
          EcucFloatParamDef
        Range:
          [0.001 .. 65.535]
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_750</srcid><srcstatus/><internalId>1177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnEiraCalcEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Specifies if UdpNm calculates the PN request information for internal and external
          requests. (EIRA)
          true: PN request are calculated
          false: PN request are not calculated
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_351</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_711</srcid><srcstatus/><internalId>1175</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmPnInfo
        Parent Container:
          UdpNmGlobalConfig
        Description:
          PN information configuration
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2690</srcid><srcstatus/><internalId>1294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnInfoOffset
        Parent Container:
          UdpNmPnInfo
        Description:
          Specifies the offset of the PN request information in the NM message.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          1 .. 63
        Default value:
          1
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel.
        Included Containers:
          Container Name          Multiplicity    Scope / Dependency
          UdpNmPnFilterMaskByte   1..63           PN information configuration
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_345</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2743</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UDPNM_GEN_InvalidRange_UdpNmPnInfoOffset</srcid><srcstatus/><internalId>1359</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_UdpNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_UdpNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnInfoLength
        Parent Container:
          UdpNmPnInfo
        Description:
          Specifies the length of the PN request information in the NM message.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          1 .. 63
        Default value:
          1
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_320</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2717</srcid><srcstatus/><internalId>1297</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_GEN_10003</srcid><srcstatus/><internalId>1360</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_UdpNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_UdpNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:
          UdpNmPnFilterMaskByte
        Parent Container:
          UdpNmPnInfo
        Description:
          PN information configuration
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2777</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnFilterMaskByteIndex
        Parent Container:
          UdpNmPnFilterMaskByte
        Description:
          Index of the filter mask byte. Specifies the position within the filter mask byte array.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 63
        Default value:
          --
        Post-Build Variant Value:
          true
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel.
          UdpNmPnFilterMaskByteIndex &lt; UdpNmPnInfoLength
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.ECUC_UdpNm_00071</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmPnFilterMaskByteIndex</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnFilterMaskByteValue
        Parent Container:
          UdpNmPnFilterMaskByte
        Description:
          Parameter to configure the filter mask byte.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 255
        Default value:
          0
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true for at least one UdpNm Channel;
          UdpNmPnFilterMaskByteIndex &lt; UdpNmPnInfoLength
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2834</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnEraRxNSduRef
        Parent Container:
          UdpNmChannelConfig
        Description:
          Reference to a Pdu in the COM-Stack. The SduRef is required for every UdpNm Channel,
          because ERA is reported per channel.
        Multiplicity:
          0..1
        Type:
          Reference to [ Pdu ]
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          true
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true
        Included Containers:
          Container Name      Multiplicity    Scope / Dependency
          UdpNmRxPdu          1..*            This container describes the UdpNm RX PDU's.
          UdpNmTxPdu          0..1            This container describes the UdpNm TX PDU's.
          UdpNmUserDataTxPdu  0..1            Preprocessor switch for enabling the Tx path of
                                              Com User Data. Use case: Setting of NMUserData via
                                              SWC.
      </description>
      <comment>
        UdpNmPnEraRxNSduRef parameter is precompile.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_144</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1639</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_GEN_10001</srcid><srcstatus/><internalId>1358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmActiveWakeupBitEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Enables/Disables the handling of the Active Wakeup Bit in the UdpNm module.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false Post-Build Variant
        Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          This parameter is only valid if UdpNmPassiveModeEnabled is False.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReEnterNetworkModeActiveWakeupBit</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_285</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1192</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmImmediateNmTransmissions
        Parent Container:
          UdpNmChannelConfig
        Description:
          Defines the number of immediate NM PDUs which shall be transmitted. If the value is zero
          no immediate NM PDUs are transmitted. The cycle time of immeditate NM PDUs is defined by
          UdpNmImmediateNmCycleTime.
        Multiplicity:
          1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 255
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          If UdpNmImmediateRestartEnabled = true then UdpNmImmediateNmTransmissions = 0 If
          UdpNmPnHandleMultipleNetworkRequests == True then UdpNmImmediateNmTransmissions &gt; 0
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1711</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_8</srcid><srcstatus/><internalId>1525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the network is requested in Bus-Sleep Mode, the UdpNm module shall enter the Network Mode;
        by default the UdpNm module shall enter the Repeat Message State (refer to SWS_UdpNm_00095 and 
        SWS_UdpNm_00104)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_429</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0084</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0144</srcid><srcstatus/><internalId>1580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00328</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the UdpNmPnEnabled is FALSE, the UdpNm shall perform the normal Rx Indication handling and 
        the partial networking extensions shall be disabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2396</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00329</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEnabled is TRUE, the PNI bit in the received NM-PDU is 0 and 
        UdpNmAllNmMessagesKeepAwake is TRUE, the UdpNm module shall perform the normal Rx Indication 
        handling and omitting the extensions for partial networking.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2397</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_TRUE</srcid><srcstatus/><internalId>1433</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00331</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEnabled is TRUE and the PNI bit in the received NM-PDU is 1, UdpNm module shall 
        process the Partial Networking Information of the NM-PDU as described in chapter [REF] to [REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2229</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00332</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEnabled is TRUE the UdpNm module shall set the value of the transmitted PNI bit in 
        the CBV to 1.
      </description>
      <comment>
        Note: The usage of the CBV is mandatory in case Partial Networking is used.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1529</srcid><srcstatus/><internalId>1121</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PnEnabled_PNIBit_1</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00333</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEnabled is FALSE the UdpNm module shall set the value of the transmitted PNI bit in 
        the CBV always to 0.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1502</srcid><srcstatus/><internalId>1118</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PnDisable_PNIBit_0</srcid><srcstatus/><internalId>1513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00335</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The range (in bytes) that contains the PN request information (PN Info Range) in the received 
        NM-PDU is defined by UdpNmPnInfoOffset (in bytes) starting from byte 0 and UdpNmPnInfoLength (
        in bytes). This range is called PN Info Range.
      </description>
      <comment>
        Example:
        - UdpNmPnInfoOffset = 3
        - UdpNmPnInfoLength = 2
        Only Byte 3 and Byte 4 of the NM message contains PN request information
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2528</srcid><srcstatus/><internalId>1015</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2577</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PN_RequestInfo_Chk</srcid><srcstatus/><internalId>1380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00336</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every bit of the PN Info Range represents one Partial Network. If the bit is set to 1 the 
        Partial Network is requested. If the bit is set to 0 there is no request for this PN.
      </description>
      <comment>
        This requirement is informational only. It is a general requirement,
        shall be tested by other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00337</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        By means of the configuration parameter UdpNmPnFilterMaskByte the UdpNm is able to detect which 
        PN is relevant for the ECU and which not. Each bit of UdpNmPnFilterMasskByte has the following 
        meaning: 0 The PN request is irrelevant for the ECU. The communication stack of the ECU is not 
        kept awake if this bit is set in a received NM-PDU. 1 The PN request is relevant for the ECU. 
        The communication stack of the ECU is kept awake if this bit is set in a received NM-PDU.
      </description>
      <comment>
        This requirement is informational only. It is a general requirement,
        shall be tested by other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00338</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Each PN filter mask byte shall be mapped (bitwise AND)to the corresponding byte in the PN info 
        range of the NM message.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2239</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00339</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If at least one bit within the PN Info Range of the received NM-PDU matches with a bit in the 
        NM filter mask the PN request information is relevant for the ECU
      </description>
      <comment>
        This requirement is informational only. It is a general requirement,
        shall be tested by other requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00344</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE, the UdpNm shall provide the possibility to store external 
        and internal requested PNs combined over all relevant channels (all UdpNm Channels where 
        UdpNmPnEnabled is TRUE). At initialization the values of all PNs shall be set to 0 (not 
        requested)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_425</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00345</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE,the UdpNm module shall provide a possibility to monitor each 
        PN, if this PN is still externally or internally requested on at least one of the relevant 
        channels.
      </description>
      <comment>
        Note: This means, only one timer is required to handle one PN on multiple connected
        physical channels. For example: only 8 EIRA reset timers are required to handle the
        requests of a Gateway with 6 physical channels and 8 partial networks.
        This is possible because the switch of PN PDU-Groups is done global for the ECU and not
        dependent of the physical channel.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_323</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_93</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Tx_EIRA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00347</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If
        UdpNmPnEiraCalcEnabled is TRUE
        a NM-PDU is received
        PNs are requested within this message (bits are set to 1)
        And the requested PNs are set to 1 within the [configured PN filter mask] then UdpNm shall 
        store the request information (value 1) for these PNs
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2544</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00348</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If
        UdpNmPnEiraCalcEnabled is TRUE
        NM-PDU is being requested to send by UdpNM
        PNs are requested within this message(bits are set to 1)
        And the requested PNs are set to 1 within the [configured PN filter mask] then UdpNm shall 
        store the request information (value 1) for these PNs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2544</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_TX_EIRA_VERIFICATION</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00349</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE and a PN is requested by message reception or sending (see 
        SWS_UdpNM_00347 and SWS_UdpNm_00348) the monitoring for this PN shall be restarted with respect 
        to UdpNmPnResetTime.
      </description>
      <comment>
        Note: UdpNmPnResetTime shall be configured to a value greater than UdpNmMsgCycleTime. If
        UdpNmPnResetTime is configured to a value smaller than UdpNmMsgCycleTime and only one ECU
        requests the PN, the request state toggles in the EIRA because request state is rested
        before the requesting ECU is able to send the next NM message.
        Note: UdpNmPnResetTime shall be configured to a value smaller than UdpNmTimeoutTime to
        avoid that the timer could elapse after NM already changed to Prepare Bus Sleep.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2549</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00351</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE and a PN is not requested again within UdpNmPnResetTime the 
        corresponding stored value for this PN shall be set to 0 (not requested)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2494</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00352</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE and the stored value for a PN is set to requested or back to 
        not requested (see SWS_UdpNm_00347, SWS_UdpNm_00348 and SWS_UdpNm_00351) UdpNm shall inform 
        upper layers by calling PduR_UdpNmRxIndication() for the configured EIRA PDU (i.e changed EIRA 
        information shall be passed to COM)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2508</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2564</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_TX_EIRA_VERIFICATION</srcid><srcstatus/><internalId>1386</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_MAX_EIRA_SIZE</srcid><srcstatus/><internalId>1390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00355</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE, the UdpNM shall provide the possibility to store external 
        requested PNs on each relevant channel. At initialization the values of all PNs shall be set to 
        0 (not requested)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_374</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1541</srcid><srcstatus/><internalId>1122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00357</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If
        UdpNmPnEraCalcEnabled is TRUE
        a NM-PDU is received
        PNSR bit is 0
        PNs are requested within this message (bits are set to 1)
        and the requested PNs are set to 1 within the [configured PN filter mask] then UdpNm shall 
        store the request information (value 1) for these PNs
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2544</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00358</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE, the UdpNm module shall provide a possibility to monitor each 
        relevant channel and for each PN if this PN is still externally requested.
      </description>
      <comment>
        Note: This means, a separate timer is required to handle one PN on multiple physical
        channels.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_323</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_685</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_694</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00359</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE and a PN is requested by message reception (see 
        SWS_UdpNM_00357) the monitoring for this PN shall be restarted with respect to the 
        UdpNmPnResetTime.
      </description>
      <comment>
        Note: UdpNmPnResetTime shall be configured to a value greater than
        UdpNmMsgCycleTime. If UdpNmPnResetTime is configured to a value smaller than
        UdpNmMsgCycleTime and only one ECU requests the PN, the request state toggles in the ERA
        because request state is rested before the requesting ECU is able to send the next NM-PDU.
        Note: UdpNmPnResetTime shall be configured to a value smaller than UdpNmTimeoutTime to
        avoid that the timer could elapse after NM already changed to Prepare Bus Sleep.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2549</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00360</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE and PN is not requested again within UdpNmPnResetTime then the 
        corresponding stored value for this PN shall be set to not requested (value 0)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2494</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00361</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE and the stored value for a PN changes to requested or back to 
        not requested (see SWS_UdpNm_00357 and SWS_UdpNm_00360), the UdpNm module shall inform the 
        upper layers by calling PduR_UdpNmRxIndication()for the configured ERA PDU (i.e. changed ERA 
        information shall be passed to the COM module)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2508</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2564</srcid><srcstatus/><internalId>1018</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00362</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_NetworkRequest is called, UdpNmPnHandleMultipleNetworkRequests is set to TRUE and 
        UdpNm is in Ready Sleep State, Normal Operation State or Repeat Message State, UdpNm shall 
        change to or restart the Repeat Message State
      </description>
      <comment>
        Note: If UdpNmPnHandleMultipleNetworkRequests is set to TRUE the UdpNm feature 'Immediate
        Transmission' is mandatory.
        Note: The PN Control Module (e.G. ComM) is responsible to call UdpNm_NetworkRequest if the
        PN request bits changes.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00362.1</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00362.2</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00362.3</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00364</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm has entered Network mode or called Nm_CoordReadyToSleepCancellation before it shall 
        notify the NM by calling Nm_CoordReadyToSleepIndication on the first reception of NM message 
        with the NmCoordinatorSleepReady bit (see CBV) set to 1
      </description>
      <comment>
        Coordinator Synchronization Support is not supported in this release
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.CoordinatorSynchronization</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00366</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the UdpNm performs a state change from BusSleep state or PrepareBusSleep state to 
        NetworkMode due to a call to UdpNm_NetworkRequest() (i.e. due to an active wakeup) and 
        UdpNmActiveWakeupBitEnabled is TRUE, the UdpNm shall set the ActiveWakeupBit in the CBV.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00366.1</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00366.2</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00367</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the UdpNm module leaves the NetworkMode and UdpNmActiveWakeupBitEnabled is TRUE, the UdpNm 
        module shall clear the ActiveWakeupBit in the CBV.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1292</srcid><srcstatus/><internalId>1109</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00372</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE and UdpNmPnEraCalcEnabled is TRUE, the PN status information 
        shall be stored separately for both, the EIRA and ERA information (compare to SWS_UdpNM_00344 
        and SWS_UdpNM_00355)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00372.1</srcid><srcstatus/><internalId>465</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00372.2</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCarWakeUpRxEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Enables or disables support of CarWakeUp bit evaluation in received NM PDUs.
          FALSE - CarWakeUp not supported. TRUE - CarWakeUp supported.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1402</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_false</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00077</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCarWakeUpFilterEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          If CWU filtering is supported, only the CWU bit within the NM PDU with source node
          identifier UdpNmCarWakeUpFilterNodeId is considered as CWU request.
          FALSE - CWU filtering is not supported TRUE - CWU filtering is supported.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1334</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCarWakeUpFilterNodeId
        Parent Container:
          UdpNmChannelConfig
        Description:
          Source node identifier for CWU filtering. If CWU filtering is supported, only the CWU bit
          within the NM PDU with source node identifier UdpNmCarWakeUpFilterNodeId is considered as
          CWU request.
        Multiplicity:
          0..1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 255
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmCarWakeUpFilterEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1368</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00374</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the Car Wakeup bit within any received NM-PDU is 1, UdpNmCarWakeUpRxEnabled is TRUE, and 
        UdpNmCarWakeUpFilterEnabled is FALSE UdpNm shall call Nm_CarWakeUpIndication and perform the 
        standard Rx indication handling.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2296</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_false</srcid><srcstatus/><internalId>1434</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00375</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_GetPduData is called in the context of Nm_CarWakeUpIndication and if 
        UdpNmNodeDetectionEnabled or UdpNmUserDataEnabled or UdpNmNodeIdEnabled is set to TRUE, UdpNm 
        shall return the PDU data of the PDU that causes the call of Nm_CarWakeUpIndication.
      </description>
      <comment>
        Note: This is required to enable ECU to identify detail about the sender of the Car Wakeup
        request
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1386</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2039</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00376</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmCarWakeUpFilterEnabled is TRUE, the Car Wakeup bit within any received NM-PDU is 1, 
        UdpNmCarWakeUpRxEnabled is TRUE and the Node ID in the received NM-PDU is equal to 
        UdpNmCarWakeUpFilterNodeId the UdpNm module shall call Nm_CarWakeUpIndication and perform the 
        standard Rx Indication handling
      </description>
      <comment>
        Note: The Car Wakeup filter is necessary to realize sub gateways that only
        consider the Car Wakeup of the central Gateway to avoid wrong wakeups
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2302</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmImmediateNmCycleTime
        Parent Container:
          UdpNmChannelConfig
        Description:
          Defines the immediate NM PDU cycle time in seconds which is used for
          UdpNmImmediateNmTransmissions NM PDU transmissions.
        Multiplicity:
          0..1
        Type:
          EcucFloatParamDef
        Range:
          [0.001 .. 65.535]
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          This parameter is only valid if UdpNmImmediateNmTransmissions is greater one.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1669</srcid><srcstatus/><internalId>1231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRetryFirstMessageRequest
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies if first message request in UdpNm is repeated until accepted by SoAd.
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          UdpNmRetryFirstMessageRequest = false if UdpNmPassiveModeEnabled == true
      </description>
      <comment>
        Functionality regarding UdpNmRetryFirstMessageRequest parameter is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1782</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCarWakeUpBytePosition
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies the Byte position of the CWU within the NM PDU.
        Multiplicity:
          0..1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 7
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmCarWakeUpRxEnabled == TRUE UdpNmCarWakeupBytePosition &gt;= number
          of enabled system bytes (CBV, NID)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1287</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmCarWakeUpBytePosition</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmCarWakeUpBitPosition
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies the Bit position of the CWU within the NM PDU.
        Multiplicity:
          0..1
        Type:
          EcucIntegerParamDef
        Range:
          0 .. 7
        Default value:
          --
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmCarWakeUpRxEnabled == TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1259</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmAllNmMessagesKeepAwake
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies if UdpNm drops irrelevant NM PDUs.
          false: Only NM PDUs with a PNI bit = true and containing a PN request for this ECU
          triggers the standard RX indication handling
          true: Every NM PDU triggers the standard RX indication handling
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false Post-Build Variant
        Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          only available if UdpNmPnEnabled == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1221</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_GEN_10010</srcid><srcstatus/><internalId>1367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If Normal Operation State is entered from Ready Sleep State the transmission of NM PDUs shall 
        be started immediately.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_669</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_727</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_1</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_2</srcid><srcstatus/><internalId>1385</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_ReadySleepRemoteActivity</srcid><srcstatus/><internalId>1412</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_ReadySleepRemoteSleep</srcid><srcstatus/><internalId>1414</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ReadySleepRemoteActivity_ComDisabled</srcid><srcstatus/><internalId>1415</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ReadySleepRemoteSleep_ComDisabled</srcid><srcstatus/><internalId>1416</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If parameter UdpNmRetryFirstMessageRequest (see ECUC_UdpNm_00085) is TRUE and if the first 
        transmit request after transition from Bus Sleep to Repeat Message State is not accepted by 
        SoAd, the message request shall be repeated in the next main function until one transmit 
        request is accepted by SoAd.
      </description>
      <comment>
        Note: This feature can be used in case of partial network wakeup filter to avoid a blocking
        of all messages in case of passive start-up and first message request is not accepted by
        SoAd due to EthSM could not enable transmission path fast enough (e.g. in case of
        asynchronous transceiver handling).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1657</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_4</srcid><srcstatus/><internalId>1466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00330</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If NM PDUs shall be transmitted with UdpNmImmediateNmCycleTime (See SWS_UdpNm_00334 and 
        SWS_UdpNm_00454), UdpNm shall ensure that UdpNmImmediateNmTransmissions (including first 
        immediate transmission) with this timing are requested successfully. If a transmission request 
        to SoAd fails (E_NOT_OK is returned), UdpNm shall retry the transmission request in the next 
        main function. Afterwards UdpNm shall continue transmitting NM PDUs using the UdpNmMsgCycleTime.
      </description>
      <comment>
        Note: While transmitting NM PDUs using the UdpNmImmediateNmCycleTime no other Nm PDUs
        shall be transmitted (i.e. the UdpNmMsgCycleTime transmission cycle is stopped).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1107</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_PrepareBussSleep_NetworkMode_NetworkRequest</srcid><srcstatus/><internalId>1422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00334</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the Repeat Message State from Bus Sleep Mode or Prepare Bus Sleep Mode because of 
        UdpNm_NetworkRequest() (active wakeup) and if UdpNmImmediateNmTransmissions is greater zero, 
        the NM PDUs shall be transmitted using UdpNmImmediateNmCycleTime as cycle time. The 
        transmission of the first NM PDU shall be triggered as soon as possible. After the transmission 
        the Message Cycle Timer shall be reloaded with UdpNmImmediateNmCycleTime. The 
        UdpNmMsgCycleOffset shall not be applied in this case.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00334.1</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00334.2</srcid><srcstatus/><internalId>364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00373</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The position of the Car Wakeup bit in the NM-PDU is defined by the configuration parameters 
        UdpNmCarWakeUpBytePosition and UdpNmCarWakeUpBitPosition.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2280</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</srcid><srcstatus/><internalId>1435</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00377</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled the UdpNm shall collect the NM User Data from the 
        referenced NM I-PDU by calling PduR_UdpNmTriggerTransmit and combine the user data with the 
        further NM bytes within the call of UdpNm_SoAdIfTriggerTransmit.
      </description>
      <comment>
        Functionality regarding UdpNm_SoAdIfTriggerTransmit is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmTriggerTransmit</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00378</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        The function UdpNm_SoAdIfTriggerTransmit shall copy the NM PDU data of the according NM PDU 
        requested by TxPduId.
      </description>
      <comment>
        Note: The function UdpNm_SoAdIfTriggerTransmit might be called by the SoAd in an interrupt
        context.
        Functionality regarding UdpNm_TriggerTransmit is not implemented.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmTriggerTransmit</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00454</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnHandleMultipleNetworkRequests is set to TRUE UdpNm_NetworkRequest shall trigger a 
        state transition from Network Mode to Repeat Message state. If PDU transmission ability is 
        enabled the NM PDUs shall be transmitted using UdpNmImmediateNmCycleTime as cycle time. The 
        transmission of the first NM PDU shall be triggered as soon as possible. After the transmission 
        the Message Cycle Timer shall be reloaded with UdpNmImmediateNmCycleTime. The 
        UdpNmMsgCycleOffset shall not be applied in this case.
      </description>
      <comment>
        Note: UdpNmImmediateNmTransmissions has to be greater zero in this case due to
        ECUC_UdpNm_00075.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.1.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1106</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_NetworkMode_ReEntry</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_4</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00460</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If no relevant PN is requested in the received NM-PDU and UdpNmAllNmMessagesKeepAwake is FALSE 
        the PDU shall be dropped from further processing.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2399</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_FALSE</srcid><srcstatus/><internalId>1432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00461</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If no relevant PN is requested in the received NM-PDU and UdpNmAllNmMessagesKeepAwake is TRUE 
        the PDU shall not be dropped from further Rx Indication handling.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2400</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_TRUE</srcid><srcstatus/><internalId>1433</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00462</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmPnEnabled is TRUE, the PNI bit in the received NM-PDU is 0 and 
        UdpNmAllNmMessagesKeepAwake is FALSE, the UdpNm module shall ignore the received NM-PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2398</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_FALSE</srcid><srcstatus/><internalId>1432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_SoAdIfTriggerTransmit 
        Syntax 
        Std_ReturnType UdpNm_SoAdIfTriggerTransmit (PduIdType TxPduId, PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x41 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | ID of the SDU that is requested to be transmitted.
        Parameters (inout) | PduInfoPtr | Contains a pointer to a buffer (SduDataPtr) to where the SDU 
        data shall be copied, and the available buffer size in SduLengh. On return, the service will 
        indicate the length of the copied SDU data in SduLength.
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: SDU has been copied and SduLength indicates the number of 
        copied bytes.E_NOT_OK: No SDU data has been copied. PduInfoPtr must not be used since it may 
        contain a NULL pointer or point to invalid data.
        Description | Within this API, the upper layer module (called module) shall check whether the 
        available data fits into the buffer size reported by PduInfoPtr-&gt;SduLength. If it fits, it 
        shall copy its data into the buffer provided by PduInfoPtr-&gt;SduDataPtr and update the length of 
        the actual copied data in PduInfoPtr-&gt;SduLength. If not, it returns E_NOT_OK without changing 
        PduInfoPtr.
        Available via | UdpNm.h 
      </description>
      <comment>
        UdpNm_TriggerTransmit feature is not available.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmTriggerTransmit</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_NA_00999</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        This specification item references requirements that are not applicable to this specification.
      </description>
      <comment>
        (SRS_BSW_00170, SRS_BSW_00375, SRS_BSW_00416, SRS_BSW_00168, SRS_BSW_00423,
         SRS_BSW_00424, SRS_BSW_00425, SRS_BSW_00426, SRS_BSW_00427, SRS_BSW_00429,
         SRS_BSW_00432, SRS_BSW_00336, SRS_BSW_00417, SRS_BSW_00161, SRS_BSW_00162,
         SRS_BSW_00005, SRS_BSW_00415, SRS_BSW_00164, SRS_BSW_00325, SRS_BSW_00160,
         SRS_BSW_00413, SRS_BSW_00347, SRS_BSW_00305, SRS_BSW_00307, SRS_BSW_00335,
         SRS_BSW_00410, SRS_BSW_00314, SRS_BSW_00328, SRS_BSW_00312, SRS_BSW_00006,
         SRS_BSW_00377, SRS_BSW_00306, SRS_BSW_00309, SRS_BSW_00330, SRS_BSW_00331,
         SRS_BSW_00172, SRS_BSW_00010, SRS_BSW_00333, SRS_BSW_00321, SRS_BSW_00341,
         SRS_BSW_00334, SRS_Nm_00151, SRS_Nm_00046, SRS_Nm_00050, SRS_Nm_00052,
         SRS_Nm_02509, SRS_Nm_00153, SRS_Nm_00054, SRS_Nm_00142, SRS_Nm_00144,
         SRS_Nm_00147, SRS_Nm_00154)

         This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmNodeDetectionEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Pre-processor switch for enabling the node detection support.
          This parameter shall be derived from NmNodeDetectionEnabled. This parameter shall only
          be enabled if UdpNmNodeIdEnabled == true. If(UdpNmPduCbvPosition != UDPNM_PDU_OFF) then
          Equal(NmNodeDetectionEnabled) else Equal(False).
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          Not available if UdpNmPassiveModeEnabled
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_245</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1146</srcid><srcstatus/><internalId>1200</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.LinkTimeSupport</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmNodeIdEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Pre-processor switch for enabling the source node identifier.
        This parameter shall be derived from NmNodeIdEnabled.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1075</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.LinkTimeSupport</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmRepeatMsgIndEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Enable/disable the notification that a RepeatMessageRequest bit has been received.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          UdpNmRepeatMsgIndEnabled = FALSE if UdpNmPassiveModeEnabled == TRUE or
          (CanNmNodeDetectionEnabled == FALSE &amp;&amp; UdpNmDynamicPncToChannelMappingEnabled == FALSE).
          UdpNmRepeatMsgIndEnabled = TRUE if UdpNmDynamicPncToChannelMappingEnabled == TRUE
      </description>
      <comment>
        UdpNmRepeatMsgIndEnabled have no implemented dependency from AUTOSAR 4.3.1 specification.
        Value Configuration Class have changed with AUTOSAR 4.3.1.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_238</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1110</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmRepeatMsgIndEnabledConfigurationClass</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00379</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNm_SoAdIfTxConfirmation is called with result E_NOT_OK, UdpNm shall call the function 
        Nm_TxTimeoutException.
      </description>
      <comment>
        UdpNm_SoAdIfTxConfirmation has no input parameter result, consequently it can not be
        called with result E_NOT_OK. Nm_TxTimeoutException is not supported.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.Nm_TxTimeoutException</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>dev.UdpNm.UdpNmSoAdIfTxConfirmationResultParameter</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00463</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When UdpNm Callback Notifications with an invalid Pdu ID are called, the called function shall 
        not be executed and E_NOT_OK shall be returned if possible. If Development Error Detection is 
        enabled then additionally UdpNm shall report UDPNM_E_INVALID_PDUID to the Default Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfTxConfirmation</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfRxIndication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00464</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled and if UdpNm is in RepeatMessage state or NormalOperation 
        state and if UdpNm_Transmit is called, UdpNm shall request an additional transmission of the NM 
        PDU with the current user data.
      </description>
      <comment>
        UdpNm_Transmit feature is not available.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_Transmit</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Module Name:
          UdpNm
        Module Description:
          -- 
        Post-Build Variant Support:
          true
        Supported Config Variants:
          VARIANT-LINK-TIME, VARIANT-PRE-COMPILE
        Included Containers:
          Container Name:     UdpNmGlobalConfig
          Multiplicity:       1
          Scope / Dependency: This container contains all global configuration parameters of UDP NM
                              configured from the CanTrcv Module perspective.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_18</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmStayInPbsEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          If this parameter is disabled Prepare Bus-Sleep Mode is left after UdpNmWaitBusSleepTime.
          If this parameter is enabled Prepare Bus-Sleep Mode can only be left if ECU is powered
          off or any restart reason applies.
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1828</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNmStayInPrepareBusSleep</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00465</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        NM-Timeout timer has expired outside Ready Sleep State (either in Repeat Message state or in 
        Normal Operation state) | UdpNm.UDPNM_E_NETWORK_TIMEOUT | 0x11 
        A NM message with PN Shutdown Request Bit was received on a channel that is actively 
        coordinated by the ComM PNC Gateway. Tags:atp.Status=draft | 
        UdpNm.UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST | 0x20 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00466</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM-Timeout Timer expires in the Repeat Message State, the UdpNm module shall report 
        the runtime error UDPNM_E_NETWORK_TIMEOUT to the Default Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.NetworkTimeoutError</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00467</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the NM-Timeout Timer expires in the Normal Operation State, the UdpNm module shall report 
        runtime error UDPNM_E_NETWORK_TIMEOUT to the Default Error Tracer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.NetworkTimeoutError</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmDynamicPncToChannelMappingSupport
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Precompile time switch to enable the dynamic PNC-to-channel-mapping handling.
          False: Dynamic PNC-to-channel-mapping is disabled
          True: Dynamic PNC-to-channel-mapping is enabled
          Tags: atp.Status=draft
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_514</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmDynamicPncToChannelMappingEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Channel-specific parameter to enable the dynamic PNC-to-channel-mapping feature.
          False: Dynamic PNC-to-channel-mapping is disabled
          True: Dynamic PNC-to-channel-mapping is enabled
          Tags: atp.Status=draft
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          Shall only be TRUE if UdpNmDynamicPncToChannelMappingSupport is TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1430</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmPnSyncShutdownErrorReactionEnabled
        Parent Container:
          UdpNmGlobalConfig
        Description:
          Pre-processor switch for enabling reaction, if a top-level PNC coordinator received a
          PN shutdown message on a NM-channel which refer to a ComM channel that is actively
          coordinated by a PNC gateway.
          Tags: atp.Status=draft
        Multiplicity:
          1
        Type:
          EcucBooleanParamDef
        Default value:
          --
        Post-Build Variant Value:
          false
        Value Configuration Class:
          Pre-compile time    X    All Variants
          Link time           --
          Post-build time     --
        scope:
          local
        dependency:
          This parameter shall only be set to TRUE if UdpNmSynchronizedPncShutdownEnabled is set
          to TRUE on at least one channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.ECUC_UdpNm_00096</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>UdpNm.ECUC_UdpNm_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:
          UdpNmSynchronizedPncShutdownEnabled
        Parent Container:
          UdpNmChannelConfig
        Description:
          Specifies if UdpNm handle PN shutdown messages to support a synchronized PNC shutdown
          across a PN topology. This is only used for ECUs in the role of a top-level PNC
          coordinator or intermediate PNC coordinator. Thus, the PNC gateway functionality is
          enabled and therefore ERA calculation is used.
          FALSE: synchronized PNC shutdown is disabled TRUE: synchronized PNC shutdown is enabled
          Tags: atp.Status=draft
        Multiplicity:
          0..1
        Type:
          EcucBooleanParamDef
        Default value:
          false
        Post-Build Variant Multiplicity:
          false
        Post-Build Variant Value:
          false
        Multiplicity Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        Value Configuration Class:
          Pre-compile time    X    VARIANT-PRE-COMPILE
          Link time           X    VARIANT-LINK-TIME
          Post-build time     --
        scope:
          local
        dependency:
          Only available if UdpNmPnEnabled == TRUE and UdpNmPnEraCalcEnabled == TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00468</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If function UdpNm_PnLearningRequest is called on a channel where 
        UdpNmDynamicPncToChannelMappingEnabled is set to TRUE and UdpNm is in the Network Mode the 
        UdpNm module shall set the Repeat Message Bit and the Partial Network Learning Bit in the CBV 
        to 1 on this channel and change to or restart the Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00469</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the bits Partial Network Learning and Repeat Message Request both are received with value 1 
        on a channel where UdpNmDynamicPncToChannelMappingEnabled is set to TRUE and UdpNm is in the 
        Network Mode the UdpNm module shall set the Partial Network Learning Bit in the CBV to 1 on 
        this channel and change to or restart the Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00470</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmDynamicPncToChannelMappingSupport is set to TRUE UdpNm shall clear the Partial Network 
        Learning Bit when leaving the Repeat Message State.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00471</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the function UdpNm_PnLearningRequest is called in "Prepare Bus-Sleep Mode" or "Bus Sleep 
        Mode" no functionality shall be executed and E_NOT_OK shall be returned.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00472</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If transmission of NM PDUs has been started, the UdpNm Message Cycle Timer expires and 
        UdpNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC shutdown 
        are pending, the transmission of the NM PDU shall be postponed to the next corresponding 
        UdpNm_Mainfunction_&lt;Instance Id&gt; call.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00473</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is 1, the 
        PNSR bit in the received NM-PDU is 1 and the corresponding ComMChannel configured via 
        UdpNmComMNetworkHandleRef where this NM-PDU was received is actively coordinated (
        ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE), then the UdpNm module shall ignore the 
        received NM-PDU. Additionally, the UdpNm module shall:
        report the runtime error UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST to the Default Error Tracer
        request a transmission of a NM-PDU with the current PN information lastet in the next main 
        function call of the affected UdpNm-Channel, If UdpNmTopLevelPncCoordinatorErrorReactionEnabled 
        is set to TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00474</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and the UdpNm module is indicated via 
        UdpNm_RequestSynchronizedPncShutdown, the UdpNm module shall store the given PNC (pncId) per 
        given UdpNm-Channel (nmChannelHandle) as pending request for a synchronized PNC shutdown
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.SWS_UdpNm_00474</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00475</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, requests for synchronized PNC shutdown 
        are pending and no transmission confirmation (indicated via UdpNm_TxConfirmation) of a previous 
        call is pending, then the UdpNm module shall request in the next main function call of the 
        corresponding NM-channel a transmission of a NM message by calling SoAd_IfTransmit. In case the 
        NM-PDU is not configured for a triggered transmission in the SoAd (SoAdBswModules/
        SoAdIfTriggerTransmit = FALSE), UdpNm shall set for this message additionally the following 
        data beneath the normal data:
        Set the PNSR bit in the CBV to 1
        Overwrite the PN information in the user data (after NM User Data has been fetched, if 
        UdpNmComUserDataSupport is enabled) by setting bits that corresponds to PNC IDs stored as 
        pending request for a synchronized PNC shutdown to 1 and all other bits to 0.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00476</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, the UdpNm module has requested a 
        transmission due to synchronized PNC shutdown (see SWS_UdpNm_00475) and UdpNm_TxConfirmation is 
        called with result E_OK, the UdpNm shall consider those PNC IDs stored as pending request for a 
        synchronized PNC shutdown as completed and remove them from storage.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00477</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, the UdpNm module has requested a 
        transmission due to synchronized PNC shutdown (see SWS_UdpNm_00475), UdpNm_SoAdIfTxConfirmation 
        is called with result E_NOT_OK or an expexted transmission confirmation (via 
        UdpNm_SoAdIfTxConfirmation) is pending, the UdpNm module shall keep those PNC IDs stored as 
        pending request for a synchronized PNC shutdown as long as the corresponding EIRA PN reset 
        timer is running and the PN is neither externally nor interally requested again.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00478</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is TRUE and the PNSR bit of the received NM PDU is set 
        to 1, then the UdpNm module shall set the bits in the ERA PDU to 0 of the corresponding bits 
        which are set to 1 in the received PN info range, stop the according monitoring for these 
        externally requested PNs (see SWS_UdpNm_00359) and inform the upper layers in the given order:
        call PduR_UdpNmRxIndication() for the configured ERA PDU
        call Nm_ForwardSynchronizedPncShutdown() with the configured NetworkHandle (
        UdpNmComMNetworkHandleRef)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00479</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE the UdpNm implementation shall provide an 
        API UdpNm_RequestSynchronizedPncShutdown.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.SWS_UdpNm_00479</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_00480</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC 
        shutdown are pending, then the UdpNm module shall set for this message additionally the 
        following data beneath the normal data within the call of UdpNm_TriggerTransmit:
        Set the PNSR bit in the CBV to 1
        Overwrite the PN information in the user data (after NM User Data has been fetched, if 
        UdpNmComUserDataSupport is enabled) by setting bits that correspond to PNC IDs stored as 
        pending request for a synchronized PNC shutdown to 1 and all other bits to 0.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNCSynchronizedShutdown</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_RequestSynchronizedPncShutdown (draft)
        Syntax 
        Std_ReturnType UdpNm_RequestSynchronizedPncShutdown (NetworkHandleType nmChannelHandle, 
        PNCHandleType pncId)
        Service ID [hex] | 0x4b 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different nmChannelHandle. Non reentrant for the same 
        nmChannelHandle.
        Parameters (in) | nmChannelHandle | Identifier of the NM-Channel where the given PNC (pncId) is 
        assigned to.
        pncId | Identifier of the PNC which is requested for a synchronized shutdown across the PN 
        topology 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: Request has been accepted.E_NOT_OK: Request has not been 
        accepted.
        Description | Requests transmission of a NM-PDU with PNSR bit set to 1 (PN shutdown message) 
        Tags:atp.Status=draft 
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.ASRR2111.SWS_UdpNm_91002</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_91004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | UdpNm_PnLearningRequest (draft)
        Syntax 
        Std_ReturnType UdpNm_PnLearningRequest (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x4a 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: PN Learning Requesthas failed or is not 
        configured for this network handle.
        Description | Set Repeat Message Request Bit and Partial Network Learning Bit for NM messages 
        transmitted next on the bus. This will force all nodes on the bus to enter the PNC Learning 
        Phase. This is needed for the optional Dynamic PNC-to-channel-mapping feature. Tags:atp.Status=
        draft 
        Available via | UdpNm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>UdpNm.SWS_UdpNm_91006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UdpNm_R20-11.arxml</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        Det_ReportError | Det.h | Service to report development errors.
        Nm_CarWakeUpIndication | Nm.h | This function is called by a &lt;Bus&gt;Nm to indicate reception of a 
        CWU request.
        Nm_CoordReadyToSleepCancellation | Nm.h | Cancels an indication, when the NM Coordinator Sleep 
        Ready bit in the Control Bit Vector is set back to 0.
        Nm_CoordReadyToSleepIndication | Nm.h | Sets an indication, when the NM Coordinator Sleep Ready 
        bit in the Control Bit Vector is set 
        Nm_ForwardSynchronizedPncShutdown | Nm.h | Notification that the network management has 
        received a PN shutdown message on a particular NM-channel. This is used to grant a nearly 
        synchronized PNC shutdown across the entire PN topology. Tags:atp.Status=draft 
        Nm_PduRxIndication | Nm.h | Notification that a NM message has been received.
        Nm_RemoteSleepCancellation | Nm.h | Notification that the network management has detected that 
        not all other nodes on the network are longer ready to enter Bus-Sleep Mode.
        Nm_RemoteSleepIndication | Nm.h | Notification that the network management has detected that 
        all other nodes on the network are ready to enter Bus-Sleep Mode.
        Nm_RepeatMessageIndication | Nm.h | Service to indicate that an NM message with set Repeat 
        Message Re- quest Bit has been received. This is needed for node detection and the Dynamic PNC-
        to-channel-mapping feature.
        Nm_StateChangeNotification | Nm.h | Notification that the state of the lower layer &lt;BusNm&gt; has 
        changed.
        Nm_TxTimeoutException | Nm.h | Service to indicate that an attempt to send an NM message failed.
        PduR_UdpNmRxIndication | PduR_UdpNm.h | Indication of a received PDU from a lower layer 
        communication interface module.
        PduR_UdpNmTriggerTransmit | PduR_UdpNm.h | Within this API, the upper layer module (called 
        module) shall check whether the available data fits into the buffer size reported by PduInfoPtr-
        SduLength. If it fits, it shall copy its data into the buffer provided by PduInfoPtr-&gt;
        SduDataPtr and update the length of the actual copied data in PduInfoPtr-&gt;SduLength. If not, it 
        returns E_NOT_OK without changing PduInfoPtr.
        PduR_UdpNmTxConfirmation | PduR_UdpNm.h | The lower layer communication interface module 
        confirms the transmission of a PDU, or the failure to transmit a PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PartlyImplementedFunctionalities</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        The Control Bit Vector shall consist of:
        Bit 0: Repeat Message Request Bit
          0: Repeat Message State not requested
          1: Repeat Message State requested
        Bit 1: PN Shutdown Request Bit (PNSR)
          0: NM message does not contain synchronized Partial Network shutdown request 
          1: NM message does contain synchronized Partial Network shutdown request for at least one
             PNC
        Bit 3 :NM Coordinator Sleep Bit
          0: Start of synchronized shutdown is not requested by main coordinator
          1: Start of synchronized shutdown is requested by main coordinator
        Bit 4 Active Wakeup Bit
          0: Node has not woken up the network (passive wakeup)
          1: Node has woken up the network (active Wakeup)
        Bit 5 Partial Network Learning Bit (PNL)
          0: PNC learning is not requested
          1: PNC learning is requested
        Bit 6 Partial Network Information Bit (PNI)
          0: NM message contains no Partial Network request information
          1: NM message contains Partial Network request information
        Bit 2,7 are reserved for future extensions 0 : 
          Disabled / Reserved for future usage ⌋(RS_Nm_02540)
        Note: The Control Bit Vector is initialized with 0x00 during initialization (also refer to 
              SWS_UdpNm_00085).
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_11</srcid><srcstatus/><internalId>1536</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_13</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_14</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_16</srcid><srcstatus/><internalId>1541</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_17</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_32</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_36</srcid><srcstatus/><internalId>1551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_95</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_109</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_116</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2229</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2663</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If transmission of NM PDUs has been started, the UdpNm Message Cycle Timer 
        expires and when UdpNmSynchronizedPncShutdownEnabled is set to either FALSE or if set to 
        TRUE and no request for a synchronized PNC shutdown is pending, then the UdpNm 
        module shall transmit an NM PDU by calling SoAd_IfTransmit.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0109</srcid><srcstatus/><internalId>1450</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0111</srcid><srcstatus/><internalId>1451</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_33028</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_13</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0137</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_816</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1645</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00472</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If transmission of NM PDUs has been started, the UdpNm Message Cycle Timer expires and
        UdpNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC 
        shutdown are pending, the transmission of the NM PDU shall be postponed to the next 
        corresponding UdpNm_Mainfunction_;ltInstance Id;gt call.

        Note:
        - The synchronized PNC shutdown has to be sent immediately and therefore processing of 
        cylic NM messages transmitted with UdpNmMsgCycleTime has to be delayed. In rare cases this 
        could lead to a delay of more than one main function cycle time.
        - The NM timing has to consider that an NM message transmitted with UdpNmMsgCycleTime may 
        be delayed for more than one main function cycle time. Therefore the following condition 
        has to be fulfilled to tolerate multiple delays of those NM Messages:
        (NmPnResetTime – UdpNmMsgCycleTime) &gt; n * UdpNmMainFunctionPeriod, where n denotes the 
        number of tolerated delays before the PnResetTime expires, if no NM message is received.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_16</srcid><srcstatus/><internalId>1541</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_32</srcid><srcstatus/><internalId>1547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2645</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1357</srcid><srcstatus/><internalId>1113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00473</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is 1, 
        the PNSR bit in the received NM-PDU is 1 and the corresponding ComMChannel configured via 
        UdpNmComMNetworkHandleRef where this NM-PDU was received is actively coordinated 
        (ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE), then the UdpNm module shall ignore 
        the received NM-PDU. Additionally, the UdpNm module shall:
          - report the runtime error UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST to the Default Error
            Tracer
          - request a transmission of a NM-PDU with the current PN information lastet in the next
            main function call of the affected UdpNm-Channel, If 
            UdpNmPnSyncShutdownErrorReactionEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_7</srcid><srcstatus/><internalId>1532</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_8</srcid><srcstatus/><internalId>1533</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_9</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_33</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_34</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_35</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2381</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2877</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00488</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is set 
        to 1 and the PNSR bit is set to 1, UdpNm module shall extract the PNC bit vector from the 
        received NM-PDU according to the partial network configuration (NmPncBitVectorOffset and 
        NmPncBitVectorLength of the corresponding NM-channel) and forward the PNC bit vector by 
        calling Nm_ForwardSynchronizedPncShutdown.

        Note: PNSR Bit set to 1 is only possible if a synchronized PNC shutdown is requested. 
        A synchronized PNC shutdown should be handled across the PN topology. Therefore, it is 
        assumed that either all coordinators have the synchronized PNC shutdown enabled or all 
        coordinators have the synchronized PNC shutdown disabled. A mixture of both would lead to 
        an unsynchronized PNC shutdown, which has to be avoided.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_12</srcid><srcstatus/><internalId>1537</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_51</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2966</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00474</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and the UdpNm module is indicated via 
        UdpNm_RequestSynchronizedPncShutdown, the UdpNm module shall store the given PNC (pncId) 
        per given UdpNm-Channel (nmChannelHandle) as pending request for a synchronized PNC 
        shutdown.

        Note: The aggregation of all PNCs which are requested for a synchronized PNC shutdown and 
        the transmission as PN shutdown message (set the PNSR bit in the CBV to 1) is done 
        asynchronously in the context of the corresponding UdpNm_Mainfunction.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_11</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2198</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00474</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00490</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, requests for synchronized PNC 
        shutdown are pending and no transmission confirmation (indicated via UdpNm_TxConfirmation) 
        of a previous call is pending, then the UdpNm module shall request in the next main 
        function call a transmission of a NM-PDU as PN shutdown message by calling SoAd_IfTransmit. 
        In case the NM-PDU is not configured for triggered transmission in SoAd 
        (SoAdBswModules/SoAdIfTriggerTransmit = FALSE), UdpNm shall set for this message 
        additionally the following data beneath the normal data:
          - Set the PNSR bit in the CBV to 1
          - If user data is enabled, fetch the available data (either from Com if 
            UdpNmComUserDataSupport is enabled or from internal storage) and copy the data in the 
            user data range of the NM-PDU
          - Write the PNC bit vector with respect to NmPncBitVectorOffset and NmPncBitVectorLength
            of the corresponding NM-channel by setting bits that corresponds to PNC IDs stored as
            pending request for a synchronized PNC shutdown to 1 and all other bits to 0
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_13</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_14</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_16</srcid><srcstatus/><internalId>1541</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_17</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_32</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_Channel_Multicore</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2663</srcid><srcstatus/><internalId>1022</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2668</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00476</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, the UdpNm module has requested a 
        transmission of a NM-PDU as PN shutdown message (see SWS_UdpNm_00490) and 
        UdpNm_TxConfirmation is called with result E_OK, the UdpNm shall consider those PNC IDs 
        stored as pending request for a synchronized PNC shutdown of the corresponding NM-channel 
        as completed and remove them from storage. Additionally, if 
        UdpNmPnShutdownMessageRetransmissionDuration is configured, then UdpNm shall cancel the 
        retransmission timer for PN shutdown messages of the affected NM-channel.
        
        Note: UdpNm has to ensure that new request for a synchronized PNC shutdown (indicated via 
        UdpNm_RequestSynchronizedPncShutdown) are not lost, during an on going transmission of a 
        PN shutdown NM frame.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_10</srcid><srcstatus/><internalId>1535</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_13</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_14</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_16</srcid><srcstatus/><internalId>1541</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_32</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_36</srcid><srcstatus/><internalId>1551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2848</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00477</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, 
        UdpNmPnShutdownMessageRetransmissionDuration is configured, the UdpNm module has requested 
        a transmission due to synchronized PNC shutdown (see SWS_UdpNm_00475), 
        UdpNm_SoAdIfTxConfirmation is called with result E_NOT_OK or or the transmissions request 
        for this PN shutdown message was not accepted (SoAd_IfTransmit returned E_NOT_OK), then 
        the UdpNm module shall keep those PNC IDs stored as pending request for a synchronized PNC 
        shutdown and perform a retransmission in the next main function.

        Note:
          - UdpNm has to perform a retry transmission handling for PN shutdown messages in the 
            context of the corresponding main function calls, if transmission of the PN shutdown 
            message was not confirmed by the lower layer (either with E_NOT_OK or 
            UdpNm_SoAdIfTxConfirmation was not called).The retry transmission requests should cover 
            error cases, were the lower layer cannot transmit the Nm messages. In the worst case 
            this collide with a post poned NM message transmitted with UdpNmMsgCycleTime 
            (see SWS_UdpNm_00472). But in any case, if the capability to transmitted NM messages is 
            not re-covered within the PN reset time (EIRA), the PNCs will shutdown not synchronized, 
            which might lead to timeout errors on application level.
          - The dependency to a pending transmission confirmation indicated by the lower layer, 
            should support reliable communication, e.g. ensure PN shutdown message was transmitted 
            on the network or avoid transmissions of outdated PN shutdown messages, if for example 
            queueing in the lower layer is configured.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_4</srcid><srcstatus/><internalId>1529</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_5</srcid><srcstatus/><internalId>1530</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_11</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2774</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2840</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00482</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and the UdpNm module has stored PNC 
        IDs as pending request for a synchronized PNC shutdown, then the UdpNm shall remove those 
        PNC IDs from storage which are either externally or internally requested again:
          - UdpNm shall check on reception of an NM-message, if externally requested PNCs are 
            received
          - UdpNm shall check up front to each transmission of an PN shutdown message if internal 
            PNC requests are available by deriving the internal PNC requests from the corresponding 
            ComPdu (see UdpNmTxUserDataPduRef)
      </description>
      <comment>
        This requirement is not applicable.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00483</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE, 
        UdpNmPnShutdownMessageRetransmissionDuration is not configured, the UdpNm module has 
        requested a transmission due to synchronized PNC shutdown (see SWS_UdpNm_00475), 
        UdpNm_TxConfirmation is called with result E_NOT_OK or the transmissions request for this 
        PN shutdown message was not accepted (SoAdIf_Transmit returned E_NOT_OK), then the UdpNm 
        shall remove the PNC IDs stored as pending request for a synchronized PNC shutdown of the 
        corresponding NM-channel and report the runtime error 
        UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED to DET.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_37</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2693</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00484</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and a retransmission timer for a PN 
        shutdown message (see ECUC_UdpNm_00098) expires, then UdpNm shall remove the pending 
        request for a synchronized PNC shutdown of the corresponding NM-channel from the storage 
        and report the runtime error UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED to DET.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_18</srcid><srcstatus/><internalId>1543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2829</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name        : UdpNm_RequestSynchronizedPncShutdown
        Syntax              : Std_ReturnType UdpNm_RequestSynchronizedPncShutdown ( 
                                  NetworkHandleType nmChannelHandle, PNCHandleType pncId 
                              ) 
        Service ID [hex]    : 0x4b 
        Sync/Async          : Synchronous 
        Reentrancy          : Reentrant for different nmChannelHandle. Non reentrant for the same 
                              nmChannelHandle. 
        Parameters (in)     : nmChannelHandle   Identifier of the NM-Channel where the given PNC 
                                                (pncId) is assigned to.
                              pncId             Identifier of the PNC which is requested for a 
                                                synchronized shutdown across the PN topology 
        Parameters (inout)  : None 
        Parameters (out)    : None 
        Return value        : Std_Return-Type
                                E_OK : Request has been accepted. 
                                E_NOT_OK : Request has not been accepted. 
        Description         : Requests transmission of a NM-PDU with PNSR bit set to 1 (PN shutdown 
                              message)
        Available via       : UdpNm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_SynchronizedPncShutdown_Compile_1</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_3</srcid><srcstatus/><internalId>1528</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_14</srcid><srcstatus/><internalId>1539</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_15</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_17</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_32</srcid><srcstatus/><internalId>1547</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_Channel_Multicore</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2145</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00479</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE the UdpNm implementation shall 
        provide an API UdpNm_RequestSynchronizedPncShutdown.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_SynchronizedPncShutdown_Compile_1</srcid><srcstatus/><internalId>1336</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_2</srcid><srcstatus/><internalId>1527</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_31</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2145</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00494</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE and requests for synchronized PNC 
        shutdown are pending, then the UdpNm module shall set for this message additionally the 
        following data beneath the normal data within the call of UdpNm_TriggerTransmit:
          - Set the PNSR bit in the CBV to 1
          - If user data is enabled, fetch the available data (either from Com if 
            UdpNmComUserDataSupport is enabled or from internal storage) and copy the data in 
            the user data range of the NM-PDU
          - Write the PNC bit vector with respect to NmPncBitVectorOffset and NmPncBitVectorLength 
            of the corresponding NM-channel by setting bits that corresponds to PNC IDs stored as 
            pending request for a synchronized PNC shutdown to 1 and all other bits to 0

        Note: The UdpNm modul has to aggregate all PNCs which were indicated for a synchronized 
              PNC shutdown and transfer the pncId’s to a byte array (PN C vit vector). Each bit 
              (PNC bit) of the PN C vit vector represent a particular PNC. The byteIndex and 
              bitindex within the PN Info range of PNC bit shall be determined as follows:
                  - byteIndex = (PncId div 8) - NmPncBitVectorOffset
                  - bitIndex = (PncId mod 8)
      </description>
      <comment>
        This requirement is not applicable
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.ECUC_UdpNm_00098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name              : UdpNmPnShutdownMessageRetransmissionDuration 
        Parent Container  : UdpNmGlobalConfig 
        Description       : Specifies the duration in seconds of retransmission phase of a PN 
                            shutdown message. A retransmission shall be performed per affected 
                            NM channel, as long as the PN shutdown message could not be 
                            successfully sent and the retransmission timer is running. The value 
                            shall be a multiple integral of UdpNmMainFunctionPeriod. 
        Multiplicity      : 0..1 
        Type              : EcucFloatParamDef 
        Range             : [0.001 .. 65.535]
        Default value     : -- 
        Post-Build Variant Multiplicity : false 
        Post-Build Variant Value        : false 
        Multiplicity Configuration Class: 
            Pre-compile time    X   VARIANT-PRE-COMPILE 
            Link time           X   VARIANT-LINK-TIME 
            Post-build time     -   -
        Value Configuration Class       : 
            Pre-compile time    X   VARIANT-PRE-COMPILE 
            Link time           X   VARIANT-LINK-TIME 
            Post-build time     -   -
        Scope / Dependency: 
            scope         : local 
            dependency    : - Only valid if UdpNmSynchronizedPncShutdownEnabled == TRUE 
                            - UdpNmPnShutdownMessageRetransmissionDuration ≤ UdpNmPnResetTime
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_SynchronizedPncShutdown_Compile_2</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_4</srcid><srcstatus/><internalId>1529</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_5</srcid><srcstatus/><internalId>1530</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_11</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_973</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.ECUC_UdpNm_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name              : UdpNmPnSyncShutdownErrorReactionEnabled 
        Parent Container  : UdpNmGlobalConfig 
        Description       : Pre-processor switch for enabling reaction, if a top-level PNC 
                            coordinator received a PN shutdown message on a NM-channel which refer 
                            to a ComM channel that is actively coordinated by a PNC gateway.
        Type              : EcucBooleanParamDef 
        Default value     : -- 
        Post-Build Variant Value  : false 
        Value Configuration Class : 
            Pre-compile time    X   All Variants 
            Link time           -   -
            Post-build time     -   -
        Scope / Dependency  :
            scope         : local 
            dependency    : This parameter shall only be set to TRUE if 
                            UdpNmSynchronizedPncShutdownEnabled is set to TRUE on at least one 
                            channel.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_SynchronizedPncShutdown_Compile_2</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_7</srcid><srcstatus/><internalId>1532</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_8</srcid><srcstatus/><internalId>1533</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_9</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_33</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_34</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_35</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1013</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.ECUC_UdpNm_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name              : UdpNmSynchronizedPncShutdownEnabled
        Parent Container  : UdpNmChannelConfig 
        Description       : Specifies if UdpNm handle PN shutdown messages to support a 
                            synchronized PNC shutdown across a PN topology. This is only used for 
                            ECUs in the role of a top-level PNC coordinator or intermediate PNC 
                            coordinator. Thus, the PNC gateway functionality is enabled and 
                            therefore ERA calculation is used.

                            FALSE: synchronized PNC shutdown is disabled 
                            TRUE: synchronized PNC shutdown is enabled
        Multiplicity      : 0..1 
        Type              : EcucBooleanParamDef 
        Default value     : false 
        Post-Build Variant Multiplicity   : false 
        Post-Build Variant Value          : false 
        Multiplicity Configuration Class  :
            Pre-compile time    X   VARIANT-PRE-COMPILE 
            Link time           X   VARIANT-LINK-TIME 
            Post-build time     -   -
        Value Configuration Class         :
            Pre-compile time    X   VARIANT-PRE-COMPILE 
            Link time           X   VARIANT-LINK-TIME 
            Post-build time     -   -
        Scope / Dependency  :
            scope         : local 
            dependency    : ( OBSOLETE: Only available if UdpNmPnEnabled == TRUE and UdpNmPnEraCalcEnabled == TRUE. ) 
                            DRAFT: Only available if UdpNmPnEnabled == TRUE and NmPnEraCalcEnabled == TRUE.
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_SynchronizedPncShutdown_Compile_2</srcid><srcstatus/><internalId>1337</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_GEN_10005</srcid><srcstatus/><internalId>1362</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_GEN_10006</srcid><srcstatus/><internalId>1363</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_GEN_10007</srcid><srcstatus/><internalId>1364</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_GEN_10008</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_374</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1593</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>UdpNm.ASRR2111.SWS_UdpNm_00465</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_UDPNetworkManagement.pdf, R21-11</source>
      <version>1</version>
      <description>
        Type of error                         Related error code                                  Error value
        NM-Timeout timer has expired outside
        Ready Sleep State (either in Repeat
        Message state or in Normal Operation
        state)                                UDPNM_E_NETWORK_TIMEOUT                             0x11

        A NM message with PN Shutdown 
        Request Bit was received on a 
        channel that is actively coordinated 
        by the ComM PNC Gateway.              UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST            0x20

        Retransmission timer for a PN 
        shutdown message has expired, 
        because a PN shutdown message could 
        not be transmitted on the network 
        within the configured duration of 
        re-transmission.                      UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED  0x21
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00465.1</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.SWS_UdpNm_00465.2</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.NetworkTimeoutError</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <defaults>
      <source>EB</source>
    </defaults>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00081</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Link Time configuration of parameters is not supported.
        Some parameters are treated as Pre-Compile
        others are treated as PostBuild
        Link Time parameters treated as Pre-Compile:
         - UdpNmGlobalConfig/UdpNmPnEiraCalcEnabled
         - UdpNmGlobalConfig/UdpNmPnResetTime
         - UdpNmGlobalConfig/UdpNmPnEiraRxNSduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmMsgCycleOffset
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmMsgCycleTime
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPduCbvPosition
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPduNidPosition
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPnEnabled
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPnEraCalcEnabled
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPnHandleMultipleNetworkRequests
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmRemoteSleepIndTime
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmRepeatMessageTime
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmTimeoutTime
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmUserDataLength
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmWaitBusSleepTime
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPnEraRxNSduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmComMNetworkHandleRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmRxPdu/UdpNmRxPduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmTxPdu/UdpNmTxPduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmUserDataTxPdu/UdpNmTxUserDataPduId
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmUserDataTxPdu/UdpNmTxUserDataPduRef
         - UdpNmGlobalConfig/UdpNmPnInfo/UdpNmPnInfoLength
         - UdpNmGlobalConfig/UdpNmPnInfo/UdpNmPnInfoOffset
         - UdpNmGlobalConfig/UdpNmPnInfo/UdpNmPnFilterMaskByte/UdpNmPnFilterMaskByteIndex
         - UdpNmGlobalConfig/UdpNmPnInfo/UdpNmPnFilterMaskByte/UdpNmPnFilterMaskByteValue
        Link Time parameters treated as PostBuild:
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmPnEnabled
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmRxPdu/UdpNmRxPduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmTxPdu/UdpNmTxPduRef
         - UdpNmGlobalConfig/UdpNmChannelConfig/UdpNmUserDataTxPdu/UdpNmTxUserDataPduRef
         - UdpNmGlobalConfig/UdpNmPnInfo/UdpNmPnFilterMaskByte/UdpNmPnFilterMaskByteValue
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_133</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00044.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall provide the following H-file
        * UdpNm.h (for declaration of provided interface functions)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm.h_4</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00044.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall provide the following H-file
        * UdpNm_Cbk.h (for declaration of provided call-back functions)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Cbk.h_4</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00044.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall provide the following H-file
        * UdpNm_Cfg.h (for pre-compile time configurable parameters)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_17</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * ComStack_Types.h
      </description>
      <comment>
        Note: The following header files are indirectly included by ComStack_Types.h:
              * Std_Types.h (for AUTOSAR standard types )
              * Platform_Types.h (for platform specific types)
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Cbk.h_8</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_27</srcid><srcstatus/><internalId>806</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * Compiler.h (for compiler specific language extensions)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Cbk.h_8</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * UdpNm.h (for declaration of provided interface functions)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm.h_4</srcid><srcstatus/><internalId>789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.4</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * Nm_Cbk.h (for UdpNm specific call-backs to the Generic Network Management Interface)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_59</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.5</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * Det.h (for interface of DET - optional included only if DET is configured)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_73</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_Hsm.c_80</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.6</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * NmStack_Types.h (for common network management types)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_7</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_21</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.7</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * SchM_UdpNm.h (for services of the Basic Software Scheduler)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_61</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00082.8</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall include the following H-file:
        * UdpNm_MemMap.h (for Memory Mapping)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Cbk.h_21</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_129</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00083.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNM module shall include the following header files containing configuration data:
        * SoAd_Cfg.h (for the PDU IDs and socket connections)
      </description>
      <comment>
        Instead of SoAd_Cfg.h the SoAd.h file will be included.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_63</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_45</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00083.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNM module shall include the following header files containing configuration data:
        * Nm_Cfg.h (for the derived configuration items from Nm) (SRS_BSW_00383, SRS_BSW_00301)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_48</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00095.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Network Mode is entered from Bus-Sleep Mode, by default,
        the Repeat Message State shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1064</srcid><srcstatus/><internalId>1084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32027</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_32019</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0084</srcid><srcstatus/><internalId>1576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00095.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Network Mode is entered from Prepare Bus-Sleep, by default,
        the Repeat Message State shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1307</srcid><srcstatus/><internalId>1110</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32043</srcid><srcstatus/><internalId>1445</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0084</srcid><srcstatus/><internalId>1576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00100.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Repeat Message State is entered from Bus-Sleep Mode transmission
        of NM packets shall be (re-) started unless passive mode is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1097</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0136</srcid><srcstatus/><internalId>1578</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0139</srcid><srcstatus/><internalId>1603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00100.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Repeat Message State is entered from Prepare-Bus-Sleep Mode transmission
        of NM packets shall be (re-) started unless passive mode is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1097</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32044</srcid><srcstatus/><internalId>1446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00100.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Repeat Message State is entered from Normal Operation State transmission
        of NM packets shall be (re-) started unless passive mode is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1098</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0146</srcid><srcstatus/><internalId>1582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00100.4</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Repeat Message State is entered from Ready Sleep State transmission
        of NM packets shall be (re-) started unless passive mode is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1098</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0125</srcid><srcstatus/><internalId>1607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00137.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the service UdpNm_RepeatMessageRequest is called in Repeat Message State
        the UdpNm module shall not execute the service and return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1307</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33026</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00137.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the service UdpNm_RepeatMessageRequest is called in Prepare Bus-Sleep Mode
        the UdpNm module shall not execute the service and return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1307</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33026</srcid><srcstatus/><internalId>1511</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0090</srcid><srcstatus/><internalId>1602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00137.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the service UdpNm_RepeatMessageRequest is called in Bus-Sleep Mode
        the UdpNm module shall not execute the service and return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1307</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33026</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00116.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Normal Operation State is entered from Ready Sleep State,
        transmission of NM PDUs shall be started unless passive mode is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_669</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_727</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_1</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_2</srcid><srcstatus/><internalId>1385</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0105</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00116.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Normal Operation State is entered from Ready Sleep State,
        transmission of NM PDUs shall be started unless the NM message transmission
        ability has been disabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_669</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_727</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_DisableCom</srcid><srcstatus/><internalId>1381</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_1</srcid><srcstatus/><internalId>1384</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ReadySleepToNormalOperation_2</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00108.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Ready Sleep State is entered from Repeat Message State transmission
        of NM PDUs shall be stopped.
      </description>
      <comment>
        Note: If passive mode is enabled no NM PDUs are transmited, no action is required.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1199</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0119</srcid><srcstatus/><internalId>1605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00108.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the Ready Sleep State is entered from Normal Operation State transmission
        of NM PDUs shall be stopped.
      </description>
      <comment>
        Note: If passive mode is enabled no NM PDUs are transmited, no action is required.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_787</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0105</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00334.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When entering the Repeat Message State from
        Bus Sleep Mode because of UdpNm_NetworkRequest()
        (active wakeup) and if UdpNmImmediateNmTransmissions is
        greater zero, the NM PDUs shall be transmitted using
        UdpNmImmediateNmCycleTime as cycle time.
        The transmission of the first NM PDU
        shall be triggered as soon as possible.
        After the transmission the Message Cycle Timer
        shall be reloaded with UdpNmImmediateNmCycleTime.
        The UdpNmMsgCycleOffset shall not be applied in this case.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1106</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_BussSleep_NetworkMode_ActiveWakeup</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_NormalOperation_RepeatMessageState</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_NetworkMode_ReEntry</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SoAd_IfTransmit_ImmediateNmTransmissions</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00334.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When entering the Repeat Message State from
        Prepare Bus Sleep Mode because of UdpNm_NetworkRequest()
        (active wakeup) and if UdpNmImmediateNmTransmissions is
        greater zero, the NM PDUs shall be transmitted using
        UdpNmImmediateNmCycleTime as cycle time.
        The transmission of the first NM PDU
        shall be triggered as soon as possible.
        After the transmission the Message Cycle Timer
        shall be reloaded with UdpNmImmediateNmCycleTime.
        The UdpNmMsgCycleOffset shall not be applied in this case.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1106</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_PrepareBussSleep_NetworkMode_NetworkRequest</srcid><srcstatus/><internalId>1422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00151.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if an NM PDU is
        received in the Normal Operation State again, the NM shall notify the Generic
        Network Management Interface that some nodes in the cluster are not ready to
        sleep anymore (the so-called 'Remote Sleep Cancellation') by calling
        Nm_RemoteSleepCancelation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1034</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32052</srcid><srcstatus/><internalId>1507</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0100</srcid><srcstatus/><internalId>1588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00151.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if an NM PDU is
        received in the Ready Sleep State again, the NM shall notify the Generic
        Network Management Interface that some nodes in the cluster are not ready to
        sleep anymore (the so-called 'Remote Sleep Cancellation') by calling
        Nm_RemoteSleepCancelation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_764</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0127</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00154.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The NM shall reject a check of Remote Sleep Indication in Bus-Sleep Mode;
        the service shall not be executed and E_NOT_OK shall be returned.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1692</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0101</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00154.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The NM shall reject a check of Remote Sleep Indication in Prepare Bus-Sleep
        Mode; the service shall not be executed and E_NOT_OK shall be returned.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1692</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0085</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00154.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The NM shall reject a check of Remote Sleep Indication in Repeat Message
        State; the service shall not be executed and E_NOT_OK shall be returned.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1692</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0102</srcid><srcstatus/><internalId>1590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00139.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The optional service UdpNm_GetPduData shall be statically configurable.
        It shall be available if UDPNM_NODE_ID_ENABLED is TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1324</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1380</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData_1</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00139.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The optional service UdpNm_GetPduData shall be statically configurable.
        It shall be available if UDPNM_NODE_DETECTION_ENABLED is TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1324</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1380</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData_1</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00139.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The optional service UdpNm_GetPduData shall be statically configurable.
        It shall be available if UDPNM_USER_DATA_ENABLED is TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1324</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1380</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30006</srcid><srcstatus/><internalId>1342</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30007</srcid><srcstatus/><internalId>1343</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30008</srcid><srcstatus/><internalId>1344</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30009</srcid><srcstatus/><internalId>1345</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300011</srcid><srcstatus/><internalId>1348</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300012</srcid><srcstatus/><internalId>1350</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData_1</srcid><srcstatus/><internalId>1560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00366.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the UdpNm performs a state change from BusSleep state to NetworkMode due to a call to
        UdpNm_NetworkRequest() (i.e. due to an active wakeup) and UdpNmActiveWakeupBitEnabled is
        TRUE, the UdpNm shall set the ActiveWakeupBit in the CBV.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_483</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_1</srcid><srcstatus/><internalId>1397</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_2</srcid><srcstatus/><internalId>1398</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_3</srcid><srcstatus/><internalId>1399</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_4</srcid><srcstatus/><internalId>1400</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_5</srcid><srcstatus/><internalId>1401</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_Sequence_6</srcid><srcstatus/><internalId>1402</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1514</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_2</srcid><srcstatus/><internalId>1515</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_False</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00366.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the UdpNm performs a state change from PrepareBusSleep state to NetworkMode due to a
        call to UdpNm_NetworkRequest() (i.e. due to an active wakeup) and
        UdpNmActiveWakeupBitEnabled is TRUE, the UdpNm shall set the ActiveWakeupBit in the CBV.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_483</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_1</srcid><srcstatus/><internalId>1514</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_ActiveWakeupBit_False</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00366</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00187.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_RequestBusSynchronization is called in Bus-Sleep Mode the UdpNm
        module shall not execute the service and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1579</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RequestBusSync</srcid><srcstatus/><internalId>1509</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0078</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00187.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_RequestBusSynchronization is called in Prepare Bus-Sleep Mode the
        UdpNm module shall not execute the service and shall return E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1579</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RequestBusSync</srcid><srcstatus/><internalId>1509</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0080</srcid><srcstatus/><internalId>1594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00229.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfTxConfirmation shall inform the DET (if
        enabled), if the function call has failed because of the following reason:
        * Invalid channel handle (UDPNM_E_INVALID_CHANNEL)
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.UdpNm_SoAdIfTxConfirmationDet</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00229.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfTxConfirmation shall inform the DET (if
        enabled), if the function call has failed because of the following reason:
        * UdpNm was not initialized (UDPNM_E_NO_INIT)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1803</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00128.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_PassiveStartUp is called in the Bus-Sleep Mode, the UdpNm module
        shall enter the Network Mode; by default the Repeat Message State is
        entered (refer to SWS_UdpNm_00095 and SWS_UdpNm_00104).
      </description>
      <comment>
        Note: In the Prepare Bus-Sleep Mode and Bus-Sleep Mode is assumed that the
        network is released, unless bus communication is explicitly requested.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_499</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32019</srcid><srcstatus/><internalId>1438</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_PassiveMode_Channel_Multicore</srcid><srcstatus/><internalId>1570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00128.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_PassiveStartUp is called in the Prepare Bus Sleep Mode, the UdpNm
        module shall enter the Network Mode; by default the Repeat Message State
        is entered (refer to SWS_UdpNm_00095 and SWS_UdpNm_00104).
      </description>
      <comment>
        Note: In the Prepare Bus-Sleep Mode and Bus-Sleep Mode is assumed that the
        network is released, unless bus communication is explicitly requested.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_499</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33025</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00005.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
       <description>
        If the Repeat Message State is not entered via UdpNm_NetworkRequest the
        transmission of NM PDU shall be delayed by UdpNmMsgCycleOffset
        after entering the repeat message state.
      </description>
      <comment>
        Note: This mechanism prevents bursts of NM messages.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1153</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_BussSleep_NetworkMode_PassiveStartup</srcid><srcstatus/><internalId>1421</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PrepareBussSleep_NetworkMode_NetworkRequest</srcid><srcstatus/><internalId>1422</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PrepareBussSleep_NetworkMode_PassiveStartup</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_NormalOperation_RepeatMessageState</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ReadySleep_RepeatMessageState</srcid><srcstatus/><internalId>1425</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00005.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
       <description>
        If the Repeat Message State is not entered via UdpNmImmediateNmTransmissions
        is zero the transmission of NM PDU shall be delayed by UdpNmMsgCycleOffset
        after entering the repeat message state.
      </description>
      <comment>
        Note: This mechanism prevents bursts of NM messages.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1159</srcid><srcstatus/><internalId>1101</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_NetworkRequest</srcid><srcstatus/><internalId>1409</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_PassiveStartup</srcid><srcstatus/><internalId>1410</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_NormalOperationRemoteActivity</srcid><srcstatus/><internalId>1411</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_ReadySleepRemoteActivity</srcid><srcstatus/><internalId>1412</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_NormalOperationRemoteSleep</srcid><srcstatus/><internalId>1413</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RepeatMessageState_ReadySleepRemoteSleep</srcid><srcstatus/><internalId>1414</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00163.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
       <description>
        If Passive Mode is used (configuration parameter UDPNM_PASSIVE_MODE_ENABLED)
        the following option must not be used:
        * Bus Synchronization (configuration parameter UDPNM_BUS_SYNCHRONIZATION_ENABLED)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_609</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1525</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00163.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
       <description>
        If Passive Mode is used (configuration parameter UDPNM_PASSIVE_MODE_ENABLED)
        the following option must not be used:
        * Remote Sleep Indication (configuration parameter UDPNM_REMOTE_SLEEP_IND_ENABLED)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_783</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00163.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
       <description>
        If Passive Mode is used (configuration parameter UDPNM_PASSIVE_MODE_ENABLED)
        the following option must not be used:
        * Node Detection (configuration parameter UDPNM_NODE_DETECTION_ENABLED)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2424</srcid><srcstatus/><internalId>1010</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00362.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_NetworkRequest is called,
        UdpNmPnHandleMultipleNetworkRequest is set to TRUE and UdpNm is in
        Ready Sleep State, UdpNm shall change to the Repeat Message State
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_550</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00362.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_NetworkRequest is called,
        UdpNmPnHandleMultipleNetworkRequest is set to TRUE and UdpNm is in
        Normal Operation State, UdpNm shall change to the Repeat Message State
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_550</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00362.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_NetworkRequest is called,
        UdpNmPnHandleMultipleNetworkRequest is set to TRUE and UdpNm is in
        Repeat Message State, UdpNm shall restart the Repeat Message State
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_550</srcid><srcstatus/><internalId>1063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00362</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00085</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        During initialization the Control Bit Vector shall be set to 0x00.
      </description>
      <comment>
        The CBV should be set during initialization.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1502</srcid><srcstatus/><internalId>1118</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0109</srcid><srcstatus/><internalId>1450</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00025</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        During initialization each byte of the user data bytes shall be set to 0xFF.
      </description>
      <comment>
        The user data should be set during initialization.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1486</srcid><srcstatus/><internalId>1117</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0108</srcid><srcstatus/><internalId>1449</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00175</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is disabled, the detection of Remote
        Sleep Indication Timer shall be stoped.
      </description>
      <comment>
        This requirement is legacy from CanNm. For CanNm there is a Autosar Bugzilla ticket
        to solve this issue: https://www.autosar.org/bugzilla/show_bug.cgi?id=44639
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1624</srcid><srcstatus/><internalId>1131</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0147</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00180</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When the NM PDU transmission ability is enabled, the detection of Remote
        Sleep Indication Timer shall be re-started.
      </description>
      <comment>
        This requirement is legacy from CanNm. For CanNm there is a Autosar Bugzilla ticket
        to solve this issue: https://www.autosar.org/bugzilla/show_bug.cgi?id=44639
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1609</srcid><srcstatus/><internalId>1128</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1624</srcid><srcstatus/><internalId>1131</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0147</srcid><srcstatus/><internalId>1592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00212</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        This service has no effect if the current state is not equal to BusSleep Mode and Prepare
        Bus Sleep Mode.  In that case E_NOT_OK is returned.
      </description>
      <comment>
        Passive startup can be called in both Bus Sleep Mode and Prepare Bus Sleep Mode.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_505</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_33025</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00234</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Service name:      UdpNm_MainFunction&lt;Instance_Id&gt;
        Syntax:            void UdpNm_MainFunction&lt;Instance_Id&gt;(void)
        Service ID[hex]:   0x13
        Description:       Main function of the UdpNm which processes the algorithm describes in that document.
                           E.g.:
                           UdpNm_MainFunction_0() represents the UdpNm instance for the UDP channel 0
                           UdpNm_MainFunction_1() represents the UdpNm instance for the UDP channel 1
                           ...
        Caveats:           UdpNm is initialized correctly, i.e. the function shall be robust if one or more
                           channels are not initialized
        Configuration:     Mandatory
        This service has no effect if the current state is not equal to BusSleep Mode and Prepare
        Bus Sleep Mode.  In that case E_NOT_OK is returned.
      </description>
      <comment>
        If the main function is called while the module is not yet
        initialized the main function returns immediately without
        performing any functionality and without raising any Det error.
        This initialization check is always performed independent of the
        development error detection setting.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_287</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30011</srcid><srcstatus/><internalId>1329</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</srcid><srcstatus/><internalId>1331</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_ComUserDataPassiveModeApiCheck</srcid><srcstatus/><internalId>1334</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30003</srcid><srcstatus/><internalId>1346</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_0137</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00232.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfRxIndication shall inform the DET (if
        enabled), if function call has failed because of the following reason:
        * Invalid channel handle (UDPNM_E_INVALID_CHANNEL)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1891</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00232.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfRxIndication shall inform the DET (if
        enabled), if function call has failed because of the following reason:
        * UdpNm was not initialized (UDPNM_E_NO_INIT)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1905</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00232.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfRxIndication shall inform the DET (if
        enabled), if function call has failed because of the following reason:
        * udpSduPtr equals NULL_PTR (UDPNM_E_NULL_POINTER)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1917</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00232.4</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The callback function UdpNm_SoAdIfRxIndication shall inform the DET (if
        enabled), if function call has failed because of the following reason:
        * Invalid PDU ID (UDPNM_E_INVALID_PDUID)
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1910</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00314</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled and the
        UdpNm User Data length (RxPdu length - number of control bytes (CBV + NID))
        does not  match with the length of the referenced I-PDU an error shall be reported
        at generation time.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_221</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_239</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00018.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Type or error       : API service used without module initialization
        Related error code  : UDPNM_E_NO_INIT
        Error Value         : 0x01
      </description>
      <comment>
        UDPNM_E_NO_INIT is used instead of UDPNM_E_UNINIT
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_257</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00018.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Type or error       : API service called with wrong channel handle
        Related error code  : UDPNM_E_INVALID_CHANNEL
        Error Value         : 0x02
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_264</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00018.3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Type or error       : API service called with wrong PDU ID.
        Related error code  : UDPNM_E_INVALID_PDUID
        Error Value         : 0x03
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_271</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00018.4</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Type or error       : UdpNm initialization has failed, e.g. selected configuration set
                              doesn't exist
        Related error code  : UDPNM_E_INIT_FAILED
        Error Value         : 0x04
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_285</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00018.5</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Type or error       : Null pointer has been passed as an argument
        Related error code  : UDPNM_E_NULL_POINTER
        Error Value         : 0x12
      </description>
      <comment>
        UDPNM_E_NULL_POINTER is used instead of UDPNM_E_PARAM_POINTER.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Api.h_278</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_PassiveStartUp is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_455</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_NetworkRequest is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_533</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_NetworkGwEraRequest is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_600</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_NetworkRelease is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_672</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_DisableCommunication is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_742</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_EnableCommunication is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_825</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_SetUserData is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_918</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_GetUserData is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_995</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_GetNodeIdentifier is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1078</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_GetLocalNodeIdentifier is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1163</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_RepeatMessageRequest is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1257</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_GetPduData is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1351</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_GetState is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1429</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_RequestBusSynchronization is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1545</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_CheckRemoteSleepIndication is called when UdpNm is not initialized
        and Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1634</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32007</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If NM API service UdpNm_RequestSynchronizedPncShutdown is called when UdpNm is not
        initialized and Development Error Detection is enabled, then the called function shall not
        be executed, shall return E_NOT_OK and shall report UDPNM_E_NO_INIT to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2161</srcid><srcstatus/><internalId>991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_1</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_PassiveStartUp with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_462</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_NetworkRequest with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_540</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_NetworkGwEraRequest with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_608</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_NetworkRelease with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_679</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_DisableCommunication with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_749</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_EnableCommunication with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_832</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_SetUserData with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_925</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_GetUserData with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1002</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_GetNodeIdentifier with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1086</srcid><srcstatus/><internalId>905</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_GetLocalNodeIdentifier with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1171</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_RepeatMessageRequest with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1264</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_GetPduData with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1358</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_GetState with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1436</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_RequestBusSynchronization with an invalid network handle is called
        and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1552</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_CheckRemoteSleepIndication with an invalid network handle is
        called and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1644</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When NM API service UdpNm_RequestSynchronizedPncShutdown with an invalid network handle is
        called and if Development Error Detection is enabled, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_INVALID_CHANNEL to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2169</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_1</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfTxConfirmation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When UdpNm Callback Notification UdpNm_SoAdIfTxConfirmation with an invalid Pdu ID is
        called and if Development Error Detection is enabled, then the called function shall
        not be executed and UdpNm shall report UDPNM_E_INVALID_PDUID to the Development Error
        Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1808</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When UdpNm Callback Notification UdpNm_SoAdIfRxIndication with an invalid Pdu ID is
        called and if Development Error Detection is enabled, then the called function shall
        not be executed and UdpNm shall report UDPNM_E_INVALID_PDUID to the Development Error
        Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1910</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32008</srcid><srcstatus/><internalId>1373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_SetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_SetUserData, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_930</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_GetUserData, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1007</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_GetNodeIdentifier, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1092</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetLocalNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_GetLocalNodeIdentifier, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1179</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetPduData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_GetPduData, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1363</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_GetState, then the called function shall not be executed,
        shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1441</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1446</srcid><srcstatus/><internalId>938</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_CheckRemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and NULL Pointer is passed as an argument to
        UdpNm service UdpNm_CheckRemoteSleepIndication, then the called function shall not be
        executed, shall return E_NOT_OK and shall report UDPNM_E_NULL_POINTER to the Development
        Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1652</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32009</srcid><srcstatus/><internalId>1374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_PassiveStartUp</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_PassiveStartUp.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_452</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_530</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_NetworkGwEraRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_597</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRelease</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_NetworkRelease.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_669</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_DisableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_DisableCommunication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_739</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_EnableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_EnableCommunication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_822</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_SetUserData.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_915</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetUserData.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_992</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetNodeIdentifier.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1075</srcid><srcstatus/><internalId>903</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetLocalNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetLocalNodeIdentifier.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1160</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RepeatMessageRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_RepeatMessageRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1254</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetPduData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetPduData.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1348</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetState.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1426</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetVersionInfo</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_GetVersionInfo.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1504</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestBusSynchronization</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_RequestBusSynchronization.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1542</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_CheckRemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_CheckRemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1631</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfTxConfirmation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_SoAdIfTxConfirmation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1800</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_SoAdIfRxIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1902</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestSynchronizedPncShutdown</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If detection of development errors is enabled by UDPNM_DEV_ERROR_DETECT (configuration
        parameter), validity checks for all input parameters shall be performed for UDP NM API
        service call UdpNm_RequestSynchronizedPncShutdown.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2158</srcid><srcstatus/><internalId>990</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00372.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmPnEraCalcEnabled is TRUE, the PN status information hast to be stored as
        channel ERA information (SWS_UdpNM_00355).
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1752</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00372</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00372.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmPnEiraCalcEnabled is TRUE, the PN status information hast to be stored in
        a global buffer EIRA information (SWS_UdpNM_00344).
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1736</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00372</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.ECUC_UdpNm_00071</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name:                      UdpNmPnFilterMaskByteIndex
        Description:               Index of the filter mask byte. Specifies the position within the filter mask byte array.
        Multiplicity:              1
        Type:                      EcucIntegerParamDef
        Range:                     0 .. 62
        Default value:             1
        Post-Build Variant Value:  false
        Value Configuration Class: Pre-compile time   X   VARIANT-PRE-COMPILE
                                   Link time          X   VARIANT-LINK-TIME, VARIANT-POST-BUILD
                                   Post-build time    --
        Scope / Dependency  scope: local
                            dependency: only available if UdpNmPnEnabled == true for at least one UdpNm Channel. UdpNmPnFilterMaskByteIndex &lt; UdpNmPnInfoLength.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2796</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UDPNM_UdpNmPnInfo_504PNCs</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_UdpNmPnResetTime_504PNCs</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>UdpNm.ECUC_UdpNm_00071</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00465.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          Type or error       : A NM message with PN Shutdown Request Bit was received on a channel
                                that is actively coordinated by the ComM PNC Gateway.
          Relevance           : Development
          Related error code  : UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST
          Error Value         : 0x20
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2381</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_6</srcid><srcstatus/><internalId>1531</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_7</srcid><srcstatus/><internalId>1532</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_8</srcid><srcstatus/><internalId>1533</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_9</srcid><srcstatus/><internalId>1534</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_33</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_34</srcid><srcstatus/><internalId>1549</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_35</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00465.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          Type or error       : Retransmission timer for a PN shutdown message has expired, because
                                a PN shutdown message could not be transmitted on the network
                                within the configured duration of re-transmission.
          Relevance           : Development
          Related error code  : UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED
          Error Value         : 0x21
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2693</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2829</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_18</srcid><srcstatus/><internalId>1543</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_37</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00152.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if Repeat Message State is
        entered from Normal Operation State, the UdpNm shall notify the Generic Network Management
        Interface that some nodes in the cluster are not ready to sleep anymore (the so-called
        'Remote Sleep Cancellation') by calling Nm_RemoteSleepCancellation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1034</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32052</srcid><srcstatus/><internalId>1507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00152.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If Remote Sleep Indication has been previously detected and if Repeat Message State is
        entered from Ready Sleep State, the UdpNm shall notify the Generic Network Management
        Interface that some nodes in the cluster are not ready to sleep anymore (the so-called
        'Remote Sleep Cancellation') by calling Nm_RemoteSleepCancellation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_746</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0128</srcid><srcstatus/><internalId>1608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00014.1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRepeatMsgIndEnabled is set to TRUE, and the Repeat Message Request bit set to 1 is
        received, and UdpNmDynamicPncToChannelMappingEnabled is set to TRUE, and Partial Network
        Learning Bit set to 1 is also received, UdpNm module shall call the callback function
        Nm_RepeatMessageIndication with the parameter pnLearningBitSet be set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.SWS_UdpNm_00014.2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRepeatMsgIndEnabled is set to TRUE, and the Repeat Message Request bit set to 1 is
        received, and UdpNmDynamicPncToChannelMappingEnabled is set to TRUE, and Partial Network
        Learning Bit set to 0 is also received, UdpNm module shall call the callback function
        Nm_RepeatMessageIndication with the parameter pnLearningBitSet be set to FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.UdpNm.PNLearning</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmActiveWakeupBitEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmActiveWakeupBitEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmActiveWakeupBitEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1207</srcid><srcstatus/><internalId>1203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmBusSynchronizationEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmBusSynchronizationEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmBusSynchronizationEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_298</srcid><srcstatus/><internalId>1153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComControlEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmComControlEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmComControlEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_338</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComUserDataSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmComUserDataSupport SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmComUserDataSupport SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_431</srcid><srcstatus/><internalId>1159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmCoordinatorSyncSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmCoordinatorSyncSupport SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmCoordinatorSyncSupport SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_467</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmDevErrorDetect</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmDevErrorDetect SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmDevErrorDetect SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_504</srcid><srcstatus/><internalId>1163</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateRestartEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmImmediateRestartEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmImmediateRestartEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_569</srcid><srcstatus/><internalId>1167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMainFunctionPeriod</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmMainFunctionPeriod SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmMainFunctionPeriod SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1768</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNumberOfChannels</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmNumberOfChannels SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmNumberOfChannels SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_597</srcid><srcstatus/><internalId>1169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPostBuildRamSize</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPostBuildRamSize SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPostBuildRamSize SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_631</srcid><srcstatus/><internalId>1170</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPassiveModeEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPassiveModeEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPassiveModeEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_660</srcid><srcstatus/><internalId>1172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduRxIndicationEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPduRxIndicationEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPduRxIndicationEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_696</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraCalcEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnEiraCalcEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnEiraCalcEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_730</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnResetTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnResetTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnResetTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_767</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRemoteSleepIndEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRemoteSleepIndEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_814</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmStateChangeIndEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmStateChangeIndEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmStateChangeIndEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_839</srcid><srcstatus/><internalId>1182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmUserDataEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmUserDataEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmUserDataEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_892</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmVersionInfoApi</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmVersionInfoApi SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmVersionInfoApi SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_924</srcid><srcstatus/><internalId>1186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraRxNSduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnEiraRxNSduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnEiraRxNSduRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_954</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnShutdownMessageRetransmissionDuration</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnShutdownMessageRetransmissionDuration SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnShutdownMessageRetransmissionDuration SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_991</srcid><srcstatus/><internalId>1190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnSyncShutdownErrorReactionEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnSyncShutdownErrorReactionEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnSyncShutdownErrorReactionEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1029</srcid><srcstatus/><internalId>1192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMsgIndEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRepeatMsgIndEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRepeatMsgIndEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1130</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeDetectionEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmNodeDetectionEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmNodeDetectionEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1176</srcid><srcstatus/><internalId>1201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmAllNmMessagesKeepAwake</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmAllNmMessagesKeepAwake SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmAllNmMessagesKeepAwake SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1249</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnEnabled SHALL be set to PostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1491</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraCalcEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnEraCalcEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnEraCalcEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1534</srcid><srcstatus/><internalId>1223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnHandleMultipleNetworkRequests</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnHandleMultipleNetworkRequests SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnHandleMultipleNetworkRequests SHALL be set to PostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1573</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmSynchronizedPncShutdownEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmSynchronizedPncShutdownEnabled SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmSynchronizedPncShutdownEnabled SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1620</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraRxNSduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnEraRxNSduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnEraRxNSduRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1654</srcid><srcstatus/><internalId>1230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmCycleTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmImmediateNmCycleTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmImmediateNmCycleTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1690</srcid><srcstatus/><internalId>1232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmTransmissions</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmImmediateNmTransmissions SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmImmediateNmTransmissions SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1733</srcid><srcstatus/><internalId>1234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRetryFirstMessageRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRetryFirstMessageRequest SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRetryFirstMessageRequest SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1811</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleOffset</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmMsgCycleOffset SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmMsgCycleOffset SHALL be set to PostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1887</srcid><srcstatus/><internalId>1242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmMsgCycleTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmMsgCycleTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1931</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmNodeId SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmNodeId SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1973</srcid><srcstatus/><internalId>1246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduCbvPosition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPduCbvPosition SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPduCbvPosition SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2023</srcid><srcstatus/><internalId>1248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduNidPosition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPduNidPosition SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPduNidPosition SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2080</srcid><srcstatus/><internalId>1252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRemoteSleepIndTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRemoteSleepIndTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2133</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMessageTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRepeatMessageTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRepeatMessageTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2184</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTimeoutTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmTimeoutTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmTimeoutTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2236</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmWaitBusSleepTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmWaitBusSleepTime SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmWaitBusSleepTime SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2278</srcid><srcstatus/><internalId>1261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComMNetworkHandleRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmComMNetworkHandleRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmComMNetworkHandleRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2312</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRxPduId SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRxPduId SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2373</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRxPduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRxPduRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2412</srcid><srcstatus/><internalId>1270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxConfirmationPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmTxConfirmationPduId SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmTxConfirmationPduId SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2479</srcid><srcstatus/><internalId>1276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmTxPduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmTxPduRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2515</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmTxUserDataPduId SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmTxUserDataPduId SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2582</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmTxUserDataPduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmTxUserDataPduRef SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2615</srcid><srcstatus/><internalId>1287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxUserDataPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmRxUserDataPduRef SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmRxUserDataPduRef SHALL be set to PostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2669</srcid><srcstatus/><internalId>1292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoLength</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnInfoLength SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnInfoLength SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2729</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoOffset</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnInfoOffset SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnInfoOffset SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2755</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteIndex</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnFilterMaskByteIndex SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnFilterMaskByteIndex SHALL be set to PreCompile.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2811</srcid><srcstatus/><internalId>1304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteValue</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of configuration element UdpNmPnFilterMaskByteValue SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element of
        configuration element UdpNmPnFilterMaskByteValue SHALL be set to PostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2845</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <defaults>
      <source>EB</source>
    </defaults>

    <specobject>
      <id>UdpNm.EB.MainFunction.InitCheck</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If a Main function of a un-initialized module is called from the
        BSW Scheduler, then it shall return immediately without
        performing any functionality and without raising any errors.
      </description>
      <rationale>
        Main Function processing of an un-initialized Module may result
        in undesired and non defined behaviour.
        Rationale for the deviation list: The SchM module may schedule
        the modules main function before the module is initialized.
        This would result in lots of Det errors during start up.
        Therefore the modules main function does not throw a Det error
        if the module is not yet initialized and simply returns in this case.
      </rationale>
      <comment>
        EB requirement is in line with the AUTOSAR 4.0 General SRS
        requirement BSW00450.
        https://issue.ebgroup.elektrobit.com/browse/ASCCCB-1403
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1710</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_32010</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.UdpNmUserDataTxPdu</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmComUserDataSupport is enabled and UserDataLength is not 0, UdpNmUserDataTxPdu
        shall be enabled by user, otherwise generation error shall occur.
        If UdpNmComUserDataSupport is disabled or UserDataLength is 0, UdpNmUserDataTxPdu
        shall not be used by user, otherwise at configuration time error shall occur.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2560</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.PduRCallsNoUserData</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        If UserDataLength (RxPdu length - number of control bytes (CBV + NID))
        is 0 for a UdpNm channel, then UdpNm shall not call the PduR functions like
        PduR_UdpNmTriggerTransmit(), PduR_UdpNmRxIndication() and PduR_UdpNmTxConfirmation() for the
        respective channel.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1825</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2107</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2409</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SWS_UdpNm_00177.Implicit</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The service UdpNm_DisableCommunication shall return E_NOT_OK if the
        Network Management PDU transmission ability is already disabled.
      </description>
      <rationale>
        According to SWS_UdpNm_00177, if network management PDU transmission ability
        is enabled, UdpNm_EnableCommunication shall return E_NOT_OK.
        Similarly this feature is required for UdpNm_DisableCommunication.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_787</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_0114</srcid><srcstatus/><internalId>1583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.BSWMDGeneration_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module's generator shall generate a basic software
        module description (BSWMD) based on the UdpNm module's
        configuration containing information on the exclusive areas
        required by the UdpNm module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_5</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.BSWMDGeneration_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module's generator shall generate a basic software
        module description (BSWMD) based on the UdpNm module's
        configuration containing information on the scheduled
        MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_5</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.BSWMDGeneration_3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module's BSWMD shall be generated using a generator
        mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_5</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.EventQueue</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        An event shall not be added to the event queue if an entry of
        this event is already present in the queue. Therefore, the size of
        the event queue shall be equal to the total number of defined events.
      </description>
      <rationale>
        Not queuing duplicate events avoids an overflow of the queue.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_Hsm.c_409</srcid><srcstatus/><internalId>1039</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_EventQueue</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ActiveWakeUpBitCBV.dependencyCheck</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the configuration parameter 'UdpNmActiveWakeupBitEnabled' is set to
        'true', then "Control Bit Vector" in the NM-PDU shall be enabled.
        I.e. The parameter 'UdpNmPduCbvPosition' must be set to a value
        other than "UDPNM_PDU_OFF".
      </description>
      <rationale>
        Setting or clearing of ActiveWakeUpBit in the "Control Bit Vector" makes
        sense only if "Control Bit Vector" shall be present in the CBV.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2041</srcid><srcstatus/><internalId>1250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.DependencyCheck.UdpNmPnEnabled.ComUserDataSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the configuration parameter 'UdpNmPnEnabled' is set to 'true',
        the UdpNm schema shall ensure that "Com UserData Support" is enabled,
        i.e., the parameter 'UdpNmComUserDataSupport' is set to 'true'.
      </description>
      <rationale>
        Without ComUserDataSupport, aggregation of EIRA / ERA does not make
        sense.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1503</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The IMPLEMENTATION_CONFIG_VARIANT of the module SHALL be set to VariantPostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_44</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_537</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1066</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1272</srcid><srcstatus/><internalId>1207</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1305</srcid><srcstatus/><internalId>1209</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1358</srcid><srcstatus/><internalId>1211</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1387</srcid><srcstatus/><internalId>1213</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1419</srcid><srcstatus/><internalId>1215</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1459</srcid><srcstatus/><internalId>1217</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1852</srcid><srcstatus/><internalId>1240</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2353</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2455</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2556</srcid><srcstatus/><internalId>1282</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2649</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2704</srcid><srcstatus/><internalId>1295</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2791</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.src.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.IMPLEMENTATIONCONFIGCLASS</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS
        of each configuration element SHALL be set to VariantPostBuild.
        The CONFIG-CLASS (XDM: class attribute of the icc:v) element SHALL be set
        in a way that the implemented configuration class of the respective parameter
        is reflected (e.g., to PreCompile if it's a pre-compile time parameter
        and to PostBuild if it's a post-build time parameter).
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmActiveWakeupBitEnabled</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmBusSynchronizationEnabled</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComControlEnabled</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComUserDataSupport</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmCoordinatorSyncSupport</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmDevErrorDetect</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateRestartEnabled</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMainFunctionPeriod</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNumberOfChannels</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPostBuildRamSize</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPassiveModeEnabled</srcid><srcstatus/><internalId>484</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduRxIndicationEnabled</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraCalcEnabled</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnResetTime</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndEnabled</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmStateChangeIndEnabled</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmUserDataEnabled</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmVersionInfoApi</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraRxNSduRef</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnShutdownMessageRetransmissionDuration</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnSyncShutdownErrorReactionEnabled</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMsgIndEnabled</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeDetectionEnabled</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmAllNmMessagesKeepAwake</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEnabled</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraCalcEnabled</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnHandleMultipleNetworkRequests</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmSynchronizedPncShutdownEnabled</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraRxNSduRef</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmCycleTime</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmTransmissions</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRetryFirstMessageRequest</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleOffset</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleTime</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeId</srcid><srcstatus/><internalId>508</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduCbvPosition</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduNidPosition</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndTime</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMessageTime</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTimeoutTime</srcid><srcstatus/><internalId>513</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmWaitBusSleepTime</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComMNetworkHandleRef</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduId</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduRef</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxConfirmationPduId</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxPduRef</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduId</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduRef</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxUserDataPduRef</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoLength</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoOffset</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteIndex</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteValue</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmPnHandleMultipleNetworkRequests</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmPnHandleMultipleNetworkRequests SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_119</srcid><srcstatus/><internalId>1324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.AUTOSAR403PB.UdpNmTxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmTxPduRef SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2517</srcid><srcstatus/><internalId>1279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmRxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmRxPduRef SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2414</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.AUTOSAR403PB.UdpNmPnEnabled</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmPnEnabled SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1493</srcid><srcstatus/><internalId>1220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmTxUserDataPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmTxUserDataPduRef SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2617</srcid><srcstatus/><internalId>1288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.RFC_58899.UdpNmPnFilterMaskByteValue</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of UdpNmPnFilterMaskByteValue SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2847</srcid><srcstatus/><internalId>1307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmChannelConfig</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The POST-BUILD-CHANGEABLE element of UdpNmChannelConfig SHALL be set to false.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1062</srcid><srcstatus/><internalId>1195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Impl.IsValid</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The module SHALL implement the function UdpNm_IsValidConfig()
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_252</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Impl.Hash</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The module post-build configuration struct SHALL be extended by a hash value
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_81</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Impl.Init</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The Init() function SHALL be extended so that the configuration can be obtained from the PbcfgM if a NULL_PTR is passed to the function.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_321</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Format.VCC-62</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided in Motorola S-Record format as
        defined in the "Motorola M68000 Family Programmer's Reference Manual", Appendix C.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_5</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Format.C</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided as _PbCfg.c and _PbCfg.h
        files as well.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_133</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmRelocatablePbcfgEnable</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The boolean configuration parameter UdpNmRelocatablePbcfgEnable with
        CONFIG-CLASS PRE-COMPILE with default value of true SHALL be placed
        into the container UdpNmGeneral beneath the module definition.
        The parameter SHALL only be available (enabled) if the PbCfgM module
        configuration references the UdpNm module.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_177</srcid><srcstatus/><internalId>1148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmPnSupported</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The boolean configuration parameter UdpNmPnSupported with
        CONFIG-CLASS PRE-COMPILE with default value of false SHALL be placed
        into the container UdpNmGeneral beneath the module definition.
        Enables or disables support of partial networking.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_119</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_GEN_10009</srcid><srcstatus/><internalId>1366</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmASR412APICompatibility</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The boolean configuration parameter UdpNmASR412APICompatibility with
        CONFIG-CLASS PRE-COMPILE with default value of false SHALL be placed
        into the container UdpNmGeneral beneath the module definition.
        Enables or disables UdpNm_SoAdIfRxIndication compatibility with ASR 4.1.2.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_152</srcid><srcstatus/><internalId>1147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmMaxPn</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The integer configuration parameter UdpNmMaxPn with
        CONFIG-CLASS PRE-COMPILE with default value of 0 SHALL be placed
        into the container UdpNmGeneral beneath the module definition.
        The maximum number of Partial Networking Clusters that can be configured.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_205</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Impl.PbCfgM</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support in the module SHALL be enabled only when the PbcfgM
        references the module.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_148</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Impl.Relocatable</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The post-build configuration SHALL only be relocatable if
        UdpNmRelocatablePbcfgEnable is set to true and if PbcfgM
        enabled relocatable configurations.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_155</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_61</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UserDataRef.PnEiraRxSduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Reference of UdpNmPnEiraRxNSduRef and UdpNmRxUserDataPduRef
        must be different.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2677</srcid><srcstatus/><internalId>1293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SymbolicName.ecuc_sws_2108_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute SHORT-NAME is specified for a container, the symbolic
        name shall be generated as specified in the requirement [ecuc_sws_2108]
        (from AR-4.0.3 EcuC specification) for the parameters
        UdpNmTxConfirmationPduId and UdpNmTxUserDataPduId.
        For UdpNmTxConfirmationPduId and UdpNmTxUserDataPduId, the
        symbolic name shall be generated as
        #define UdpNmConf_UdpNmTxPdu_&lt;SHORT-NAME of UdpNmTxPdu&gt;
        #define UdpNmConf_UdpNmUserDataTxPdu_&lt;SHORT-NAME of UdpNmUserDataTxPdu&gt;
        respectively.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SymbolicName.ecuc_sws_2108_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute SHORT-NAME is specified for a container, the symbolic
        name for the parameter UdpNmRxPduId is generated as
        #define UdpNmConf_UdpNmChannelConfig_&lt;CHANNELNAME&gt;_&lt;SHORT-NAME&gt;
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30010</srcid><srcstatus/><internalId>1330</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</srcid><srcstatus/><internalId>1332</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_30002</srcid><srcstatus/><internalId>1347</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_80001</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SymbolicName.UdpNmTxConfirmationPduId.NoShortName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute SHORT-NAME is not specified for the container
        UdpNmTxPdu, the symbolic name macros for UdpNmTxConfirmationPduId
        shall be generated adhering to the following naming pattern:
          #define UdpNmConf_UdpNmChannelConfig_&lt;CHANNELNAME&gt;_UdpNmTxPdu

        where "&lt;CHANNELNAME&gt;" is name of the channel in which
        the container UdpNmTxPdu exists.
      </description>
      <rationale>
        If no short-name is specifed, EB tresos Studio assumes the name
        of the corresponding schema node as a default. Thus, the symbolic name
        macros generated according to requirement [ecuc_sws_2108] will not
        be unique.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_480</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SymbolicName.UdpNmTxUserDataPduId.NoShortName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the attribute SHORT-NAME is not specified for the container
        UdpNmUserDataTxPdu, the symbolic name macros for UdpNmTxUserDataPduId
        shall be generated adhering to the following naming pattern:
        #define UdpNmConf_UdpNmChannelConfig_&lt;CHANNELNAME&gt;_UdpNmUserDataTxPdu

        where &lt;CHANNELNAME&gt;" is name of the channel in which the container
        UdpNmUserDataTxPdu exists.
      </description>
      <rationale>
        If no short-name is specifed, EB tresos Studio assumes the name
        of the corresponding schema node as a default. Thus, the symbolic name
        macros generated according to requirement [ecuc_sws_2108] will not
        be unique.
      </rationale>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_523</srcid><srcstatus/><internalId>749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmNodeIdCallbackName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name:                UdpNmNodeIdCallback
        Description:         Name of the callback function to be called if
                             UdpNmNodeIdCallback is enabled.
        Multiplicity:        0..1
        ConfigurationClass:  Pre-compile time
        Scope / Dependency:  --
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_293</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_302</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_356</srcid><srcstatus/><internalId>1156</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_UdpNmNodeIdCallback_Off</srcid><srcstatus/><internalId>1353</internalId></linkedfrom><linkedfrom><srcid>UdpNm_Test_UdpNmNodeIdCallback_On</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmNodeIdCallbackHeaderName</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name:               UdpNmNodeIdCallbackHeader
        Description:        The name a header file that will be included to obtain the
                            external declaration of the callback function.
        Multiplicity:       1
        ConfigurationClass: Pre-compile time
        Scope / Dependency: Only available if UdpNmNodeIdCallback is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_94</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_384</srcid><srcstatus/><internalId>1157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmNodeIdCallback_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If the parameter 'UdpNmNodeIdCallback' is enabled then, API
        'UdpNm_GetLocalNodeIdentifier()' shall invoke the callback and return
        the value provided by the callback.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1200</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NODEID_CALLBACK_1</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmNodeIdCallback_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When a PDU is transmitted by UdpNm, the callback shall be invoked and
        the value provided by the callback shall be set in the position of
        Node Id in the Tx Pdu, if the parameter 'UdpNmNodeIdCallback' is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1513</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NODEID_CALLBACK_2</srcid><srcstatus/><internalId>1406</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxPdu</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Container Name:  UdpNmUserDataRxPdu
        Description:     This container shall be optional and shall be used to configure the user Nm data PDU,
                         if desired by user.
                         This container shall only be available if UdpNmComUserDataSupport is enabled.
                         If this container is enabled and UdpNmComUserDataSupport is disabled, then configuration
                         error shall occur.
     </description>
     <needscoverage>
       <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2633</srcid><srcstatus/><internalId>1289</internalId></linkedfrom></coveredby></needscov>
     <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.UdpNmRxUserDataPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Name:              UdpNmRxUserDataPduRef
        Description:       Reference to the NM User Data I-PDU in the global PDU collection.
        Multiplicity:      1
        Type:              Reference to [ Pdu ]
        ConfigurationClass:Pre-compile time  X VARIANT-PRE-COMPILE, VARIANT-LINK-TIME, VARIANT-POST-BUILD
                           Link time         --
                           Post-build time   --
        Scope / Dependency: --
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2657</srcid><srcstatus/><internalId>1291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If Container UdpNmUserDataRxPdu is enabled by user AND if UdpNmComUserDataSupport
        is true, then UdpNm shall call PduR_UdpNmRxIndication() in the
        UdpNm_SoAdIfRxIndication() context and the UdpNm User Data shall be forwarded to the
        PduR (i.e., the UdpNm Header shall be stripped).
      </description>
      <comment>
        If UdpNmUserDataRxPdu is not enabled PduR_UdpNmRxIndication() shall not be called
        and if required, user shall retreive UdpNm User Data using UdpNm_GetuserData()
        function.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2408</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_RxIndication</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.PduR_UdpNmUserDataRxId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmUserDataRxPdu is enabled, Pdu reference configured in UdpNmRxUserDataPduRef
        shall be searched in PduR module's Routing tables for matching PduRSrcPduRef
        and respective PduRSourcePduHandleId shall be used for PduR_UdpNmRxIndication()
        call from UdpNm. If no matching PduRSrcPduRef is found, configuration error shall occur.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_59</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.PduRefNoUserData</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        If UserDataLength(RxPdu length - number of control bytes (CBV+NID)) is 0 for a
        UdpNm channel, then UdpNmUserDataTxPdu and UdpNmUserDataRxPdu for
        plugin configuration shall be disabled for the respective channel.
      </description>
      <comment>
        This requirement is contradictory to original Austosar Requirement SWS_UdpNm_00086.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_211</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_216</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_234</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ComUserDataSupport.SetGetUserDataNoUserData</id>
      <status>approved</status><source>EB</source>
      <version>2</version>
      <description>
        If UserDataLength (RxPdu length - number of control bytes (NID + CBV)) is
        0 for a UdpNm channel, then UdpNm_SetUserData() and UdpNm_GetUserData() functions
        shall return E_NOT_OK for the respective channel.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1027</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_GetUserdataDet</srcid><srcstatus/><internalId>1616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRxPduId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The parameter UdpNmRxPduId has to be the same for all the items inside a channel.
        eg. ch0 RxPduId0 = 0
                RxPduId1 = 0
                RxPduId2 = 0
            ch1 RxPduId0 = 1
                RxPduId1 = 1
                RxPduId2 = 1
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2388</srcid><srcstatus/><internalId>1268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The parameter PduLength referenced by "UdpNmRxPduRef"s shall be equal inside a channel.
        eg. ch0 RxPduRef0/PduLength = 6
                RxPduRef1/PduLength = 6
                RxPduRef2/PduLength = 6
            ch1 RxPduRef3/PduLength = 8
                RxPduRef4/PduLength = 8
                RxPduRef5/PduLength = 8
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2424</srcid><srcstatus/><internalId>1272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmTxPduRef</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The parameter UdpNmTxPduRef is only available if the
        SoAdTxUpperLayerType setting in the SoAdTxPduRef parameter is set to 'IF'.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2525</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmTimeoutTime</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The NM-Timeout timer shall not be (re-)started if the communication was disabled via
        the UdpNm_DisableCommunication() API.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_73</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PostBuildRamSize_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case parameter UdpNmPostBuildRamSize is disabled the module shall calculate
        internally the size needed for internal TX and RX buffers.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Lcfg.h.m4_14</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PostBuildRamSize_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case parameter UdpNmPostBuildRamSize is enabled and it's value is less
        than the internal size needed for TX and RX buffers, the module shall generate
        error at generation time.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Checks.m_143</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PostBuildRamSize_3</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        At postbuild time if the computed size needed by internal TX and RX buffers
        is greater than the precompile time value allocated for TX and RX buffers,
        UdpNm shalle generate a DET error UDPNM_E_INIT_FAILED at initialization.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_340</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_WrongPostBuildRamSize</srcid><srcstatus/><internalId>1376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PnEnabled_FALSE_1</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case UdpNm_SoAdIfRxIndication is called and PnEnabled for a channel is set to false,
        UdpNm shall not perform aggregation of the Partial Network Information.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1948</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmPnEnabled_False_1</srcid><srcstatus/><internalId>1462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PnEnabled_FALSE_2</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        In case transmision is done and PnEnabled for a channel is set to false,
        UdpNm shall not perform EIRA aggregation of the Partial Network Information.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2122</srcid><srcstatus/><internalId>987</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNmPnEnabled_False_1</srcid><srcstatus/><internalId>1462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmMultiCoreSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The boolean configuration parameter UdpNmMultiCoreSupport enables module multi core support.
        The parameter has CONFIG-CLASS PRE-COMPILE  and default value FALSE.
        It SHALL be placed into UdpNmGeneralContainer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_109</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_402</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_96</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_NetworkStartIndication
        instead of Nm_NetworkStartIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_352</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_NetworkStartIndication_1</srcid><srcstatus/><internalId>1472</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_NetworkMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_NetworkMode
        instead of Nm_NetworkMode.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_357</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_BusSleepMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_BusSleepMode
        instead of Nm_BusSleepMode.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_362</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_PrepareBusSleepMode
        instead of Nm_PrepareBusSleepMode.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_367</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_RemoteSleepIndication
        instead of Nm_RemoteSleepIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_372</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepIndication_1</srcid><srcstatus/><internalId>1475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
      If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
      SchM_Call_UdpNm_RequiredCSEntry_Nm_RemoteSleepCancellation
      instead of Nm_RemoteSleepCancellation.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_377</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepCancellation_1</srcid><srcstatus/><internalId>1476</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepCancellation_2</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepCancellation_3</srcid><srcstatus/><internalId>1478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_PduRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
      If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
      SchM_Call_UdpNm_RequiredCSEntry_Nm_PduRxIndication
      instead of Nm_PduRxIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_382</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_UdpNmRxIndication_1</srcid><srcstatus/><internalId>1473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_StateChangeNotification
        instead of Nm_StateChangeNotification.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_387</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_StateChangeNotification_1</srcid><srcstatus/><internalId>1474</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
      If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
      SchM_Call_UdpNm_RequiredCSEntry_Nm_RepeatMessageIndication
      instead of Nm_RepeatMessageIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_392</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RepeatMsgIndication_False</srcid><srcstatus/><internalId>1480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE, UdpNm shall call
        SchM_Call_UdpNm_RequiredCSEntry_Nm_CarWakeUpIndication
        instead of Nm_CarWakeUpIndication.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm_Int.h_397</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_300010</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_300013</srcid><srcstatus/><internalId>1357</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call</srcid><srcstatus/><internalId>1471</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_CarWakeUpIndication_1</srcid><srcstatus/><internalId>1479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SchM_Call_DET</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If UdpNmMultiCoreSupport is TRUE and DET is enabled and SchM_Call returns
        a different value from SCHM_E_OK, DET shall be reported
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2329</srcid><srcstatus/><internalId>1001</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2448</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_388</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_409</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_466</srcid><srcstatus/><internalId>1054</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_951</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1274</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1394</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1417</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1463</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_Schm_Call_StateChangeNotification</srcid><srcstatus/><internalId>1481</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_BusSleepMode</srcid><srcstatus/><internalId>1482</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_NetworkStartIndication</srcid><srcstatus/><internalId>1483</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_PduRxIndication</srcid><srcstatus/><internalId>1484</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_NetworkMode</srcid><srcstatus/><internalId>1485</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_PrepareBusSleepMode</srcid><srcstatus/><internalId>1486</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepIndication</srcid><srcstatus/><internalId>1487</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RemoteSleepCancellation</srcid><srcstatus/><internalId>1488</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_RepeatMessageIndication</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_Schm_Call_CarWakeUpIndication</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRetryFirstMessageRequest is set to true and if the first transmit request
        after transition into NetworkMode is not accepted by SoAd,
        the message request shall be repeated in the next main function until one
        transmit request is accepted by SoAd.
      </description>
      <rationale>
        This feature can be used in case of partial network wakeup filter to avoid a blocking of
        all messages in case of passive start-up and first message request is not accepted
        by SoAd due to EthSM could not enable transmission path fast enough
        (e.g. in case of asynchronous transceiver handling).
      </rationale>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_2</srcid><srcstatus/><internalId>1464</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_4</srcid><srcstatus/><internalId>1466</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_5</srcid><srcstatus/><internalId>1467</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_8</srcid><srcstatus/><internalId>1470</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1667</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRetryFirstMessageRequest_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRetryFirstMessageRequest is set to true and if the first transmit request
        after transition into NetworkMode is not accepted by SoAd,
        and the current state is Repeat Message State the Repeat Message Timer shall
        be reloaded until SoAd accepts a transmission request.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_1</srcid><srcstatus/><internalId>1463</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_3</srcid><srcstatus/><internalId>1465</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1664</srcid><srcstatus/><internalId>1137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRetryFirstMessageRequest_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRetryFirstMessageRequest is set to true and UdpNm timeout timer expired
        and SoAd did not accepted a transmission request, the retry on each cycle shall be aborted.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_7</srcid><srcstatus/><internalId>1469</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1655</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmRetryFirstMessageRequest_4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmRetryFirstMessageRequest is set to true and UdpNm timeout timer expired
        and SoAd did not accepted a message the Repeat Message Timer shall not be reloaded.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_RetryFirstMessageRequest_6</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1656</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.AdaptiveChannelConfig</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If source code is compiled for adaptive Autosar channel configuration data
        and number of channels shall be configurable at runtime.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_Adaptive_Compile</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.AdaptivePnInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If source code is compiled for adaptive Autosar partial network information
        shall be configurable at runtime.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_Adaptive_Compile</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBSelectable.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        UdpNm_PBcfg.* to UdpNm_&lt;postBuildVariant&gt;_PBcfg.*
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_35</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PB_V0_RequestBusSynchronization</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RequestBusSynchronization</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_NodeId</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_NodeId</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_RxIndication</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RxIndication</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBSelectable.TypeName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration type/variable names shall be changed in the following way:
        - UdpNm_[Const]ConfigLayoutType to UdpNm_&lt;postBuildVariant&gt;_[Const]ConfigLayoutType
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_41</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PB_V0_RequestBusSynchronization</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RequestBusSynchronization</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_NodeId</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_NodeId</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_RxIndication</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RxIndication</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBSelectable.Master</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module shall generate a post-build-time
        configuration file UdpNm_PBcfg.h/c which includes all the variants specific post-build-time
        configurations (UdpNm_&lt;postBuildVariant&gt;[_*]_PBcfg.h/c).
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_PBcfg.h_8</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_PBcfg.c_4</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PB_V0_RequestBusSynchronization</srcid><srcstatus/><internalId>1491</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RequestBusSynchronization</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_NodeId</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_NodeId</srcid><srcstatus/><internalId>1494</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V0_RxIndication</srcid><srcstatus/><internalId>1495</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_RxIndication</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmPnInfo</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The length of the ((UdpNmPnInfoOffset + UdpNmPnInfoLength) - 1) shall not be greater then 63.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_2708</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_GEN_10004</srcid><srcstatus/><internalId>1361</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNmPnInfoOffset</srcid><srcstatus/><internalId>1499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.StateChangeNotification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If a message is needed to be sent on the bus, first state change notification shall
        be called and after that the message shall be sent on the bus.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1083</srcid><srcstatus/><internalId>1086</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_StateChangeNotification</srcid><srcstatus/><internalId>1427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SoAd_IfTransmit_Called_Once</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On a mainfunction cycle the SoAd_IfTransmit shall be called only once.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1645</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SoAd_IfTransmit_ImmediateNmTransmissions</srcid><srcstatus/><internalId>1502</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SoAd_IfTransmit_E_NOT_OK</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When Network Mode is entered from Bus Sleep Mode and passive mode is disabled
        (UdpNmPassiveModeEnabled = false) and the number of Immediate Nm messages configured
        is greater than zero (UdpNmImmediateNmTransmissions &gt; 0), after entering in Repeat
        Message state, the number of Immediate Nm messages sent by UdpNm shall be equal
        with the number of immediate transmissions configured.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1680</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit</srcid><srcstatus/><internalId>1503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
          Service name      : UdpNm_NetworkGwEraRequest
          Syntax            : Std_ReturnType UdpNm_NetworkGwEraRequest(
                                  const NetworkHandleType nmChannelHandle  )
          Service ID[hex]   : 0xFE
          Sync/Async        : Asynchronous
          Reentrancy        : Reentrant (but not for the same NM-channel)
          Parameters(in)    : nmChannelHandle Identification of the NM-channel
          Parameters(inout) : None
          Parameters(out)   : None
          Return value      : Std_ReturnType
                                        E_OK: No error
                                        E_NOT_OK:Requesting of network has failed
          Description       : Request the network, since  ECU needs to communicate on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_NetworkRequest</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_581</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.NetworkRequest</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         The function call UdpNm_NetworkGwEraRequest shall request the network. I.e. the UdpNm
         module shall change network state to 'requested'.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_NetworkRequest</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_633</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.BusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from BusSleepMode
         due to UdpNm_NetworkGwEraRequest active wakeup bit shall not be set.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_BusSleepMode</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_473</srcid><srcstatus/><internalId>1055</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to UdpNm_NetworkGwEraRequest active wakeup bit shall not be set.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_PrepareBusSleepMode</srcid><srcstatus/><internalId>1393</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_474</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.BusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from BusSleepMode
         due to UdpNm_NetworkGwEraRequest and UdpNmImmediateNmTransmissions is greater than zero,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_BusSleepMode</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1108</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to UdpNm_NetworkGwEraRequest and UdpNmImmediateNmTransmissions is greater than zero,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_PrepareBusSleepMode</srcid><srcstatus/><internalId>1393</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1109</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to UdpNm_NetworkGwEraRequest and UdpNmImmediateRestartEnabled is set to true,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_NetworkGwEraRequest_UdpNmImmediateRestartEnabled_PrepareBusSleepMode</srcid><srcstatus/><internalId>1417</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1132</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from BusSleepMode
         due to PassiveStartup NetworkRequest sequence active wakeup bit shall not be set.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_BusSleepMode</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_475</srcid><srcstatus/><internalId>1057</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to PassiveStartup NetworkRequest sequence active wakeup bit shall not be set.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_PrepareBusSleepMode</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_476</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.BusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from BusSleepMode
         due to PassiveStartup NetworkRequest sequence and UdpNmImmediateNmTransmissions is greater than zero,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_BusSleepMode</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1110</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to PassiveStartup NetworkRequest sequence and UdpNmImmediateNmTransmissions is greater than zero,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_PrepareBusSleepMode</srcid><srcstatus/><internalId>1395</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1111</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         In case UdpNmActiveWakeupBitEnabled is set to true and Network Mode is entered from PrepareBusSleepMode
         due to PassiveStartup NetworkRequest sequence and UdpNmImmediateRestartEnabled is set to true,
         immediate messages shall be sent on the bus.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_UdpNmImmediateRestartEnabled_PrepareBusSleepMode</srcid><srcstatus/><internalId>1418</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1133</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
       <id>UdpNm.EB.EB_UDPNM_Define</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
         UdpNm shall define EB_UDPNM in order for Nm module to check if UdpNm module is provided by Elektrobit or not.
       </description>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_30005</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/UdpNm.h_33</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.ECUC_UdpNm_00029</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name                 UdpNmMsgCycleOffset {UDPNM_MSG_CYCLE_OFFSET}
        Description          Time offset in the periodic transmission node. It determines the start
                             delay of the transmission. &amp;lt; UDPNM_MSG_CYCLE_TIME This
                             parameter is only valid if UDPNM_PASSIVE_MODE_ENABLED is disabled.
        Multiplicity         1
        Type                 EcucFloatParamDef
        Range                0 .. 65.535
        Default value        --
        ConfigurationClass   Pre-compile time           X VARIANT-PRE-COMPILE
                             Link time                  X VARIANT-LINK-TIME
                             Post-build time            X VARIANT-POST-BUILD
        Scope / Dependency   scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_1865</srcid><srcstatus/><internalId>1241</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_111</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_PB_V0_MsgCycleOffset</srcid><srcstatus/><internalId>1497</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_PB_V1_MsgCycleOffset</srcid><srcstatus/><internalId>1498</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_0</srcid><srcstatus/><internalId>1517</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_1</srcid><srcstatus/><internalId>1518</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_2</srcid><srcstatus/><internalId>1519</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_3</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.SWS_UdpNm_00330</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In context of requirement UdpNm.ASR431.SWS_UdpNm_00330
        the retry shall be done on the next mainfunction only if the current state is
        Repeat Message State
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1703</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_6</srcid><srcstatus/><internalId>1523</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_NumberOf_SoAd_IfTransmit_7</srcid><srcstatus/><internalId>1524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmStateChangeNotification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In the context of state change notification if the current state is read it shall
        report the current state of the state machine
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_371</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_588</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_845</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1084</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1259</srcid><srcstatus/><internalId>1106</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_StateChangeNotification_0</srcid><srcstatus/><internalId>1403</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.InvalidPncId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error tracing is enabled (UDPNM_DEV_ERROR_DETECT is set to TRUE), and
        UdpNm_RequestSynchronizedPncShutdown is called with a value that is outside of range
        (8*UdpNmPnInfoOffset) to (8*(UdpNmPnInfoOffset + UdpNmPnInfoLength) - 1), then
        the UdpNm module shall report the error UDPNM_E_INVALID_FUNCTION_ARG.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2177</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_1</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.Multicore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is set to TRUE,and requests for synchronized PNC
        shutdown are sent from an NM partition, then the UdpNm module shall set for this message
        additionally the following data beneath the normal data:
          - Set the PNSR bit in the CBV to 1
          - If user data is enabled, fetch the available data (either from Com if
            UdpNmComUserDataSupport is enabled or from internal storage) and copy the data in
            the user data range of the NM-PDU
          - Write the PNC bit vector with respect to NmPncBitVectorOffset and NmPncBitVectorLength
            of the corresponding NM-channel by setting bits that corresponds to PNC IDs stored as
            pending request for a synchronized PNC shutdown to 1 and all other bits to 0

        Note: The UdpNm modul has to aggregate all PNCs which were indicated for a synchronized
              PNC shutdown and transfer the pncId’s to a byte array (PN C vit vector). Each bit
              (PNC bit) of the PN C vit vector represent a particular PNC. The byteIndex and
              bitindex within the PN Info range of PNC bit shall be determined as follows:
                  - byteIndex = (PncId div 8) - NmPncBitVectorOffset
                  - bitIndex = (PncId mod 8)
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_Multicore_1</srcid><srcstatus/><internalId>1544</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_196</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PnSyncShutdown.Nm_ForwardSynchronizedPncShutdown.Multicore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNmSynchronizedPncShutdownEnabled is TRUE, the PNI bit in the received NM-PDU is set
        to 1 and the PNSR bit is set to 1, UdpNm module shall extract the PNC bit vector from the
        received NM-PDU according to the partial network configuration (NmPncBitVectorOffset and
        NmPncBitVectorLength of the corresponding NM-channel) and forward the PNC bit vector to
        Nm module on the Nm partition.

        Note: PNSR Bit set to 1 is only possible if a synchronized PNC shutdown is requested.
        A synchronized PNC shutdown shall be handled across the PN topology. Therefore, it is
        assumed that either all coordinators have the synchronized PNC shutdown enabled or all
        coordinators have the synchronized PNC shutdown disabled. A mixture of both would lead to
        an unsynchronized PNC shutdown, which has to be avoided.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_SynchronizedPncShutdown_Multicore_2</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2959</srcid><srcstatus/><internalId>1030</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Multi core per channel support is enabled if UdpNmMultiCoreSupport is set to FALSE
        and there is a channel that has the UdpNmComMNetworkHandleRef configuration parameter
        reference with a ComMChannelPartitionRef configuration parameter set.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_MasterPNCPartition_MacroCheck_COMPILE</srcid><srcstatus/><internalId>1339</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_NoMasterPNCPartition_MacroCheck_COMPILE</srcid><srcstatus/><internalId>1341</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_Valid_Channel_Partition_Generation_Check</srcid><srcstatus/><internalId>1368</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_Valid_Os_Partition_References_Generation_Check</srcid><srcstatus/><internalId>1369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_124</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.ChannelPartition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Each UdpNm channel shall have a partition associated to it by configuration parameter
        ComMChannelPartitionRef of ComM channel referenced UdpNmComMNetworkHandleRef.
      </description>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB.Dsn.Algorithm.ChannelPartition</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.AggregatePartition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        A partition defined by configuration parameter ComMMasterPNCEcuCPartitionRef of ComM
        shall handle data sent from other partitions if UdpNmPnEiraCalcEnabled is set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_Valid_PNC_Partition_Reference_Generation_Check</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB.Dsn.Algorithm.AggregatePartition</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_Main</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Service name    : UdpNm_MainFunction_Main
        Syntax          : void UdpNm_MainFunction_Main( void )
        Service ID[hex] : 0xFF
        Timing          : FIXED_CYCLIC
        Description     : Main function of the UdpNm which processes the handling of PN timers,
                          and PN EIRA information algorithm described in the other requirements.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_MasterPNCPartition_ApiCalls_COMPILE</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_EIRA_disabled_ERA_enabled_Channel_Multicore</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_76</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_Main.Enable</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Function UdpNm_MainFunction_Main shall be present only if multi core per channel support
        is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_67</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_EIRA_disabled_ERA_enabled_Channel_Multicore</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_Main.Partition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Function UdpNm_MainFunction_Main shall reside on partition defined by configuration
        parameter ComMMasterPNCEcuCPartitionRef of ComM.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_84</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_X</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Service name    : UdpNm_1_ChOsApp_X_MainFunction_Y
        Syntax          : void UdpNm_1_ChOsApp_X_MainFunction_Y(  void  )
        Service ID[hex] : 0xFF
        Timing          : FIXED_CYCLIC
        Description     : When multicore per channel is enabled each channel's instance shall
                          provide a main function to handle that channel's state machine.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_MasterPNCPartition_ApiCalls_COMPILE</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_NoMasterPNCPartition_ApiCalls_COMPILE</srcid><srcstatus/><internalId>1340</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_Channel_Multicore</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_State_Transitions_PassiveMode_Channel_Multicore</srcid><srcstatus/><internalId>1570</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_EIRA_disabled_ERA_enabled_Channel_Multicore</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_114</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm.EB.UdpNm_MainFunction_X.Name</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_X.Name</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Each channel amin function shall be constructed by appending to 
        "UdpNm_1_ChOsApp_" the channel appilication ID, and "_MainFunction_", and
        UdpNmRxPduId configuration parameter.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_115</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_X.Enable</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Functions UdpNm_MainFunction_X shall be present only if multi core per channel support is
        enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_68</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_EIRA_disabled_ERA_enabled_Channel_Multicore</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNm_MainFunction_X.Partition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        Function UdpNm_MainFunction_X shall reside on partition defined by configuration
        parameter ComMChannelPartitionRef of a ComM channel, where X is the UdpNmRxPduId
        of UdpNm channel that references that ComM channel through UdpNmComMNetworkHandleRef.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_190</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Sender</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If multi-core per channel support is enabled, then a sender service shall be defined for
        each channel to send EIRA data from that ChannelPartition to the AggregatePartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_202</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Sender.Partition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        The sender service of one channel shall reside on that channel's ChannelPartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_203</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Sender.Rx</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        For each channel on receiving EIRA data, that data shall also be sent by that channel
        sender service to the AggregatePartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_204</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        When EIRA calculation is enabled EIRA data shall be sent by a channel's sender service to
        the AggregatePartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2132</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_Channel_Multicore</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Receiver</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If multi core per channel support is enabled then a receiver service to receive EIRA data
        from each ChannelPartition to the AggregatePartition shall be defined for each channel.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_158</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Channel_Multicore_MasterPNCPartition_ApiCalls_COMPILE</srcid><srcstatus/><internalId>1338</internalId></linkedfrom><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore</srcid><srcstatus/><internalId>1567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Partition</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        All channel receiver services shall reside on the AggregatePartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_96</srcid><srcstatus/><internalId>1310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Schedule</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        All channel receiver services shall be triggered by RTE on sending data from
        ChannelPartitions to AggregatePartition.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_97</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Aggregate</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        All channel receiver services shall aggregate EIRA data received in a single EIRA buffer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_MainFunction.c_168</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.ChannelApplicationId</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        At compile time, if multi core per channel support is enabled, each UdpNm channel shall
        have associated the Os application id of the application that has OsAppEcucPartitionRef
        referencing the same partition as referenced by ComMChannelPartitionRef of that channel.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Cfg.c_185</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDPassiveStartUp</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_PassiveStartUp is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_469</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_NetworkRequest is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_547</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkGwEraRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_NetworkGwEraRequest is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_616</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRelease</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_NetworkRelease is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_686</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDDisableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_DisableCommunication is called in an os application with a
        different id then the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_759</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDEnableCommunication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_EnableCommunication is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_842</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDSetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_SetUserData is called in an os application with a
        different id then the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_937</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_EIRA_Calc_Disabled_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetUserData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_GetUserData is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1014</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_GetNodeIdentifier is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1098</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetLocalNodeIdentifier</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_GetLocalNodeIdentifier is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1188</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRepeatMessageRequest</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_RepeatMessageRequest is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1273</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetPduData</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_GetPduData is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1369</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetState</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_GetState is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1453</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDCheckRemoteSleepIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_CheckRemoteSleepIndication is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1662</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDTxConfirmation</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_TxConfirmation is called in an os application with a
        different id then the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1814</srcid><srcstatus/><internalId>967</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRxIndication</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_RxIndication is called in an os application with a
        different id than the channel's configured application id, then the UdpNm module shall
        report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_1926</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRequestSynchronizedPncShutdown</id>
      <status>approved</status><source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled, and if multi core per channel support is
        enabled, and function UdpNm_RequestSynchronizedPncShutdown is called in an os application
        with a different id than the channel's configured application id, then the UdpNm module
        shall report the error code UDPNM_E_INVALID_OSAPPLICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2185</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_DetCheck_ApplicationID_Channel_Multicore</srcid><srcstatus/><internalId>1572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name:               UdpNmMultiCoreUseSingleCS
        Parent Container    UdpNmGeneral
        Description:        In case UdpNmMultiCoreUseSingleCS is set to TRUE, single client server
                            shall be used for UdpNm_PassiveStartup, UdpNm_NetworkRequest and
                            UdpNm_NetworkRelease.
        Multiplicity:       1
        Type:               EcucBooleanParamDef
        Default value:      false
        ConfigurationClass: Pre-compile time X All variants
                            Link time        -
                            Post-build time  -
        Dependency:         dependency: Parameter shall be set to false if UdpNmMultiCoreSupport is
                                        set to false.
                                        Parameter shall have the same value as NmMultiCoreSupport.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1556</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_116</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_65</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name      : UdpNm_MultipleNetworkOperations
        Syntax            : Std_ReturnType  UdpNm_MultipleNetworkOperations(
                                NetworkHandleType nmChannelHandle, uint8 operation)

        Service ID[hex]   : -
        Sync/Async        : Asynchronous
        Reentrancy        : Reentrant(but not for the same NM-Channel)
        Parameters (in)   : nmChannelHandle  Identification of the NM-channel
                            operation   Identification of operation to be executed
                                        (0 UdpNm_PassiveStartUp, 1 UdpNm_NetworkRequest,
                                         2 UdpNm_NetworkRelease, 3 UdpNm_NetworkGwEraRequest,)
        Parameters(inout) : None
        Parameters(out)   : None
        Return value      : Std_ReturnType
                                 E_OK: No error
                                 E_NOT_OK: operation failed.
        Description       : In context of multicore, ensures handling order of UdpNm_PassiveStartUp,
                            UdpNm_NetworkRequest, UdpNm_NetworkRelease, UdpNm_NetworkGwEraRequest is
                            kept as there are received by being the single client server interface.
                            Executes one of the operation selected (UdpNm_PassiveStartUp,
                            UdpNm_NetworkRequest, UdpNm_NetworkRelease, UdpNm_NetworkGwEraRequest).
        Available via     : UdpNm.h
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_01</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1555</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1556</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2980</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations.Available</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        UdpNm_MultipleNetworkOperations api shall be available only if UdpNmMultiCoreUseSingleCS
        parameter is set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2978</srcid><srcstatus/><internalId>1032</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.PassiveStartup</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_MultipleNetworkOperations is called with operation parameter set to 0 then
        UdpNm_PassiveStartUp shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_01</srcid><srcstatus/><internalId>1554</internalId></linkedfrom><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_04</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2988</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_MultipleNetworkOperations is called with operation parameter set to 1 then
        UdpNm_NetworkRequest shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2994</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRelease</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_MultipleNetworkOperations is called with operation parameter set to 2 then
        UdpNm_NetworkRelease shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_02</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_2999</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkGwEraRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If UdpNm_MultipleNetworkOperations is called with operation parameter set to a
        different value than 0,1,2 then UdpNm_NetworkGwEraRequest shall be executed.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_UdpNm_MultipleNetworkOperations_03</srcid><srcstatus/><internalId>1556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_3004</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name:      UdpNm_IsValidConfig
        Syntax:            Std_ReturnType UdpNm_IsValidConfig( void* ConfigPtr )
        Sync/Async:        Synchronous
        Reentrancy:        Reentrant
        Parameters (in):   ConfigPtr, post build configuration manager configuration.
        Parameters (inout):None
        Parameters (out):  None
        Return value:      Returns E_OK if the UdpNm configuration is valid otherwise E_NOT_OK. A
                           null pointer is interpreted as invalid configuration.
        Description:       This function determines if the UdpNm configuration is valid. This
                           function can be called also before the UdpNm is initialized. No error reporting
                           is necessary within this function.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_252</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro UDPNM_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro UDPNM_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_265</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value CfgSignature.
        - the UdpNm_Cfg.h file shall contain the macro UDPNM_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_136</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value PublicInfoSignature.
        - the UdpNm_Cfg.h file shall contain the macro UDPNM_PUBLIC_INFO_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_142</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value LcfgSignature.
        - the link time configuration shall contain the uint32 value UdpNm_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/PostBuild#Current_Post-Build_Signature
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/UdpNm_Lcfg.c_25</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the UdpNm post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/PostBuild#Current_Post-Build_Signature
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/UdpNm.xgen_81</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        UDPNM_PBCFGM_SUPPORT_ENABLED defined in the file UdpNm_Cfg.h.
        If the PbcfgM configuration references the UdpNm configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_148</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>UdpNm_Test_IsValidConfig</srcid><srcstatus/><internalId>1623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the UdpNm is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/UdpNm.xdm.m4_200</srcid><srcstatus/><internalId>1149</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_ComTest_NoPbCfg</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The UdpNm_Init() function must be extended to enable the PbcgfM features.
        The initialization function shall obtain the UdpNm configuration
        from the PbcfgM if the PbcfgM support is enabled within this UdpNm
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        UdpNm_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return without initialization of the UdpNm.
        In the case error reporting is enabled and no valid configuration can be obtained
        it shall report UDPNM_E_INIT_FAILED to the Development Error Tracer.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_315</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_334</srcid><srcstatus/><internalId>838</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/UdpNm.c.m4_345</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_Init_NULL_PTR</srcid><srcstatus/><internalId>1428</internalId></linkedfrom><linkedfrom><srcid>UdpNm_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>1624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The UdpNm shall provide the following macros in the header file
        UdpNm_Cfg.h:
        - UDPNM_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/UdpNm_Cfg.h.m4_155</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled UdpNm shall define the following macros in
        UdpNm_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. M4_MOD_NAME_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. M4_MOD_NAME_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>UdpNm_Test_PBcfgM_Off</srcid><srcstatus/><internalId>1352</internalId></linkedfrom><linkedfrom><srcid>UdpNm_Test_PBcfgM_On</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_DBGINST_001</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_DBGINST_001</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_DBGINST_001</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_DBGINST_001</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>

    <specobject>
      <id>UdpNm.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_DBGINST_001</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.EB.PDULENGTHTYPE001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The UdpNm module shall support the following values of PduLengthType:
        [UINT32, UINT16]
      </description>
      <verifycrit>
        Use case 1 - Modules not capable of handling more than 64 kbytes of data:
          - use PduLengthType value 'UINT32' with conformance test
          - verify successful test run, verify absence of metric violations
            (MISRA-C:2012, static code analysis, compiler warnings)
        Use case 2 - Modules capable of handling more than 64 kbytes of data:
          - use conformance test which handles more than 64 kbytes of data
          - apply "boundary" tests using data length of:
            [&lt;&lt;65535,65535, 65536, &gt;131072][bytes]
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TC_UDPNM_RxIndication</srcid><srcstatus/><internalId>1615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>UdpNm.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_UdpNm_VerifyCodeStub</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.UdpNm.UdpNm_SoAdIfTxConfirmationDet</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00229.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmRepeatMsgIndEnabledConfigurationClass</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmMainFunctionPeriodRange</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmUserDataTxPdu</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmComUserDataSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmSoAdIfRxIndication</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.NmPdusTransmission</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.Null_Pointer_UdpNm_Init</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNm_Transmit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmCarWakeUpBytePosition</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.LinkTimeSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.Nm_TxTimeoutException</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.DemSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.CoordinatorSynchronization</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00364</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmTimeoutTime</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmMsgCycleOffset</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>722</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmPnFilterMaskByteIndex</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmTriggerTransmit</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00377</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00378</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmStayInPrepareBusSleep</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmNodeIdMultiplicity</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.PNLearning</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00469</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00471</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.DevelopmentErrorNames</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>856</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.PartlyImplementedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_91006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.PduPositionType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.PNCSynchronizedShutdown</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00475</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00478</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00480</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.NetworkTimeoutError</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00465</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00466</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00467</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmWaitBusSleepTimeMultiplicity</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>968</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNm_EnableCommunication</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>988</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNm_DisableCommunication</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1008</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>dev.UdpNm.UdpNmSoAdIfTxConfirmationResultParameter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1028</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00379</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
  </specobjects>
    <specobjects doctype="dsn">
    <specobject>
      <id>UdpNm.EB.Dsn.Algorithm.ChannelPartition</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/project/design/basic_software/algorithm_view.xml</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>
          If multicore per channel is enabled than each channel shall have configured 
          a partition on which its operations are run.
        </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Macros.m_48</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Macros.m_16</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.ChannelPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>UdpNm.EB.Dsn.Algorithm.AggregatePartition</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/doc/project/design/basic_software/algorithm_view.xml</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>
          A partition shall be set that aggregates PN EIRA information if multicore 
          per channel is enabled and PN EIRA information is generated.
        </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/UdpNm_Macros.m_61</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/UdpNm_Macros.m_29</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.AggregatePartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00044.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackHeaderName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.PbCfgM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_155</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_183</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_204</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_238</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_480</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>480</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.UdpNmTxConfirmationPduId.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Cfg.h.m4_523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Cfg.h.m4</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.UdpNmTxUserDataPduId.NoShortName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_Lcfg.h.m4_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_Lcfg.h.m4</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PostBuildRamSize_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/UdpNm_PBcfg.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/include/UdpNm_PBcfg.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.ChannelApplicationId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Cfg.c_287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Cfg.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_Lcfg.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_Lcfg.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X.Name</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Aggregate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_MainFunction.c_196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_MainFunction.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/src/UdpNm_PBcfg.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate/src/UdpNm_PBcfg.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduR_UdpNmUserDataRxId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PostBuildRamSize_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRefNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRefNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRefNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Checks.m_239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Checks.m</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Macros.m_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Macros.m</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Dsn.Algorithm.ChannelPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/UdpNm_Macros.m_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_macros/UdpNm_Macros.m</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Dsn.Algorithm.AggregatePartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Macros.m_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Macros.m</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Dsn.Algorithm.ChannelPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Macros.m_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Macros.m</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Dsn.Algorithm.AggregatePartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/UdpNm.h_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm.h</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00044.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm.h_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm.h</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.EB_UDPNM_Define</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00018.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00018.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00018.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00018.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00018.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00163.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Api.h_653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Api.h</sourcefile>
      <sourceline>653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/UdpNm_Cbk.h_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Cbk.h</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00044.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Cbk.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Cbk.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Cbk.h_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Cbk.h</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_116</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_362</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_382</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_402</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_685</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_741</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/UdpNm_Int.h_761</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/include/UdpNm_Int.h</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_63</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00083.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.IsValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_290</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_315</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>315</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_340</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>340</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PostBuildRamSize_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00061</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_425</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>425</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00343</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDPassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00128.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00128.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_530</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>530</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_540</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>540</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_600</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>600</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_672</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_679</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_686</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_700</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>700</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_DisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDDisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SWS_UdpNm_00177.Implicit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_EnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_825</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>825</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDEnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00312</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_898</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>898</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_915</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>915</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_930</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>930</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_937</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>937</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_975</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>975</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_992</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>992</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1014</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1014</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.SetGetUserDataNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1075</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1075</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1078</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1078</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1086</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1086</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1092</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1092</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1098</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1098</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1188</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallback_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1273</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1351</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1351</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1453</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1453</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_GetVersionInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1507</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00163.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1568</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1568</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1652</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1652</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDCheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1692</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1692</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.MainFunction.InitCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1736</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1736</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00372.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1751</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00354</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00353</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00372.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1775</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1775</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1800</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1800</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00229.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1825</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1825</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRCallsNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1828</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1828</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1854</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1854</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1902</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1902</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_SoAdIfRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1905</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1910</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1910</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1926</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1926</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1948</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1948</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnEnabled_FALSE_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1970</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00353</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_1990</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>1990</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00353</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2039</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2039</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2088</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2088</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRCallsNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2117</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2117</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnEnabled_FALSE_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00196.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.InvalidPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2198</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2198</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00474</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00373</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2381</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00328</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2399</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2399</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.PduRCallsNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00163.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2442</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2442</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2448</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00361</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2544</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2544</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00350</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2564</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2564</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00361</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2668</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2668</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2693</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2693</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2774</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2774</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2829</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2829</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2848</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2848</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.Nm_ForwardSynchronizedPncShutdown.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2966</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2966</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations.Available</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2980</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2980</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2988</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2988</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_2999</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>2999</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm.c.m4_3004</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm.c.m4</sourcefile>
      <sourceline>3004</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/UdpNm_Hsm.c_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_Hsm.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00082.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_Hsm.c_409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_Hsm.c</sourcefile>
      <sourceline>409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.EventQueue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00083.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00083.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmTimeoutTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_381</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>381</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_402</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_475</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_483</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_503</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>503</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_550</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>550</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_604</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00152.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_764</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>764</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00151.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_768</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>768</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00108.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_816</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>816</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_951</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>951</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1016</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00152.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00151.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1064</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1064</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1083</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1083</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1097</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1097</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1098</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1098</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1106</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1107</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1107</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1159</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1159</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00108.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00367</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1486</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1486</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallback_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1541</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1541</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1561</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1561</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1603</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1603</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1606</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1606</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1624</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SoAd_IfTransmit_Called_Once</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1667</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1667</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1680</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1680</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SoAd_IfTransmit_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SWS_UdpNm_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/UdpNm_HsmUdpNmFnct.c_1717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/src/UdpNm_HsmUdpNmFnct.c</sourcefile>
      <sourceline>1717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_44</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmPnSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_152</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmASR412APICompatibility</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmMaxPn</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmBusSynchronizationEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComControlEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_356</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackHeaderName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComUserDataSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmCoordinatorSyncSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_483</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmDevErrorDetect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_514</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>514</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateRestartEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNumberOfChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPostBuildRamSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPassiveModeEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduRxIndicationEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_730</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>730</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraCalcEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_767</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnResetTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00163.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_814</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>814</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmStateChangeIndEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmUserDataEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_907</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>907</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmVersionInfoApi</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEiraRxNSduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnShutdownMessageRetransmissionDuration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1013</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1013</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1029</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnSyncShutdownErrorReactionEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1044</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1044</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1062</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1062</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmChannelConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1075</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1075</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMsgIndEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeDetectionEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmActiveWakeupBitEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmAllNmMessagesKeepAwake</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1334</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1334</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1402</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1402</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1419</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1419</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1491</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1491</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.AUTOSAR403PB.UdpNmPnEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1503</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1503</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.DependencyCheck.UdpNmPnEnabled.ComUserDataSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1534</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1534</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraCalcEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1573</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1573</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnHandleMultipleNetworkRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00363</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmSynchronizedPncShutdownEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1639</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1639</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnEraRxNSduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmCycleTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1711</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1711</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmImmediateNmTransmissions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1768</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1768</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1811</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1811</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRetryFirstMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1828</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1828</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1852</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1852</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1865</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1865</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1931</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1931</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmMsgCycleTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1973</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1973</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmNodeId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_1994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>1994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduCbvPosition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ActiveWakeUpBitCBV.dependencyCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2080</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPduNidPosition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2087</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2087</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRemoteSleepIndTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRepeatMessageTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTimeoutTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2278</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2278</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmWaitBusSleepTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmComMNetworkHandleRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2330</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2353</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2353</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRxPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2412</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2412</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2414</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2414</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmRxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxConfirmationPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2515</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2515</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.AUTOSAR403PB.UdpNmTxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmTxPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2539</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2539</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2560</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2560</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.UdpNmUserDataTxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2568</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2568</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmTxUserDataPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.RFC_54397.UdpNmTxUserDataPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxPdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.UdpNmRxUserDataPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmRxUserDataPduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UserDataRef.PnEiraRxSduRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2704</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2704</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2708</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2708</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2729</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2729</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2755</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2755</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnInfoOffset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2791</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2791</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2796</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2796</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.ECUC_UdpNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2811</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2811</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteIndex</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.EB.Config.IMPLEMENTATIONCONFIGCLASS.UdpNmPnFilterMaskByteValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/UdpNm.xdm.m4_2847</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/config/UdpNm.xdm.m4</sourcefile>
      <sourceline>2847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.REQPROD_270433_1.RFC_58899.UdpNmPnFilterMaskByteValue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main.Partition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_96</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Partition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver.Schedule</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X.Partition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Partition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4_204</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_swcd/swcd/UdpNm_Bswmd.arxml.m4</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Format.VCC-62</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_77</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Impl.Hash</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmPnHandleMultipleNetworkRequests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/UdpNm.xgen_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/src/Autosar/generate_var/xgen/UdpNm.xgen</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Format.C</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/build/reqm/common_req/UdpNm_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(UdpNm.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30005</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_1/source/application/test_config.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with only
      one channel and all optional features and APIs disabled.
    - Verify that Rte generates SchM stubs, Main_Function and Exclusive
      areas required by UdpNm module.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'false'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmActiveWakeupBitEnabled" is set to 'false'
      - "UdpNmSynchronizedPncShutdownEnabled" is set to 'false'
      - Only one channel is configured
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetUserData()
      - UdpNm_RequestBusSynchronization()
      - UdpNm_CheckRemoteSleepIndication()
      - UdpNm_GetVersionInfo()
      - UdpNm_DisableCommunication()
      - UdpNm_EnableCommunication()
      - UdpNm_Transmit()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.EB_UDPNM_Define</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30011</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_10/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Chek if every API can be called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30010</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_10/source/application/test_config.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      some of the features are enabled and some disabled and more than one
      channels are present.
    - Check that symbolic name macros are generated correctly.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'true'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'true'
      - "UdpNmNodeDetectionEnabled" is set to 'true'
      - "UdpNmBusSynchronizationEnabled" is set to 'true'
      - "UdpNmRepeatMsgIndEnabled" is set to 'true'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'true'
      - "UdpNmPnEiraCalcEnabled" is set to 'true'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmActiveWakeupBitEnabled" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetVersionInfo()
      - UdpNm_TxConfirmation()
  
Test Execution: None.
Test Input: None.
Test Output: 
    UdpNmConf_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmRxPdu_1           1U
    UdpNmConf_UdpNmChannelConfig_0_UdpNmTxPdu          10U
    UdpNmConf_UdpNmChannelConfig_UdpNmTxPdu_1          11U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_0   0U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_1   1U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_PnEnabled_FALSE_COMPILE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_11/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Chek if every API can be called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_PnEnabled_FALSE_COMPILE_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_11/source/application/test_config.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      some of the features are enabled and some disabled and more than one
      channels are present.
    - Check that symbolic name macros are generated correctly.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'true'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'true'
      - "UdpNmNodeDetectionEnabled" is set to 'true'
      - "UdpNmBusSynchronizationEnabled" is set to 'true'
      - "UdpNmRepeatMsgIndEnabled" is set to 'true'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'true'
      - "UdpNmPnEiraCalcEnabled" is set to 'true'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmActiveWakeupBitEnabled" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetVersionInfo()
      - UdpNm_TxConfirmation()
  
Test Execution: None.
Test Input: None.
Test Output: 
    UdpNmConf_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmRxPdu_1           1U
    UdpNmConf_UdpNmChannelConfig_0_UdpNmTxPdu          10U
    UdpNmConf_UdpNmChannelConfig_UdpNmTxPdu_1          11U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_0   0U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_1   1U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_Adaptive_Compile</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_12/source/application/UdpNm_ComTest_12.c</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that configuration and Pn information can be configured at runtime
  
Test Object: None.
Test Precondition: 
    Configuration parameter UDPNM_ADAPTIVE shall be set to STD_ON
  
Test Execution: 
    01: Check that channel specific and pn info can be configured at runtime
        VP(UdpNm.EB.AdaptiveChannelConfig, UdpNm.EB.AdaptivePnInfo)
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.AdaptiveChannelConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.AdaptivePnInfo</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_ComUserDataPassiveModeApiCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_13/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Chek if every API can be called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_ComUserDataPassiveModeParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_13/source/application/test_config.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that in case ComUserData and Passive mode is enabled
    user does not need to configure UserDataTx
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      VP(UdpNm.ASR413.ECUC_UdpNm_00056): - "UdpNmUserDataTxPdu" is not configured
      VP(UdpNm.ECUC_UdpNm_00010): - "UdpNmPassiveModeEnabled" is set to 'true'
      VP(UdpNm.ASR413.ECUC_UdpNm_00055): - "UdpNmComUserDataSupport" is set to 'true'
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_SynchronizedPncShutdown_Compile_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_14/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Chek if every UdpNm_RequestSynchronizedPncShutdown API can be called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_SynchronizedPncShutdown_Compile_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_14/source/application/test_config.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with channels
      configured to support PN synchronize shutdown functionality 
      (UdpNmSynchronizedPncShutdownEnabled).
  
Test Object: None.
Test Precondition: 
    Pn synchronize shutdown configuration parameters are set.
  
Test Execution: None.
Test Input: 
    pn sync shutdown configuration parameters set
  
Test Output: 
    executable file
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_MasterPNCPartition_ApiCalls_COMPILE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_15_multicore/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that channel main functions are generated when multicore per channel 
    is configured with PNC support.
  
Test Object: None.
Test Precondition: 
    ComMMasterPNCEcuCPartitionRef configuration parameter is set in ComM
    ComMChannelPartitionRef references are set in ComM
  
Test Execution: 
  
Test Input: 
    UdpNm multicore channel conditions are enabled.
    Channels assigned to two different partitions.
    Function calls for each channel and main partition generated functions.
  
Test Output: 
    Executable file.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_MasterPNCPartition_MacroCheck_COMPILE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_15_multicore/source/application/test_config.h</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check multicore per channel is enabled.
  
Test Object: None.
Test Precondition: 
    ComMMasterPNCEcuCPartitionRef configuration parameter is set in ComM
    ComMChannelPartitionRef references are set in ComM
  
Test Execution: 
  
Test Input: 
    UdpNm multicore channel support is enabled.
    Channels assigned to two different partitions.
    ComMMasterPNCEcuCPartitionRef configuration parameter is set in ComM
  
Test Output: 
    Executable file.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_NoMasterPNCPartition_ApiCalls_COMPILE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_16_multicore/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that channel main functions are generated when multicore per channel 
    is configured without EIRA support.
  
Test Object: None.
Test Precondition: 
    Channel 0 is assigned to TST_APPL_ID_0 and channel 1 is assigned to TST_APPL_ID_1
    ComMMasterPNCEcuCPartitionRef configuration parameter is disabled in ComM
  
Test Execution: 
  
Test Input: 
    UdpNm multicore channel conditions are enabled.
    Channels assigned to two different partitions.
    Function calls for each channel.
  
Test Output: 
    Executable file.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_NoMasterPNCPartition_MacroCheck_COMPILE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_16_multicore/source/application/test_config.h</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check multicore per channel is enabled.
  
Test Object: None.
Test Precondition: 
    ComMMasterPNCEcuCPartitionRef configuration parameter is set in ComM
    ComMChannelPartitionRef references are set in ComM
  
Test Execution: 
  
Test Input: 
    UdpNm multicore channel support is enabled.
    Channels assigned to two different partitions.
    ComMMasterPNCEcuCPartitionRef configuration parameter is set in ComM
  
Test Output: 
    Executable file.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30006</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_2/source/application/test_config.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where some of
      the features are enabled and some disabled and only a single channel is present.
  
Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30007</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_3/source/application/test_config.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration with all
      optional features disabled for more than one channels are present.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'true'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmPnEraCalcEnabled" is set to 'false'
      - "UdpNmActiveWakeupBitEnabled" is set to 'false'
      - "UdpNmSynchronizedPncShutdownEnabled" is set to 'false'
      - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetUserData()
      - UdpNm_RequestBusSynchronization()
      - UdpNm_CheckRemoteSleepIndication()
      - UdpNm_GetVersionInfo()
      - UdpNm_DisableCommunication()
      - UdpNm_EnableCommunication()
      - UdpNm_Transmit()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30008</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_4/source/application/test_config.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      most of the features are disabled and some are enabled and more
      than one channels are present.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'true'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'true'
      - "UdpNmPduRxIndicationEnabled" is set to 'true'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'true'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmPnEnabled" is set to 'true'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmActiveWakeupBitEnabled" is set to 'false'
      - "UdpNmSynchronizedPncShutdownEnabled" is set to 'false'
      - Two channels are configured
      - UdpNmTimeOutTime is configured as non-multiple of UdpNmMsgCycleTime
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_NetworkRelease()
      - UdpNm_NetworkRequest()
      - UdpNm_SetUserData()
      - UdpNm_RequestBusSynchronization()
      - UdpNm_CheckRemoteSleepIndication()
      - UdpNm_DisableCommunication()
      - UdpNm_EnableCommunication()
      - UdpNm_Transmit()
      - UdpNm_TxConfirmation()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30009</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_5/source/application/test_config.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      some of the features are enabled and some disabled and more than one
      channels are present.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'true'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'true'
      - "UdpNmNodeDetectionEnabled" is set to 'true'
      - "UdpNmBusSynchronizationEnabled" is set to 'true'
      - "UdpNmRepeatMsgIndEnabled" is set to 'true'
      - "UdpNmDevErrorDetect" is set to 'true'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmPnEraCalcEnabled" is set to 'false'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmActiveWakeupBitEnabled" is set to 'true'
      - Two channels are configured
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetVersionInfo()
      - UdpNm_TxConfirmation()
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00312</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.ECUC_UdpNm_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30003</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_6/source/application/UdpNm_ComTest.c</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Chek if every API can be called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_30002</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_6/source/application/test_config.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      some of the features are enabled and some disabled and more than one
      channels are present.
    - Check that symbolic name macros are generated correctly.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'true'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'true'
      - "UdpNmNodeDetectionEnabled" is set to 'true'
      - "UdpNmBusSynchronizationEnabled" is set to 'true'
      - "UdpNmRepeatMsgIndEnabled" is set to 'true'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'true'
      - "UdpNmPnEiraCalcEnabled" is set to 'true'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmActiveWakeupBitEnabled" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_GetVersionInfo()
      - UdpNm_TxConfirmation()
  
Test Execution: None.
Test Input: None.
Test Output: 
    UdpNmConf_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmRxPdu_1           1U
    UdpNmConf_UdpNmChannelConfig_0_UdpNmTxPdu          10U
    UdpNmConf_UdpNmChannelConfig_UdpNmTxPdu_1          11U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_0   0U
    UdpNmConf_UdpNmChannelConfig_UdpNmUserDataTxPdu_1   1U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_300011</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_7/source/application/test_config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      all the features except UdpNmComUserDataSupport are disabled and
      only one channel is configured.
    - Verify the generation of symbolic name macros when
      UDPNM_PROVIDE_LEGACY_SYMBOLIC_NAMES is defined, that legacy
      symbols names are not provided by UdpNm.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'false'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmComUserDataSupport" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_RequestBusSynchronization()
      - UdpNm_CheckRemoteSleepIndication()
      - UdpNm_GetVersionInfo()
      - UdpNm_DisableCommunication()
      - UdpNm_EnableCommunication()
  
Test Execution: None.
Test Input: 
  
Test Output: 
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmTxPdu           10U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmUserDataTxPdu   0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_80001</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_8/source/application/test_config.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that
     - Multiple RxPdus are accepted for a channel.
     - Symbolic names are generated correctly in case multiple RX PDUs are configured for a channel.
  
Test Object: None.
Test Precondition:  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SymbolicName.ecuc_sws_2108_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_300012</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_9/source/application/test_config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled for the configuration where
      all the features except UdpNmComUserDataSupport are disabled and
      only one channel is configured.
    - Verify the generation of symbolic name macros when
      UDPNM_PROVIDE_LEGACY_SYMBOLIC_NAMES is defined, that legacy
      symbols names are not provided by UdpNm.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'false'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmComUserDataSupport" is set to 'true'
    * Misc:
      To ensure that APIs which shall not be provided by the UdpNm module
      for this configuration are actually not provided,
      dummy implementations are provided for the following API functions:
      - UdpNm_SetUserData()
      - UdpNm_RequestBusSynchronization()
      - UdpNm_CheckRemoteSleepIndication()
      - UdpNm_GetVersionInfo()
      - UdpNm_DisableCommunication()
      - UdpNm_EnableCommunication()
  
Test Execution: None.
Test Input: 
  
Test Output: 
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmTxPdu           10U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmUserDataTxPdu   0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>UdpNm_ComTest_NoPbCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_NoPbCfg/source/application/ComTest_NoPBcfg.c.m4</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test shall prove that that the UdpNm also compiles without any post build information
  
Test Object: 
    Compile test
  
Test Precondition: 
        * The merged make file holds a rule which removes all post build files after generation
  
Test Execution: 
        VP(UdpNm.EB.PBCFGM108): - The test run is successful when the UdpNm compiles under
        sticking to the precondition.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>UdpNm_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_PbcfgMOff/source/application/Tests.c.m4</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then UdpNm_PBcfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      UDPNM_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module UdpNm (or no config exists)
      - Include UdpNm_PBcfg.c only for step 01 and 02.
      - Include UdpNm_Cfg.h for step 03.
    
Test Execution: 
        01: VP(UdpNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(UdpNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            UdpNm_ConfigLayoutType and UdpNm_ConfigLayout respectively.
        03: VP (UdpNm.EB.PBCFGM107):
            Verify that UDPNM_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>UdpNm_Test_UdpNmNodeIdCallback_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_PbcfgMOff/source/application/Tests.c.m4</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Check if UDPNM_NODEID_CALLBACK_ENABLED is set to STD_OFF and UDPNM_NODEID_CALLBACK_NAME is
      not defined if UdpNmNodeIdCallback is disabled.
    
Test Object: None.
Test Precondition: 
        - UdpNmNodeIdCallback is disabled
    
Test Execution: 
      01: Check if UDPNM_NODEID_CALLBACK_ENABLED macro is set to STD_OFF.
      02: Check if UDPNM_NODEID_CALLBACK_NAME macro is not generated.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>UdpNm_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_PbcfgMOn/source/application/Tests.c.m4</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that UDPNM_RELOCATABLE_CFG_ENABLE is defined
      in the header file UdpNm_Cfg.h.
      2.)
      Verify that the macro UDPNM_CONST_CONFIG_LAYOUT_TYPE is defined in UdpNm_PBcfg.h.
    
Test Object: None.
Test Precondition: 
        - UDPNM_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (UdpNm.EB.PbcfgM_General_3):
            Verify that UDPNM_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        02: Include UdpNm_PBcfg.c.
        03: VP(UdpNm.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>UdpNm_Test_UdpNmNodeIdCallback_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_PbcfgMOn/source/application/Tests.c.m4</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Check if UDPNM_NODEID_CALLBACK_ENABLED is set to STD_ON and UDPNM_NODEID_CALLBACK_NAME
      is defined if UdpNmNodeIdCallback is enabled.
    
Test Object: None.
Test Precondition: 
        - UdpNmNodeIdCallback is enabled
    
Test Execution: 
      01: Check if UDPNM_NODEID_CALLBACK_ENABLED macro is generated.
      02: Check if UDPNM_NODEID_CALLBACK_NAME macro is generated.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallbackName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_300010</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_SchmCall_1/source/application/test_config.h</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'false'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeIdEnabled" is set to 'true' for at least a channel
      - "UdpNmNodeDetectionEnabled" is set to 'true'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'true'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmMultiCoreSupport" is set to 'true'
  
Test Execution: None.
Test Input: 
  
Test Output: 
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmTxPdu           10U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmUserDataTxPdu   0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_300013</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_ComTest_SchmCall_2/source/application/test_config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmVersionInfoApi" is set to 'false'
      - "UdpNmComControlEnabled" is set to 'false'
      - "UdpNmStateChangeIndEnabled" is set to 'false'
      - "UdpNmPassiveModeEnabled" is set to 'true'
      - "UdpNmPduRxIndicationEnabled" is set to 'false'
      - "UdpNmUserDataEnabled" is set to 'true'
      - "UdpNmRemoteSleepIndEnabled" is set to 'false'
      - "UdpNmNodeIdEnabled" is set to 'false' for all channels
      - "UdpNmNodeDetectionEnabled" is set to 'false'
      - "UdpNmBusSynchronizationEnabled" is set to 'false'
      - "UdpNmRepeatMsgIndEnabled" is set to 'false'
      - "UdpNmDevErrorDetect" is set to 'false'
      - "UdpNmComUserDataSupport" is set to 'true'
      - "UdpNmPnEnabled" is set to 'false'
      - "UdpNmPnEiraCalcEnabled" is set to 'false'
      - "UdpNmMultiCoreSupport" is set to 'true'
  
Test Execution: None.
Test Input: 
  
Test Output: 
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmRxPdu           0U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmTxPdu           10U
    UdpNmConf_UdpNmChannelConfig_UdpNmChannelConfig_0_UdpNmUserDataTxPdu   0U
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10001</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_01_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if the pdu referenced by UdpNmPnEraRxNSduRef is configured in PduR.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(UdpNm.ECUC_UdpNm_00073) Check if an error is throw if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UDPNM_GEN_InvalidRange_UdpNmPnInfoOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_02_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check the range of UdpNmPnInfoOffset is from 1 to 63.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ECUC_UdpNm_00068) Check if an error is throw if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10003</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_03_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check the range of UdpNmPnInfoLength is from 1 to 63.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ECUC_UdpNm_00069) Check if an error is throw if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10004</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_04_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      The length of the ((UdpNmPnInfoOffset + UdpNmPnInfoLength) - 1) should not be greater then 63.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.EB.UdpNmPnInfo) Check if an error is throw if a bad configuration is given.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10005</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_05_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that in case UdpNmSynchronizedPncShutdownEnabled is set to true for a channel then
      UdpNmPnEnabled is also set to true for same channel for an active gateway. 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ASRR2111.ECUC_UdpNm_00097) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmSynchronizedPncShutdownEnabled is set to true
    UdpNmPnEnabled is set to false
    ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE
  
Test Output: 
    code generation error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10006</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_06_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that in case UdpNmSynchronizedPncShutdownEnabled is set to true for a channel then
      UdpNmPnEraCalcEnabled is also set to true for same channel for an active gateway. 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ASRR2111.ECUC_UdpNm_00097) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmSynchronizedPncShutdownEnabled is set to true
    UdpNmPnEraCalcEnabled is set to false
    ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE
  
Test Output: 
    code generation error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10007</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_07_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that in case UdpNmSynchronizedPncShutdownEnabled is set to true for a channel then
      UdpNmPnEnabled is also set to true for same channel for a passive gateway. 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ASRR2111.ECUC_UdpNm_00097) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmSynchronizedPncShutdownEnabled is set to true
    UdpNmPnEnabled is set to false
    ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
  
Test Output: 
    code generation error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10008</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_08_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that in case UdpNmSynchronizedPncShutdownEnabled is set to true for a channel then
      UdpNmPnEraCalcEnabled is also set to true for same channel for a passive gateway. 
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ASRR2111.ECUC_UdpNm_00097) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmSynchronizedPncShutdownEnabled is set to true
    UdpNmPnEraCalcEnabled is set to false
    ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
  
Test Output: 
    code generation error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10009</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_09_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check that if UdpNmPnSupported then at least one channel has UdpNmPnEnabled.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.EB.Config.UdpNmPnSupported) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmPnSupported is set to true
    UdpNmPnEnabled is set to false for all channels
  
Test Output: 
    Bad configuratio error raised
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmPnSupported</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_GEN_10010</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_10_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Check that in case UdpNmAllNmMessagesKeepAwake is set to true for a channel then
    UdpNmPnEnabled is also set to true for same channel.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.ECUC_UdpNm_00089) Check if an error is throw if a bad configuration is given.
  
Test Input: 
    UdpNmAllNmMessagesKeepAwake is set to true
    UdpNmPnEnabled is set to false or disabled
  
Test Output: 
    Bad configuratio error raised
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_Valid_Channel_Partition_Generation_Check</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_11_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that when multicore per channel conditions are met then all channels have a valid ComMChannelPartitionRef partition reference.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.EB.Config.UdpNmChannelMultiCoreSupport) Check if an error is thrown if a bad configuration is given.
  
Test Input: 
    ComMChannelPartitionRef configuration parameter for a channel is set and valid
    ComMChannelPartitionRef configuration parameter for a channel is not set
  
Test Output: 
    Configuration error raised
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_Valid_Os_Partition_References_Generation_Check</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_12_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that when multicore per channel conditions are met then all channels
      ComMChannelPartitionRef partition references are also referenced by an 
      Os application (OsAppEcucPartitionRef).
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.EB.Config.UdpNmChannelMultiCoreSupport) Check if an error is thrown if a bad configuration is given.
  
Test Input: 
    ComMChannelPartitionRef referenced partitions that are not referenced by an Os application
  
Test Output: 
    Configuration error raised
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.Config.UdpNmChannelMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Channel_Multicore_Valid_PNC_Partition_Reference_Generation_Check</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Compile/IN/UdpNm_GenTest_13_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Check that when multicore per channel conditions are met and CanNmPnEiraCalcEnabled is true then 
      a PNC partition reference is defined in ComM.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: VP(UdpNm.EB.UdpNmChannelMultiCore.AggregatePartition) Check if an error is thrown if a bad configuration is given.
  
Test Input: 
    ComMMasterPNCEcuCPartitionRef configuration parameter not set
  
Test Output: 
    Configuration error raised
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.AggregatePartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_32007</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test DET detection functionality of all UdpNm APIs for error
    UDPNM_E_NO_INIT.
  
Test Object: None.
Test Precondition: 
    * UdpNm should be in the un-initialized state.
    * UDPNM_DEV_ERROR_DETECT should be TRUE.
  
Test Execution: 
    01: Clear the DET stubs.
    02: Call the following APIs:
          UdpNm_PassiveStartUp
          UdpNm_NetworkRequest
          UdpNm_NetworkGwEraRequest
          UdpNm_NetworkRelease
          UdpNm_DisableCommunication
          UdpNm_EnableCommunication
          UdpNm_SetUserData
          UdpNm_GetUserData
          UdpNm_GetNodeIdentifier
          UdpNm_GetLocalNodeIdentifier
          UdpNm_RepeatMessageRequest
          UdpNm_GetPduData
          UdpNm_GetState
          UdpNm_RequestBusSynchronization
          UdpNm_CheckRemoteSleepIndication
    03: VP (UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication):
        - All APIs return E_NOT_OK
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization
            UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication):
        - DET error UDPNM_E_NO_INIT is reported from all APIs.
    05: Call UdpNm_TxConfirmation when UdpNm is in uninitialized state.
    06: VP (UdpNm.ASR413.SWS_UdpNm_00230, UdpNm.EB_Ref.SWS_UdpNm_00229.2):
        - DET error UDPNM_E_NO_INIT is reported with instance Id same
          as UdpNm channel handle.
    07: Call UdpNm_RxIndication when UdpNm is in uninitialized state.
    08: VP (UdpNm.EB_Ref.SWS_UdpNm_00232.2, UdpNm.ASR413.SWS_UdpNm_00233):
        - DET error UDPNM_E_NO_INIT is reported with instance Id same
          as UdpNm channel handle.
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        - check a call to UdpNm_RequestSynchronizedPncShutdown is succsessfull
          when no udpnm channels are configured with 
          UdpNmSynchronizedPncShutdownEnabled set
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_DisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_EnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00229.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32010</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behavior of UdpNm_MainFunction() before initialization of UdpNm.
  
Test Object: None.
Test Precondition: 
    UdpNm should be in the un-initialized state.
  
Test Execution: 
    01: Clear the DET stubs.
    02: Call UdpNm_MainFunction() before initialization of UdpNm.
    03: VP (UdpNm.EB.MainFunction.InitCheck):
        - No error has been reported to the DET.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.MainFunction.InitCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32008</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    1. To test DET detection functionality of UdpNm APIs for error
       UDPNM_E_INVALID_CHANNEL.
    2. To test DET detection functionality of UdpNm_TxConfirmation for error
       UDPNM_E_INVALID_PDUID.
    3. To test DET detection functionality of UdpNm_RxIndication for error
       UDPNM_E_INVALID_PDUID.
  
Test Object: None.
Test Precondition: 
    * UDPNM_DEV_ERROR_DETECT should be TRUE.
  
Test Execution: 
    01: Clear the DET stubs.
    02: VP(UdpNm.SWS_UdpNm_00060): Initialize the UdpNm module.
    03: Call the following APIs(having return value) with an invalid channel
        handle as parameter:
        * UdpNm_PassiveStartUp()
        * UdpNm_NetworkRequest()
        * UdpNm_NetworkGwEraRequest()
        * UdpNm_NetworkRelease()
        * UdpNm_DisableCommunication()
        * UdpNm_EnableCommunication()
        * UdpNm_SetUserData()
        * UdpNm_GetUserData()
        * UdpNm_GetNodeIdentifier()
        * UdpNm_GetLocalNodeIdentifier()
        * UdpNm_RepeatMessageRequest()
        * UdpNm_GetPduData()
        * UdpNm_GetState()
        * UdpNm_RequestBusSynchronization()
        * UdpNm_CheckRemoteSleepIndication()
        * UdpNm_RequestSynchronizedPncShutdown()
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown):
        - All APIs return E_NOT_OK
    05: VP (UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication
            UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown):
        - DET error UDPNM_E_INVALID_CHANNEL is reported.
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00232.4,
            UdpNm.ASR413.SWS_UdpNm_00230,
            UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfTxConfirmation,
            UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfRxIndication):
        - DET error UDPNM_E_INVALID_PDUID is reported for:
        UdpNm_SoAdIfRxIndication()
        UdpNm_SoAdIfTxConfirmation()
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_PassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_DisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_EnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestBusSynchronization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00463.UdpNm_SoAdIfRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32009</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test DET detection functionality for error UDPNM_E_NULL_POINTER.
  
Test Object: None.
Test Precondition: 
    * UDPNM_DEV_ERROR_DETECT should be TRUE.
  
Test Execution: 
    01: Clear the DET stubs
    02: Initialize the UdpNm module.
    03: Call the following APIs with a Null pointer as parameter:
          UdpNm_SetUserData()
          UdpNm_GetUserData()
          UdpNm_GetNodeIdentifier()
          UdpNm_GetLocalNodeIdentifier()
          UdpNm_GetPduData()
          UdpNm_GetState()
          UdpNm_CheckRemoteSleepIndication()
          UdpNm_GetVersionInfo()
          UdpNm_RxIndication()
   04: VP(UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_SetUserData,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetUserData,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetNodeIdentifier,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetLocalNodeIdentifier,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetPduData,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState,
          UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_CheckRemoteSleepIndication,
          UdpNm.EB_Ref.SWS_UdpNm_00232.3,
          UdpNm.SWS_UdpNm_00318):
       - All APIs return E_NOT_OK
       - The DET error UDPNM_E_NULL_POINTER is reported.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_SetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00292.UdpNm_CheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00232.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_EventQueue</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      When UdpNm is in state "Normal operation" and UdpNm_NetworkRelease()
      is called more often than the event queue size and if
      UdpNm_MainFunction() is called until NM_TIMEOUT timer expires,
      then it must be ensured that the network channel reaches
      the prepare bus sleep state. Note that in case of queue overflow, the
      network channel never goes to prepare bus sleep state because the timeout
      event won't be queued as the event queue is already filled up during the
      calls of UdpNm_NetworkRelease().
  
Test Object: Event queue
Test Precondition: 
    * UDPNM_PASSIVE_MODE_ENABLED shall be STD_OFF.
    * UdpNm is initialized
    * UdpNm is in Normal Operation State
  
Test Execution: 
    01: Prepare test case preconditions.
    02: Ensure that UdpNm is in NormalOperationState.
    03: Within a loop, release the channel more often than the size of the event
        queue and invoke channel main function until NM_TIMEOUT time expires.
    04: VP (UdpNm.SWS_UdpNm_00109, UdpNm.EB.EventQueue):
        - UdpNm has reached Prepare bus sleep state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.EventQueue</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_WrongPostBuildRamSize</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_1/source/application/UdpNm_ConTest_1.c</sourcefile>
      <sourceline>988</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   The test should prove that in case the postbuild time
   size needed by internal RX and TX buffers is greater than
   the precompile alocated,
   the UdpNm_Init shall report DET error UDPNM_E_INIT_FAILED
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Prepare test case preconditions.
    02: Prepare test_configuration, and modify Postbuild Ram size
    03: Call UdpNm Init
    04: VP(UdpNm.EB.PostBuildRamSize_3)
        - Check that UdpNm reports DET error UDPNM_E_INIT_FAILED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PostBuildRamSize_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_EIRA_ERA_Calc_FilterAlgo</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that, If UdpNmPnEnabled is TRUE and the PNI bit in the received
    NM-PDU is 1, UdpNm module shall process the Partial Networking Information
    of the NM-PDU according to NM PDU Filter Algorithm.
    Verify that, If a NM-PDU is received the UdpNm shall set every requested and
    filtered (relevant) PN request bit in the EIRA/ERA to 1.
    Verify that, if content of EIRA/ERA changes (any bit changes from 1 to 0 or from
    0 to 1) because of a received or the EIRA/ERA reset timer expiration, the UdpNm
    shall inform the upper layers by calling PduR_UdpNmRxIndication().
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnable == true
    PnEiraCalcEnable == true
    PnEraCalcEnable == true
    PNI bit in Nm message shall be 1.
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke UdpNm_Init().
    03: Execute the following for every channel
    04: Invoke UdpNmRxIndication with all PN request bits set in the NM-PDU.
    05: Invoke Main Function once.
    06: VP (UdpNm.SWS_UdpNm_00331, UdpNm.ASR413.SWS_UdpNm_00346, UdpNm.ASR413.SWS_UdpNm_00356, UdpNm.SWS_UdpNm_00347, UdpNm.SWS_UdpNm_00348,
            UdpNm.SWS_UdpNm_00352, UdpNm.ASR413.SWS_UdpNm_00343, UdpNm.SWS_UdpNm_00361, UdpNm.ASR413.SWS_UdpNm_00354,
            UdpNm.SWS_UdpNm_00344):
        - PduR_UdpNmRxIndication is invoked for both EIRA/ERA.
        - Only relevant bits are set in the EIRA/ERA data sent to Com.
    07: Invoke UdpNmRxIndication for both EIRA/ERA with Filter Mask Value in
        corresponding PDU message byte.
    08: Invoke Main Function once.
    09: VP(UdpNm.SWS_UdpNm_00331, UdpNm.SWS_UdpNm_00352):
        - PduR_UdpNmRxIndication is not Invoked as there was no change in
        the PN info received.
    10: Invoke Main Function continuously for one cycle time less than
        what is required for PN Reset Timer expiry.
    11: VP (UdpNm.SWS_UdpNm_00351, UdpNm.SWS_UdpNm_00348, UdpNm.SWS_UdpNm_00352):
        - PduR_UdpNmRxIndication is not Invoked.
        - The respective bits in the EIRA/ERA value are not cleared.
    12: Invoke Main Function once so that PN Reset Time elapses.
    13: VP (UdpNm.SWS_UdpNm_00351, UdpNm.SWS_UdpNm_00348, UdpNm.SWS_UdpNm_00352, UdpNm.SWS_UdpNm_00360):
        - PduR_UdpNmRxIndication is Invoked.
        - The respective bits in the EIRA/ERA value are cleared.
    14: Invoke UdpNmRxIndication for both EIRA/ERA with Filter Mask Value in
        corresponding PDU message byte.
    15: VP (UdpNm.SWS_UdpNm_00331, UdpNm.SWS_UdpNm_00347, UdpNm.SWS_UdpNm_00348, UdpNm.SWS_UdpNm_00352
        UdpNm.SWS_UdpNm_00357, UdpNm.SWS_UdpNm_00344):
        - PduR_UdpNmRxIndication is invoked for both EIRA/ERA
        - Only relevant bits are set in the EIRA/ERA data sent to Com.
    16: Invoke Main Function continuously for one cycle time less than
        what is required for PN Reset Timer expiry.
    17: VP (UdpNm.SWS_UdpNm_00351, UdpNm.SWS_UdpNm_00352):
        - PduR_UdpNmRxIndication is not Invoked.
        - The respective bits in the EIRA/ERA value are not cleared.
    18: Invoke Main Function once so that PN Reset Time elapses.
    19: VP (UdpNm.SWS_UdpNm_00351, UdpNm.SWS_UdpNm_00348, UdpNm.SWS_UdpNm_00352, UdpNm.SWS_UdpNm_00360):
        - PduR_UdpNmRxIndication is invoked for both EIRA/ERA.
        - The respective bits in the EIRA/ERA value are cleared.
    20: Invoke UdpNmRxIndication without Filter Mask Value in corresponding PDU
        message byte.
    21: VP (UdpNm.SWS_UdpNm_00331):
        - PduR_UdpNmRxIndication is not Invoked.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00351</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00347</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00343</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00354</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00357</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00361</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00360</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00344</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PnEnabled_PNIBit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>331</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, If UdpNmPnEnabled is TRUE the UdpNm module shall set the value
    of the transmitted PNI bit to 1.  Further ensure that content of user data
    is not affected.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled == true
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke UdpNm_Init().
    03: Execute the following for every channel
    04: Goto Repeat Message state
    05: Reset SoAd Tx buffer and set user data in UdpNm
    06: Check if UdpNm Offset Time is greater than zero than proceed to step 07
        else continue with step 08
    07: Invoke Main Function in a loop until Message Cycle Offset expires
    08: Invoke Main Function in a loop until Message Cycle time expires
    09: - SoAd_IfTransmit is Invoked.
    10: VP (UdpNm.SWS_UdpNm_00332):
        - PNI bit(6th bit of CBV byte) is set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Rx_EIRA_ERA_Reset_Timer_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify EIRA/ERA got reset after EIRA/ERA reset time.
    Verify UdpNm module restart the EIRA/ERA reset timer for every
    PN request bit if a NM-PDU is received.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled == true
    PnEiraCalcEnable == true
    PnEraCalcEnable == true
  
Test Execution: 
    01: Set all PN request bits in the NM-Pdu.
    02: Invoke RxIndication.
    03: Call main function once
    04: - PduR_UdpNmRxIndication is invoked with the PDU-ID
          configured in UdpNmPnEiraRxNSduRef.
    05: VP (UdpNm.ASR413.SWS_UdpNm_00346, UdpNm.ASR413.SWS_UdpNm_00356, UdpNm.EB_Ref.SWS_UdpNm_00372.1,
            UdpNm.EB_Ref.SWS_UdpNm_00372.2):
        - Only relevant bits are set in the EIRA/ERA data sent to Com
    06: Call Main function for UdpNmPnResetTime-1
    07: Check that PN info in the PduR stub has not been changed
    08: Call main function once
    09: VP (UdpNm.SWS_UdpNm_00345, UdpNm.SWS_UdpNm_00358):
        - PN info in the PduR stub has been reset.
    10: Provide valid PN info through RxIndication
    11: Call main function once
    12: VP (UdpNm.ASR413.SWS_UdpNm_00346, UdpNm.ASR413.SWS_UdpNm_00356, UdpNm.EB_Ref.SWS_UdpNm_00372.1
            UdpNm.EB_Ref.SWS_UdpNm_00372.2):
        - Only relevant bits are set in the EIRA/ERA data sent to Com.
    13: Call Main function for UdpNmPnResetTime-1
    14: Check that PN info in the PduR stub has not been changed
    15: Provide valid PN info through RxIndication, this should reset the PN
        timer.
    16: Call main function for UdpNmPnResetTime-1
    17: Check that PN info in the PduR stub has not been changed
    18: Call main function once
    19: VP (UdpNm.SWS_UdpNm_00349, UdpNm.SWS_UdpNm_00359):
        - PN info in the PduR stub should be 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00349</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00356</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00358</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00359</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00372.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00372.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PN_RequestInfo_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>652</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify length of the PN request information in the NM message.
    Verify if at least one bit within the PN Info Range of the received NM-PDU
    matches with a bit in the NM filter mask  then the message is processed.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled == true
  
Test Execution: 
    01: Go to ready sleep state boundary to transition to prepare bus sleep
        state.
    02: Provide Pn info with all bits set except those are relevant for the ECU
    03: Call main function once
    04: Check that RxIndication is ignored
    05: VP(UdpNm.SWS_UdpNm_00335):
        - State transits to prepare bus sleep state
    06: Set one of the valid bit at the mask corresponds to last valid byte and
        invoke RxIndication
    07: Call main function once
    08: Check that RepeatMessageState is entered
    09: Call main function until transition to prepare bus sleep state about to
        happen.
    10: Provide Pn info with one of the valid bit at the mask corresponds to
        first valid byte and invoke RxIndication.
    11: Call main function once
    12: RxIndication is not ignored
    13: State remains in Repeat Message State.
    14: Call UdpNm_SoAdIfRxIndication() with PNI set to 0 and all the Pn Info bits set to 1
    15: Call Mainfunction() once.
    16: Check if the PduR_UdpNmRxIndication() is not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_DisableCom</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that UdpNm does not send PDUs in Normal Operation State if the
    UdpNm_DisableCommunication is called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Invoke UdpNm_Init(). Go to NM_STATE_READY_SLEEP.
    02: VP (UdpNm.SWS_UdpNm_00215):
        - Disable communication by calling UdpNm_DisableCommunication() and invoke main function once.
    03: Call UdpNm_NetworkRequest and invoke main function once.
    04: Verify that UdpNm enters Normal operation state.
    05: Invoke main function.
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00116.2):
        - NM message is not transmitted as communication ability is disbaled.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ImediateRestart_ComUserDataOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>959</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case UdpNmImmediateRestartEnabled is set to true and 
    UdpNmComUserDataSupport is set to true, when bus is requested
    in Prepare Buss Sleep Mode, the UdpNm triggers a PDU transmission
    whith the data set by PduR_UdpNmTriggerTransmit.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize the stub values
    02: Initialize data for PduR_UdpNmTriggerTransmit
    03: Initialize UdpNm
    04: Do a passive wakeup
    05: Wait until state machine goes to Prepare Buss Sleep Mode
    06: Check that state machine reached Prepare Bus Sleep Mode
    07: Set SoAd_IfTransmit_Stub.Count to zero
    08: Request the network
    09: Check that state machine reached Repeat Message State
    10: VP(UdpNm.ECUC_UdpNm_00009, UdpNm.SWS_UdpNm_00122)
        - Check that SoAd_IfTransmit is called
    11: Check that the transmitted data equals to the expected
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>TS_UDPNM_RSI</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>1062</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case the state machine is in Normal Operation State
    and Nm_RemoteSleepIndication is called and network is released, state machine changes
    it's state to Ready Sleep Remote Sleep and UdpNm_CheckRemoteSleepIndication returns 
    TRUE via parameter nmRemoteSleepIndPtr.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled is disabled.
    UdpNmRemoteSleepIndEnabled is enabled
  
Test Execution: 
    01: Initialize stubs
    02: Initialize UdpNm
    03: Request the network
    04: Check thet current state is Repeat Message State
    05: Call mainfunction RMS number of times
    06: Wait until RSI timer expires
    07: Check that Nm_RemoteSleepIndication has been called
    08: Check thet current state is Normal Operation State
    09: Release the network
    10: Check that the current state is Ready Sleep State
    11: UdpNm_CheckRemoteSleepIndication returns "E_OK"
    12: VP(UdpNm.SWS_UdpNm_00227)
        - Check UdpNm_CheckRemoteSleepIndication returns TRUE
          via parameter nmRemoteSleepIndPtr
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReadySleepToNormalOperation_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>1170</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in case state machine is in ReadySleep state and the network is requested,
    UdpNm enters in NormalOperation state, SoAd_IfTransmit stub is 1 and message is sent
    on the bus.
    Transition from ReadySleepRemoteSleep to NormalOperationRemoteSleep is verified.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled is false;
    UdpNmStateChangeIndEnabled is true;
  
Test Execution: 
    01: Call UdpNm_NetworkRequest;
    02: Invoke main function once;
    03: Verify that UdpNm enters NM_STATE_REPEAT_MESSAGE state;
    04: Call mainfunction RMS number of times;
    05: Wait until RSI timer expires;
    06: Check that Nm_RemoteSleepIndication has been called
    07: Check thet current state is NM_STATE_NORMAL_OPERATION;
    08: Release the network;
    09: Invoke main function once;
    10: Verify that UdpNm enters NM_STATE_READY_SLEEP state;
    11: Call UdpNm_NetworkRequest;
    12: Set SoAd_IfTransmit_Stub to 0;
    13: Invoke main function once;
    14: Verify that UdpNm enters NM_STATE_NORMAL_OPERATION state.
    15: Check if SoAd_IfTransmit_Stub is 1;
    16: VP (UdpNm.EB_Ref.SWS_UdpNm_00116.1, UdpNm.EB_Ref.SWS_UdpNm_00116.2, UdpNm.SWS_UdpNm_00110, UdpNm.SWS_UdpNm_00006):
        - NM message is transmitted correctly.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReadySleepToNormalOperation_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_10/source/application/UdpNm_ConTest_10.c</sourcefile>
      <sourceline>1306</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in case state machine is in ReadySleep state and the network is requested,
    UdpNm enters in NormalOperation state, SoAd_IfTransmit stub is 1 and message is sent
    on the bus.
    Transition from ReadySleepRemoteActivity to NormalOperationRemoteActivity is verified.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled is false;
    UdpNmStateChangeIndEnabled is true;
  
Test Execution: 
    01: Go to NM_STATE_READY_SLEEP state;
    02: Call UdpNm_NetworkRequest;
    03: Set SoAd_IfTransmit_Stub to 0;
    04: Invoke main function once;
    05: Verify that UdpNm enters NM_STATE_NORMAL_OPERATION state.
    06: Check if SoAd_IfTransmit_Stub is 1;
    07: VP (UdpNm.EB_Ref.SWS_UdpNm_00116.1, UdpNm.EB_Ref.SWS_UdpNm_00116.2, UdpNm.SWS_UdpNm_00110, UdpNm.SWS_UdpNm_00006):
        - NM message is transmitted correctly.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_TX_EIRA_VERIFICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PN request bit in the EIRA is set to 1 as per PN request bits in the
    transmitted NM-PDU.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled = true for channel 0
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke UdpNm_Init().
    03: Goto Repeat Message state.
    04: Invoke Main Function once to update EIRA bits
    05: VP (UdpNm.ASR413.SWS_UdpNm_00343, UdpNm.ASR413.SWS_UdpNm_00346, UdpNm.SWS_UdpNm_00348, UdpNm.SWS_UdpNm_00352):
        - PduR_UdpNmRxIndication is invoked
        - check if all the bits are set in the EIRA
    06: Invoke Main Function in a loop until Message Cycle Offset expires.
    07: Clear the PDU data from PduR.
    08: Invoke Main Function in a loop until TST_UDPNM_PN_RESET_TIME expires.
    09: VP (UdpNm.SWS_UdpNm_00348):
        - Whether EIRA reset to zero.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00348</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00343</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Tx_EIRA_Reset_Timer_Chk</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify PN request bit in the EIRA is set to 1 as per PN request bits in the
    transmitted NM-PDU.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled = true for channel 0.
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke UdpNm_Init().
    03: Go to Normal Operation state.
    04: Send a valid Pn info through PduR stub with all PN request bits set
    05: Call main function until SoAd_IfTransmit is called
    06: Set all EIRA bits that are part of PduRStub_Buffer
    07: Clear Pn info in PduR stub
    08: - Init PduR_UdpNmRxIndication_Stub to 0
        - Check that only bits which does not pass the
          mask are reset after one main call cycle
    09: Call Main function max_wait times
    10: Check PN info in the SoAd stub is same as the send data
    11: Call main function until an NM-PDU is transmitted.
    12: VP (UdpNm.SWS_UdpNm_00345):
        - After timer expired all EIRA bits should be reset to 0
    13: Send valid Pn info through PduR stub
    14: Call main function until SoAd_IfTransmit is called
    15: VP (UdpNm.ASR413.SWS_UdpNm_00346):
        - Only those relevant PN request bits(configured in PN Filter mask)
          are set to 1 in EIRA.
    16: Call main function until SoAd_IfTransmit called to restart EIRA timer.
    17: Clear Pn info in PduR stub
    18: Call Main function until UdpNmPnResetTime-1.
    19: Check PN info in the SoAd stub, it should the same data sent at first
        step
    20: Call main function once.
    21: VP (UdpNm.ASR413.SWS_UdpNm_00350):
        - PN info in the SoAd stub is 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00345</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00350</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00346</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if UdpNm_NetworkRequest() is called when UdpNm is in
    Network mode (in any sub-state) and UdpNmPnHandleMultipleNetworkRequests
    is set to TRUE, then UdpNm performs state transition to Repeat
    Message State (UdpNm.EB_Ref.SWS_UdpNm_00362.3).
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - UdpNmPnHandleMultipleNetworkRequests is set to 'true' for Channel0
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00362.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PN_SpontaneousTr_ReEnterRMS2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if UdpNm_NetworkRequest() is called when UdpNm is in
    Normal Operation State and UdpNmPnHandleMultipleNetworkRequests
    is set to FALSE, then UdpNm don't perform a state transition to Repeat
    Message State.
  
Test Object: None.
Test Precondition: 
    * Important test configuration details:
      - UdpNmPnHandleMultipleNetworkRequests is set to 'false' for Channel1
  
Test Execution: 
    Note:
    - All references of "network channel" refer to "Channel1"
    01: Initialize test case
        - Initialize UdpNm
        - Initialize dependent module stubs
    02: Goto Ready sleep state
    03: Invoke UdpNm_NetworkRequest() for network channel 1
    04: Invoke main function once
    05: Check if the current state is Normal Operation State
        and not Repeat Message State
    06: Call Main Function until the Remote Sleep Indication timer expires
    07: Call UdpNm_NetworkRelease() in Normal Operation State
        in order to transit to Ready Sleep State
    08: Invoke main function once
    09: Check that the current state is Ready Sleep State
    10: Invoke UdpNm_NetworkRequest() in order to
        transit to Normal Operation State
    11: Invoke main function once
    12: VP(UdpNm.SWS_UdpNm_00110):
        Check if the current state is Normal Operation State
        and not Repeat Message State
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_MAX_EIRA_SIZE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case the number of partial networks at postbuild time
    is different than at precompile time and PN info is simulated for a partial network
    which did not existed at precompile time PduR_UdpNmRxIndication is called
    after PnResetTime.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Prepare modified postbuild data
    02: Initialize module
    03: Simulate Rx data with partial network information
    04: Check that PduR_UdpNmRxIndication is called
    05: VP(UdpNm.SWS_UdpNm_00352)
        - check that after expiration of PnResetTime
        PduR_UdpNmRxIndication is called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00352</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReEnterNetworkModeActiveWakeupBit</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case the channel state machine
    is in network mode because of a passive startup,
    and parameter UdpNmPnHandleMultipleNetworkRequests is set to true
    and UdpNmActiveWakeupBitEnabled is set to true
    and network is requested, the network mode is re-entered
    without setting the active wakeup bit.
  
Test Object: None.
Test Precondition: 
    UdpNmPnHandleMultipleNetworkRequests is set to true.
    UdpNmActiveWakeupBitEnabled is set to true.
  
Test Execution: 
    01: Initialize stubs and module
    02: Call passive startup
    03: Check current state is Repeat Message State
    04: Wait until a message is sent on the bus
    05: Check that message has been sent on the bus and active wakeup bit is not set
    06: Wait until state machine enters ready sleep state
    07: Check state machine entered ready sleep state
    08: Request the network
    09: Check state machine re-entered network mode
    10: Wait until first message is sent
    11: VP(UdpNm.ECUC_UdpNm_00074)
        Check that active wakeup bit is not set
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_BusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from BusSleepMode due to UdpNm_NetworkGwEraRequest
   active wakeup bit is not set and immediate message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateNmTransmissions &gt; 1
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_NetworkGwEraRequest
    03: Wait until a message is sent on the bus
    04: Check current state is Repeat Message State
    05: VP(UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.BusSleepMode,
           UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.BusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
    06: Wait until a message is sent on the bus
    07: Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_NetworkGwEraRequest
  
Test Output: 
    Active wakeup bit not set
    Messages present on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_NetworkGwEraRequest_ActiveWakeupBit_PrepareBusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1019</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from PrepareBusSleepMode due to UdpNm_NetworkGwEraRequest
   active wakeup bit is not set and immediate message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateNmTransmissions &gt; 1
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_PassiveStartUp
    03: Wait until state machine enters Prepare Bus Sleep Mode
    04: Check current state is Prepare Bus Sleep Mode State
    05: Call UdpNm_NetworkGwEraRequest
    06: Wait until a message is sent on the bus
    07: VP(UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.PrepareBusSleepMode,
           UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.PrepareBusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_NetworkGwEraRequest call
  
Test Output: 
    Active wakeup bit not set
    Messages present on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.ActiveWakeupBit.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_BusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1112</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from BusSleepMode due to passive startup, network request sequence
   active wakeup bit is not set and immediate message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateNmTransmissions &gt; 1
  
Test Execution: 
    01: Initialize stubs and module
    02: Call Passive Startup, Network request sequence
    03: Wait until a message is sent on the bus
    04: Check current state is Repeat Message State
    05: VP(UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode,
           UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.BusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_PassiveStartUp call
  
Test Output: 
    Active wakeup bit not set
    Messages present on bus
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_ActiveWakeupBit_PrepareBusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from PrepareBusSleepMode due to passive startup, network request sequence
   active wakeup bit is not set and immediate message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateNmTransmissions &gt; 1
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_PassiveStartUp
    03: Wait until state machine enters Prepare Bus Sleep Mode
    04: Check current state is Prepare Bus Sleep Mode State
    05: Call Passive Startup, Network request sequence
    06: Wait until a message is sent on the bus
    07: VP(UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.PrepareBusSleepMode,
           UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.PrepareBusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_PassiveStartUp call
  
Test Output: 
    Active wakeup bit not set
    Messages present on bus
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.ActiveWakeupBit.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateNmTransmissions.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_NetworkGwEraRequest_NetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1286</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from BusSleepMode due to
   UdpNm_NetworkGwEraRequest, the network got to have the state as requested.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_PassiveStartUp
    03: Wait until state machine enters Prepare Bus Sleep Mode
    04: VP(UdpNm.EB.UdpNm_NetworkGwEraRequest,
           UdpNm.EB.UdpNm_NetworkGwEraRequest.NetworkRequest)
        - Check that the state is normal operation
  
Test Input: 
    UdpNm_NetworkGwEraRequest call
  
Test Output: 
    Nm state is normal operation
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_PassiveStartUp
        UdpNm_NetworkRelease
        UdpNm_NetworkRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit is not set
  
Test Input: 
    UdpNm_PassiveStartUp, UdpNm_NetworkRelease, UdpNm_NetworkRequest sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_NetworkRequest
        UdpNm_NetworkRelease
        UdpNm_PassiveStartUp
        UdpNm_NetworkRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit is not set
  
Test Input: 
    UdpNm_NetworkRequest, UdpNm_NetworkRelease, UdpNm_PassiveStartUp, UdpNm_NetworkRequest
    sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1515</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_PassiveStartUp
        UdpNm_NetworkGwEraRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit is not set
  
Test Input: 
    UdpNm_PassiveStartUp, UdpNm_NetworkGwEraRequest sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1588</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_NetworkGwEraRequest
        UdpNm_NetworkRelease
        UdpNm_PassiveStartUp
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit is not set
  
Test Input: 
    UdpNm_NetworkGwEraRequest, UdpNm_NetworkRelease, UdpNm_PassiveStartUp sequence call
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_NetworkRequest
        UdpNm_NetworkGwEraRequest
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit set
  
Test Input: 
    UdpNm_NetworkRequest, UdpNm_NetworkGwEraRequest sequence call
  
Test Output: 
    Active wakeup bit is set.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_Sequence_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1738</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that the Active wakeup is correctly set based on a defined sequence.
  
Test Object: None.
Test Precondition: 
    Passive mode has to be set to false
  
Test Execution: 
    01: Initialize module
    02: Set sequence
        UdpNm_NetworkRequest
        UdpNm_PassiveStartUp
    03: Check that State Machine is In Repeat Message state
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00366.1)
        - Check active wakeup bit set
  
Test Input: 
    UdpNm_NetworkRequest, UdpNm_PassiveStartUp sequence call
  
Test Output: 
    Active wakeup bit is set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_StateChangeNotification_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_11/source/application/UdpNm_ConTest_11.c</sourcefile>
      <sourceline>1810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verify that state change notifications are called after updating the
    internal variables holding the current state.
    Test shall prove that state change notification is called only if current
    state differs from previous state.
  
Test Object: None.
Test Precondition: 
    NmStateChangeIndEnabled is set to true
  
Test Execution: 
    01: Call network request to go to repeat message state;
    02: Check that state change notification has been called;
    03: Check that previous state is bus sleep state;
    04: Check that current state is repeat message state;
    05: Call main function for (Tst_Cfg.TstRMSTime)-1 times;
    06: Check that state change notification has not been called;
    07: Check that previous state is bus sleep state;
    08: Check that previous state is repeat message state;
    09: Call main function once;
    10: VP(UdpNm.EB.UdpNmStateChangeNotification)
        - Check that state change notification has been called;
    11: Check that previous state is repeat message state;
    12: Check that current state is normal operation state;
    13: Call network release to go to ready sleep state;
    14: Call main function once;
    15: VP(UdpNm.EB.UdpNmStateChangeNotification)
        - Check that state change notification has been called;
    16: Check that previous state is normal operation state;
    17: Check the current state is ready sleep state;
    18: Call main function for (Tst_Cfg.TstUdpNmTime - (Tst_Cfg.TstRMSTime %
        Tst_Cfg.TstUdpNmTime)) times to go to prepare bus sleep state;
    19: VP(UdpNm.EB.UdpNmStateChangeNotification)
        - Check that state change notification has been called;
    20: Check that previous state is ready sleep state;
    21: Check the current state is prepare bus sleep state;
    22: Call main function for (Tst_Cfg.TstWBSTime - 1U) times;
    23: VP(UdpNm.EB.UdpNmStateChangeNotification)
        - Check that state change notification has been called;
    24: Check that previous state is prepare bus sleep state;
    25: Check the current state is prepare bus sleep state;
  
Test Input: 
    NmStateChangeIndEnabled is true;
  
Test Output: 
    When the current state is read in the context of the state change notification,
    it shall report the current state of the state machine.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmStateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_PnEiraCalcEnabled_PnEraCalcEnabled_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_12/source/application/UdpNm_ConTest_12.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify UdpNm module skip the aggregation of external and internal PN
    requests information if UdpNmPnEiraCalcEnabled or UdpNmPnEraCalcEnabled are FALSE.
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled == true
    UdpNmPnEiraCalcEnabled = FALSE
    UdpNmPnEraCalcEnabled = FALSE
  
Test Execution: 
    01: Initialize stubs.
    02: Invoke UdpNm_Init().
    03: Execute the following for each of the configured channel.
    04: Call UdpNm_RxIndication() where some PN info bits which are applicable to this ECU are set.
    05: Call main function once.
    06: VP (UdpNm.ASR413.SWS_UdpNm_00342, UdpNm.ASR413.SWS_UdpNm_00353):
        - PduR_UdpNmRxIndication is not called.
  
Test Input: None.
Test Output: 
    UdpNm must ignore EIRA/ERA.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00353</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NODEID_CALLBACK_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_12/source/application/UdpNm_ConTest_12.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that, If the parameter 'UdpNmNodeIdCallback' is enabled then, API
  'UdpNm_GetLocalNodeIdentifier()' shall invoke the callback and return
  the value provided by the callback.

Test Object: None.
Test Precondition: 
  UdpNmNodeIdCallback is enabled

Test Execution: 
  01: Intialize the stubs.
  02: Invoke UdpNm_Init().
  03: For every configured UdpNm channel execute following:
  04: Clear UdpNm NodeId callback stub count and set the callback return value.
  05: Invoke UdpNm_GetLocalNodeIdentifier().
  06: Check if the value modified by UdpNm_GetLocalNodeIdentifier
      is the same as the one returned by the callback.
  07: VP (UdpNm.EB.UdpNmNodeIdCallback_1):
      Check if UdpNm NodeId Callback was invoked.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallback_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NODEID_CALLBACK_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_12/source/application/UdpNm_ConTest_12.c</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that, When a PDU is transmitted by UdpNm, the callback is invoked and
  the value provided by the callback shall be set in the position of
  Node Id in the Tx Pdu, if the parameter 'UdpNmNodeIdCallback' is enabled.

Test Object: None.
Test Precondition: 
  UdpNmNodeIdCallback is enabled

Test Execution: 
  01: Intialize the stubs.
  02: Invoke UdpNm_Init().
  03: For every configured UdpNm channel execute following:
  04: Clear SoAd_IfTransmit stub count.
  05: Call UdpNm_NetworkRequest for the selected channel.
  06: Invoke Main Function in a loop until "Message Cycle Offset + 1" expires.
  07: Verify that SoAd_IfTransmit is invoked.
  08: VP (UdpNm.EB.UdpNmNodeIdCallback_2):
      SoAd_IfTransmit buffer holds the value at node id position is same
      as return value of UdpNm Node Id callback function.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmNodeIdCallback_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ImediateRestart_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_12/source/application/UdpNm_ConTest_12.c</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case UdpNmImmediateRestartEnabled is set to false,
    when bus is requested in Prepare Buss Sleep Mode, 
    the UdpNm does not triggers a PDU transmission.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize the stub values
    02: Initialize UdpNm
    03: Do a passive wakeup
    04: Wait until state machine goes to Prepare Buss Sleep Mode
    05: Check that state machine reached Prepare Bus Sleep Mode
    06: Set SoAd_IfTransmit_Stub.Count to zero
    07: Request the network
    08: Check that state machine reached Repeat Message State
    09: VP(UdpNm.ECUC_UdpNm_00009)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Set_PduNid</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
    Verify that Node ID is set (in the transmitted PDU) only for the channel
    where node ID is specified.
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - 'UdpNmPassiveModeEnabled' is set to "false".
      - 'UdpNmNodeDetectionEnabled' is set to "true".
      - Channel0 is configured with "UdpNmPduNidPosition = UDPNM_PDU_BYTE_0"
      - Channel1 is configured with "UdpNmPduNidPosition = UDPNM_PDU_OFF"
  
Test Execution: 
    01: Initialize UdpNm and dependent module stubs
    02: For each configured UdpNm Channel, execute steps 03-05
    03: Goto Repeat Message state
    04: Call main function until MsgCycleOffset time elapses
    05: VP (UdpNm.SWS_UdpNm_00013):
        - SoAd_IfTransmit() is invoked
        - Node ID is set in the transmitted PDU only for the channel where node ID is specified.
        - Node is not set in the transmitted PDU for the channel where
          "UdpNmPduNidPosition == UDPNM_PDU_OFF".
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_NetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case UdpNmImmediateNmTransmissions is zero
    even if Network Mode is entered with Network request the first message
    will be sent after UdpNmMsgCycleOffset cycles.
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check state machine entered Repeat Message State
    04: Wait until Message cycle offset almoast expires
    05: Check that SoAd_IfTransmit is not called yet
    06: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_PassiveStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case a passive startup the first message
    will be sent after UdpNmMsgCycleOffset cycles.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Check the state machine entered Repeat Message State
    04: Wait until Message Cycle Offset almoast expires
    05: Check that SoAd_IfTransmit is not called yet
    06: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_NormalOperationRemoteActivity</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case a Repeat Message State is entered from
    Normal Operation Remote Activity message cycle timer is loaded with
    UdpNmMsgCycleOffset.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check the current state is Repeat Message State
    04: Wait until Repeat Message Time expires
    05: Check that the current state is Normal Operation
    06: Do a Repeat Message Request
    07: Check that the current state is Repeat Message State
    08: Wait until Message cycle offset almoast expires
    09: Check that SoAd_IfTransmit is not called yet
    10: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_ReadySleepRemoteActivity</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     - Test should prove that in case a Repeat Message State is entered from
    Ready Sleep Remote Activity message cycle timer is loaded with
    UdpNmMsgCycleOffset.
     - Test should prove that in case Normal Operation Remote activity is entered from
     Ready Sleep Remote Activity the first message is sent immediately.
  
Test Object: None.
Test Precondition: 
     - Important test configuration details:
     UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive Startup
    03: Check that the current state is Repeat Message state
    04: Wait until Repeat Message Timer expires
    05: Check that the current state is Ready Sleep State
    06: Do a Repeat Message Request
    07: Check that the current state is Repeat Message State
    08: Wait until Message cycle offset almoast expires
    09: Check that SoAd_IfTransmit is not called yet
    10: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
    11: Wait until Repeat Message Timer expires
    12: Check that the current state is Ready Sleep State
    13: Do a network request
    14: VP(UdpNm.SWS_UdpNm_00006)
        - Check that the first message is sent immediately after Normal Operation State is entered
    15: Check that the current state is Normal Operation State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_NormalOperationRemoteSleep</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case a Repeat Message State is entered from
    Normal Opration Remote Sleep message cycle timer is loaded with
    UdpNmMsgCycleOffset.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check that the current state is Repeat Message State
    04: Wait until Repeat message timer and Remote Sleep Indication timer almoast expires
    05: Check that Nm_RemoteSleepIndication is not called yet
    06: Check that Nm_RemoteSleepIndication is called (Normal Operation Remote Sleep is entered)
    07: Check that the currebnt state is still Normal Operation
    08: Do a Repeat Message Request
    09: Check that the current state is Repeat Message State
    10: Wait until Message cycle offset almoast expires
    11: Check that SoAd_IfTransmit is not called yet
    12: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMessageState_ReadySleepRemoteSleep</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>662</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     - Test should prove that in case a Repeat Message State is entered from
    Ready Sleep Remote Sleep message cycle timer is loaded with
    UdpNmMsgCycleOffset.
     - Test should prove that in case Normal Opration Remote Sleep is entered
     from Ready Sleep Remote Sleep state a message is sent immediately.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Check that the current state is Repeat Message State
    04: Wait until Repeat message timer and Remote Sleep Indication timer almoast expires
    05: Check that Nm_RemoteSleepIndication is not called yet
    06: Check that Nm_RemoteSleepIndication is called (Normal Operation Remote Sleep is entered)
    07: Release the network
    08: Check that the current state is Ready Sleep State
    09: Request Repeat Message State
    10: Check the tthe current state is Repeat Message State
    11: Wait until Message Cycle Offset almoast expires
    12: Check that SoAd_IfTransmit is not called yet
    13: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.2)
        - check that SoAd_IfTransmit is called
          after Message Cycle Offset expired.
    14: Request the network
    15: Wait until State machine enters Normal Opeartion Remote Sleep State
    16: Check that Nm_RemoteSleepIndication has been called
    17: Release the network
    18: Check that the current state is Ready Sleep State
    19: Request the network
    20: VP(UdpNm.SWS_UdpNm_00006)
        - check that after entering Normal Opration State from Ready Sleep state
        a message is sent immediately.
    21: Check that the current state is normal operation state
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_ReadySleepRemoteActivity_ComDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case Normal Operation Remote Activity is
     entered from Ready Sleep Remote Activity and communication is diabled,
     no messages shall be send.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Check that the current state is Repeat Message State
    04: Wait until Repeat Message timer expires
    05: Check that current state is Ready Sleep State
    06: Disable communication
    07: Request the network
    08: Check that the current state is normal operation state
    09: VP(UdpNm.SWS_UdpNm_00006, UdpNm.SWS_UdpNm_00170)
        - Check that SoAd_IfTransmit is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_ReadySleepRemoteSleep_ComDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case Normal Operation Remote Sleep is
     entered from Ready Sleep Remote Sleep and communication is diabled,
     no messages shall be send.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions = 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check that the current state is Repeat Message State
    04: Wait until Repeat Message timer and Remote Sleep Timer expires
    05: Check that Nm_RemoteSleepIndication has been called
    06: Release the network
    07: Check that the current state is Ready Sleep State
    08: Disable Communication
    09: Request the network
    10: Check that the current state is Normal Operation State
    11: VP(UdpNm.SWS_UdpNm_00170, UdpNm.SWS_UdpNm_00006)
        Check that SoAd_IfTransmit is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_NetworkGwEraRequest_UdpNmImmediateRestartEnabled_PrepareBusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from PrepareBusSleepMode due to UdpNm_NetworkGwEraRequest
   active wakeup bit is not set and immediate restart message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateRestartEnabled is set to true
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_PassiveStartUp
    03: Wait until state machine enters Prepare Bus Sleep Mode
    04: Check current state is Prepare Bus Sleep
    05: Call UdpNm_NetworkGwEraRequest
    06: Wait until a message is sent on the bus
    07: VP(UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateRestartEnabled.PrepareBusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_NetworkGwEraRequest call
  
Test Output: 
    Active wakeup bit is not set
    Immediate message is sent
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_NetworkGwEraRequest.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PassiveStartup_NetworkRequest_Sequence_UdpNmImmediateRestartEnabled_PrepareBusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_14/source/application/UdpNm_ConTest_14.c</sourcefile>
      <sourceline>1133</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   Test should prove that in case network mode is entered from PrepareBusSleepMode due to passive startup, network request sequence
   active wakeup bit is not set and immediate message is sent.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is set to true.
    UdpNmImmediateRestartEnabled is set to true.
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_PassiveStartUp
    03: Wait until state machine enters Prepare Bus Sleep Mode
    04: Check current state is Prepare Bus Sleep
    05: Call Passive Startup, Network request sequence
    06: Wait until a message is sent on the bus
    07: VP(UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateRestartEnabled.PrepareBusSleepMode)
         - Check that message has been sent on the bus and active wakeup bit is not set
  
Test Input: 
    UdpNm_PassiveStartUp, UdpNm_NetworkRequest sequence call
  
Test Output: 
    Active wakeup bit is not set
    Immediate message is sent
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PassiveStartup.NetworkRequest.Sequence.UdpNmImmediateRestartEnabled.PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_RepeatMessageTimeZero</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_15/source/application/UdpNm_ConTest_15.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test checks that in case the RepeatMessageTime is configured 0
    then the transition to Ready Sleep State is done after the next
    Mainfunction call.
  
Test Object: None.
Test Precondition: 
    VP(UdpNm.ECUC_UdpNm_00022): - UdpNmRepeatMessageTime = 0
  
Test Execution: 
    01: Initialize the UdpNm module.
    02: Perform a passive startup
    03: Invoke MainFunction
    04: VP (UdpNm.SWS_UdpNm_00106):
        - Check if the UdpNm is in the Ready Sleep State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_BussSleep_NetworkMode_ActiveWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that 
  
Test Object: None.
Test Precondition:  
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Check the current state is Repeat Message State
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00334.1)
        - check that all imediates are sent
    05: Wait until Message Cycle Time almoast expires
    06: Check that SoAd_IfTransmit is not called yet
    07: Check that SoAd_IfTransmit is called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_BussSleep_NetworkMode_PassiveStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a passive startup 
     even if UdpNmImmediateNmTransmissions != 0,
     the first message is sent after Message Cycle Offset expires.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Check the current state is Repeat Message State
    04: Wait until Message Cycle Offset almoast expires
    05: Check that SoAd_IfTransmit_Stub is not called yet
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00005.1)
        - Check that after Message Cycle Offset expired SoAd_IfTransmit is called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_PrepareBussSleep_NetworkMode_NetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a Network mode is entered
     from Prepare Buss Sleep Mode via a network request
     Immediate messages are sent.
  
Test Object: None.
Test Precondition:  
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a pssive startup
    03: Wait until the current state is Prepare Buss Sleep Mode
    04: Do a network request
    05: Check the current state is Repeat Message State
    06: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.1, UdpNm.EB_Ref.SWS_UdpNm_00334.2)
        - check that all immediates are sent
    07: VP (UdpNm.SWS_UdpNm_00330)
        - check that after immediates are sent messages are sent with Message Cyele Time
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_PrepareBussSleep_NetworkMode_PassiveStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>322</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a Network mode is entered
     from Prepare Buss Sleep Mode via a passive startup
     the first message is sent after Message ycle Offset expires.
  
Test Object: None.
Test Precondition:  
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Wait until Current state is Prepare Buss Sleep Mode
    04: Call Passive Startup
    05: Check that the current state is Repeat Message State
    06: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.1)
        - Check that the first message is sent after Message Cycle Offset expires
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_NormalOperation_RepeatMessageState</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a Network mode is entered
     from Prepare Buss Sleep Mode via a passive startup
     the first message is sent after Message ycle Offset expires.
  
Test Object: None.
Test Precondition:  
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check that the current state is Repeat Message State
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00334.1)
        - Check that all immediates are sent 
    05: Check that after all imediates are sent, the first message is sent after Message Cyle Time expires
    07: Request Repeat Message State
    08: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.1)
        - Check that the first message is sent after Message Cycle Offset expires 
    09: Check that the current state is Repeat Message State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_ReadySleep_RepeatMessageState</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a Network mode is entered
     from Prepare Buss Sleep Mode via a passive startup
     the first message is sent after Message ycle Offset expires.
  
Test Object: None.
Test Precondition:  
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a Passive Startup
    03: Wait until state machine enters Ready Sleep State
    04: Call Repeat Message Request
    05: VP(UdpNm.EB_Ref.SWS_UdpNm_00005.1)
        - Check that the first message is sent after Message Cycle Offset expires 
    06: Check that the current state is Repeat Message State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_NetworkMode_ReEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_16/source/application/UdpNm_ConTest_16.c</sourcefile>
      <sourceline>619</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case a Network mode is entered
     from Prepare Buss Sleep Mode via a passive startup
     the first message is sent after Message ycle Offset expires.
  
Test Object: None.
Test Precondition: 
      - Important test configuration details:
      UdpNmImmediateNmTransmissions != 0
  
Test Execution: 
    01: Initialize UdpNm
    02: Request Network
    03: Check that the current state is Repeat Message State
    04: VP(UdpNm.EB_Ref.SWS_UdpNm_00334.1)
        - Check that all immediates are sent
    05: Check that after all imediates are sent, the first message is sent after Message Cyle Time expires
    06: Check the current state is Normal Operation state
    07: Request Network
    08: Check that the current state is Repeat Message State
    09: VP(UdpNm.SWS_UdpNm_00454)
        - Check that all immediates are sent
    10: Check that after all imediates are sent, the first message is sent after Message Cyle Time expires
    11: Check the current state is Normal Operation state
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_StateChangeNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_17/source/application/UdpNm_ConTest_17.c</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify when Repeat Message state is entered from Bus Sleep state due to an active
    request, correct state change notification is sent on the bus on the first message.
    The test also verifies that in case immediates are used the first message
    is sent after Network State Change notification is called.
  
Test Object: None.
Test Precondition: 
    UdpNmStateChangeIndEnabled = true;
  
Test Execution: 
    01: Initialize UdpNm.
    02: Request the network.
    03: Call main function.
    04: Check the current state is Repeat Message.
    05: Check SoAd_Transmit is invoked.
    06: VP(UdpNm.EB.StateChangeNotification): Check if NMS Data is sent correctly on the bus,
        on the first message.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_Init_NULL_PTR</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_17/source/application/UdpNm_ConTest_17.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case UdpNm_Init is called with NULL_PTR
     the module shall not be (re)initialized.
  
Test Object: None.
Test Precondition: 
      UdpNmDevErrorDetect is set to false
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Check the current state is Repeat Message
    04: Call UdpNm_Init with NULL_PTR
    05: VP(UdpNm.EB.PBCFGM110)
        Check that the current state remains Repeat Message.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_NetworkRelease_HandleMultipleRequests</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_17/source/application/UdpNm_ConTest_17.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case UdpNm is in Ready Sleep State
     and parameter UdpNmPnHandleMultipleNetworkRequests is set to true
     and network is released the state machine stays in Ready Sleep State
  
Test Object: None.
Test Precondition: 
      UdpNmPnSupported is set to true
      UdpNmPnHandleMultipleNetworkRequests true for channel 0
  
Test Execution: 
    01: Initilize UdpNm
    02: Do a passive startup
    03: Wait until state machine goes to Ready Sleep State
    04: Check that the state mmachine Reached Ready Sleep State
    05: Call network release
    06: VP(UdpNm.SWS_UdpNm_00214)
        - Check that the state machine remains in Ready Sleep State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReadySleep_NetworkRelease_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_17/source/application/UdpNm_ConTest_17.c</sourcefile>
      <sourceline>304</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case UdpNm is 
     in Ready Sleep Remote Sleep State and
     parameter UdpNmPnHandleMultipleNetworkRequests is set to true and
     network is released the state machine 
     remains in Ready Sleep Remote Sleep State.
  
Test Object: None.
Test Precondition:  
      UdpNmPnSupported is set to true
      UdpNmPnHandleMultipleNetworkRequests false for channel 1
      UdpNmRemoteSleepIndEnabled is set to true
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Wait until Remote Sleep Indication is called
    04: Check the current state is Normal Operation State
    05: Check remote sleep indication is called
    06: Release the network
    07: Check state machine reached Ready Sleep State
    08: Release the network
    09: VP(UdpNm.SWS_UdpNm_00214)
        - Check the state machine remains in Ready Sleep State 
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReadySleep_NetworkRelease_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_17/source/application/UdpNm_ConTest_17.c</sourcefile>
      <sourceline>406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case UdpNm is 
     in Ready Sleep Remote Activity State and
     parameter UdpNmPnHandleMultipleNetworkRequests is set to true and
     network is released the state machine 
     remains in Ready Sleep Remote Activity State.
  
Test Object: None.
Test Precondition:  
      UdpNmPnSupported is set to true
      UdpNmPnHandleMultipleNetworkRequests false for channel 1
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Wait until state machine goes to Normal Operation Remote Activity State
    04: Check the current state is Normal Operation State
    05: Check that Remote Sleep Indication has not been called
    06: Release the network
    07: Check the current state is Ready Sleep State
    08: Release the network
    09: VP(UdpNm.SWS_UdpNm_00214)
        - Check state machine remains in state Ready Sleep State
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_18/source/application/UdpNm_ConTest_18.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case parameter UdpNmAllNmMessagesKeepAwake
     is set to false and PNI bit is set to zero or no relevant PN is requested
     the NM-PDU is dropped
  
Test Object: None.
Test Precondition: 
      UdpNmAllNmMessagesKeepAwake is set to false for channel 1
      UdpNmPnEnabled is set to true for channel 1
      UdpNmUserDataRxPdu is configured for channel 1
  
Test Execution: 
    01: Initialize the module
    02: Set user data so PNI bit is zero
    03: Call RX_Indication
    04: VP(UdpNm.SWS_UdpNm_00462)
        - Check that in case PNI bit is zero the PDU is dropped
    05: Set user data so no relevant PN is selected
    06: Call RX_Indication
    07: VP(UdpNm.SWS_UdpNm_00460)
        - Check that in case no relevant PN is selected message is dropped
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNmAllNmMessagesKeepAwake_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_18/source/application/UdpNm_ConTest_18.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     The test should prove that in case parameter UdpNmAllNmMessagesKeepAwake
     is set to true and PNI bit is set to zero or no relevant PN is requested
     only standard RX handling is performed (omitting PN handling).
  
Test Object: None.
Test Precondition: 
      UdpNmAllNmMessagesKeepAwake is set to true for channel 0
      UdpNmPnEnabled is set to true for channel 0
      UdpNmUserDataRxPdu is configured for channel 0
  
Test Execution: 
    01: Initialize the module
    02: Set user data so PNI bit is zero
    03: Call Rx Indication
    04: VP(UdpNm.SWS_UdpNm_00329)
        - Standard RX handling is performed even if PNI bit is zero
    05: VP(UdpNm.SWS_UdpNm_00329)
        - Check that partial network handling is omitted
    06: Set user data so no relevant PN is selected
    07: Call Rx indication
    08: VP(UdpNm.SWS_UdpNm_00461)
        - Check that even if no relevant PN is selected,
          standard Rx handling is still performed
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_CWU_Rx_Enabled_false</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_19/source/application/UdpNm_ConTest_19.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case parameter UdpNmCarWakeUpRxEnabled
    is set to FALSE, function Nm_CarWakeUpIndication is not called.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_SoAdIfRxIndication
    03: VP(UdpNm.SWS_UdpNm_00374, UdpNm.ECUC_UdpNm_00076)
        - Check that Nm_CarWakeUpIndication is not called
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_CWU_Rx_Enabled_Filtering_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_19/source/application/UdpNm_ConTest_19.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case parameter UdpNmCarWakeUpRxEnabled
    is set to TRUE and UdpNmCarWakeUpFilterEnabled is set to FALSE,
    function Nm_CarWakeUpIndication is called only if
    in byte UdpNmCarWakeUpBytePosition bit UdpNmCarWakeUpBitPosition is set.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_SoAdIfRxIndication
    03: Check that Nm_CarWakeUpIndication is not called
    04: VP (UdpNm.ECUC_UdpNm_00087, UdpNm.ECUC_UdpNm_00086):
        - Set CarWakeup bit in CarWakeup Byte
    05: Call UdpNm_SoAdIfRxIndication
    06: VP(UdpNm.SWS_UdpNm_00373, UdpNm.SWS_UdpNm_00374, UdpNm.ECUC_UdpNm_00077, UdpNm.ECUC_UdpNm_00076)
        - Check that Nm_CarWakeUpIndication is called
        with the correct Channel Handle
    07: VP(UdpNm.SWS_UdpNm_00375)
        - check that data transmitted with Rx indication is
          the same as data which is returned by UdpNm_GetPduData
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00373</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_CWU_Rx_Enabled_Filtering_Enabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_19/source/application/UdpNm_ConTest_19.c</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test should prove that in case parameter UdpNmCarWakeUpRxEnabled
    is set to TRUE and UdpNmCarWakeUpFilterEnabled is set to TRUE,
    function Nm_CarWakeUpIndication is called only if
    in byte UdpNmCarWakeUpBytePosition bit UdpNmCarWakeUpBitPosition is set
    and Node Id in the received PDU is equal to
    UdpNmCarWakeUpFilterNodeId.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_SoAdIfRxIndication
    03: VP(UdpNm.ECUC_UdpNm_00076)
        - Check that Nm_CarWakeUpIndication is not been called
    04: VP(UdpNm.ECUC_UdpNm_00087, UdpNm.ECUC_UdpNm_00086)
        - Set CarWakeup bit in CarWakeup byte
    05: VP(UdpNm.ECUC_UdpNm_00076)
        - Check that Nm_CarWakeUpIndication is not been called
    06: Set Node Id
    07: Call UdpNm_SoAdIfRxIndication
    08: VP(UdpNm.SWS_UdpNm_00373, UdpNm.SWS_UdpNm_00376, UdpNm.ECUC_UdpNm_00077, UdpNm.ECUC_UdpNm_00078, UdpNm.ECUC_UdpNm_00076)
        - Check that Nm_CarWakeUpIndication is called
        with the correct ChannelHandle id
    09: VP(UdpNm.SWS_UdpNm_00375)
        - check that data transmitted with Rx indication is
          the same as data which is returned by UdpNm_GetPduData
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00373</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00375</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00376</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00077</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_32027</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Bus sleep state to
    Repeat message state triggered by a network request.
  
Test Object: None.
Test Precondition: 
    * UDPNM_STATE_CHANGE_IND_ENABLED shall be STD_ON.
    * UDPNM_PASSIVE_MODE_ENABLED shall be STD_OFF.
  
Test Execution: 
    01: Initialize the UdpNm module.
    02: Also verify that no error has been reported to DET.
    03: Go to the Bus sleep state.
    04: Call the UdpNm_MainFunction() before any triggers/requests.
    05: VP (UdpNm.SWS_UdpNm_00092, UdpNm.SWS_UdpNm_00094):
        - Verify whether the current state is Bus Sleep State.
    06: Call UdpNm_NetworkRequest() to Request network for a UdpNm channel.
    07: Call the UdpNm_MainFunction() so that UdpNm transits to the Repeat
        message state.
    08: VP (UdpNm.EB_Ref.SWS_UdpNm_00095.1):
        - The present state is Repeat message state and that no
          error has been reported to DET.
    09: VP (UdpNm.SWS_UdpNm_00166)
        Verify that Nm_StateChangeNotification and Nm_NetworkMode are called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32019</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Bus sleep mode to
    Repeat message state triggered by a Passive startup.
  
Test Object: None.
Test Precondition: 
   * UdpNm is initialized.
   * UdpNmPassiveModeEnabled is enabled.
   * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01: Go to the Bus sleep state.
    02: VP (UdpNm.SWS_UdpNm_00092, UdpNm.SWS_UdpNm_00094):
        - Call the UdpNm_MainFunction() before any triggers/requests
        and check that the current state didn't change from Bus-Sleep.
    03: Trigger a passive startup and call the UdpNm_MainFunction() so that
        UdpNm transits to the Repeat message state.
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00095.1, UdpNm.EB_Ref.SWS_UdpNm_00128.1,
            UdpNm.SWS_UdpNm_00092, UdpNm.SWS_UdpNm_00094):
        - The present state is Repeat Message State and mode is
          Network Mode and that no error has been reported to DET.
    05: VP (UdpNm.SWS_UdpNm_00097):
        - UdpNm notifies Nm about the mode change through Nm_NetworkMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00128.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32053</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>236</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Repeat message state to
    Normal operation state when repeat message timeout occurs.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmPassiveModeEnabled is disabled.
    * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01: Go to the Repeat message state.
    02: Request network for a UdpNm channel so that the state changes to repeat
        message state.
    03: Call UdpNm_MainFunction for (repeat message timer - 1) times.
    04: The current state is still repeat message state.
    05: Call UdpNm_MainFunction once so that the repeat message timer expires.
    06: VP (UdpNm.SWS_UdpNm_00102, UdpNm.SWS_UdpNm_00103):
        - The state changes to Normal operation state.
    07: Verify that Nm_StateChangeNotification is called for indicating the
        state change to Nm.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32030</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when UdpNm_NetworkRequest() is called if UdpNm is in
    Ready Sleep state and 'UdpNmPnHandleMultipleNetworkRequests'
    is set to FALSE, then UdpNm does not perform state transition to Repeat
    Message State however performs state transition to Normal
    operation state (UdpNm.SWS_UdpNm_00110).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - UdpNmPnHandleMultipleNetworkRequests is set to 'false' for all
        the network channels (Channel0, Channel1 &amp; Channel2)
      - UdpNmPassiveModeEnabled is disabled.
      - UdpNmStateChangeIndEnabled is enabled.
    - Module State
      - UdpNm is initialized.
  
Test Execution: 
    01: Go to Ready sleep state.
    02: Request network for a UdpNm channel.
    03: Call UdpNm_MainFunction once so that a transition occurs to
        Normal operation state.
    04: VP (UdpNm.SWS_UdpNm_00110):
        - The transition to Normal operation state occurred without
          DET calls.
    05: Verify that Nm_StateChangeNotification is called for indicating the
        state change to Nm.
    06: Invoke main function until Remote Sleep indication timer expires
    07: Release the network
    08: Invoke main function once
    09: Ensure that network channel has entered Ready sleep state
    10: Request the network
    11: Invoke main function once
    12: VP (UdpNm.SWS_UdpNm_00110):
        - Network channel enters Normal Operation state
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32055</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Ready Sleep State to
    Repeat Message State triggered by a Repeat message state request.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmPassiveModeEnabled is disabled.
    * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01: Go to Ready sleep state.
    02: Request the Repeat message state.
    03: Call UdpNm_MainFunction once so that a transition occurs to Repeat
        message state.
    04: VP (UdpNm.SWS_UdpNm_00112):
        - The transition occurred to repeat message state without DET calls.
    05: VP (UdpNm.SWS_UdpNm_00113):
        - The Repeat message bit is set in the transmitted PDU.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32042</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Ready Sleep State to
    Prepare bus sleep State during the timeout of the Nm-timeout timer.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmPnEnabled == false
  
Test Execution: 
    01: Go to the Ready sleep state.
    02: Receive a Pdu in the same channel and call one MainFunction so that
        the Nm timeout timer is restarted.
    03: Because the UdpNmPnEnabled is FALSE the PduR_UdpNmRxIndication() won't be called
    04: Call UdpNm_MainFunction() until UdpNmTimeoutTime is about to expire, i.e,
        (UdpNmTimeoutTime - 2) times.
    05: VP (UdpNm.SWS_UdpNm_00092):
        - The current state is ready sleep state.
    06: Call main function once.
    07: VP (UdpNm.SWS_UdpNm_00109, UdpNm.SWS_UdpNm_00092):
        - Check whether the current state is Prepare bus sleep state,
        - The transition occurred without DET calls.
    08: VP (UdpNm.SWS_UdpNm_00114):
        - Verify the calls to Nm, i.e, Nm_StateChangeNotification and
        Nm_PrepareBusSleepMode are called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32029</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To Test state transition of UdpNm channel from Normal operation state to
    Ready sleep state triggered by a network release.
  
Test Object: None.
Test Precondition: 
    * UdpNmPassiveModeEnabled is disabled.
    * UdpNmStateChangeIndEnabled is enabled.
    * UdpNm is initialized.
  
Test Execution: 
    01: Go to the Normal operation state.
    02: Release the network by calling UdpNm_NetworkRelease.
    03: Call the UdpNm_MainFunction once
    04: VP (UdpNm.SWS_UdpNm_00118):
        - A transition occurs to the Ready sleep state.
    05: Verify Nm_StateChangeNotification is called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32054</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state transition of UdpNm channel from Normal operation state
    to Repeat message state triggered by a Repeat message state request.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmNodeDetectionEnabled is enabled.
    * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01: Go to the Normal operation state.
    02: Call UdpNm_RepeatMessageRequest and call UdpNm_MainFunction() once.
    03: VP (UdpNm.SWS_UdpNm_00120):
        - The current state is repeat message state.
    04: Verify Nm_StateChangeNotification is called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32043</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state transition of UdpNm Channel from Prepare bus sleep state
    to Repeat message state triggered by a reception of a Nm PDU.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmStateChangeIndEnabled is enabled.
    * UDPNM_PDU_RX_INDICATION_ENABLED is TRUE.
  
Test Execution: 
    01: Go to Prepare bus sleep state.
    02: Simulate the reception of an Nm PDU.
    03: Call UdpNm_MainFunction once.
    04: VP (UdpNm.SWS_UdpNm_00124, UdpNm.EB_Ref.SWS_UdpNm_00095.2):
        - The state is changed to Repeat message state
        - No error is reported to DET.
    05: VP (UdpNm.SWS_UdpNm_00166 , UdpNm.SWS_UdpNm_00097 , UdpNm.SWS_UdpNm_00037):
        Verify Nm_StateChangeNotification, Nm_NetworkMode and Nm_PduRxIndication
        are called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32044</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>882</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state transition of UdpNm Channel from Prepare bus sleep mode
    to Repeat message state triggered by a network request.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmStateChangeIndEnabled is enabled.
    * UdpNmPassiveModeEnabled is disabled.
  
Test Execution: 
    01: Go to Prepare bus sleep state.
    02: Call UdpNm_NetworkRequest for requesting the channel.
    03: Call UdpNm_MainFunction once.
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00100.2, UdpNm.SWS_UdpNm_00123):
        - The state changes to Repeat message.
    05: VP (UdpNm.SWS_UdpNm_00166):
        Verify Nm_StateChangeNotification and Nm_NetworkMode are called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32022</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>956</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state transition of UdpNm Channel from PrepareBusSleepState
    to BusSleepState.
  
Test Object: None.
Test Precondition: 
    * UdpNm is initialized.
    * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01: Go to Prepare bus sleep state.
    02: Call UdpNm_MainFunction() for (UDPNM_WAIT_BUS_SLEEP_TIME - 1) times.
    03: VP (UdpNm.SWS_UdpNm_00115):
        - The current state is still Prepare bus Sleep.
    04: Call UdpNm_MainFunction() once for UDPNM_WAIT_BUS_SLEEP_TIME to expire.
    05: VP (UdpNm.SWS_UdpNm_00115):
        - The state is changed to Bus Sleep.
    06: Verify Nm is notified about the state change through
        Nm_StateChangeNotification.
    07: VP (UdpNm.SWS_UdpNm_00126):
        - Nm is notified about the mode change through Nm_BusSleepMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0107</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Init tests
Test Description: 
    To test that SoAd_IfTransmit() is not invoked after UdpNm initialization.
  
Test Object: None.
Test Precondition: 
    * The value of "UdpNmPassiveModeEnabled" must be "false".
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: For each configured UdpNm Channel invoke UdpNm_MainFunction() in a loop
        until UdpNm message cycle time expires.
    03: VP (UdpNm.SWS_UdpNm_00033):
        - SoAd_IfTransmit() is not invoked.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0108</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Init tests
Test Description: 
    To test that UdpNm module sets each byte of the user data to 0xFF after
    initialization.
  
Test Object: None.
Test Precondition: 
    * "UdpNmPassiveModeEnabled " is set to value "false".
    * Partial Networking is not supported.
  
Test Execution: 
    01: Initialize stubs &amp; UdpNm module.
    02: For each configured UdpNm Channel, execute steps 03 to 07 (in a loop).
    03: Verify the value of UdpNm User Data Length (as greater than 0).
    04: Simulate UdpNm_NetworkRequest() in Bus Sleep mode and verify that it
        returns E_OK.
    05: Invoke UdpNm_MainFunction() in a loop until the UdpNm message cycle
        offset timer expires.
    06: Verify SoAd_IfTransmit() has been invoked.
    07: VP (UdpNm.EB_Ref.SWS_UdpNm_00025):
        - Each byte in the user data is set to 0xFF.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0109</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Init tests
Test Description: 
    To test that UdpNm module sets control bit vector(CBV) to 0x00 after
    UdpNm initialization.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to"false".
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: Repeat steps 03 to 07 for all UdpNm channels.
    03: Verify that value of Control bit vector position is not UDPNM_PDU_OFF.
    04: Call UdpNm_NetworkRequest() in bus sleep mode and verify whether it
        returned "E_OK".
    05: Invoke UdpNm_MainFunction() in a loop until the UdpNm message cycle
        offset expires.
    06: VP (UdpNm.ASRR2111.SWS_UdpNm_00032):
        - SoAd_IfTransmit() is invoked to transmit PDU.
    07: VP (UdpNm.EB_Ref.SWS_UdpNm_00085):
        - The value of control bit vector is 0.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0111</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Init tests
Test Description: 
    To test that SoAd_IfTransmit() is invoked for the transmission of
    Network Management PDUs when message cycle timer expires.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to"false".
  
Test Execution: None.
Test Input: None.
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0112</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Init tests
Test Description: 
    To test the state and mode of UdpNm after initialization.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to"false".
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: Perform the following steps for all configured channels.
    03: VP (UdpNm.SWS_UdpNm_00141):
        - The current state is "NM_STATE_BUS_SLEEP".
    04: VP (UdpNm.SWS_UdpNm_00144):
        - The current mode is "NM_MODE_BUS_SLEEP".
    05: VP (UdpNm.SWS_UdpNm_00126):
        - Nm_BusSleepMode() is not invoked.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0077</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1493</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Tx Rx Test
Test Description: 
    Verify the behavior of UdpNm_RequestBusSynchronization() and
    UdpNm_NetworkRequest() when a call to the SoAd_IfTransmit() fails.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
    "UdpNmBusSynchronizationEnabled" is set to "true".
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Loop over steps 03 to 07 for all configured channels.
    03: Set the SoAd stub behavior to return "E_NOT_OK" for SoAd_IfTransmit()
        requests.
    04: Call UdpNm_NetworkRequest() in bus sleep state
    05: VP (UdpNm.SWS_UdpNm_00213):
        - UdpNm_NetworkRequest() returns "E_OK".
    06: Call UdpNm_MainFunction().
    07: Call UdpNm_RequestBusSynchronization() in repeat message state
    08: VP (UdpNm.SWS_UdpNm_00226):
        - UdpNm_RequestBusSynchronization() returns "E_NOT_OK".
    09: VP (UdpNm.SWS_UdpNm_00130):
        - SoAd_IfTransmit() is invoked.
    10: Set the SoAd stub behavior to return "E_OK" for SoAd_IfTransmit
        requests.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SetGetUserDataRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1591</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Tx Rx Test
Test Description: 
    Verify the behavior of UdpNm_SetUserData() when userData length is zero for a channel.
  
Test Object: None.
Test Precondition: 
    * A UdpNmChannel is configured with userdata length 0.
    * UdpNmComUserDataSupport is disabled.
  
Test Execution: 
    01: Call UdpNm_Init().
    02: VP (UdpNm.SWS_UdpNm_00218):
        - Call UdpNm_GetUserData() for channel with DataLength 0 and verify
        that it returned E_NOT_OK.
    03: VP (UdpNm.SWS_UdpNm_00217):
        - Call UdpNm_SetUserData() for a channel with DataLength 0 and verify that
        it returned E_NOT_OK.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMsgTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1651</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that the correct number of NM Messages are sent in the
    Repeat Message State.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
  
Test Execution: 
    01: Initialize stubs.
    02: Invoke UdpNm_Init.
    03: Loop over steps 04 - 07 for each configured UdpNmChannel:
    04: Go to Ready Sleep state.
    05: Invoke UdpNm_RepeatMessageRequest to enter into Repeat Message State.
    06: Call Main function as long as module stays in Repeat Message State.
    07: VP (UdpNm.SWS_UdpNm_00102):
        - The number of NM messages sent in Repeat message state
          is equal to 'RMS Time divide by Message Cycle Time'.
    08: Verify that Ready Sleep state is entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_ConcurrencyAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1757</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that when UdpNm_NetworkRequest() and UdpNm_NetworkRelease()
    are called multiple times within the context of a single main function
    cycle, the updated status of 'Network Requested' status is processed.
    For example when UdpNm is in state "Normal Operation" and the following
    call sequence:
       1. UdpNm_NetworkRelease()
       2. UdpNm_NetworkRequest()
       3. UdpNm_NetworkRelease()
       4. UdpNm_MainFunction()
    will result in the destination state "Ready Sleep".
  
Test Object: None.
Test Precondition: 
    * "UdpNmPassiveModeEnabled" is set to "false".
    Module State:
    * UdpNm is initialized.
    * UdpNm is in Normal Operation State.
  
Test Execution: 
    01: Prepare test case preconditions.
    02: Ensure that UdpNm is in NormalOperationState.
    03: Call UdpNm_NetworkRelease() followed by UdpNm_NetworkRequest() and
        again UdpNm_NetworkRelease().
    04: Invoke UdpNm main function once.
    05: VP (UdpNm.SWS_UdpNm_00118):
        - UdpNm is in state 'NM_STATE_READY_SLEEP'
    06: Call UdpNm_NetworkRequest() followed by UdpNm_NetworkRelease() and again
        UdpNm_NetworkRequest().
    07: Invoke UdpNm main function once
    08: VP (UdpNm.SWS_UdpNm_00110):
        - UdpNm is in state 'NM_STATE_NORMAL_OPERATION'
    09: Invoke UdpNm main function until Remote sleep indication timer expires
    10: Call UdpNm_NetworkRelease() followed by UdpNm_NetworkRequest() and
        again UdpNm_NetworkRelease().
    11: Invoke UdpNm main function once
    12: VP (UdpNm.SWS_UdpNm_00118):
        - UdpNm is in state 'NM_STATE_READY_SLEEP'
    13: Call UdpNm_NetworkRequest() followed by UdpNm_NetworkRelease() and
        again UdpNm_NetworkRequest().
    14: Invoke UdpNm main function once
    15: VP (UdpNm.SWS_UdpNm_00110):
        - UdpNm is in state 'NM_STATE_NORMAL_OPERATION'
    16: Call UdpNm_NetworkRelease() followed by UdpNm_NetworkRequest() and
        again UdpNm_NetworkRelease().
    17: Invoke UdpNm main function once
    18: VP (UdpNm.SWS_UdpNm_00118):
        - UdpNm is in state 'NM_STATE_READY_SLEEP'
    19: Call UdpNm_NetworkRelease() followed by UdpNm_NetworkRequest() and
        again UdpNm_NetworkRelease().
    20: Invoke UdpNm main function once
    21: Ensure that UdpNm remains in state 'NM_STATE_READY_SLEEP'
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32057</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_2/source/application/UdpNm_ConTest_2.c</sourcefile>
      <sourceline>1982</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Normal Operation Remote Sleep re-entry
Test Description: 
    The test should prove that in case the RSI timer expires
    (Nm_RemoteSleepIndication is called) and even if the normal operation state is left
    and then re-entered again Nm_RemoteSleepIndication is not called again.
    The re-entry is done from ready sleep remote sleep (RX indication is not called).
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
    "UdpNmRemoteSleepIndEnabled" is set to "true".
  
Test Execution: 
    01: Initialize stub values.
    02: Initialize UdpNm.
    03: Request the network.
    04: Check that State Machine reached repeat message state.
    05: Wait until RMS timer expires.
    06: Check that State Machine reached normal operation state.
    07: Wait until RSI timer almost expires (1 cycle left).
    08: Check that Nm_RemoteSleepIndication is not yet called.
    09: Wait the last cycle from the RSI time.
    10: VP (UdpNm.SWS_UdpNm_00150):
        Check that after RSI timer expired, Nm_RemoteSleepIndication is called.
    11: Release the network.
    12: Check that State Machine reached ready sleep state.
    13: Request the network.
    14: Check that State Machine reached normal operation state.
    15: Check that Nm_RemoteSleepIndication is not called again
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_20/source/application/UdpNm_ConTest_20.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure UdpNm_GetNodeIdentifier and UdpNm_GetLocalNodeIdentifier
    are available considering channel based configuration.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize test.
    02: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier available only for channel 0.
    03: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 1.
    04: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier available only for channel 0.
    05: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 1.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_Rpt</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_20/source/application/UdpNm_ConTest_20.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure UdpNm_RepeatMessageRequest is available only for channel for which
     UdpNmNodeDetectionEnabled is configured.
     Channel 0 UdpNmNodeDetectionEnabled TRUE;
     Channel 0 UdpNmNodeIdEnabled        TRUE;
     Channel 0 UdpNmRepeatMsgIndEnabled  TRUE;
     Channel 1 UdpNmNodeDetectionEnabled FALSE;
     Channel 1 UdpNmNodeIdEnabled        FALSE;
     Channel 1 UdpNmRepeatMsgIndEnabled  FALSE;
     Channel 2 UdpNmNodeDetectionEnabled FALSE;
     Channel 2 UdpNmNodeIdEnabled        TRUE;
     Channel 2 UdpNmRepeatMsgIndEnabled  FALSE;
     Channel 3 UdpNmNodeDetectionEnabled TRUE;
     Channel 3 UdpNmNodeIdEnabled        TRUE;
     Channel 3 UdpNmRepeatMsgIndEnabled  FALSE;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
     01: Initialize test.
     02: Channel 0 passive startup.
     03: VP(UdpNm.SWS_UdpNm_00221): 
         - UdpNm_RepeatMessageRequest available as UdpNmNodeDetectionEnabled == TRUE.
     04: Channel 1 passive startup
     05: VP(UdpNm.SWS_UdpNm_00221): 
         - UdpNm_RepeatMessageRequest not available as UdpNmNodeDetectionEnabled == FALSE.
     06: Channel 3 passive startup
     07: VP(UdpNm.SWS_UdpNm_00221): 
         - UdpNm_RepeatMessageRequest available as UdpNmNodeDetectionEnabled == TRUE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_20/source/application/UdpNm_ConTest_20.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     UdpNmUserDataEnabled is FALSE.
     Channel 0 UdpNmNodeDetectionEnabled TRUE;
     Channel 0 UdpNmNodeIdEnabled        TRUE;
     Channel 1 UdpNmNodeDetectionEnabled FALSE;
     Channel 1 UdpNmNodeIdEnabled        FALSE;
     Channel 2 UdpNmNodeDetectionEnabled FALSE;
     Channel 2 UdpNmNodeIdEnabled        TRUE;
     Ensure UdpNm_GetPduData is available only for channel for which
     UdpNmNodeDetectionEnabled or UdpNmNodeIdEnabled is configured.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
      01: Initialize test.
      02: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData OK for Channel 0.
      03: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData NOT OK for Channel 1.
      04: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData OK for Channel 2.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_20_DET/source/application/UdpNm_ConTest_20_DET.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure UdpNm_GetNodeIdentifier, UdpNm_GetLocalNodeIdentifier, UdpNm_GetPduData
    are available considering channel based configuration.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize test.
    02: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier available only for channel 0.
    03: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 1 DET reported.
    04: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier available only for channel 0.
    05: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 1 DET
                             reported.
    06: VP(UdpNm.SWS_UdpNm_00138): - UdpNm_GetPduData available only for channel 0.
    07: VP(UdpNm.SWS_UdpNm_00138): - UdpNm_GetPduData not available for channel 1 DET reported.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_UdpNmPnEnabled_False_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_21/source/application/UdpNm_ConTest_21.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if UdpNmPnEnabled is FALSE, UdpNm does not performs partial network aggregation
  
Test Object: None.
Test Precondition: 
    UdpNmPnEnabled == FALSE for channel 1
  
Test Execution: 
    01: Initialize stubs
    02: Initialize module
    03: Goto Normal Opreation State
    04: Invoke Rx Indication
    05: Invoke Main Function Once
    06: VP(UdpNm.EB.PnEnabled_FALSE_1)
        - Check PduR_UdpNmRxIndication is not called
    07: Clear User Data
    08: Wait until a message is sent on the Buss
    09: Check that SoAd_IfTransmit has been invoked
    10: Check that PduR_UdpNmTriggerTransmit has been invoked
    11: Wait until Pn Reset Time expires
    12: VP(UdpNm.EB.PnEnabled_FALSE_2)
        - Check that PduR_UdpNmRxIndication is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnEnabled_FALSE_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PnEnabled_FALSE_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in case Message cycle Offset is greater than Repeat Message Time,
    the repeat message timer is not reloaded in case SoAd_IfTransmit returns E_NOT_OK.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize module
    02: Set SoAd_IfTransmit to return E_NOT_OK
    03: Request the network
    04: Wait until Repeat Message Timer expires
    05: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_2)
        - Check that the current state is Normal Operation State
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in case Message cycle Offset is greater than Repeat Message Time,
    and SoAd_IfTransmit returns E_NOT_OK, the retry to send messages happens on each cycle,
    until SoAd_IfTransmit returns E_OK.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize module and stubs
    02: Set SoAd_IfTransmit to return E_NOT_OK
    03: Request the network
    04: Wait until message cycle offset expires
    05: Check that no messages are sent on the bus
    06: Since SoAd_IfTransmit returns E_NOT_OK, the sending of the message is retried on each cycle
    07: Set SoAd_IfTransmit to return E_OK
    08: Check that the messages are sent with message cycle time again
    09: VP:(UdpNm.EB.UdpNmRetryFirstMessageRequest_1)
         - Check that a message is sent on the bus
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when Message Cycle Offset is less than repeat message time,
    and SoAdIf_Transmit return E_NOT_OK, Repeat Message Timer is reloaded.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize module and stubs
    02: Set SoAd_IfTransmit to return E_NOT_OK
    03: Request the network
    04: Wait until Message cycle offset expires
    05: Wait a couple of mainfunctions
    06: Set SoAd_IfTransmit to return E_OK
    07: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_2)
        - Check that while RMS timer did not expired the state is Repeat Message State
    08: Check the current state is Normal Operation State
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when Message Cycle Offset is less than repeat message time,
    and SoAdIf_Transmit returns E_NOT_OK, the sending of messages are retried on each cycle.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize stubs and module
   02: Set SoAd_IfTransmit to return E_NOT_OK
   03: Request the network
   04: Wait until Message cycle offset expires
   05: Check that SoAd_IfTransmit is not called yet
   06: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_1, UdpNm.SWS_UdpNm_00007)
       - Check that retry of sending messages happens on each cycle
   07: Set SoAd_IfTransmit to return E_OK
   08: Check that a message is sent on the bus
   09: Wait until Message cycle timer almost expires
   10: Check that SoAd_IfTransmit is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when repeat message time is zero
    and SoAdIf_Transmit returns E_NOT_OK, the sending of messages are retried on each cycle
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize stubs and module
    02: Set SoAd_IfTransmit to return E_NOT_OK
    03: Request the network
    04: Wait until Message Cycle Offset expires
    05: Check no messages are sent on the bus
    06: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_1)
        - Check that on each cycle the transmission is retried
    07: Set SoAd_IfTransmit to return E_OK
    08: Check that SoAd_IfTransmit is called
    09: Wait until message cycle timer expires and check that no messages are sent during this time
    10: Check that SoAd_IfTransmit is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when Message Cycle Offset is less than repeat message time,
    and SoAdIf_Transmit returns E_NOT_OK (never returns E_OK), Repeat Message Timer is reloaded
    until Nm timeout timer has not expired.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize stubs and module
    02: Set SoAd_IfTransmit to return E_NOT_OK
    03: Request the network
    04: Wait until Nm timeout time expires
    05: Check that until Repeat Message Timer did not expired the current state
        remains Repeat Message State.
    06: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_4)
        - Check that the current state is Normal Operation State
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when Message Cycle Offset is less than repeat message time,
    and SoAdIf_Transmit return E_NOT_OK (and never returns E_OK), 
    the messages are retried on each cycle until NM timeout timer expires.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize stubs and module
   02: Set SoAd_IfTransmit to return E_NOT_OK
   03: Request the network
   04: Wait until MsgCycleOffset expires
   05: Check that no messages are sent on the bus
   06: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_3)
       - Until Nm timeout time did not expired the retry of sending messages happens on each cycle
   07: Wait until Message cycle timer almost expires
   08: Check that SoAd_IfTransmit is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RetryFirstMessageRequest_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_22/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the case when Message Cycle Offset is greater than repeat message time and
    state repeat message state is entered from Prepare Bus Sleep state and 
    SoAd_IfTransmit returns E_NOT_OK, retry to send messages on the bus happens on each cycle
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize stubs and module
    02: Set SoAd_IfTransmit_Stub to return E_NOT_OK
    03: Enter Prepare Bus Sleep Mode
    04: Request the network
    05: Wait until message cycle offset expires
    06: Check that SoAd_IfTransmit is not called yet
    07: VP(UdpNm.EB.UdpNmRetryFirstMessageRequest_1)
        - Check that retry to send messages on the bus happens on each cycle
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmRetryFirstMessageRequest_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_Schm_Call</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs;
    02: Initialize module;
    03: VP (UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication):
        - Verify SchM_Call for Nm_RepeatMessageIndication;
    04: VP (UdpNm.EB.SchM_Call_Nm_PduRxIndication):
        - Verify SchM_Call for Nm_PduRxIndication;
    05: VP (UdpNm.EB.SchM_Call_Nm_BusSleepMode):
        - Verify SchM_Call for Nm_BusSleepMode;
    06: VP (UdpNm.EB.SchM_Call_Nm_NetworkStartIndication):
        - Verify SchM_Call for Nm_NetworkStartIndication;
    07: VP (UdpNm.EB.SchM_Call_Nm_NetworkMode):
        - Verify SchM_Call for Nm_NetworkMode;
    08: VP (UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
        - Verify SchM_Call for Nm_RemoteSleepCancellation;
    09: VP (UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode):
        - Verify SchM_Call for Nm_PrepareBusSleepMode;
    10: VP (UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication):
        - Verify SchM_Call for Nm_RemoteSleepIndication;
    11: VP (UdpNm.EB.SchM_Call_Nm_StateChangeNotification):
        - Verify SchM_Call for Nm_StateChangeNotification;
    12: VP (UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication):
        - Verify SchM_Call for Nm_CarWakeUpIndication;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_BusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PrepareBusSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_NetworkStartIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_NetworkStartIndication.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Clear Nm_NetworkStartIndication_Stub.
    03: Call UdpNm_RxIndication().
    04: Call UdpNm_MainFunction().
    05: VP (UdpNm.EB.SchM_Call_Nm_NetworkStartIndication):
        - Nm_NetworkStartIndication() is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_UdpNmRxIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes PduR_UdpNmRxIndication.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize the stubs and invoke UdpNm_Init().
    02: Clear PduR_UdpNmRxIndication_Stub.
    03: Invoke UdpNmRxIndication.
    04: Invoke Main Function.
    05: PduR_UdpNmRxIndication is Invoked.
    06: Clear PduR_UdpNmRxIndication_Stub and invoke UdpNmRxIndication.
    07: Invoke Main Function.
    08: Invoke Main Function.
    09: Only relevant bits are set in the EIRA/ERA data sent to Com.
    10: Invoke Main Function.
    11: PduR_UdpNmRxIndication is invoked.
    12: Invoke UdpNmRxIndication and call Main Function.
    13: VP (UdpNm.EB.SchM_Call_Nm_PduRxIndication):
        - PduR_UdpNmRxIndication is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_PduRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_StateChangeNotification_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_StateChangeNotification.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Verify that the value of UdpNm repeat message time is greater than 0.
    03: Call UdpNm_NetworkRequest() in bus sleep state and verify that it
        returns "E_OK".
    04: Call UdpNm_MainFunction().
    05: Nm_StateChangeNotification() is invoked to notify repeat message state.
        Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and the current
        mode is "NM_MODE_NETWORK".
    06: Call UdpNm_NetworkRelease() and verify that it returns "E_OK".
    07: Call UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires.
    08: Nm_StateChangeNotification() is invoked to notify ready sleep state.
        Verify that the current state is "NM_STATE_READY_SLEEP" and the current mode
        is "NM_MODE_NETWORK".
    09: Call UdpNm_MainFunction() in a loop until UdpNm Timeout Time expires.
    10: Nm_StateChangeNotification() is invoked to notify prepare bus sleep state.
        Verify that the current state is "NM_STATE_PREPARE_BUS_SLEEP" and the current
        mode is "NM_MODE_PREPARE_BUS_SLEEP".
    11: Call UdpNm_MainFunction() in a loop until UdpNm Wait Bus Sleep Time expires.
    12: VP(UdpNm.EB.SchM_Call_Nm_StateChangeNotification):
        - Nm_StateChangeNotification() is invoked to notify bus sleep state.
        Verify that the current state is "NM_STATE_ BUS_SLEEP" and the current mode
        is "NM_MODE_ BUS_SLEEP".
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_StateChangeNotification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_RemoteSleepIndication.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs and initialize UdpNm.
    02: Request the network and call mainfunction.
    03: Check thet current state is Repeat Message State.
    04: Call mainfunction RMS number of times.
    05: Clear Nm_RemoteSleepIndication_Stub and wait until RSI timer expires.
    06: VP(UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication):
        - Check that Nm_RemoteSleepIndication has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepCancellation_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>518</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Bring the channel to normal operation state.
    03: Invoke UdpNm_MainFunction(). Initialize Nm_RemoteSleepIndication_Stub.
    04: Invoke UdpNm_MainFunction() in a loop until UdpNm remote sleep indication
        time elapses.
    05: Verify that Nm_RemoteSleepIndication() is invoked.
    06: Release the network and invoke UdpNm_MainFunction() once.
    07: Clear Nm_RemoteSleepCancellation_Stub.
    08: Call UdpNm_RepeatMessageRequest() in ready sleep state and verify that it
        returns "E_OK".
    09: Call UdpNm_MainFunction().
    10: VP (UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
        - Nm_RemoteSleepCancellation() is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepCancellation_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>610</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: Invoke UdpNm_NetworkRequest() in bus sleep state and verify that it returns "E_OK".
    03: Call UdpNm_MainFunction() so that the state changes to repeat message.
    04: Invoke UdpNm_MainFunction() in a loop until the UdpNm repeat message time expires.
    05: Clean Nm_RemoteSleepIndication_Stub.
    06: Invoke UdpNm_MainFunction() in a loop until the UdpNm remote sleep indication time expires.
    07: Call UdpNm_CheckRemoteSleepIndication() and verify that it returns E_OK.
    08: The value of Nm Remote Sleep Indication Pointer is TRUE.
    09: Invoke UdpNm_RxIndication().
    10: Call UdpNm_MainFunction().
    11: VP (UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
        - Nm_RemoteSleepCancellation() is invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepCancellation_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>709</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_RemoteSleepCancellation.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: Invoke UdpNm_NetworkRequest() in bus sleep state and verify that it returned "E_OK".
    03: Call UdpNm_MainFunction().
    04: Invoke UdpNm_MainFunction() in a loop until the UdpNm repeat message time expires.
    05: Clear Nm_RemoteSleepIndication_Stub.
    06: Invoke UdpNm_MainFunction() in a loop until the UdpNm Remote Sleep
        Indication Time expires.
    07: Nm_RemoteSleepIndication is invoked.
    08: Call UdpNm_NetworkRelease() in normal operation state and verify that it returned "E_OK".
    09: Call UdpNm_MainFunction() and clear Nm_RemoteSleepCancellation_Stub.
    10: Call UdpNm_RxIndication().
    11: Call UdpNm_MainFunction().
    12: VP (UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation):
        - Nm_RemoteSleepCancellation() is invoked.
   
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RemoteSleepCancellation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_CarWakeUpIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_CarWakeUpIndication.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_SoAdIfRxIndication
    03: VP(UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication):
        - Check that Nm_CarWakeUpIndication is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_CarWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RepeatMsgIndication_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_23_SchmCall/source/application/UdpNm_ConTest_22.c</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism and UdpNm
    invokes Nm_RepeatMessageIndication.
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: 01: Call UdpNm_Init().
    02: Verify that the value of UdpNm Pdu Control bit vector is not set to UDPNM_PDU_OFF.
    03: Verify the value of UdpNm Repeat Message Time is greater than 0.
    04: Call UdpNm_NetworkRequest() and verify that it returns "E_OK".
    05: Call UdpNm_MainFunction() in a loop until the UdpNm Message Cycle Time expires.
    06: Invoke UdpNm_RxIndication() with Repeat Message Bit set.
    07: Call UdpNm_MainFunction().
    08: VP (UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication):
        - Nm_RepeatMessageIndication() is not invoked.
    09: Call UdpNm_MainFunction() in a loop until the UdpNm Message Cycle Time expires.
    10: Invoke UdpNm_RxIndication() with Repeat Message Bit set.
    11: Call UdpNm_MainFunction().
    12: VP (UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication):
        - Nm_RepeatMessageIndication() is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_Nm_RepeatMessageIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_Schm_Call_StateChangeNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_Nm_StateChangeNotification
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_Nm_StateChangeNotification
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    - 01: Set Nm_StateChangeNotification to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    - 02: initialize UdpNm
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    - 03: VP(UdpNm.EB.SchM_Call_DET)
          - Check DET is reported
:-/,m4_ifelse( :else: )\-:
    - 03: VP(UdpNm.EB.SchM_Call_DET)
          - Check DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_BusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_Nm_BusSleepMode
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_Nm_BusSleepMode
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Wait until current state is Prepare Bus Sleep Mode
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: Set Nm_BusSleepMode to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    05: Wait until current state is Bus Sleep Mode
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    06: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    06: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_NetworkStartIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_NetworkStartIndication
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_NetworkStartIndication
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Intialize UdpNm
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    02: Set Nm_NetworkStartIndication to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    03: Call UdpNm_SoAdIfRxIndication
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_PduRxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_PduRxIndication
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_PduRxIndication
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    02: Set Nm_PduRxIndication to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    03: Call UdpNm_SoAdIfRxIndication
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_NetworkMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_NetworkMode
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_NetworkMode
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    03: Set Nm_NetworkMode to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    04: Go to Repeat Message State
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    05: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    05: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_PrepareBusSleepMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_PrepareBusSleepMode
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_PrepareBusSleepMode
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
    02: Do a passive startup
    03: Wait until state machine reaches Ready Sleep State
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: Set PrepareBusSleepMode to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    05: Wait until state machine goes to Prepare Bus Sleep Mode
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    06: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    06: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RemoteSleepIndication
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RemoteSleepIndication
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    01: Set Nm_RemoteSleepIndication to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    02: Initialize UdpNm
    03: Request the network
    04: Wait until RemoteSleepIndication has been called
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    05: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    05: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RemoteSleepCancellation</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RemoteSleepCancellation
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RemoteSleepCancellation
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
    02: Request the network
    03: Wait until Remote Sleep Indication has been called
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: Set Nm_RemoteSleepCancellation to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    05: Call UdpNm_SoAdIfRxIndication
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    06: VP (UdpNm.EB.SchM_Call_DET)
        - Check that DET has been reported
:-/,m4_ifelse( :else: )\-:
    06: VP (UdpNm.EB.SchM_Call_DET)
        - Check that DET has not been reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_RepeatMessageIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RepeatMessageIndication
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_RepeatMessageIndication
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    02: Set Nm_RepeatMessageIndication to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    03: Call UdpNm_SoAdIfRxIndication
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is reported
:-/,m4_ifelse( :else: )\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check that DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Schm_Call_CarWakeUpIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_24_SchmCallDet/source/application/UdpNm_ConTest_23.c.m4</sourcefile>
      <sourceline>864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_CarWakeUpIndication
    returns different value SCHM_E_OK DET is reported.
:-/,m4_ifelse( :else: )\-:
    Check that in case SchM_Call_UdpNm_RequiredCSEntry_CarWakeUpIndication
    returns SCHM_E_OK DET is not reported.
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize UdpNm
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    02: Set Nm_CarWakeUpIndication to return E_NOT_OK
:-/m4_ifelse( :endif: ))
    03: Call UdpNm_SoAdIfRxIndication
m4_ifelse(PM_UdpNmDevErrorReport,1,\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check DET is reported
:-/,m4_ifelse( :else: )\-:
    04: VP(UdpNm.EB.SchM_Call_DET)
        - Check DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SchM_Call_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_PB_V0_RequestBusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify that SoAd_IfTransmit_Stub.SoAdSrcPduId == 11 for V0.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V0_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V0_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V0.
    03: Call UdpNm_NetworkRequest for Channel0.
    04: Call main function.
    05: Initialize SoAd stub.
    06: Call UdpNm_RequestBusSynchronization for Channel0.
    07: Check if SoAd_IfTransmit_Stub.SoAdSrcPduId == 11; (Value set for V0).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V1_RequestBusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Verify that SoAd_IfTransmit_Stub.SoAdSrcPduId == 13 for variant V1.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
   Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V1_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V1_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V1.
    03: Call UdpNm_NetworkRequest for Channel0.
    04: Call main function.
    05: Initialize SoAd stub.
    06: Call UdpNm_RequestBusSynchronization for Channel0.
    07: Check if SoAd_IfTransmit_Stub.SoAdSrcPduId == 13; (Value set for V1).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V0_NodeId</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure that UdpNm_GetLocalNodeIdentifier is available considering channel
     based configuration.
     Verify that NodeId == 2 for V0.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V0_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V0_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V0.
    03: Call UdpNm_GetLocalNodeIdentifier for Channel0.
    04: Check if UdpNmNodeId = 2 for V0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V1_NodeId</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure that UdpNm_GetLocalNodeIdentifier is available considering channel
     based configuration.
     Verify that NodeId == 4 for V1.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V1_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V1_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V1.
    03: Call UdpNm_GetLocalNodeIdentifier for Channel0.
    04: Check if UdpNmNodeId = 4 for V1.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V0_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure that UdpNm_SoAdIfRxIndication is available considering channel
     based configuration.
     Verify that SduLength == 6 for V0.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V0_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V0_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V0.
    03: Call UdpNm_SoAdIfRxIndication for Channel0.
    04: Check Det_ReportError_Stub.Count == 0.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V1_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure that UdpNm_SoAdIfRxIndication is available considering channel
     based configuration.
     Verify that SduLength != 11 for V1.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    VP(UdpNm.EB.PBSelectable.Master):
       - Check that UdpNm_PBcfg.h exists and can be included.
    VP(UdpNm.EB.PBSelectable.FileName):
       - Verify that file UdpNm_V1_PBcfg.h exist.
    01: VP(UdpNm.EB.PBSelectable.TypeName):
        - Verify that types UdpNm_V1_ConstConfigLayoutType exist.
    02: Inintialize UdpNm with V1.
    03: Call UdpNm_SoAdIfRxIndication for Channel0.
    04: Check Det_ReportError_Stub.Count == 1.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V0_MsgCycleOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Check Message cycle offset for Post build selectable variant V0
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    01: Initialize stub values
    02: Inintialize UdpNm with V0
    03: Call Network request
    04: Call mainfunction until Message Cycle offset almoast expires
    05: Check that SoAD_IfTransmit is not yet called
    06: VP(UdpNm.EB.ECUC_UdpNm_00029)
        - Check that SoAD_IfTransmit is called
  
Test Input: 
    Call Network request
  
Test Output: 
    Check that SoAd_IfTransmit is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PB_V1_MsgCycleOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_25/source/application/UdpNm_ConTest_25.c</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Check Message cycle offset for Post build selectable variant V1
  
Test Object: None.
Test Precondition: 
    Post-build selectable = enable;
  
Test Execution: 
    01: Initialize stub values
    02: Inintialize UdpNm with V1
    03: Call Network request
    04: Call mainfunction until Message Cycle offset almoast expires
    05: Check that SoAD_IfTransmit is not yet called
    06: VP(UdpNm.EB.ECUC_UdpNm_00029)
        - Check that SoAD_IfTransmit is called
  
Test Input: 
    Call Network request
  
Test Output: 
    Check that SoAd_IfTransmit is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_UdpNmPnInfoOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_26/source/application/UdpNm_ConTest_26.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if the content of EIRA changes because of a received NM PDU, UdpNm
    inform the upper layers by calling PduR_UdpNmRxIndication(). By means of
    the Rx Indication function the EIRA data shall be provided to the COM module.
  
Test Object: None.
Test Precondition: 
    UdpNmPnInfo = true;
  
Test Execution: 
    01: Initialize stubs. Invoke UdpNm_Init().
    02: Call UdpNm_RxIndication().
    03: Call main function once.
    04: VP (UdpNm.EB.UdpNmPnInfo):
        - PduR_UdpNmRxIndication is called.
    05: EIRA data provided by COM module is valid.
  
Test Input: None.
Test Output: 
    UdpNm must ignore EIRA/ERA.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmPnInfo</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_PassiveMode_With_Node_Id_Enabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_27/source/application/UdpNm_ConTest_27.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Passive Start up test
Test Description: 
    Verify the that in case passive mode is enabled,
    NodeId can be retrieved via UdpNm_GetLocalNodeIdentifier function.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to TRUE.
    "UdpNmNodeIdEnabled" is set to TRUE.
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: VP(UdpNm.SWS_UdpNm_00220)
        - Call UdpNm_GetLocalNodeIdentifier
    03: Check that the retrieved nodeId is correct
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PassiveStartup_RMSTimeExpire</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_27/source/application/UdpNm_ConTest_27.c</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case passive mode is enabled, and a passive startup occurs,
    and RMS time expires, then UdpNm enters prepare bus sleep mode.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled is set to TRUE.
    More than one channel are configured.
  
Test Execution: 
    01: Initialize the stub values.
    02: Initialize UdpNm.
    03: Do a passive wakeup.
    04: Call main function till RMS timer is about to expire.
    05: Check current mode is network mode and state is repeat message state.
    06: Call main function till TstUdpNmTime timer is about to expire.
    07: VP(UdpNm.SWS_UdpNm_00106)
        Check current mode is prepare bus sleep mode and state is 
        prepare bus sleep state.
  
Test Input: 
    RMS timer expiration after UdpNm_PassiveStartUp call
  
Test Output: 
    Exit from sending submode transition.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_SoAd_IfTransmit_ImmediateNmTransmissions</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_28/source/application/UdpNm_ConTest_28.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If partial networking is enabled and UdpNmRetryFirstMessageRequest is enabled and
    immediate messages are enabled and on the current main function cycle SoAd_IfTransmit
    return E_NOT_OK and on the next main function cycle network is requested again and
    network mode is re-entered again, SoAd_IfTransmit is called only once.
  
Test Object: None.
Test Precondition: 
    UdpNmImmediateNmTransmissions != 0;
    UdpNmMsgCycleOffset = 0;
    UdpNmPnSupported = true;
    UdpNmRetryFirstMessageRequest = true;
  
Test Execution: 
    01: Invoke UdpNm_Init();
    02: Set SoAd_IfTransmit_Stub to return value E_NOT_OK;
    03: Set SoAd_IfTransmit_Stub to 0;
    04: Check that the current state is NM_STATE_BUS_SLEEP for channel 0;
    05: Call UdpNm_PassiveStartUp for channel 0;
    06: Call main function once;
    07: Reset stub SoAd_IfTransmit_Stub to 0;
    08: Set SoAd_IfTransmit_Stub return value to E_OK;
    09: Call UdpNm_NetworkRequest for channel 0;
    10: Call main function once;
    11: VP (UdpNm.EB_Ref.SWS_UdpNm_00334.1, UdpNm.EB.SoAd_IfTransmit_Called_Once):
        - Check if SoAd_IfTransmit_Stub = 1;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00334.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SoAd_IfTransmit_Called_Once</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_29/source/application/UdpNm_ConTest_29.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When Network Mode is entered from Bus Sleep Mode and passive mode is disabled
    (UdpNmPassiveModeEnabled = false) and the number of Immediate Nm messages configured is
    greater than zero (UdpNmImmediateNmTransmissions &gt; 0) and transmission request for at least
    one of the immediate Nm messages fails (SoAd_IfTransmit returns E_NOT_OK), after entering
    in Repeat Message state, the number of Immediate Nm messages sent by UdpNm is equal with
    the number of immediate transmissions configured (UdpNmImmediateNmTransmissions = 4).
    Immediate Nm transmission counter shall be decremented when SoAd_IfTransmit returns E_NOT_OK.
  
Test Object: None.
Test Precondition: 
    UdpNmPnHandleMultipleNetworkRequests = true;
    UdpNmPassiveModeEnabled = false;
  
Test Execution: 
    01: Invoke UdpNm_Init();
    02: Set SoAd_IfTransmit_Stub to return value E_NOT_OK;
    03: Set SoAd_IfTransmit_Stub to 0;
    04: Check that the current state is NM_STATE_BUS_SLEEP for channel 0;
    05: Call UdpNm_PassiveStartUp for channel 0;
    06: Call main function once;
    07: Reset stub SoAd_IfTransmit_Stub to 0;
    08: Set SoAd_IfTransmit_Stub return value to E_OK;
    09: Call UdpNm_NetworkRequest for channel 0;
    10: Call main function once;
    11: Call UdpNm_NetworkRelease for channel 0;
    12: Call main function x(Repeat Message Time = 20);
    13: Check that the current state is NM_STATE_READY_SLEEP for channel 0;
    14: VP (UdpNm.ECUC_UdpNm_00075, UdpNm.EB.SoAd_IfTransmit_Called_Once,
            UdpNm.EB.SoAd_IfTransmit_E_NOT_OK):
        - Check if number of SoAd_IfTransmit transmisions are equal with 4
        (configured parameter UdpNmImmediateNmTransmissions = 4);
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SoAd_IfTransmit_E_NOT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SoAd_IfTransmit_Called_Once</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_0135</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: VersionInfoTests
Test Description: 
    To check whether UdpNm_GetVersionInfo returns the expected version
    information of UdpNM module.
  
Test Object: None.
Test Precondition: 
    "UdpNmVersionInfoApi" is set to"true".
  
Test Execution: 
    01: Set the version information values to invalid value.
    02: Call UdpNm_GetVersionInfo with a valid address.
    03: VP (UdpNm.SWS_UdpNm_00224):
        - The version parameters are set as expected.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_32050</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the UdpNm_Init, UdpNm_GetState and UdpNm_GetVersionInfo
    functionality.
  
Test Object: None.
Test Precondition: 
   * UdpNmVersionInfoApi is enabled.
  
Test Execution: 
    01: Initialize the UdpNm module.
    02: VP (UdpNm.SWS_UdpNm_00141, UdpNm.SWS_UdpNm_00310, UdpNm.SWS_UdpNm_00144, UdpNm.SWS_UdpNm_00208):
        - The default state is Bus Sleep and mode is Bus sleep mode.
    03: Call UdpNm_GetVersionInfo.
    04: VP (UdpNm.SWS_UdpNm_00224): Verify the version information.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32051</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test Remote Sleep Indication in Normal Operation state.
  
Test Object: None.
Test Precondition: 
    * UdpNmRemoteSleepIndEnabled is enabled.
  
Test Execution: 
    01: Go to the NormalOperationState.
    02: Call UdpNm_MainFunction() until the remote sleep indication timer
        expires in the Normal operation state.
    03: VP (UdpNm.SWS_UdpNm_00150):
        - Nm_RemoteSleepIndication is called.
    04: VP (UdpNm.SWS_UdpNm_00153):
        - UdpNm_CheckRemoteSleepIndication() sets nmRemoteSleepIndPtr
          to TRUE indicating that UdpNm has indicated remote sleep.
    05: Verify whether the current state is Normal operation state.
    06: Go to the Repeat message state.
    07: VP (UdpNm.SWS_UdpNm_00153):
        - UdpNm_CheckRemoteSleepIndication() returns E_NOT_OK as
          the state is not normal operation or ready sleep.
    08: Go to Ready Sleep state
    09: VP (UdpNm.SWS_UdpNm_00153):
        - UdpNm_CheckRemoteSleepIndication() returns E_OK as
          the state is ready sleep.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32052</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test Remote sleep cancellation in Normal Operation state.
  
Test Object: None.
Test Precondition: 
    * UdpNmRemoteSleepIndEnabled is enabled.
    * UdpNmStateChangeIndEnabled is enabled.
  
Test Execution: 
    01. Go to the Normal operation state.
    02. Call UdpNm_MainFunction() until the Remote sleep indication timer expires
    03: Provide an Rx indication in ready sleep state.
    04: Call UdpNm_MainFunction() once so that a transition occurs to
        Repeat message state.
    05: VP (UdpNm.EB_Ref.SWS_UdpNm_00152.1, UdpNm.EB_Ref.SWS_UdpNm_00151.1):
        - The following Nm notifications are invoked:
          Remote Sleep Cancellation, state change notification,
          Pdu Rx Indication and Repeat Message Indication.
    06: Verify whether the current state is repeat message state.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00152.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00151.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_33023</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the APIs UdpNm_GetNodeIdentifier() and
    UdpNm_GetLocalNodeIdentifier().
  
Test Object: None.
Test Precondition: 
    UdpNmPduNidPosition shall not be UDPNM_PDU_OFF.
  
Test Execution: 
    01: Go to the Repeat message state.
    02: Request network for a UdpNm channel.
    03: Call UdpNm_MainFunction until the Repeat message timer expires.
    04: Verify whether the current state is normal operation state and verify
        that no DET errors has been reported.
    05: Call UdpNm_GetPduData to get the whole PDU data out of the most
        recently received NM message.
    06: VP (UdpNm.SWS_UdpNm_00219):
        - Call UdpNm_GetNodeIdentifier()
    07: VP (UdpNm.SWS_UdpNm_00132):
        - The returned node identifier is the same as the node Id of the
          last received PDU.
         (Node Id has to be compared with the source node Id in the position
          defined by UdpNmPduNidPosition of received Nm PDU)
    08: VP (UdpNm.SWS_UdpNm_00220):
        - Call UdpNm_GetLocalNodeIdentifier()
    09: VP (UdpNm.SWS_UdpNm_00133):
        - The returned node identifier is the same as the configured
          local node identifier.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RequestBusSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>426</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the following behavior of UdpNm_RequestBusSynchronization() API:
    - The service call UdpNm_RequestBusSynchronization shall trigger
      transmission of a single Network Management PDU if
      UDPNM_PASSIVE_MODE_ENABLED (configuration parameter)
      is not defined. (UdpNm.SWS_UdpNm_00130)
    - If UdpNm_RequestBusSynchronization is called in Bus-Sleep Mode
      and Prepare Bus-Sleep Mode the UdpNm module shall not execute
      the service and shall return E_NOT_OK. (SWS_UdpNm_00187)
    - The service UdpNm_RequestBusSynchronization shall return E_NOT_OK
      if the Network Management PDU transmission ability is disabled.
      (UdpNm.SWS_UdpNm_00181)
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - UdpNmBusSynchronizationEnabled is set to 'true'.
      - UdpNmPassiveModeEnabled is set to 'false'.
  
Test Execution: 
    01. Go to bus sleep state.
    02: Call UdpNm_RequestBusSynchronization() in bus sleep state
    03: VP (UdpNm.EB_Ref.SWS_UdpNm_00187.1):
        - UdpNm_RequestBusSynchronization() returns E_NOT_OK.
    04: Go to prepare bus sleep state.
    05: Call UdpNm_RequestBusSynchronization() in prepare bus sleep state
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00187.2):
        - UdpNm_RequestBusSynchronization() returns E_NOT_OK.
    07: Go to repeat message state.
    08: Disable the NM-PDU transmission ability (UdpNm_DisableCommunication).
    09: VP (UdpNm.SWS_UdpNm_00181):
        - UdpNm_RequestBusSynchronization() returns E_NOT_OK.
        - SoAd_IfTransmit() is not called to transmit Nm PDUs.
    10: Enable the NM-PDU transmission ability (UdpNm_EnableCommunication).
    11: Call UdpNm_RequestBusSynchronization() in repeat message state
    12: VP (UdpNm.SWS_UdpNm_00130):
        - UdpNm_RequestBusSynchronization() returns E_OK.
        - SoAd_IfTransmit() is called to transmit Nm PDUs.
    13: Go to normal operation state.
    14: Disable the NM-PDU transmission ability (UdpNm_DisableCommunication).
    15: VP (UdpNm.SWS_UdpNm_00181):
        - UdpNm_RequestBusSynchronization() returns E_NOT_OK.
        - SoAd_IfTransmit() is not called to transmit Nm PDUs.
    16: Enable the NM-PDU transmission ability (UdpNm_EnableCommunication).
    17: Call UdpNm_RequestBusSynchronization() in normal operation state.
    18: VP (UdpNm.SWS_UdpNm_00130):
        - UdpNm_RequestBusSynchronization() returns E_OK.
        - SoAd_IfTransmit() is called to transmit Nm PDUs.
    19: Go to ready sleep state.
    20: Disable the NM-PDU transmission ability (UdpNm_DisableCommunication).
    21: VP (UdpNm.SWS_UdpNm_00181):
        - UdpNm_RequestBusSynchronization() returns E_NOT_OK.
        - SoAd_IfTransmit() is not called to transmit Nm PDUs.
    22: Enable the NM-PDU transmission ability (UdpNm_EnableCommunication).
    23: Call UdpNm_RequestBusSynchronization() in ready sleep state.
    24: VP (UdpNm.SWS_UdpNm_00130):
        - UdpNm_RequestBusSynchronization() returns E_OK.
        - SoAd_IfTransmit() is called to transmit Nm PDUs.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_33025</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test UdpNm_PassiveStartUp() in different states.
  
Test Object: None.
Test Precondition: 
    * UdpNmPassiveModeEnabled is enabled.
  
Test Execution: 
    01: Go to BusSleepState.
    02: Call UdpNm_PassiveStartUp() and verify that the call is accepted.
    03: Go to PrepareBusSleepState.
    04: VP (UdpNm.SWS_UdpNm_00147, UdpNm.EB_Ref.SWS_UdpNm_00212, UdpNm.EB_Ref.SWS_UdpNm_00128.2):
        - UdpNm_PassiveStartUp() returns E_OK.
    05: Execute the main function once.
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00212, UdpNm.EB_Ref.SWS_UdpNm_00128.2):
        - The state transit to Repeat message state
    07: Go to RepeatMessageState.
    08: VP (UdpNm.SWS_UdpNm_00147, UdpNm.EB_Ref.SWS_UdpNm_00212):
        - UdpNm_PassiveStartUp() returns E_NOT_OK.
    09: Execute the main function once.
    10: VP (UdpNm.EB_Ref.SWS_UdpNm_00212):
        - The state remains in Repeat Message.
    11: Go to NormalOperationState.
    12: VP (UdpNm.SWS_UdpNm_00147, UdpNm.EB_Ref.SWS_UdpNm_00212):
        - UdpNm_PassiveStartUp() returns E_NOT_OK.
    13: Execute the main function once.
    14: VP (UdpNm.EB_Ref.SWS_UdpNm_00212):
        - The state remains in Normal Operation.
    15: Go to ReadySleepState.
    16: VP (UdpNm.EB_Ref.SWS_UdpNm_00212):
        - UdpNm_PassiveStartUp() returns E_NOT_OK.
    17: Execute the main function once.
    18: VP (UdpNm.EB_Ref.SWS_UdpNm_00212):
        - The state remains in Ready Sleep.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00128.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_33026</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test UdpNm_RepeatMessageRequest() in different states.
  
Test Object: None.
Test Precondition: 
    UdpNmNodeDetectionEnabled shall be true.
  
Test Execution: 
    01: Go to BusSleepState.
    02: VP (UdpNm.EB_Ref.SWS_UdpNm_00137.3):
        - UdpNm_RepeatMessageRequest() returns E_NOT_OK.
    03: Go to PrepareBusSleepState.
    04: VP (UdpNm.EB_Ref.SWS_UdpNm_00137.2):
        - UdpNm_RepeatMessageRequest() returns E_NOT_OK.
    05: Go to RepeatMessageState.
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00137.1):
        - UdpNm_RepeatMessageRequest() returns E_NOT_OK.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_33027</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the acceptance of UdpNm_NetworkRequest() and UdpNm_NetworkRelease()
    in different states.
  
Test Object: None.
Test Precondition: 
    * UdpNmPassiveModeEnabled set to FALSE.
  
Test Execution: 
    Repeat steps 01, 02 and 03 for all states.
    01: VP (UdpNm.SWS_UdpNm_00213, UdpNm.SWS_UdpNm_00214): 
        - Call UdpNm_NetworkRequest() and UdpNm_NetworkRelease().
    02: Verify whether UdpNm_NetworkRequest() and UdpNm_NetworkRelease()
        returned E_OK.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_PnDisable_PNIBit_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that if UdpNmPnEnabled is FALSE then UdpNm module always sets
    the value of the transmitted PNI bit to 0.
  
Test Object: None.
Test Precondition: 
    * UdpNmPnEnabled == false
  
Test Execution: 
    01: Initialize the stubs.
    02: Invoke UdpNm_Init().
    03: Execute the folowing for every channel.
    04: Goto Repeat Message state.
    05: Invoke Main Function in a loop until Message Cycle Offset or
        Message Cycle time elapses.
    06: VP (UdpNm.SWS_UdpNm_00333):
        - SoAd_IfTransmit is Invoked.
        - PNI bit(6th bit of CBV byte) is not set.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>965</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, if the UdpNm performs a state change from BusSleep state or
    PrepareBusSleep state to NetworkMode due to a call to UdpNm_NetworkRequest
    (i.e. due to an active wake up) and UdpNmActiveWakeupBitEnabled is TRUE,
    the UdpNm sets the ActiveWakeupBit in the CBV. Further ensure that
    content of user data is not affected.
    Verify that, if the UdpNm module leaves the NetworkMode, the UdpNm module
    resets the ActiveWakeupBit in the CBV.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled = true for at least one channel
  
Test Execution: 
    01: Initialize stubs.
    02: Invoke UdpNm_Init().
    03: For each configured channel, execute steps 04-30.
    04: Ensure current state is BusSleepState
    05: Reset SoAd Tx buffer and set user data in UdpNm
    06: Invoke Network Request
    07: Invoke Main Function once to process UdpNm_NetworkRequest
    08: Check if Repeat Message State is entered.
    09: Check if UdpNm Offset Time is greater than zero then proceed to step 08
        else continue with step 09.
    10: Invoke Main Function in a loop until Message Cycle Offset expires.
    11: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1):
        - If UdpNmActiveWakeupBitEnabled is set for the channel then
          ActiveWakeUp bit is set in CBV.
        - If UdpNmActiveWakeupBitEnabled is not set for the channel then
          ActiveWakeUp bit is not set in CBV.
        - Content of User data is unchanged.
    12: Invoke Main Function in a loop till time equivalent of
        Repeat Message Time expires.
    13: Check if Normal Operation state is reached.
    14: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1):
        - If UdpNmActiveWakeupBitEnabled is set for the channel then
          ActiveWakeUp bit is set in CBV.
        - If UdpNmActiveWakeupBitEnabled is not set for the channel then
          ActiveWakeUp bit is not set in CBV.
    15: Invoke Network Release.
    16: Invoke Main Function once to process UdpNm_NetworkRelease.
    17: Check if Ready Sleep state is entered.
    18: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1):
        - If UdpNmActiveWakeupBitEnabled is set for the channel then
          ActiveWakeUp bit is set in CBV.
        - If UdpNmActiveWakeupBitEnabled is not set for the channel then
          ActiveWakeUp bit is not set in CBV.
    19: Invoke Main Function in a loop till time equivalent of
        TimeoutTime expires.
    20: Check if Prepare Bus Sleep Mode is entered.
    21: Invoke UdpNm_RxIndication() and invoke mainfunction to enter Network Mode.
    22: Check if Repeat Message State is entered.
    23: Check if UdpNm Offset Time is greater than zero then proceed to step 22
        else continue with step 23.
    24: Invoke Main Function in a loop until Message Cycle Offset expires.
    25: VP (UdpNm.SWS_UdpNm_00367):
        - ActiveWakeUp bit is cleared in CBV.
    26: Invoke Tst_GotoState() to enter Prepare Bus Sleep State.
    27: Invoke Network Request.
    28: Invoke Main Function once to process UdpNm_NetworkRequest.
    29: Check if Repeat Message State is entered.
    30: Check if UdpNm Offset Time is greater than zero then proceed to step 31
        else continue with step 32
    31: Invoke Main Function in a loop until Message Cycle Offset expires
    32: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.2):
        - If UdpNmActiveWakeupBitEnabled is set for the channel then
          ActiveWakeUp bit is set in CBV.
        - If UdpNmActiveWakeupBitEnabled is not set for the channel then
          ActiveWakeUp bit is not set in CBV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00367</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>1318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that, if UdpNm performs a state change from BusSleep state to
    NetworkMode due to a call to UdpNm_PassiveStartUp (i.e. due to a passive
    wakeup) and UdpNmActiveWakeupBitEnabled is TRUE, the UdpNm does not set
    the ActiveWakeupBit in the CBV.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = true.
    UdpNmActiveWakeupBitEnabled = true.
  
Test Execution: 
    01: Initialize stubs.
    02. Invoke UdpNm_Init().
    03: For each configured channel, execute steps 04-10.
    04: Invoke Passive StartUp.
    05: Invoke Main Function once to process UdpNm_PassiveStartUp.
    06: Check if Repeat Message State is entered.
    07: Check if UdpNm Offset Time is greater than zero then proceed to step 08
        else continue with step 09.
    08: Invoke Main Function in a loop until Message Cycle Offset expires.
    09: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1):
        - ActiveWakeUp bit is not set in CBV.
    10: Enter the Bus Sleep Mode.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_33028</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_3/source/application/UdpNm_ConTest_3.c</sourcefile>
      <sourceline>1424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case of communication is disabled
    the function UdpNm_Transmit is not called any more.
    After the communication is enabled sending of PDUs is restarted.
    This test checks if the Message Cycle timer
    expires on the same cycle as the communication is disabled,
    NM PDUs are not sent.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled is disabled.
  
Test Execution: 
    01: Initialize stubs.
    02: Initialize UdpNm.
    03: Initialize SoAd_IfTransmit_Stub.Count.
    04: Request the network.
    05: Wait a couple of cycles for UdpNm to send out some data.
    06: VP(UdpNm.ASRR2111.SWS_UdpNm_00032):
        - Check that UdpNm has send the data. (UdpNm_Transmit has been called).
    07: Wait until Message cycle timer has almost expired.
    08: Disable the communication.
    09: On the first cycle the MessageCycleTimer expires so it emits an event
        which if the communication wouldn't be disabled it would trigger
        the transmission of data (UdpNm_Transmit).
        Wait some extra cycles to check that UdpNm_Transmit is not called.
    10: VP(UdpNm.SWS_UdpNm_00170):
        If the communication is disabled the UdpNm_Transmit function
        shall not be called.
    11: Enable the communication.
    12: Wait some main function cycles.
    13: Check that after enabling the communication
        SoAd_IfTransmit_Stub is called again.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_30/source/application/UdpNm_ConTest_30.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNmImmediateRestartEnabled is set to true
   and UdpNmMsgCycleOffset is set to 0 and Network mode is entered via
   UdpNm_NetworkRequest then number of send messages is greater than zero.
   (Transmission does not gets stuck)
  
Test Object: None.
Test Precondition: 
    UdpNmMsgCycleOffset = 0;
    UdpNmImmediateRestartEnabled = TRUE;
    UdpNmPassiveModeEnabled = FALSE;
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto prepare bus sleep mode
    04: Check that prepare bus sleep mode has been reached
    05: Call UdpNm_NetworkRequest
    06: Check that repeat message state has been reached and message is sent on the bus
    07: VP (UdpNm.ECUC_UdpNm_00009, UdpNm.EB.ECUC_UdpNm_00029)
           - Check that repeat message state has been reached and messages are sent on the bus
    08: Check that multiple messages are sent on the bus
  
Test Input: 
   - Call UdpNm_NetworkRequest while state machine is in prepare bus sleep mode
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_30/source/application/UdpNm_ConTest_30.c</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNmMsgCycleOffset is set to 0 and 
   current state is normal operation state
   and rx indications is triggered with repeat message bit set 
   in context of SoAd_IfTransmit then the state machine
   switches to repeat message state and transmission does not gets stuck.
  
Test Object: None.
Test Precondition: 
    UdpNmMsgCycleOffset = 0;
    UdpNmPassiveModeEnabled = FALSE;
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto Normal operation state
    04: Check that Normal operation state has been reached
    05: Simulate Rx indication in context of SoAd_IfTransmit
    06: VP(UdpNm.EB.ECUC_UdpNm_00029) 
        - Check that in case repeat message state is re-entered
        and message transmission is started with zero transmission does not gets stuck
    07: Check that multiple messages are sent on the bus
  
Test Input: 
   - Call UdpNm_SoAdIfRxIndication in context of SoAd_IfTransmit
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_30/source/application/UdpNm_ConTest_30.c</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNmMsgCycleOffset is set to 0 and 
   current state is normal operation state
   and UdpNm_RepeatMessageRequest is triggered in context of SoAd_IfTransmit then the state machine
   switches to repeat message state and transmission does not gets stuck.
  
Test Object: None.
Test Precondition: 
    UdpNmMsgCycleOffset = 0;
    UdpNmPassiveModeEnabled = FALSE;
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto Normal operation state
    04: Check that Normal operation state has been reached
    05: Simulate UdpNm_RepeatMessageRequest in context of SoAd_IfTransmit
    06: VP(UdpNm.EB.ECUC_UdpNm_00029) 
        - Check that in case repeat message state is re-entered
        and message transmission is started with zero transmission does not gets stuck
    07: Check that multiple messages are sent on the bus
  
Test Input: 
   - Call UdpNm_RepeatMessageRequest while state machine is in prepare bus sleep mode
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_30/source/application/UdpNm_ConTest_30.c</sourcefile>
      <sourceline>425</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNmMsgCycleOffset is set to 0 and 
   current state is normal operation state
   and disable, enable communication is triggered in context of SoAd_IfTransmit then the state machine
   switches to repeat message state and transmission does not gets stuck.
  
Test Object: None.
Test Precondition: 
    UdpNmMsgCycleOffset = 0;
    UdpNmPassiveModeEnabled = FALSE;
    UdpNmComControlEnabled = TRUE
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto Normal operation state
    04: Check that Normal operation state has been reached
    05: Simulate UdpNm_DisableCommunication and UdpNm_EnableCommunication in context of SoAd_IfTransmit
    06: VP(UdpNm.EB.ECUC_UdpNm_00029) 
        - Check that in case UdpNm_DisableCommunication and UdpNm_EnableCommunication
        and message transmission is started with message cycle timer zero transmission does not gets stuck
    07: Check that multiple messages are sent on the bus
  
Test Input: 
   - Call UdpNm_NetworkRequest while state machine is in prepare bus sleep mode
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ECUC_UdpNm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_31/source/application/UdpNm_ConTest_31.c</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNmPnHandleMultipleNetworkRequests is set to true and
   UdpNmImmediateNmTransmissions is greater than zero Network mode is re-entered via
   UdpNm_NetworkRequest number of send messages is greater than zero.
   (Transmission does not gets stuck)
  
Test Object: None.
Test Precondition: 
    UdpNmPnHandleMultipleNetworkRequests = TRUE;
    UdpNmImmediateNmTransmissions is greater than zero;
    UdpNmPassiveModeEnabled = FALSE;
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto repeat message state
    04: Check that repeat message state has been reached
    05: Call UdpNm_NetworkRequest while SoAd_IfTransmit is executed
    06: VP(UdpNm.SWS_UdpNm_00454) 
        - Check that UdpNm_NetworkRequest is called message is sent
    07: Check that multiple messages are sent on the bus
  
Test Input: 
   - Call UdpNm_NetworkRequest while SoAd_IfTransmit is executed
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_31/source/application/UdpNm_ConTest_31.c</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case UdpNm_RepeatMessageRequest is called in the context of
   SoAd_IfTransmit repeat message state is re-entered and message is sent twice in the context of mainfunction
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = FALSE;
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Goto normal operation state
    04: Check that normal operation state has been reached
    05: Call UdpNm_RepeatMessageRequest while SoAd_IfTransmit is executed
    06: VP(UdpNm.SWS_UdpNm_00221) 
        - Check that UdpNm_RepeatMessageRequest is called and message is sent twice on the same mainfunction
  
Test Input: 
   - Call UdpNm_RepeatMessageRequest while SoAd_IfTransmit is executed
  
Test Output: 
   - Check that multiple messages are sent on the bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_31/source/application/UdpNm_ConTest_31.c</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that after UdpNm_NetworkRequest is issued, while Imediate messages are configurred and
   in case SoAd_IfTransmit returns first E_OK and on the next mainfunctions
   returns E_NOT_OK the retry to send the message shall happen only until state machine
   is in Repeat Message state.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = FALSE;
    UdpNmImmediateNmTransmissions &gt; 0U
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Request the network
    04: Check that SoAd_IfTransmit is called
    05: Wait until TstImmediateNmCycleTime almoast expires
    06: Set UdpNm_SoAdIfTransmit to return E_NOT_OK
    07: VP(UdpNm.EB.SWS_UdpNm_00330)
         - Wait until RMS expires and check that retry to send message happens on each cycle
         afterwards message is sent with message cycle time
  
Test Input: 
   - Call UdpNm_NetworkRequest
   - SoAd_IfTransmit first returns E_OK, and on the next mainfunctions it returns E_NOT_OK
  
Test Output: 
   - Check that retry to send immediate messages happen on each cycle until RMS expires
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SWS_UdpNm_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_31/source/application/UdpNm_ConTest_31.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that after UdpNm_NetworkRequest is issued, while Imediate messages are configurred and
   in case SoAd_IfTransmit returns first E_OK and on the next mainfunctions
   returns E_NOT_OK and after a couple of mainfunctions it retruns E_OK again
   the immediate messages shall be send only in repeat message state, in case
   repeat message state is left msg cycle time shall be loaded
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = FALSE;
    UdpNmImmediateNmTransmissions &gt; 0U
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Request network
    04: Check current state is repeat message state and message is sent on the bus
    05: Wait until Imediate cycle timer almoast expires
    06: Check that message is not sent on the bus
    07: Set UdpNm_SoAdIfTransmit to return E_NOT_OK
    08: Check that retry to send the immediate messages is retried on each cycle
    09: Set UdpNm_SoAdIfTransmit to return E_OK
    10: Check current state is repeat message state
    11: Check that Immediate cycle time is reloaded for the last time
    12: Check the current state is normal operation state
    13: VP (UdpNm.EB.SWS_UdpNm_00330)
        - Check that after retrying to send immediate messages 
        message cycle timer is reloadad as cycle time
  
Test Input: 
   - Call UdpNm_NetworkRequest
   - SoAd_IfTransmit first returns E_OK, and on the next mainfunctions it returns E_NOT_OK
     and after a couple of mainfunctions returns E_OK
  
Test Output: 
   - Check that retry to send immediate messages happens only in repeat message state
     after message cycle timer is re-loaded
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.SWS_UdpNm_00330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NumberOf_SoAd_IfTransmit_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_31/source/application/UdpNm_ConTest_31.c</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that after UdpNm_NetworkRequest is issued, while Imediate messages are configurred and
   in case SoAd_IfTransmit is called for the second time in current mainfunction 
   immediate message cycle time shall be loaded as cycle time.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = FALSE;
    UdpNmImmediateNmTransmissions &gt; 0U
    UdpNmComControlEnabled = TRUE
  
Test Execution: 
    01: Intialize stubs
    02: Initialize module
    03: Request the network
    04: Check the current state is repeat message state
    05: Check that message is sent on the bus
    06: Wait until Immedate cycle timer almoast expires
    07: Set that SoAd_IfTransmit to return E_NOT_OK only for the second transmision
    08: Check that Disable/Enable Communication has been called and single transmission has been called
    09: VP(UdpNm.ECUC_UdpNm_00075) 
        - Check that message is sent with TstImmediateNmCycleTime as cycle time 
  
Test Input: 
   - Call UdpNm_NetworkRequest
   - While executing SoAd_IfTransmit disable/enable communication occures
  
Test Output: 
   - Check that retry to send immediate messages happens only in repeat message state
     after message cycle timer is re-loaded
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check DET detection functionality for UdpNm_RequestSynchronizedPncShutdown API.
  
Test Object: None.
Test Precondition: 
    dev error detect is enabled
  
Test Execution: 
    01: initialize stubs
    02: call UdpNm_RequestSynchronizedPncShutdown while Can is not initialized
    03: VP (UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown)
        check det was reported with UDPNM_E_NO_INIT as error
    04: initialize UdpNm
    05: call UdpNm_RequestSynchronizedPncShutdown with an invalid channel as parameter
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown)
        check det was reported with UDPNM_E_INVALID_CHANNEL as error
    07: call UdpNm_RequestSynchronizedPncShutdown with an invalid channel as parameter
    08: VP (UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown)
        check det was reported with UDPNM_E_INVALID_CHANNEL as error
    09: call UdpNm_RequestSynchronizedPncShutdown with an invalid pnc ID as parameter
    10: VP (UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.InvalidPncId)
        check det was reported with UDPNM_E_INVALID_FUNCTION_ARG as error
    11: call UdpNm_RequestSynchronizedPncShutdown with an invalid pnc ID as parameter
    12: VP (UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.InvalidPncId)
        check det was reported with UDPNM_E_INVALID_FUNCTION_ARG as error
  
Test Input: 
    invalid calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    Det errors
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00191.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00192.UdpNm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.InvalidPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel
    when an immediate message is about to be sent, a nm message with PNSR bit and
    respective pncIds bits set is sent on the bus instead, and the immediate message
    is delayed by 1 cycle.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to repeat message state
    04: Call main function till just before an immediate message is to be transmitted
    05: clear SoAd_IfTransmit stub count
    06: clear tx buffer
    07: VP(UdpNm.ASRR2111.SWS_UdpNm_91002, UdpNm.ASRR2111.SWS_UdpNm_00479)
        call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for both pncs associated
    08: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    09: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    10: check a message was transmitted
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    12: simulate tx confirmation for sent message
    13: call main function once
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00472)
        check a message was transmitted
    15: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check pnsr and pninfo bits are unset on the nm message sent on the bus
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>314</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel
    when an normal nm message is about to be sent, a nm message with PNSR bit and
    respective pncIds bits set is sent on the bus instead, and the normal nm message
    is delayed by 1 cycle.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: call main function until a normal message is sent
    07: call main function again until a normal message is about to be sent
    08: check the state is still normal operation
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    10: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    11: check no additional message was sent
    12: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    13: check a pn sync shutdown message was transmitted
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus.
        (a pn synchronize shutdown message was sent instead of an immediate message)
    15: simulate tx confirmation for sent message
    16: call main function once
    17: VP (UdpNm.ASRR2111.SWS_UdpNm_00472)
        check a message was transmitted
    18: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check pnsr and pninfo bits are unset on the nm message sent on the bus
    19: check the state is still normal operation
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>472</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel, a failure to transmit
    the pn sync shutdown message will trigger a retransmit on the next main function cycles until a successful
    transmission occurs, as long as the retransmission doesn't exceed the UdpNmPnShutdownMessageRetransmissionDuration
    time window.
  
Test Object: None.
Test Precondition: 
    active channel is tested, and pn sync shutdown retransmission is &gt; 0
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    05: clear SoAd_IfTransmit stub count
    06: simulate a failure to transmit
    07: check transmission was attempted
    08: simulate recovery of communication
    09: clear tx buffer
    10: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    11: call main function once (still in time window of UdpNmPnShutdownMessageRetransmissionDuration)
    12: VP (UdpNm.ASRR2111.SWS_UdpNm_00477, UdpNm.ASRR2111.ECUC_UdpNm_00098)
        check a message was transmitted
    13: check pnsr is set and pninfo bits are set on the nm message sent on the bus
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel, a failure to transmit
    the pn sync shutdown message will trigger a retransmit on the next main function cycles, and if
    retransmission time window exceeds UdpNmPnShutdownMessageRetransmissionDuration duration, then
    retransmission stops.
  
Test Object: None.
Test Precondition: 
    UdpNmPnShutdownMessageRetransmissionDuration &lt; UdpNmMsgCycleTime
    active channel is tested, and pn sync shutdown retransmission is &gt; 0
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: call main function until a normal nm message is transmitted
    06: check a normal nm message was transmitted
    07: check pnsr is not set and pninfo bits are not set on the nm message sent on the bus
    08: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    09: simulate a failure to transmit
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00477, UdpNm.ASRR2111.ECUC_UdpNm_00098)
        check transmission was attempted
    11: call main function once
    12: VP (UdpNm.ASRR2111.SWS_UdpNm_00477, UdpNm.ASRR2111.ECUC_UdpNm_00098)
        check no message was transmitted (normal nor pn sync shutdown)
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    no pn sync message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>704</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in repeat message state
    and neither a normal nm message nor pn sync shutdown message are to be sent, then a message is transmitted
    with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: clear SoAd_IfTransmit stub count
    04: go to repeat message state
    05: check no transmits occured
    06: call main function MsgCycleOffset number of times to transmit an first immediate message
    07: check first immediate message was sent
    08: simulate reception of a message with pnsr bit set on active channel
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    10: call main function once
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096)
        check a message was sent on the bus
    12: call main function till MsgCycleTime time window expires
    13: check second immediate message was sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in repeat message state
    and a normal nm message is to be sent and no pnc sync shutdown message is to be sent, then a message is
    transmitted with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: clear SoAd_IfTransmit stub count
    04: go to repeat message state
    05: check no transmits occured
    06: call main function (MsgCycleOffset - 1) number of times just before first 
        immediate message is to be transmitted
    07: check no message was sent
    08: simulate reception of a message with pnsr bit set on active channel
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    10: call main function once
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    12: call main function till MsgCycleTime time window expires
    13: check immediate message is sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in normal operation state
    and neither a normal nm message nor pn sync shutdown message are to be sent, then a message is transmitted
    with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: call main function till a message  is sent
    06: check a message was sent
    07: simulate reception of a message with pnsr bit set on active channel
    08: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    09: call main function once
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    11: call main function till MsgCycleTime time window expires
    12: check a message was sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in normal operation state
    and a normal nm message is to be sent and no pnc sync shutdown message is to be sent, then a message is
    transmitted with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: clear SoAd_IfTransmit stub count
    04: go to normal operation state
    05: check no transmits occured
    06: call main function (MsgCycleOffset - 1) number of times just before a message is to be transmitted
    07: check no message was sent
    08: simulate reception of a message with pnsr bit set on active channel
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    10: call main function once
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    12: call main function till MsgCycleTime time window expires
    13: check immediate message is sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1193</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after a successful transmission of a pn sync shutdown message, the synchronize shutdown
    pn info bits stored are reset.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: wait for a normal nm message to be sent
    06: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    07: call main function once
    08: check a pn sync shutdown message was transmitted
    09: check pnsr is set and pninfo bits are set on the nm message sent on the bus
    10: simulate TxConfirmation for the sent pn sync shutdown message
    11: wait till MsgCycleOffset and check no messages are sent in between
    12: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check a normal message was sent
  
Test Input: 
    pn sync shutdown message successfully sent
  
Test Output: 
    reset of pn sync shutdown aggregated bits
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1306</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after call to UdpNm_RequestSynchronizedPncShutdown on an active channel, and a
    pn sync shutdown fails to be transmitted, and a new call to UdpNm_RequestSynchronizedPncShutdown
    before next cycle is made, then a new pn sync shutdown message will be sent next cycle with
    all pn info bits set for the respective pncIds of both UdpNm_RequestSynchronizedPncShutdown
    calls.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: reset PduRStub_Buffer
    02: initialize stubs
    03: initialize UdpNm
    04: go to normal operation state
    05: clear SoAd_IfTransmit stub count
    06: wait for a normal nm message to be sent
    07: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid TST_PNCID_1
    08: simulate transmission failure
    09: call main function once
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00477, UdpNm.ASRR2111.ECUC_UdpNm_00098)
        check transmission of a pn sync shutdown message was attempted
    11: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid TST_PNCID_2
    12: simulate recovery of transmission
    13: call main function once
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00477, UdpNm.ASRR2111.ECUC_UdpNm_00098)
        check transmission of a pn sync shutdown message
    15: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00474)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown on different main function cycles
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00474</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00477</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an passive channel then a call to
    Nm_ForwardSynchronizedPncShutdown is made, forwarding the pn info bits from the message to Nm.
  
Test Object: None.
Test Precondition: 
    passive channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: simulate reception of a message on bus requesting TST_PNCID_1 and TST_PNCID_2
        set pnsr bit to 0, and set pn info bits for pncids TST_PNCID_1, TST_PNCID_2 to 1 in pdu data
    05: simulate reception of pdu
    06: call main function once
    07: simulate reception of a message on bus requesting synchronize shutdown for TST_PNCID_1 pnc
        set pnsr bit to 1, and set pn info bits for pncids TST_PNCID_1 to 1 in pdu data
    08: simulate reception of pdu
    09: reset PduR_UdpNmRxIndication call count
    10: reset Nm_ForwardSynchronizedPncShutdown call count
    11: call main function once
    12: check era timer was reset (call to PduR_UdpNmRxIndication occurred)
    13: VP (UdpNm.ASRR2111.SWS_UdpNm_00488)
        check Nm_ForwardSynchronizedPncShutdown was called
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    Nm_ForwardSynchronizedPncShutdown calls
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after receiving a TxConfirmation for a normal Nm message during one main function cycle,
    and a call to UdpNm_RequestSynchronizedPncShutdown made on the next cycle for an active channel,
    then a pn sync shutdown request message is sent on the bus until a new TxConfirmation is received.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: wait for a normal nm message to be sent
    06: simulate TxConfirmation for the sent normal message
    07: call main function once
    08: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    09: call main function once
    10: check a pn sync shutdown message was transmitted
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
    12: call main function once
    13: check again that a pn sync shutdown message was transmitted
    14: check again that pnsr is set and pninfo bits are set on the nm message sent on the bus
    15: simulate TxConfirmation for the sent pn sync shutdown message
    16: wait till MsgCycleOffset expires and check no messages are sent in between
    17: VP (UdpNm.ASRR2111.SWS_UdpNm_00476, UdpNm.ASRR2111.SWS_UdpNm_00032)
        check a normal message was sent
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1703</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel
    when in ready sleep state, a nm message with PNSR bit and respective pncIds bits set
    is sent on the bus.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to ready sleep state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for both pncs associated
    07: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    08: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    09: check a message was transmitted
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    11: simulate tx confirmation for sent message
    12: call main function once
    13: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check no message was transmitted
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1819</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on a channel
    that does not have UdpNmSynchronizedPncShutdownEnabled set, no pn sync shutdown
    message is sent on the bus.
  
Test Object: None.
Test Precondition: 
    channel tested does not have UdpNmSynchronizedPncShutdownEnabled enabled
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: call main function until a normal message is sent
    07: check a message was sent
    08: check the state is still normal operation
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 3 with pncid for one pnc associated
    10: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    11: check no additional message was sent
    12: call main function until another normal message is sent
    13: check a normal message was sent
    14: check pnsr is not set
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    lack of pn sync shutdown message
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>1941</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when message cycle offset is 0, and in normal operation state,
    and receiving a message on the bus containing the repeat message request
    bit set, and in the same main function cycle a request to
    UdpNm_RequestSynchronizedPncShutdown is made then a pn sync shutdown message
    is sent, and after a main function cycle an immediate message is sent.
  
Test Object: None.
Test Precondition: 
    active channel is tested
    Message Cycle Offest is 0 for tested channel.
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: got to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: simulate reception of pdu with repeat message request bit set
    07: call UdpNm_RequestSynchronizedPncShutdown for channel 0
    08: call main function once
    09: check current state is repeat message state
    10: check a pn sync shutdown message was transmitted
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    12: simulate tx confirmation for sent message
    13: call main function once
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00476, UdpNm.ASRR2111.SWS_UdpNm_00472)
        check a an immediate message was transmitted
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>2073</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when sending a pn sync shutdown message on the bus on an active channel,
    the user data from the message is populated with user data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: got to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    07: initialize user data in Com (via PduR stub)
    08: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    09: check a pn sync shutdown message was transmitted
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check user data is set, pnsr is set and pninfo bits are set on the nm message sent on the bus  
Test Input: 
    call to UdpNm_RequestSynchronizedPncShutdown
    user data from ComM
  
Test Output: 
    pn sync shutdown message
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_32/source/application/UdpNm_ConTest_32.c</sourcefile>
      <sourceline>2179</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after failed attempts to send a pn sync shutdown message due to calls
    to UdpNm_RequestSynchronizedPncShutdown on an active channel, and the
    UdpNmPnShutdownMessageRetransmissionDuration timer expire then a runtime error is
    reported to det with error UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs 
    02: initialize UdpNm
    03: got to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: call main function until a normal nm message is transmitted
    07: check a a normal Nm message transmission occured
    08: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    09: call main function until UdpNmPnShutdownMessageRetransmissionDuration expires
    10: check 2 pn sync shutdown message transmissions were attempted
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00484, UdpNm.EB_Ref.SWS_UdpNm_00465.2)
        check det was reported
  
Test Input: 
    UdpNmPnShutdownMessageRetransmissionDuration timer expire
  
Test Output: 
    det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00484</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_Multicore_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_33/source/application/UdpNm_ConTest_33.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore is enabled and synchronized shutdown data is received from
    Nm partition then a pn synchronize shutdown message is sent on the bus.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear tx buffer
    05: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    06: simulate data being sent from nm partition
    07: simulate failed data transfer from nm partition
    08: clear SoAd_IfTransmit stub count
    09: call main function once
    10: check a pn sync shutdown message was transmitted
    11: VP (UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.Multicore)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
  
Test Input: 
    pn sync shutdown data received from Nm partition
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.UdpNm_RequestSynchronizedPncShutdown.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_Multicore_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_33/source/application/UdpNm_ConTest_33.c</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore is enabled and a pn synchronized shutdown message is received
    on the bus then the pn info data, and the channel handle are sent to Nm partition, and
    no direct call is made to Nm_ForwardSynchronizedPncShutdown, and era timer is reset
    for the channel.
  
Test Object: None.
Test Precondition: 
    passive channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: reset Nm_ForwardSynchronizedPncShutdown call count
    04: reset SchM_Send_UdpNm_UdpNm_ForwardSynchronizedPncShutdown_UdpNm_To_Nm_DataSet call count, retval
    05: go to normal operation state
    06: simulate reception of a message on bus requesting TST_PNCID_1 and TST_PNCID_2
        set pnsr bit to 0, and set pn info bits for pncids TST_PNCID_1, TST_PNCID_2 to 1 in pdu data
    07: simulate reception of pdu
    08: call main function once
    09: simulate reception of a message on bus requesting synchronize shutdown for TST_PNCID_1 pnc
        set pnsr bit to 1, and set pn info bits for pncids TST_PNCID_1 to 1 in pdu data
    10: simulate reception of pdu
    11: reset PduR_UdpNmRxIndication call count
    12: call main function once
    13: check era timer was reset (call to PduR_UdpNmRxIndication occurred)
    14: check Nm_ForwardSynchronizedPncShutdown was not called
    15: VP (UdpNm.EB.PnSyncShutdown.Nm_ForwardSynchronizedPncShutdown.Multicore)
        check data was sent to Nm
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    pn sync shutdown data is sent to Nm partition
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PnSyncShutdown.Nm_ForwardSynchronizedPncShutdown.Multicore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_31</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel
    when an immediate message is about to be sent, a nm message with PNSR bit and
    respective pncIds bits set is sent on the bus instead, and the immediate message
    is delayed by 1 cycle.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to repeat message state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: VP(UdpNm.ASRR2111.SWS_UdpNm_91002, UdpNm.ASRR2111.SWS_UdpNm_00479)
        call UdpNm_RequestSynchronizedPncShutdown for channel 0 with pncid TST_PNCID_1
    07: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    08: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    09: check a message was transmitted
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    11: simulate tx confirmation for sent message
    12: call main function once
    13: VP (UdpNm.ASRR2111.SWS_UdpNm_00472)
        check a message was transmitted
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check pnsr and pninfo bits are unset on the nm message sent on the bus
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00479</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_32</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after calls to UdpNm_RequestSynchronizedPncShutdown on an active channel
    when an normal nm message is about to be sent, a nm message with PNSR bit and
    respective pncIds bits set is sent on the bus instead, and the normal nm message
    is delayed by 1 cycle.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: call main function until a normal message is sent
    07: call main function again until a normal message is about to be sent
    08: check the state is still normal operation
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 0 with pncid for one pnc associated
    10: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    11: check no additional message was sent
    12: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    13: check a pn sync shutdown message was transmitted
    14: VP (UdpNm.ASRR2111.SWS_UdpNm_00045, UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    15: simulate tx confirmation for sent message
    16: call main function once
    17: VP (UdpNm.ASRR2111.SWS_UdpNm_00472)
        check a message was transmitted
    18: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check pnsr and pninfo bits are unset on the nm message sent on the bus
    19: check the state is still normal operation
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    message sent on bus
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_33</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in repeat message state
    and a normal nm message is to be sent and no pnc sync shutdown message is to be sent, then a message is
    transmitted with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: clear SoAd_IfTransmit stub count
    04: go to repeat message state
    05: check no transmits occured
    06: call main function (MsgCycleOffset - 1) number of times just before first 
        immediate message is to be transmitted
    07: check no message was sent
    08: simulate reception of a message with pnsr bit set on active channel
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    10: call main function once
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    12: call main function till MsgCycleTime time window expires
    13: check immediate message is sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_34</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in normal operation state
    and neither a normal nm message nor pn sync shutdown message are to be sent, then a message is transmitted
    with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: call main function till a message  is sent
    06: check a message was sent
    07: simulate reception of a message with pnsr bit set on active channel
    08: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    09: call main function once
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    11: call main function till MsgCycleTime time window expires
    12: check a message was sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_35</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an active channel while in normal operation state
    and a normal nm message is to be sent and no pnc sync shutdown message is to be sent, then a message is
    transmitted with current pn info data from ComM.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: clear SoAd_IfTransmit stub count
    04: go to normal operation state
    05: check no transmits occured
    06: call main function (MsgCycleOffset - 1) number of times just before a message is to be transmitted
    07: check no message was sent
    08: simulate reception of a message with pnsr bit set on active channel
    09: VP (UdpNm.ASRR2111.SWS_UdpNm_00473, UdpNm.ASRR2111.ECUC_UdpNm_00096, UdpNm.EB_Ref.SWS_UdpNm_00465.1)
        check UDPNM_E_INVALID_PN_SYNC_SHUTDOWN_REQUEST runtime error was reported to Det
    10: call main function once
    11: VP (UdpNm.ASRR2111.SWS_UdpNm_00473)
        check a message was sent on the bus
    12: call main function till MsgCycleTime time window expires
    13: check immediate message is sent
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    det runtime error
    normal NM message transmission
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00473</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.ECUC_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_36</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after a successful transmission of a pn sync shutdown message, the synchronize shutdown
    pn info bits stored are reset.
  
Test Object: None.
Test Precondition: 
    active channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: wait for a normal nm message to be sent
    06: call UdpNm_RequestSynchronizedPncShutdown for channel 0 with pncid for one pnc associated
    07: call main function once
    08: check a pn sync shutdown message was transmitted
    09: check pnsr is set and pninfo bits are set on the nm message sent on the bus
    10: simulate TxConfirmation for the sent pn sync shutdown message
    11: wait till MsgCycleOffset and check no messages are sent in between
    12: VP (UdpNm.ASRR2111.SWS_UdpNm_00476)
        check a normal message was sent
  
Test Input: 
    pn sync shutdown message successfully sent
  
Test Output: 
    reset of pn sync shutdown aggregated bits
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00476</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_37</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_34/source/application/UdpNm_ConTest_34.c</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that after failed attempt to send a pn sync shutdown message due to a call
    to UdpNm_RequestSynchronizedPncShutdown on an active channel, and the
    UdpNmPnShutdownMessageRetransmissionDuration being 0 runtime error is
    reported to det with error UDPNM_E_TRANSMISSION_OF_PN_SHUTDOWN_MESSAGE_FAILED.
  
Test Object: None.
Test Precondition: 
    active channel is tested
    UdpNmPnShutdownMessageRetransmissionDuration is 0 or disabled
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: got to normal operation state
    04: clear SoAd_IfTransmit stub count
    05: clear tx buffer
    06: call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for one pnc associated
    07: simulate transmission failure
    08: call main function once
    09: check a a pn sync shutdown message transmitions was attempted
    10: VP (UdpNm.ASRR2111.SWS_UdpNm_00483, UdpNm.EB_Ref.SWS_UdpNm_00465.2)
        check det was reported
  
Test Input: 
    failed pn sync shutdown message transmission
  
Test Output: 
    det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00483</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00465.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_SynchronizedPncShutdown_51</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_35/source/application/UdpNm_ConTest_35.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when receiving a message with PNSR bit set to 1 on an passive channel then a call to
    Nm_ForwardSynchronizedPncShutdown is made, forwarding the pn info bits from the message to Nm.
  
Test Object: None.
Test Precondition: 
    passive channel is tested
  
Test Execution: 
    01: initialize stubs
    02: initialize UdpNm
    03: go to normal operation state
    04: simulate reception of a message on bus requesting TST_PNCID_1
        set pnsr bit to 0, and set pn info bit for pncid TST_PNCID_1
    05: simulate reception of pdu
    06: call main function once
    07: simulate reception of a message on bus requesting synchronize shutdown for TST_PNCID_1 pnc
        set pnsr bit to 1, and set pn info bits for pncids TST_PNCID_1 to 1 in pdu data
    08: simulate reception of pdu
    09: reset PduR_UdpNmRxIndication call count
    10: reset Nm_ForwardSynchronizedPncShutdown call count
    11: call main function once
    12: check era timer was reset (call to PduR_UdpNmRxIndication occurred)
    13: VP (UdpNm.ASRR2111.SWS_UdpNm_00488)
        check Nm_ForwardSynchronizedPncShutdown was called
  
Test Input: 
    reception of message with pnsr bit set
  
Test Output: 
    Nm_ForwardSynchronizedPncShutdown calls
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_UdpNm_MultipleNetworkOperations_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_36_MultipleNetworkOperation_01_Schm/source/application/UdpNm_ConTest_36.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when UdpNm_MultipleNetworkOperations
    is called with parameter for PassiveStartup
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport is set to True.
    UdpNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_MultipleNetworkOperations
    03: Check that the correct state is ready sleep state
  
Test Input: 
    UdpNm_MultipleNetworkOperations with operation for Passive Startup
  
Test Output: 
    Passive startup is executed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_MultipleNetworkOperations_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_36_MultipleNetworkOperation_01_Schm/source/application/UdpNm_ConTest_36.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when UdpNm_MultipleNetworkOperations
    is called with parameter for NetworkRequest and NetworkRelease
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport is set to True.
    UdpNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_MultipleNetworkOperations
    03: Check current state is Normal operation state
    04: Check active wakeup bit is set
    05: Call UdpNm_MultipleNetworkOperations
    06: Check current state is Ready Sleep state
  
Test Input: 
    UdpNm_MultipleNetworkOperations with operation for Network Request
    UdpNm_MultipleNetworkOperations with operation for Network Release
  
Test Output: 
    Active wakeup bit is set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_UdpNm_MultipleNetworkOperations_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_36_MultipleNetworkOperation_01_Schm/source/application/UdpNm_ConTest_36.c</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when UdpNm_MultipleNetworkOperations
    is called with parameter for NetworkGwEraRequest
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport is set to True.
    UdpNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to false
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_MultipleNetworkOperations
    03: Check current state is Normal operation state
    04: Check active wakeup bit is not set
  
Test Input: 
    UdpNm_MultipleNetworkOperations with operation for Network Gw Era Request
  
Test Output: 
    Active wakeup bit is not set
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.NetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_UdpNm_MultipleNetworkOperations_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_37_MultipleNetworkOperation_02_Schm/source/application/UdpNm_ConTest_37.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that correct function is called when UdpNm_MultipleNetworkOperations
    is called with parameter for PassiveStartup
  
Test Object: None.
Test Precondition: 
    UdpNmMultiCoreSupport is set to True.
    UdpNmMultiCoreUseSingleCS is set to true 
    Passive mode is set to true
  
Test Execution: 
    01: Initialize stubs and module
    02: Call UdpNm_MultipleNetworkOperations
    03: Check that the correct state is ready sleep state
  
Test Input: 
    UdpNm_MultipleNetworkOperations with operation for Passive Startup
  
Test Output: 
    Passive startup is executed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmMultiCoreUseSingleCS.UdpNm_MultipleNetworkOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_38/source/application/UdpNm_ConTest_38.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure UdpNm_GetNodeIdentifier and UdpNm_GetLocalNodeIdentifier
    are not available considering channel based configuration.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize test.
    02: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 0.
    03: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 1.
    04: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 2.
    05: VP(UdpNm.SWS_UdpNm_00132): - UdpNm_GetNodeIdentifier not available for channel 3.
    06: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 0.
    07: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 1.
    08: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 2.
    09: VP(UdpNm.SWS_UdpNm_00133): - UdpNm_GetLocalNodeIdentifier not available for channel 3.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_Rpt_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_38/source/application/UdpNm_ConTest_38.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Ensure UdpNm_RepeatMessageRequest is not available for only channels with
     UdpNmNodeDetectionEnabled not configured.
     Channel 0 UdpNmNodeDetectionEnabled FALSE;
     Channel 0 UdpNmNodeIdEnabled        FALSE;
     Channel 0 UdpNmRepeatMsgIndEnabled  FALSE;
     Channel 1 UdpNmNodeDetectionEnabled FALSE;
     Channel 1 UdpNmNodeIdEnabled        FALSE;
     Channel 1 UdpNmRepeatMsgIndEnabled  FALSE;
     Channel 2 UdpNmNodeDetectionEnabled FALSE;
     Channel 2 UdpNmNodeIdEnabled        FALSE;
     Channel 2 UdpNmRepeatMsgIndEnabled  FALSE;
     Channel 3 UdpNmNodeDetectionEnabled FALSE;
     Channel 3 UdpNmNodeIdEnabled        FALSE;
     Channel 3 UdpNmRepeatMsgIndEnabled  FALSE;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
     01: Initialize test.
     02: Channel 0 passive startup.
     03: VP(UdpNm.SWS_UdpNm_00221): 
         - UdpNm_RepeatMessageRequest not available as UdpNmNodeDetectionEnabled == FALSE.
     04: Channel 1 passive startup
     05: VP(UdpNm.SWS_UdpNm_00221): 
         - UdpNm_RepeatMessageRequest not available as UdpNmNodeDetectionEnabled == FALSE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_DiffrentChFeatures_UdpNm_GetPduData_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_38/source/application/UdpNm_ConTest_38.c</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     UdpNmUserDataEnabled is FALSE.
     Channel 0 UdpNmNodeDetectionEnabled FALSE;
     Channel 0 UdpNmNodeIdEnabled        FALSE;
     Channel 1 UdpNmNodeDetectionEnabled FALSE;
     Channel 1 UdpNmNodeIdEnabled        FALSE;
     Channel 2 UdpNmNodeDetectionEnabled FALSE;
     Channel 2 UdpNmNodeIdEnabled        FALSE;
     Ensure UdpNm_GetPduData is not available for only channels with
     UdpNmNodeDetectionEnabled or UdpNmNodeIdEnabled not configured.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
      01: Initialize test.
      02: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData NOT OK for Channel 0.
      03: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData NOT OK for Channel 1.
      04: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData NOT OK for Channel 2.
      05: VP(UdpNm.EB_Ref.SWS_UdpNm_00139.1, UdpNm.EB_Ref.SWS_UdpNm_00139.2, UdpNm.EB_Ref.SWS_UdpNm_00139.3): - UdpNm_GetPduData NOT OK for Channel 3.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00139.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_PrepareBusSleep_To_RepeatMessage_Coverage</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_39/source/application/UdpNm_ConTest_39.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that receiving a rx indication in prepare bus sleep state will
    transition to repeat message state. (Coverage test in case
    UdpNmPduRxIndicationEnabled is false)
  
Test Object: None.
Test Precondition: 
    More than one UdpNm channels are configured
    UdpNmPassiveModeEnabled is set to false
    UdpNmPduRxIndicationEnabled is set to false
  
Test Execution: 
    01: Initialize UdpNm.
    02: Go to prepare bus sleep state.
    03: Simulate rx indication.
    04: Call main function once.
    05: VP (UdpNm.SWS_UdpNm_00124)
        Check current state is repeat message state.
  
Test Input: 
    Rx indication while in prepare bus sleep state
  
Test Output: 
    State change from prepare bus sleep to repeat message states
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_32037</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_4/source/application/UdpNm_ConTest_4.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the transition from NM_STATE_BUS_SLEEP to NM_STATE_REPEAT_MESSAGE,
    from NM_STATE_REPEAT_MESSAGE to NM_STATE_READY_SLEEP and from
    NM_STATE_READY_SLEEP to NM_STATE_REPEAT_MESSAGE.
    Reference - AUTOSAR CTSP Test case: TC_UDPNM_0088
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = false.
  
Test Execution: 
    01: Initialize UdpNm.
    02: Verify whether the present state is bus sleep.
    03: Request the network using UdpNm_NetworkRequest and call the
        UdpNm_MainFunction once so that a transition occurs to Repeat message state.
    04: VP (UdpNm.SWS_UdpNm_00097):
        - Nm_NetworkMode is called.
        - The present state is repeat message state.
    05: Release the network using UdpNm_NetworkRelease.
    06: Call UdpNm_MainFunction for (UdpNmRepeatMessageTime - 1) times.
    07: Verify whether the present state is still repeat message state.
    08: Receive NM PDU to restart the Nm timer.
    09: Call UdpNm_MainFunction.
    10: VP (UdpNm.SWS_UdpNm_00106):
        - The state is changed to ready sleep.
    11: Call UdpNm_MainFunction one less than the remaining UdpNmTimeoutTime.
    12: Verify the present state to ensure that state transaction does not
        occur before UdpNmTimeoutTime elapses.
    13: Call UdpNm_MainFunction once so that UdpNmTimeoutTime elapses.
    14: VP (UdpNm.SWS_UdpNm_00109, UdpNm.SWS_UdpNm_00114):
        - Nm_PrepareBusSleepMode is called
        - The state is changed to prepare bus sleep.
    15: Request the network using UdpNm_NetworkRequest and call the
        UdpNm_MainFunction once so that a transition occurs to Repeat message state.
    16: VP (UdpNm.SWS_UdpNm_00123):
        - Nm_NetworkMode is called
        - The present state is repeat message state.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_32038</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_4/source/application/UdpNm_ConTest_4.c</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the transition
    - from NM_STATE_REPEAT_MESSAGE to NM_STATE_NORMAL_OPERATION
    - from NM_STATE_NORMAL_OPERATION to NM_STATE_READY_SLEEP.
  
Test Object: None.
Test Precondition: 
    UdpNmPassiveModeEnabled = false.
  
Test Execution: 
    01: Initialize UdpNm.
    02: Verify whether the present state is bus sleep.
    03: Request the network using UdpNm_NetworkRequest and call the
        UdpNm_MainFunction once so that a transition occurs to
        Repeat message state.
    04: The state is changed to repeat message state.
    05: Call UdpNm_MainFunction until the UdpNmRepeatMessageTime expires.
    06: VP (UdpNm.SWS_UdpNm_00103):
        - Verify whether the state is changed to normal operation state.
    07: Release the network using UdpNm_NetworkRelease and call the
        UdpNm_MainFunction once so that a transition occurs to
        NM_STATE_READY_SLEEP state.
    08: Verify whether the state is changed to ready sleep state.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ActiveWakeupBit_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_4/source/application/UdpNm_ConTest_4.c</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that UdpNm does not set the ActiveWakeupBit in the CBV upon the state
    change from BusSleep mode to Network Mode due to a call to
    UdpNm_NetworkRequest() if the parameter "UdpNmActiveWakeupBitEnabled" is set
    to FALSE.
  
Test Object: None.
Test Precondition: 
    UdpNmActiveWakeupBitEnabled is FALSE.
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: For each configured channel, execute steps 03-15.
    03: Invoke Network Request.
    04: Invoke Main Function once to process UdpNm_NetworkRequest.
    05: Check if Repeat Message State is entered.
    06: If Message Cycle Offset is greater than zero, invoke Main Function
        in a loop until Message Cycle Offset elapses.
    07: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1, UdpNm.EB_Ref.SWS_UdpNm_00366.2):
        - ActiveWakeUp bit is not set in CBV.
    08: Goto Prepare Bus Sleep state.
    09: Invoke Network Request.
    10: Invoke Main Function once to process UdpNm_NetworkRequest.
    11: Check if Repeat Message State is entered.
    12: If Message Cycle Offset is greater than zero, invoke Main Function
        in a loop until Message Cycle Offset elapses.
    13: VP (UdpNm.EB_Ref.SWS_UdpNm_00366.1, UdpNm.EB_Ref.SWS_UdpNm_00366.2):
        - ActiveWakeUp bit is not set in CBV.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00366.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ImediateRestart_ComUserDataOff</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_4/source/application/UdpNm_ConTest_4.c</sourcefile>
      <sourceline>490</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case UdpNmImmediateRestartEnabled is set to true and 
    UdpNmComUserDataSupport is set to false, when bus is requested
    in Prepare Buss Sleep Mode, the UdpNm triggers a PDU transmission
    whit the data set by UdpNm_SetUserData.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize the stub values
    02: Initialize UdpNm
    03: Call UdpNm_SetUserData
    04: Do a passive wakeup
    05: Wait until state machine goes to Prepare Buss Sleep Mode
    06: Check that state machine reached Prepare Bus Sleep Mode
    07: Set SoAd_IfTransmit_Stub.Count to zero
    08: Request the network
    09: Check that state machine reached Repeat Message State
    10: VP(UdpNm.ECUC_UdpNm_00009)
        - Check that SoAd_IfTransmit is called
    11: Check that the transmitted data equals to the expected
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Schm_Call_Channel_Multicore_DetCheck_ApplicationID</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_40_channel_multicore/source/application/UdpNm_ConTest_40.c.m4</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that a det error is reported if current application id doesn't match
    the channels configured application id.
  
Test Object: None.
Test Precondition: 
    multicore per channel is enabled
    Channel 0 is assigned to TST_APPL_ID_0 and channel 1 is assigned to TST_APPL_ID_1
    det error reporting is enabled
  
Test Execution: 
    01: Initialize UdpNm module.
    02: Set GetApplicationID_ReturnValue to TST_APPL_ID_1
    03: Reset Det_ReportError_Stub

    04: Call UdpNm_PassiveStartUp with channel 1 as parameter and verify that no
        error is reported to Det.
    05: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDPassiveStartUp)
        Call UdpNm_PassiveStartUp with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    06: Call UdpNm_NetworkRequest with channel 1 as parameter and verify that no
        error is reported to Det.
    07: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRequest)
        Call UdpNm_NetworkRequest with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    08: Call UdpNm_NetworkGwEraRequest with channel 1 as parameter and verify that no
        error is reported to Det.
    09: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkGwEraRequest)
        Call UdpNm_NetworkGwEraRequest with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    10: Call UdpNm_NetworkRelease with channel 1 as parameter and verify that no
        error is reported to Det.
    11: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRelease)
        Call UdpNm_NetworkRelease with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    12: Call UdpNm_DisableCommunication with channel 1 as parameter and verify that no
        error is reported to Det.
    13: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDDisableCommunication)
        Call UdpNm_DisableCommunication with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    14: Call UdpNm_EnableCommunication with channel 1 as parameter and verify that no
        error is reported to Det.
    15: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDEnableCommunication)
        Call UdpNm_EnableCommunication with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    16: Call UdpNm_GetUserData with channel 1 as parameter and verify that no
        error is reported to Det.
    17: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetUserData)
        Call UdpNm_GetUserData with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    18: Call UdpNm_GetNodeIdentifier with channel 1 as parameter and verify that no
        error is reported to Det.
    19: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetNodeIdentifier)
        Call UdpNm_GetNodeIdentifier with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    20: Call UdpNm_GetLocalNodeIdentifier with channel 1 as parameter and verify that no
        error is reported to Det.
    21: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetLocalNodeIdentifier)
        Call UdpNm_GetLocalNodeIdentifier with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    22: Call UdpNm_RepeatMessageRequest with channel 1 as parameter and verify that no
        error is reported to Det.
    23: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRepeatMessageRequest)
        Call UdpNm_RepeatMessageRequest with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    24: Call UdpNm_GetPduData with channel 1 as parameter and verify that no
        error is reported to Det.
    25: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetPduData)
        Call UdpNm_GetPduData with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    26: Call UdpNm_GetState with channel 1 as parameter and verify that no
        error is reported to Det.
    27: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetState)
        Call UdpNm_GetState with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    28: Call UdpNm_CheckRemoteSleepIndication with channel 1 as parameter and verify that no
        error is reported to Det.
    29: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDCheckRemoteSleepIndication)
        Call UdpNm_CheckRemoteSleepIndication with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    30: Call UdpNm_SoAdIfTxConfirmation with channel 1 as parameter and verify that no
        error is reported to Det.
    31: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDTxConfirmation)
        Call UdpNm_SoAdIfTxConfirmation with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.

    32: Call UdpNm_RxIndication with channel 1 as parameter and verify that no
        error is reported to Det.
    33: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRxIndication)
        Call UdpNm_RxIndication with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.
  
Test Input: 
    UdpNm multicore channel support is enabled.
    Channels assigned to two different partitions.
    Function calls for each channel.
  
Test Output: 
    UDPNM_E_INVALID_OSAPPLICATION error reported for non matching os application id.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDPassiveStartUp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkGwEraRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDNetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDDisableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDEnableCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetLocalNodeIdentifier</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRepeatMessageRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetPduData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDGetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDCheckRemoteSleepIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDTxConfirmation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_Schm_Call_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_40_channel_multicore/source/application/UdpNm_ConTest_40.c.m4</sourcefile>
      <sourceline>351</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check Schm calls for data transfer from channel partitions to master partition and aggregation of EIRA data.
  
Test Object: None.
Test Precondition: 
    UdpNm multicore channel support is enabled.
    UdpNmPnEiraCalcEnabled is set to TRUE.
    For permutation 0 test: one channel has UdpNmPnEraCalcEnabled TRUE,
                            one channel has UdpNmPnEraCalcEnabled FALSE.
    For permutation 1 test: all channels have UdpNmPnEraCalcEnabled FALSE.
  
Test Execution: 
    01: Set buffer with valid PN info, set PduR_UdpNmRxIndication_Stub callout function
    02: Initialize UdpNm
    03: Call UdpNm_PassiveStartUp
    04: Call channels main functions for transition to occur
    05: Check current state is NM_STATE_REPEAT_MESSAGE for all channels
    06: Call UdpNm_NetworkRequest
    07: Call channels main functions until repeat message state timers expire for all channels
    08: Check current state is NM_STATE_NORMAL_OPERATION for all channels
    09: Reset stub buffers for data transmission between partitions
    10: Simulate reception of PN info data on all channels
    11: Reset PduR_UdpNmRxIndication_Stub count
    12: Check no data was sent between channel partitions to PN aggregation partition
    13: VP (UdpNm.EB.UdpNm_MainFunction_X, UdpNm.EB.UdpNm_MainFunction_X.Enable):
        Call channel main functions independently from main function of PN aggregation partition
    14: Check data was sent to PN aggregation partition from all channels
    15: VP (UdpNm.EB.UdpNmChannelMultiCore.Receiver):
        Simulate reception of data on PN aggregation partition
    16: Check PduR_UdpNmRxIndication_Stub count is equal to the number of channels that have UdpNmPnEraCalcEnabled set to TRUE and reset PduR_UdpNmRxIndication_Stub count
    17: Clear data on PduR buffer
    18: VP (UdpNm.EB.UdpNm_MainFunction_Main, UdpNm.EB.UdpNm_MainFunction_Main.Enable):
        - Call main function of PN aggregation partition
    19: Check PduR_UdpNmRxIndication_Stub count is 1
    20: Check RxPduId of PduR_UdpNmRxIndication_Stub is eira PDU id
    21: VP (UdpNm.EB.UdpNmChannelMultiCore.Sender.Rx, UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx):
        - Check data was aggregated on PN aggregation partition
  
Test Input: 
    Simulated reception of eira data.
  
Test Output: 
    Received data is aggregated on main partition from all channels.
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Rx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Receiver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Schm_Call_Channel_Multicore_EIRA_Calc_Disabled_DetCheck_ApplicationID</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_41_channel_multicore/source/application/UdpNm_ConTest_41.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that a det error is reported if current application id doesn't match 
    the channels configured application id, when multicore per channel is enabled
    without EIRA calc enabled.
  
Test Object: None.
Test Precondition: 
    Channel 0 is assigned to TST_APPL_ID_0 and channel 1 is assigned to TST_APPL_ID_1
  
Test Execution: 
    01: Initialize UdpNm
    02: Set GetApplicationID_ReturnValue to TST_APPL_ID_1
    03: Reset Det_ReportError_Stub
    
    04: Call UdpNm_SetUserData with channel 1 as parameter and verify that no
        error is reported to Det.
    05: VP(UdpNm.EB.UdpNmChannelMultiCore.DetAppIDSetUserData)
        Call UdpNm_SetUserData with channel 0 as parameter and verify that
        "UDPNM_E_INVALID_OSAPPLICATION" is reported to Det.
  
Test Input: 
    UdpNm multicore channel support is enabled.
    Channels assigned to two different partitions.
    Function calls for each channel.
  
Test Output: 
    UDPNM_E_INVALID_OSAPPLICATION error reported for non matching os application id.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDSetUserData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_State_Transitions_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_42_channel_multicore/source/application/UdpNm_ConTest_42.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore per channel conditions are met, state transitions
    from Bus sleep state, to Repeat message state, to Normal operation state,
    to Ready Sleep State, to Bus sleep state occur for each channel on the
    corresponding channels main function calls.
    Also check that generation is valid when a main PNC aggregation partition
    is not specified.
  
Test Object: None.
Test Precondition: 
    UdpNm multicore per channel support is enabled.
    ComMMasterPNCEcuCPartitionRef is not set in ComM (PNC support is disabled).
  
Test Execution: 
    01: Initialize the UdpNm module. Go to the Bus sleep state on each channel.

    02: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0().
    03: Verify current state is Bus Sleep State for channel 0.
    04: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1().
    05: Verify current state is Bus Sleep State for channel 1.

    06: Call UdpNm_NetworkRequest for channel 0.
    07: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0.
    08: VP (UdpNm.EB_Ref.SWS_UdpNm_00095.1, UdpNm.SWS_UdpNm_00129, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Repeat message state
        - check that present state for channel 1 is Bus Sleep State

    09: Call UdpNm_NetworkRequest for channel 1.
    10: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1.
    11: VP (UdpNm.EB_Ref.SWS_UdpNm_00095.1, UdpNm.SWS_UdpNm_00129, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Repeat message state
        - check that present state for channel 1 is Repeat message state

    12: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0 for
        (repeat message timer - 1) times.
    13: Check that present state for channel 0 is Repeat message state
    14: Check that present state for channel 1 is Repeat message state
    15: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0
    16: VP (UdpNm.SWS_UdpNm_00102, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Normal operation state
        - check that present state for channel 1 is Repeat message state

    17: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1 for
        (repeat message timer - 1) times.
    18: Check that present state for channel 0 is Normal operation state
    19: Check that present state for channel 1 is Repeat message state
    20: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1.
    21: VP (UdpNm.SWS_UdpNm_00102, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Normal operation state
        - check that present state for channel 1 is Normal operation state

    22: Call UdpNm_NetworkRelease for channel 0.
    23: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0.
    24: VP (UdpNm.SWS_UdpNm_00214, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Ready sleep state.
        - check that present state for channel 1 is Normal operation state

    25: Call UdpNm_NetworkRelease for channel 1.
    26: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1.
    27: VP (UdpNm.SWS_UdpNm_00214, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Ready sleep state.
        - check that present state for channel 1 is Ready sleep state.

    28: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0 for
        (UdpNmTimeoutTime - 1) times.
    29: Check that present state for channel 0 is Ready sleep state.
    30: Check that present state for channel 1 is Ready sleep state.
    31: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0 until state for channel 0 is prepare bus sleep state.
    32: VP (UdpNm.SWS_UdpNm_00109, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Prepare bus sleep state.
        - check that present state for channel 1 is Ready sleep state.

    33: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1 until state for channel 1 is prepare bus sleep state.
    34: VP (UdpNm.SWS_UdpNm_00109, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Prepare bus sleep state.
        - check that present state for channel 1 is Prepare bus sleep state.

    35: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0 for
        (UDPNM_WAIT_BUS_SLEEP_TIME - 1) times.
    36: Check that present state for channel 0 is Prepare bus sleep state.
    37: Check that present state for channel 1 is Prepare bus sleep state.
    38: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0
    39: VP (UdpNm.ASR403.UDPNM115, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Bus sleep state.
        - check that present state for channel 1 is Prepare bus sleep state.

    40: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1 for
        (UDPNM_WAIT_BUS_SLEEP_TIME - 1) times.
    41: Check that present state for channel 0 is Bus sleep state.
    42: Check that present state for channel 1 is Prepare bus sleep state.
    43: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1.
    44: VP (UdpNm.ASR403.UDPNM115, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Bus sleep state.
        - check that present state for channel 1 is Bus sleep state.

  
Test Input: 
    Main function calls to trigger transitions on each channel.
  
Test Output: 
    Independent transitions from Bus sleep, Ready Sleep State, Normal operation,
    Ready sleep, Bus sleep states on each channel main function.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_State_Transitions_PassiveMode_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_43_channel_multicore/source/application/UdpNm_ConTest_43.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore per channel conditions are met, state transition
    from Bus sleep state to Repeat message state due to a Passive startup occurs
    for each channel on the corresponding channels main function call.
    Also check that generation is valid when a main PNC aggregation partition
    is not specified and passive mode is enabled.
  
Test Object: None.
Test Precondition: 
    UdpNm multicore per channel support is enabled.
    Passive mode is enabled for channels.
    ComMMasterPNCEcuCPartitionRef is not set in ComM (PNC support is disabled).
  
Test Execution: 
    01: Initialize the UdpNm module. Go to the Bus sleep state on each channel.

    02: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0().
    03: Verify current state is Bus Sleep State for channel 0.
    04: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1().
    05: Verify current state is Bus Sleep State for channel 1.

    06: Call UdpNm_PassiveStartUp for channel 0.
    07: Call UdpNm_1_ChOsApp_App_Core0_MainFunction_0.
    08: VP (UdpNm.EB_Ref.SWS_UdpNm_00128.1, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Repeat message state
        - check that present state for channel 1 is Bus Sleep State

    09: Call UdpNm_PassiveStartUp for channel 1.
    10: Call UdpNm_1_ChOsApp_App_Core1_MainFunction_1.
    11: VP (UdpNm.EB_Ref.SWS_UdpNm_00128.1, UdpNm.EB.UdpNm_MainFunction_X):
        - check that present state for channel 0 is Repeat message state
        - check that present state for channel 1 is Repeat message state

  
Test Input: 
    Main function calls to trigger transitions on each channel.
  
Test Output: 
    Independent transitions from Bus sleep to Ready Sleep State states on each
    channel main function.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00128.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_44_channel_multicore/source/application/UdpNm_ConTest_44.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore per channel is enabled and calls to
    UdpNm_RequestSynchronizedPncShutdown are made then a pn sync shutdown
    message is sent on the bus and the pn info bits that are set on that
    message are also transmitted to the main partition for eira aggregation.
  
Test Object: None.
Test Precondition: 
    multicore per channel conditions enabled
  
Test Execution: 
    01: set current os partition to the same one as that of current channel
    02: initialize UdpNm
    03: passive startup request
    04: call main function for the transition to occur
    05: get the current state
    06: check current state is repeat message state
    07: clear CanIf_Transmit stub count
    08: VP (UdpNm.ASRR2111.SWS_UdpNm_91002)
        call UdpNm_RequestSynchronizedPncShutdown for channel 2 with pncid for both pncs associated
    09: simulate retrieving of pn info from comm. Initialize user data in Com (via PduR stub)
    10: set the send functions call count to 0
    11: call main function to process requests from UdpNm_RequestSynchronizedPncShutdown
    12: check a message was transmitted
    13: VP (UdpNm.ASRR2111.SWS_UdpNm_00490)
        check pnsr is set and pninfo bits are set on the nm message sent on the bus
        (a pn synchronize shutdown message was sent instead of an immediate message)
    14: check data was sent to main partition. 2 calls one from UdpNm_HandlePNSyncShutdown, 
        and one from UdpNm_HandlePnInfo that is sent each cycle
    15: VP (UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx)
        check data sent fist time this cycle to nm partition (data sent by UdpNm_HandlePNSyncShutdown)
  
Test Input: 
    calls to UdpNm_RequestSynchronizedPncShutdown
  
Test Output: 
    data sent to aggregate partition
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.Sender.Tx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>TS_UDPNM_SynchronizedPncShutdown_Request_Shutdown_DetCheck_ApplicationID_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_44_channel_multicore/source/application/UdpNm_ConTest_44.c</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when multicore per channel is enabled and a call to
    UdpNm_RequestSynchronizedPncShutdown is made from a partition different than the
    preconfigured channel partition then a Det error is reported.
  
Test Object: None.
Test Precondition: 
    Channel 0 is assigned to TST_APPL_ID_0
  
Test Execution: 
    01: Reset Det_ReportError_Stub
    02: set current os partition to one different from current channel
    03: initialize UdpNm
    04: call UdpNm_RequestSynchronizedPncShutdown
    05: VP (UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRequestSynchronizedPncShutdown)
        check a det error was reported
  
Test Input: 
    UdpNm multicore channel support is enabled.
    Channel assigned to different partition then os running partition. 
  
Test Output: 
    UDPNM_E_INVALID_OSAPPLICATION error reported for non matching os application id. 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNmChannelMultiCore.DetAppIDRequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UdpNm_Schm_Call_EIRA_disabled_ERA_enabled_Channel_Multicore</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_45_channel_multicore/source/application/UdpNm_ConTest_45.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check Schm calls do not occur when multicore per channel conditions are enabled and EIRA calculation is disabled.
  
Test Object: None.
Test Precondition: 
    UdpNm multicore channel support is enabled.
    UdpNmPnEiraCalcEnabled is set to TRUE.
    For permutation 0 test: one channel has UdpNmPnEraCalcEnabled TRUE,
                            one channel has UdpNmPnEraCalcEnabled FALSE.
    For permutation 1 test: all channels have UdpNmPnEraCalcEnabled FALSE.
  
Test Execution: 
    01: Set buffer with valid PN info, set PduR_UdpNmRxIndication_Stub callout function
    02: Initialize UdpNm
    03: Call UdpNm_PassiveStartUp
    04: Call channels main functions for transition to occur
    05: Check current state is NM_STATE_REPEAT_MESSAGE for all channels
    06: Call UdpNm_NetworkRequest
    07: Call channels main functions until repeat message state timers expire for all channels
    08: Check current state is NM_STATE_NORMAL_OPERATION for all channels
    09: Reset stub buffers for data transmission between partitions
    10: Simulate reception of PN info data on all channels
    11: Reset PduR_UdpNmRxIndication_Stub count
    12: Check no data was sent between channel partitions to PN aggregation partition
    13: VP (UdpNm.EB.UdpNm_MainFunction_X, UdpNm.EB.UdpNm_MainFunction_X.Enable):
        Call channel main functions independently from main function of PN aggregation partition
    14: Check data was sent to PN aggregation partition from all channels
    15: Check PduR_UdpNmRxIndication_Stub count is equal to the number of channels that have UdpNmPnEraCalcEnabled set to TRUE and reset PduR_UdpNmRxIndication_Stub count
  
Test Input: 
    Simulated reception of era data.
  
Test Output: 
    No schm calls to send data to main partition.
  </description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_Main.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.UdpNm_MainFunction_X.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_UDPNM_UdpNmPnInfo_504PNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_504PNCs/source/application/UdpNm_ConTest_504PNCs.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify UdpNm partial networking functionality when the sum
      (UdpNmPnInfoLength + UdpNmPnInfoOffset) is greater than 31 and
      the data provided are correct.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Partial networking is enabled (UdpNmPnEnabled)
  
Test Execution: 
    01. Initialize Stubs.
    02. Initialize UdpNm.
    03. Set all PN request bits in the NM-Pdu.
    04. Enable Pn filtering.
    05. Clear PduR_UdpNmRxIndication stub count.
    06. Invoke RxIndication.
    07. Call main function once.
    08. VP(UdpNm.EB.UdpNmPnInfo): PduR_UdpNmRxIndication is called.
    09. EIRA data provided by COM module is valid.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.ECUC_UdpNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>TS_UDPNM_UdpNmPnResetTime_504PNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_504PNCs/source/application/UdpNm_ConTest_504PNCs.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify UdpNm partial networking functionality when the sum
      (UdpNmPnInfoLength + UdpNmPnInfoOffset) is greater than 31 and
      the data provided are correct.
      When the EIRA reset timers expires, then the PN request bit shall be set to 0.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Partial networking is enabled (UdpNmPnEnabled)
  
Test Execution: 
    01. Initialize Stubs.
    02. Initialize UdpNm.
    03. Set all PN request bits in the NM-Pdu.
    04. Clear PduR_UdpNmRxIndication stub count.
    05. Invoke UdpNm_SoAdIfRxIndication.
    06. Call main function once.
    07. VP: PduR_UdpNmRxIndication is called.
    08. EIRA data provided by COM module is valid.
    09. Invoke UdpNm_SoAdIfRxIndication.
    10. Call main function once.
    11. VP: PduR_UdpNmRxIndication is not Invoked as
        there was no change in the PN info received.
    12. Invoke Main Function continuously for one cycle time less than
        what is required for PN Reset Timer expiry.
    13. VP: PduR_UdpNmRxIndication is not invoked and the respective bits in the EIRA value are not cleared.
    14. Invoke Main Function once so that PN Reset Time elapses.
    15: VP: PduR_UdpNmRxIndication is
        invoked and the respective bits in the EIRA value are cleared.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ECUC_UdpNm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.ECUC_UdpNm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_0084</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
    Verify the behavior of UdpNm when the network has been requested in the
    Prepare Bus Sleep Mode.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to FALSE.
  
Test Execution: 
    01:  Initialize UdpNm and stubs.
    02:  Execute steps 03-12 for each configured channel.
    03:  Call UdpNm_NetworkRequest() in bus sleep state and invoke
         UdpNm_MainFunction() to process the request.
    04:  VP(UdpNm.SWS_UdpNm_00129, UdpNm.EB_Ref.SWS_UdpNm_00095.1):
         Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and
         the current mode is "NM_MODE_NETWORK".
    05:  Call UdpNm_NetworkRelease() in repeat message state.
    06:  Call UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time elapses.
    07:  Verify that the current state is "NM_STATE_READY_SLEEP" and
         the current mode is "NM_MODE_NETWORK".
    08:  Call UdpNm_MainFunction() in a loop until UdpNm Timeout Time elapses.
    09:  Verify that the current state is "NM_STATE_PREPARE_BUS_SLEEP" and
         the current mode is "NM_MODE_PREPARE_BUS_SLEEP".
    10:  Call UdpNm_NetworkRequest() in prepare bus sleep state and invoke
         UdpNm_MainFunction() to process the request.
    11:  - SoAd_IfTransmit() is invoked.
    12:  VP(UdpNm.EB_Ref.SWS_UdpNm_00095.2):
         Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and
         the current mode is "NM_MODE_NETWORK".
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00095.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0105</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
    Verify that the UdpNm module stops transmission of Network Management PDUs,
    when Ready Sleep State is entered from Normal Operation State
    Verify that the UdpNm module starts transmission of Network Management PDUs
    when Normal Operation State is entered from Ready Sleep State.
    Verify in Normal operation state and no rx messages are received
    Nm_RemoteSleepIndication is called.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to FALSE.
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Execute steps 03-16 for each configured channel.
    03: Bring the state to "NM_STATE_NORMAL_OPERATION".
    04: Call UdpNm_NetworkRelease() in normal operation state and verify
        that UdpNm_NetworkRelease() returns "E_OK".
    05: Call UdpNm_MainFunction().
    06: Verify that that the current state is "NM_STATE_READY_SLEEP".
    07: Call UdpNm_RxIndication().
    08: Call UdpNm_MainFunction() until one count less than message cycle time elapses.
    09: Call UdpNm_RxIndication().
    10: Call UdpNm_MainFunction().
    11: VP (UdpNm.EB_Ref.SWS_UdpNm_00108.2):
        - SoAd_IfTransmit() is not invoked. (Ready sleep state was entered from
          Normal operation state and Main function was called until
          message cycle time elapses. SoAd_IfTransmit had not been invoked
          indicates that UdpNm module stopped the transmission of NM PDUs).
    12: Call UdpNm_NetworkRequest and verify that it returns "E_OK".
    13: Call the UdpNm_MainFunction().
    14: Verify that the current state is "NM_STATE_NORMAL_OPERATION".
    15: Call UdpNm_MainFunction() in a loop until the message cycle offset time elapses.
    16: VP (UdpNm.EB_Ref.SWS_UdpNm_00116.1):
        - SoAd_IfTransmit() is invoked. (Normal operation state was entered from
          Ready sleep state and Main function was called until
          message cycle offset time elapses. SoAd_IfTransmit has been invoked
          indicates that UdpNm module started the transmission of NM PDUs)
    17: Reset Nm_RemoteSleepIndication counter.
        Call RxIndication to reset RSI counter
    18: Wait a couple of cycles.
    19: Call UdpNm_SoAdIfRxIndication to reset the RSI timer.
    20: Wait main cycles until RSI timer just expires (1 cycle left).
    21: Check that the Nm_RemoteSleepIndication has not been called yet.
    22: Wait the last cycle from RSI timer.
    24: VP (UdpNm.SWS_UdpNm_00150) 
        Check that the Nm_RemoteSleepIndication is called since the RSI timer expired.
    25: Release current channel and wait until it goes to sleep
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00116.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00108.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0136</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
    Verify the behavior of UdpNm when Repeat Message State is entered from
    Bus-Sleep Mode.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to FALSE.
  
Test Execution: 
    01: Call UdpNm_Init().
    02: Execute steps 03-09 for each configured channel.
    03: Call UdpNm_NetworkRequest() in bus sleep state and invoke
        UdpNm_MainFunction() so that the state changes to repeat message.
    04: Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and
        the current mode is "NM_MODE_NETWORK".
    05: Call UdpNm_MainFunction() in a loop until the UdpNm Message Cycle Offset
        time elapses.
    06: VP (UdpNm.EB_Ref.SWS_UdpNm_00100.1):
        - SoAd_IfTransmit() is invoked.
    07: Release current channel and wait until it goes to sleep
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0137</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
    Verify that when the Repeat Message State is entered from Prepare Bus Sleep
    Mode, the UdpNm module starts transmission of Network Management PDUs.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
  
Test Execution: 
    &lt;execution&gt;
      01: Call UdpNm_Init().
      02: For each configured UdpNm Channel execute the following.
      03: Bring the current state to prepare bus sleep state.
      04: Call UdpNm_NetworkRequest() in prepare bus sleep state.
      05: Call UdpNm_MainFunction() to handle the state change.
      06: VP (UdpNm.EB_Ref.SWS_UdpNm_00234):
          - The current state is "NM_STATE_REPEAT_MESSAGE" and current mode is "NM_MODE_NETWORK".
      07: Call UdpNm_MainFunction() in a loop until UdpNm Message Cycle Offset time expires.
      08: VP (UdpNm.ASRR2111.SWS_UdpNm_00032):
          - SoAd_IfTransmit() is invoked for transmitting NM PDUs.
      09: Release current channel and wait until it goes to sleep
    
Test Input: None.
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASRR2111.SWS_UdpNm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0144</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
  Verify that all changes of the AUTOSAR UdpNm states shall be notified to the
  upper layer by calling Nm_StateChangeNotification().
  This test case checks for the following state changes
   1. Bus Sleep State to Repeat Message State
   2. Repeat Message State to Ready Sleep State
   3. Ready Sleep State to Prepare Bus-Sleep State
   4. Prepare Bus-Sleep State to Bus Sleep State

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmStateChangeIndEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the steps 03 to 18.
  03: Verify that the value of UdpNm repeat message time is greater than 0.
  04: Verify that the current state is "NM_STATE_BUS_SLEEP" and the current
      mode is "NM_MODE_BUS_SLEEP".
  05: Call UdpNm_NetworkRequest() in bus sleep state and verify that it
      returns "E_OK".
  06: Call UdpNm_MainFunction().
  07: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify repeat message state.
  08: VP (UdpNm.SWS_UdpNm_00129):
      - Verify that the current state is
      "NM_STATE_REPEAT_MESSAGE" and the current mode is "NM_MODE_NETWORK".
  09: Call UdpNm_NetworkRelease() and verify that it returns "E_OK".
  10: Call UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires
  11: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify ready sleep state.
  12: Verify that the current state is
      "NM_STATE_READY_SLEEP" and the current mode is "NM_MODE_NETWORK".
  13: Call UdpNm_MainFunction() in a loop until UdpNm Timeout Time expires.
  14: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify prepare bus sleep state.
  15: Verify that the current state is
      "NM_STATE_PREPARE_BUS_SLEEP" and the current mode is
      "NM_MODE_PREPARE_BUS_SLEEP".
  16: Call UdpNm_MainFunction() in a loop until UdpNm Wait Bus Sleep Time expires.
  17: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify bus sleep state.
  18: Verify that the current state is
      "NM_STATE_ BUS_SLEEP" and the current mode is "NM_MODE_ BUS_SLEEP".

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0145</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
  Verify that all changes of the AUTOSAR UdpNm states shall be notified to the
  upper layer by calling Nm_StateChangeNotification.
  This test case checks for the following state changes
   1. Prepare Bus-Sleep State to Repeat Message State
   2. Repeat Message State to Normal Operation State
   3. Normal Operation State to Ready Sleep State
   4. Ready Sleep State to Repeat Message State

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".
  "UdpNmStateChangeIndEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the steps from 03 to 29.
  03: Verify that the current state is "NM_STATE_BUS_SLEEP" and the current mode
      is "NM_MODE_BUS_SLEEP".
  04: Call UdpNm_NetworkRequest() in bus sleep state.
  05: Call UdpNm_MainFunction().
  06: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify NM_STATE_REPEAT_MESSAGE state.
  07: Verify that the current state is
      "NM_STATE_REPEAT_MESSAGE" and current mode is "NM_MODE_NETWORK".
  08: Call UdpNm_NetworkRelease().
  09: Call UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires.
  10: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify ready sleep state.
  11: Verify that the current state is "NM_STATE_READY_SLEEP" and the current
      mode is "NM_MODE_NETWORK"
  12: Call UdpNm_MainFunction() in a loop until UdpNm Timeout Time expires.
  13: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify prepare bus sleep state.
  14: Verify that the current state is
      "NM_STATE_PREPARE_BUS_SLEEP" and the current mode is "NM_MODE_PREPARE_BUS_SLEEP".
  15: Call UdpNm_NetworkRequest() in prepare bus sleep state.
  16: Call UdpNm_MainFunction().
  17: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify repeat message state.
  18: Call UdpNm_GetState() in repeat message state and verify that the current
      state is "NM_STATE_REPEAT_MESSAGE" and current mode is "NM_MODE_NETWORK".
  19: Invoke UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires.
  20: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify normal operation state.
  21: Call UdpNm_GetState() in normal operation state and verify that the
      current state is "NM_STATE_NORMAL_OPERATION" and the current mode is "NM_MODE_NETWORK".
  22: Call UdpNm_NetworkRelease() in normal operation state.
  23: Call UdpNm_MainFunction().
  24: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify ready sleep state.
  25: Verify that the current state is "NM_STATE_READY_SLEEP" and the current
      mode is "NM_MODE_NETWORK".
  26: Call UdpNm_RepeatMessageRequest() in ready sleep state.
  27: Call UdpNm_MainFunction().
  28: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify repeat message state.
  29: Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and the current mode is
      "NM_MODE_NETWORK".
  30: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0146</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test 
Test Description: 
  Verify that all changes of the AUTOSAR UdpNm states shall be notified to the
  upper layer by calling Nm_StateChangeNotification().
  This test case checks for the following state changes.
   1. Ready Sleep State to Normal Operation State.
   2. Normal Operation State to Repeat Message State.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to"false".
  "UdpNmNodeDetectionEnabled" is set to"true".
  "UdpNmStateChangeIndEnabled" is set to"true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following.
  03: Verify that the value of UdpNm repeat message time is greater than 0.
  04: Verify that the current state is "NM_STATE_BUS_SLEEP" and the current
      mode is "NM_MODE_BUS_SLEEP".
  05: Call UdpNm_NetworkRequest() in bus sleep state.
  06: Call UdpNm_MainFunction().
  07: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify repeat message state.
  08: Verify that the current state is
      "NM_STATE_REPEAT_MESSAGE" and the current mode is "NM_MODE_NETWORK".
  09: Call UdpNm_NetworkRelease() and verify that it returns "E_OK".
  10: Call UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires.
  11: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify ready sleep state.
  12: Verify that the current state is "NM_STATE_READY_SLEEP" and the current
      mode is "NM_MODE_NETWORK"
  13: Call UdpNm_NetworkRequest() in ready sleep state and verify that it returns "E_OK".
  14: Call UdpNm_MainFunction().
  15: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify normal operation state.
  16: Call UdpNm_GetState() in ready sleep state and verify that the
      current state is "NM_STATE_NORMAL_OPERATION" and the current mode is "NM_MODE_NETWORK".
  17: Verify that UdpNm_RepeatMessageRequest() in normal operation state returns "E_OK".
  18: Call UdpNm_MainFunction().
  19: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify repeat message state.
  20: Call UdpNm_GetState() in repeat message state and verify that
      the current state is "NM_STATE_REPEAT_MESSAGE".
  21: VP (UdpNm.EB_Ref.SWS_UdpNm_00100.3):
      - If repeat message state is re-entered the first message is sent
        after message cycle offset (time).
  22: Release current channel and wait until it goes to sleep.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0114</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Enable Disable communication
Test Description: 
    Verify the functionality of UdpNm_EnableCommunication and
    UdpNm_DisableCommunication.
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
    "UdpNmComControlEnabled" is set to "true".
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: For each configured UdpNm Channel execute the steps from 03 to 12.
    03: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returns "E_OK".
    04: Call UdpNm_MainFunction().
    05: Call UdpNm_DisableCommunication() when UdpNm is in network mode and
        verify that it returns "E_OK".
    06: Call UdpNm_MainFunction() in a loop until UdpNm Message Cycle Time expires.
    07: VP (UdpNm.SWS_UdpNm_00051, UdpNm.SWS_UdpNm_00173):
        - SoAd_IfTransmit() is not invoked (UdpNm.SWS_UdpNm_00173: UdpNm Message Cycle
          timer should be stopped, so that SoAd_IfTransmit has not been invoked).
    08: VP (UdpNm.EB.SWS_UdpNm_00177.Implicit):
        - UdpNm_DisableCommunication() returns "E_NOT_OK".
    09: VP (UdpNm.SWS_UdpNm_00216):
        - UdpNm_EnableCommunication returns "E_OK" in network mode.
    10: Call UdpNm_MainFunction() in a loop until UdpNm Message Cycle Offset expires.
    11: VP (UdpNm.SWS_UdpNm_00176, UdpNm.ASR413.SWS_UdpNm_00178, UdpNm.ASR413.SWS_UdpNm_00169):
        - SoAd_IfTransmit() is invoked (UdpNm.ASR413.SWS_UdpNm_00178:UdpNm Message Cycle Timer
          was started with UDPNM_MSG_CYCLE_OFFSET, so that NM Pdu is transmitted).
    12: VP (UdpNm.SWS_UdpNm_00177):
        - UdpNm_EnableCommunication () returns "E_NOT_OK".
    13: Release current channel and wait until it goes to sleep
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.SWS_UdpNm_00177.Implicit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0115</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Enable disable communication
Test Description: 
  To test the behavior of UdpNm_DisableCommunication() and
  UdpNm_EnableCommunication() in Prepare Bus Sleep Mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmComControlEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following.
  03: Bring the channel to prepare bus sleep state.
  04: VP (UdpNm.SWS_UdpNm_00172):
      - UdpNm_DisableCommunication() returns "E_NOT_OK" in prepare bus sleep mode.
  05: VP (UdpNm.SWS_UdpNm_00305):
      - UdpNm_EnableCommunication() returns "E_NOT_OK" in prepare bus sleep mode.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0116</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Enable disable communication
Test Description: 
  Test the functionality of UdpNm_DisableCommunication() and to verify the
  behavior of UdpNm_NetworkRelease() when PDU transmission ability is disabled.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmComControlEnabled" is set to "true".

Test Execution: 
   01: Invoke UdpNm_Init().
   02: For each configured UdpNm Channel execute the following.
   03: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returns "E_OK".
   04: Call UdpNm_MainFunction() to change the state to repeat message
   05: Call UdpNm_MainFunction until message cycle offset time expires.
   06: Verify that SoAd_IfTransmit() is invoked to transmit PDU.
   07: UdpNm_DisableCommunication() returns E_OK.
   08: Call UdpNm_MainFunction() in a loop until UdpNm Message Cycle Time expires.
   09: VP (UdpNm.SWS_UdpNm_00170, UdpNm.SWS_UdpNm_00215, UdpNm.SWS_UdpNm_00173):
       - SoAd_IfTransmit() is not invoked.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NMTimeOutTimerCOMControl</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Enable disable communication
Test Description: 
    To verify that NM-Timeout Timer is stopped by UdpNm module when
    Network Management PDU transmission ability is disabled due to a
    call of UdpNm_DisableCommunication().
  
Test Object: NM-Timeout Timer
Test Precondition: 
    * Important configuration details:
      * "UdpNmPassiveModeEnabled" is set to "false".
      * "UdpNmComControlEnabled" is set to "true".
    * Module State:
      * UdpNm is initialized
      * UdpNm is in Bus sleep mode
  
Test Execution: 
    01: Prepare test case preconditions.
    02: Execute steps 03-12 for each configured UdpNm Channel.
    03: Go to "Ready-sleep" state.
    04: Call UdpNm_DisableCommunication().
    05: Call UdpNm_MainFunction() in a loop until NM-Timeout Time expires.
    06: VP (UdpNm.SWS_UdpNm_00174):
        - UdpNm is still in "network mode", as NM-Timeout time has been stopped.
    07: Call UdpNm_EnableCommunication().
    08: Process the change in Communication capability, so that the stopped
        timers (e.g. NM-Timeout timer) shall be restarted.
    09: Call UdpNm_MainFunction() in a loop in such a way that NM-Timeout Time doesn't expire.
    10: Ensure that UdpNm is still in "network mode".
    11: Call UdpNm_MainFunction() once, so that NM-Timeout time expires.
    12: VP (UdpNm.SWS_UdpNm_00179):
        - UdpNm has transited to "Prepare-Bus-Sleep" mode, as a result of
          expiry of NM-Timeout timer.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0085</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: RemoteSleepTests
Test Description: 
  Verify the behavior of UdpNm_CheckRemoteSleepIndication in the prepare bus sleep mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRemoteSleepIndEnabled " is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the steps from 03 to .
  03: Bring the state to prepare bus sleep.
  04: VP (UdpNm.EB_Ref.SWS_UdpNm_00154.2):
      - UdpNm_CheckRemoteSleepIndication() returns "E_NOT_OK".

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0100</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1783</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: RemoteSleepTests
Test Description: 
  To test the behavior of UdpNm when no Network Management PDUs are received
  in Normal Operation State also to test the functionality of UdpNm_CheckRemoteSleepIndication().

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRemoteSleepIndEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Invoke UdpNm_NetworkRequest() in bus sleep state and verify that it returns "E_OK".
  04: Call UdpNm_MainFunction() so that the state changes to repeat message.
  05: Invoke UdpNm_MainFunction() in a loop until the UdpNm repeat message time expires.
  06: Verify that the current state is
      "NM_STATE_NORMAL_OPERATION" and the current mode is "NM_MODE_NETWORK".
  07: Invoke UdpNm_MainFunction() in a loop until the UdpNm remote sleep indication time expires.
  08: VP (UdpNm.SWS_UdpNm_00150):
      - Nm_RemoteSleepIndication() is invoked.
  09: Call UdpNm_CheckRemoteSleepIndication() and verify that it returns E_OK.
  10: VP (UdpNm.SWS_UdpNm_00153, UdpNm.SWS_UdpNm_00227):
      - The value of Nm Remote Sleep Indication Pointer is TRUE.
  11: Invoke UdpNm_RxIndication().
  12: Call UdpNm_MainFunction().
  13: VP (UdpNm.SWS_UdpNm_00150, UdpNm.EB_Ref.SWS_UdpNm_00151.1):
      - Nm_RemoteSleepCancellation() is invoked.
  14: Call UdpNm_CheckRemoteSleepIndication() and verify that it returns "E_OK".
  15: VP (UdpNm.SWS_UdpNm_00153, UdpNm.SWS_UdpNm_00227):
      - The value of Nm Remote Sleep Indication Pointer is FALSE.
  16: Release current channel and wait until it goes to sleep


Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00151.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0101</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1930</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: RemoteSleepTests
Test Description: 
  Test the behavior of UdpNm_CheckRemoteSleepIndication() in the Bus-Sleep Mode.

Test Object: None.
Test Precondition: 
  "UdpNmRemoteSleepIndEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Call UdpNm_CheckRemoteSleepIndication() in bus sleep mode.
  04: VP (UdpNm.EB_Ref.SWS_UdpNm_00154.1):
      - UdpNm_CheckRemoteSleepIndication() returns "E_NOT_OK".

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0102</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>1993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Remote Sleep Test
Test Description: 
  Test the behavior of UdpNm_CheckRemoteSleepIndication in the Repeat Message State.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRemoteSleepIndEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Go to repeat message state.
  04: VP (UdpNm.EB_Ref.SWS_UdpNm_00154.3):
      - UdpNm_CheckRemoteSleepIndication() returns E_NOT_OK.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00154.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0127</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2068</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: RemoteSleepTests
Test Description: 
  Verify that, if Remote Sleep Indication has been previously detected and
  if a Network Management PDU is received through UdpNm_RxIndication in the
  Ready Sleep State again, UdpNm invokes Nm_RemoteSleepCancellation.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRemoteSleepIndEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel execute the following.
  03: Invoke UdpNm_NetworkRequest() in bus sleep state and verify that it returned "E_OK".
  04: Call UdpNm_MainFunction().
  05: Invoke UdpNm_MainFunction() in a loop until the UdpNm repeat message time expires.
  06: Verify that the current state
      is "NM_STATE_NORMAL_OPERATION" and the current mode is "NM_MODE_NETWORK".
  07: Invoke UdpNm_MainFunction() in a loop until the UdpNm Remote Sleep
      Indication Time expires.
  08: Nm_RemoteSleepIndication is invoked.
  09: Call UdpNm_NetworkRelease() in normal operation state and verify that it returned "E_OK".
  10: Call UdpNm_MainFunction()
  11: Verify that the current state is "NM_STATE_READY_SLEEP" and
      the current mode is "NM_MODE_NETWORK".
  12: Call UdpNm_RxIndication().
  13: Call UdpNm_MainFunction()
  14: VP (UdpNm.EB_Ref.SWS_UdpNm_00151.2):
      - Nm_RemoteSleepCancellation() is invoked.
 
Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00151.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0147</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: RemoteSleepTests
Test Description: 
  Verify the behavior of Remote Sleep Indication Timer when the Network
  Management PDU transmission ability is enabled and disabled.
 
Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRemoteSleepIndEnabled" is set to "true".
  "UdpNmComControlEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel execute steps from 03 to 12.
  03: Invoke UdpNm_NetworkRequest() in bus sleep state and verify that it returned "E_OK".
  04: Call UdpNm_MainFunction().
  05: Call UdpNm_MainFunction() until repeat message time expires.
  06: Call UdpNm_GetState() and verify that the current state is
      "NM_STATE_NORMAL_OPERATION" and current mode is "NM_MODE_NETWORK".
  07: Call UdpNm_DisableCommunication() in normal operation state and verify
      that it returns "E_OK".
  08: Invoke UdpNm_MainFunction() in a loop until the UdpNm Remote Sleep
      Indication Time expires.
  09: VP (UdpNm.EB_Ref.SWS_UdpNm_00175):
      - Nm remote sleep indication is not invoked.
  10: Call UdpNm_EnableCommunication() in normal operation state and verify
      that it returns "E_OK".
  11: Invoke UdpNm_MainFunction() in a loop until the UdpNm Remote Sleep
      Indication Time expires.
  12: VP (UdpNm.EB_Ref.SWS_UdpNm_00180):
      - Nm remote sleep indication is invoked.
 
Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0078</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2331</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: TxRx Test
Test Description: 
  Verify the behavior of UdpNm_RequestBusSynchronization() in Bus Sleep Mode
  and Network Mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmBusSynchronizationEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: VP (UdpNm.EB_Ref.SWS_UdpNm_00187.1, UdpNm.SWS_UdpNm_00226):
      - UdpNm_RequestBusSynchronization() returns E_NOT_OK in bus sleep mode.
  04: Call UdpNm_NetworkRequest() in bus sleep mode and verify that
      UdpNm_NetworkRequest() returns "E_OK".
  05: Invoke UdpNm_MainFunction().
  06: VP (UdpNm.EB_Ref.SWS_UdpNm_00187.1, UdpNm.SWS_UdpNm_00226):
      - UdpNm_RequestBusSynchronization() returns "E_OK" in repeat message state.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0080</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2402</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: TxRX Test
Test Description: 
  Verify the behavior of UdpNm_RequestBusSynchronization() in Prepare Bus Sleep Mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmBusSynchronizationEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following.
  03: Verify that the value of UdpNm repeat message time is greater than 0.
  04: Call UdpNm_NetworkRequest() in bus sleep state and verify that it
      returned "E_OK".
  05: Call UdpNm_MainFunction().
  06: Verify that Nm_NetworkMode() is invoked.
  07: Verify that the current state is
      "NM_STATE_REPEAT_MESSAGE" and the current mode is "NM_MODE_NETWORK".
  08: Call UdpNm_NetworkRelease() in repeat message state and verify that
      it returned E_OK.
  09: Call UdpNm_MainFunction() in a loop until the UdpNm Repeat
      Message Time expires.
  10: Verify that the current state is
      "NM_STATE_READY_SLEEP" and the current mode is "NM_MODE_NETWORK".
  11: Call UdpNm_MainFunction() in a loop until the UdpNm Timeout Time expires.
  12: Verify that the current state is "NM_STATE_PREPARE_BUS_SLEEP" and
      the current mode is "NM_MODE_PREPARE_BUS_SLEEP".
  13: VP (UdpNm.EB_Ref.SWS_UdpNm_00187.2):
      - UdpNm_RequestBusSynchronization() returns "E_NOT_OK".

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00187.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0081</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: TxRx Test
Test Description: 
  Verify that upon reception of UdpNm_RxIndication, UdpNm invokes Nm_PduRxIndication.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmPduRxIndicationEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm channel execute the following steps.
  03: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returned "E_OK".
  04: Call UdpNm_MainFunction().
  05: Call UdpNm_RxIndication().
  06: Call UdpNm_MainFunction().
  07: VP (UdpNm.SWS_UdpNm_00037, UdpNm.ASR413.SWS_UdpNm_00165):
      - Nm_PduRxIndication() is invoked with correct parameters.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0092</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: TxRx Test
Test Description: 
  Verify the behavior of UdpNm_RxIndication in Bus-Sleep Mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Call UdpNm_RxIndication() in bus sleep mode.
  04: Call UdpNm_MainFunction().
  05: VP (UdpNm.SWS_UdpNm_00127):
      - Nm_NetworkStartIndication() is invoked.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0096</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2670</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
  Verify that UdpNm module sets the source node identifier with the
  configuration parameter UDPNM_NODE_ID.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".
  "UdpNmPduNidPosition" is not set to "OFF".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel, execute the following steps.
  03: The value of UdpNm Pdu Node identifier Position is not set to "UDPNM_PDU_OFF".
  04: Call UdpNm_NetworkRequest() in bus sleep mode.
  05: Call UdpNm_MainFunction in a loop until UdpNm Message Cycle Offset Timer expires.
  06: Verify that SoAd_IfTransmit() is invoked.
  07: VP (UdpNm.SWS_UdpNm_00013):
      - The node identifier in the transmitted data is same as the configured one.
  08: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0097</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2763</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
  Verify the functionality of UdpNm_GetNodeIdentifier().

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel, execute the following steps.
  03: Verify that the value of UdpNm Pdu Node identifier Position is not UDPNM_PDU_OFF.
  04: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returned "E_OK".
  05: Call UdpNm_MainFunction() so that the state changes to repeat message.
  06: Call UdpNm_RxIndication() in repeat message state.
  07: Call UdpNm_MainFunction().
  08: Call UdpNm_RxIndication() with a different node identifier value.
  09: Call UdpNm_MainFunction().
  10: UdpNm_GetNodeIdentifier() returns E_OK.
  11: VP (UdpNm.SWS_UdpNm_00219, UdpNm.SWS_UdpNm_00132):
      - The value of Node Id pointer is the same as the node Id value in the latest PDU received.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0098</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2869</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
  Verify the functionality of UdpNm_GetLocalNodeIdentifier().

Test Object: None.
Test Precondition: 
  "UdpNmNodeDetectionEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel, execute the following steps.
  03: Verify that the value of UdpNm Pdu Node identifier Position is not UDPNM_PDU_OFF
  04: Call UdpNm_GetLocalNodeIdentifier() in bus sleep mode and verify that it returned "E_OK".
  05: VP (UdpNm.SWS_UdpNm_00220, UdpNm.SWS_UdpNm_00133):
      - The value set in the of Node Id Pointer is same as the configured one.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0099</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>2940</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
    Verify the functionality of UdpNm_GetPduData().
  
Test Object: None.
Test Precondition: 
    "UdpNmPassiveModeEnabled" is set to "false".
    "UdpNmNodeDetectionEnabled" is set to "true" or
    "UdpNmUserDataEnabled" is set to "true".
  
Test Execution: 
    01: Invoke UdpNm_Init().
    02: For each configured UdpNm Channel, execute the following steps.
    03: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returns "E_OK".
    04: Call UdpNm_MainFunction().
    05: Call UdpNm_MainFunction() until UdpNm message cycle offset time expires.
    06: Call UdpNm_RxIndication() in repeat message state.
    07: Call UdpNm_MainFunction().
    08: Call UdpNm_RxIndication() with a different data.
    09: Call UdpNm_MainFunction().
    10: Call UdpNm_GetPduData() and verify that UdpNm_GetPduData() returns E_OK.
    11: VP (UdpNm.SWS_UdpNm_00035, UdpNm.SWS_UdpNm_00309, UdpNm.SWS_UdpNm_00138):
        - The value of Pdu data pointer is same as the data last received.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0103</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3057</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: PduDataTests
Test Description: 
  Verify the functionality of UdpNm_SetUserData() and UdpNm_GetUserData().

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmUserDataEnabled" is set to "true".

Test Execution: 
  01: Invoke UdpNm_Init().
  02: For each configured UdpNm Channel, execute the following steps.
  03: Call UdpNm_NetworkRequest() in bus sleep mode and verify that it returns "E_OK".
  04: Call UdpNm_MainFunction() so that the state changes to repeat message.
  05: Call UdpNm_SetUserData() in repeat message state and verify that it returned E_OK.
  06: Call UdpNm_MainFunction() in a loop until Message Cycle Offset time expires.
  07: Verify that SoAd_IfTransmit() is invoked.
  08: VP (UdpNm.SWS_UdpNm_00159, UdpNm.SWS_UdpNm_00217):
      - The transmitted data is same as that set by UdpNm_SetUserData().
  09: Call UdpNm_RxIndication().
  10: Call UdpNm_MainFunction() in a loop until Message Cycle time expires.
  11: Call UdpNm_RxIndication() with a different user data.
  12: Call UdpNm_MainFunction().
  13: Call UdpNm_GetUserData() and verify that it returned "E_OK".
  14: VP (UdpNm.SWS_UdpNm_00160, UdpNm.SWS_UdpNm_00218):
      - The value of User Data Pointer is same as that last received.
  15: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0090</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify the behavior of UdpNm_RepeatMessageRequest() in the Prepare Bus-Sleep Mode.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled " is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following.
  03: Bring the channel to prepare bus sleep state.
  04: VP (UdpNm.EB_Ref.SWS_UdpNm_00137.2):
      - UdpNm_RepeatMessageRequest() returns E_NOT_OK in prepare bus sleep mode

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00137.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0139</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3316</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify the behavior of UdpNm_RepeatMessageRequest() in the Ready Sleep State.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true"

Test Execution: 
  01: Call UdpNm_Init()
  02: For each configured UdpNm Channel execute the following steps.
  03: Bring the channel to ready sleep state.
  04: VP (UdpNm.SWS_UdpNm_00221):
      - Call UdpNm_RepeatMessageRequest() in ready sleep state and verify that it returns "E_OK".
  05: Call UdpNm_MainFunction().
  06: VP (UdpNm.SWS_UdpNm_00112):
      - The current state is "NM_STATE_REPEAT_MESSAGE" and the current mode is "NM_MODE_NETWORK".
  07: Call UdpNm_MainFunction() in a loop until message cycle offset time expires.
  08: VP (UdpNm.EB_Ref.SWS_UdpNm_00100.1):
      - SoAd_IfTransmit() is invoked.
  09: VP (UdpNm.SWS_UdpNm_00113):
      - Repeat Message Bit in control bit vector is set.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0142</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify that when the Repeat Message State is entered from Normal Operation
  State, the UdpNm module starts transmission of Network Management PDUs.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Bring the channel to normal operation state.
  04: Call UdpNm_RepeatMessageRequest() and verify that it returns "E_OK".
  05: Call UdpNm_MainFunction().
  06: VP (UdpNm.SWS_UdpNm_00120):
      - Call UdpNm_GetState() in repeat message state and verify that the current
        state is "NM_STATE_REPEAT_MESSAGE".
  07: Call UdpNm_MainFunction() in a loop until message offset time expires.
  08: SoAd_IfTransmit() is invoked to transmit NM PDUs.
  09: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0119</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify the behavior of UdpNm Channel when changes from Repeat Message State
  to Ready Sleep State and then to Normal Operation.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" must be "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Verify that UdpNm Timeout Time is greater than UdpNm Msg Cycle Time.
  04: Bring the channel to repeat message state.
  05: VP (UdpNm.SWS_UdpNm_00102):
      - Call UdpNm_MainFunction() in a loop until the message cycle offset time expires.
  06: Verify that SoAd_IfTransmit() is invoked.
  07: Call UdpNm_NetworkRelease() in repeat message state and verify that it returns "E_OK".
  08: Call UdpNm_MainFunction() in a loop until remaining repeat message time expires.
  09: VP (UdpNm.SWS_UdpNm_00118):
      - The current state is "NM_STATE_READY_SLEEP" and current mode is "NM_MODE_NETWORK".
  10: Call UdpNm_RxIndication().
  11: Call UdpNm_MainFunction() in a loop until the message cycle time expires.
  12: VP (UdpNm.EB_Ref.SWS_UdpNm_00108.1):
      - SoAd_IfTransmit() is not invoked.
  13: Call UdpNm_NetworkRequest() and verify that it returns "E_OK".
  14: Call UdpNm_MainFunction() in a loop until the message cycle offset time expires.
  15: Verify that SoAd_IfTransmit() is invoked.
  16: Verify that Repeat Message Bit in control bit vector, which is defined in
      the position given by UdpNmPduCbvPosition, is cleared.
  17: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00108.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Nm_RepeatMsgIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3714</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify that UdpNm module invokes Nm_RepeatMessageIndication()
  for each reception of UdpNm_RxIndication with the Repeat Message Request bit is set.

Test Object: None.
Test Precondition: None.
Test Execution: None.
Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0125</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3867</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  On Repeat Message Request Bit Indication in the Ready Sleep State,
  the UdpNm module shall enter the Repeat Message State.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".

Test Execution: 
  01: Call UdpNm_Init()
  02: For each configured UdpNm Channel execute the following steps.
  03: Verify that the value of UdpNm control bit vector position is not UDPNM_PDU_OFF.
  04: Bring the channel to ready sleep state.
  05: Call UdpNm_RxIndication() with Repeat Message Request Bit is set.
  06: Call UdpNm_MainFunction().
  07: VP (UdpNm.SWS_UdpNm_00111):
      - The state is changed to "NM_STATE_REPEAT_MESSAGE".
  08: VP (UdpNm.EB_Ref.SWS_UdpNm_00100.4):
      - Wait until a message is sent on the Buss.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00100.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0128</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>3985</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify the behavior of UdpNm, when Repeat Message State is entered from
  Ready Sleep State after Remote Sleep Indication has been detected.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".
  "UdpNmRemoteSleepIndEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Bring the channel to normal operation state.
  04: Invoke UdpNm_MainFunction() in a loop until UdpNm remote sleep indication time elapses.
  05: VP (UdpNm.SWS_UdpNm_00150):
      - Verify that Nm_RemoteSleepIndication() is invoked.
  06: Release the network and invoke UdpNm_MainFunction() once.
  07: Verify that the current state is "NM_STATE_READY_SLEEP" and
      the current mode is "NM_MODE_NETWORK".
  08: Call UdpNm_RepeatMessageRequest() in ready sleep state and verify that it returns "E_OK".
  09: Call UdpNm_MainFunction().
  10: Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and
      the current mode is "NM_MODE_NETWORK".
  11: VP(UdpNm.EB_Ref.SWS_UdpNm_00152.2)
      Nm_RemoteSleepCancellation() is invoked.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB_Ref.SWS_UdpNm_00152.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_0132</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>4106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify the functionality of UdpNm_RepeatMessageRequest() in Normal Operation State.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".

Test Execution: 
  01: Call UdpNm_Init().
  02: For each configured UdpNm Channel execute the following steps.
  03: Verify that the value of UdpNm control bit vector Position is not UDPNM_PDU_OFF.
  04: Bring the channel to normal operation state.
  05: VP (UdpNm.SWS_UdpNm_00221):
      - Call UdpNm_RepeatMessageRequest() in normal operation state and verify that it returns "E_OK".
  06: Call UdpNm_MainFunction.
  07: VP (UdpNm.SWS_UdpNm_00120):
      - Verify that the current state is "NM_STATE_REPEAT_MESSAGE" and
      the current mode is "NM_MODE_NETWORK".
  08: Call UdpNm_MainFunction() until message cycle offset time expires.
  09: Verify that SoAd_IfTransmit() is invoked.
  10: VP (UdpNm.SWS_UdpNm_00121):
      - The transmitted PDU contains repeat message bit set in the control bit vector.
  11: Call UdpNm_MainFunction() a number of times so that the remaining
      duration of Message Cycle Time elapses.
  12: Verify that the current state is "NM_STATE_NORMAL_OPERATION" and
      the current mode is "NM_MODE_NETWORK".
  13: Call UdpNm_MainFunction() until message cycle offset time expires.
  14: Verify that SoAd_IfTransmit() is invoked.
  15: VP (UdpNm.SWS_UdpNm_00107):
      - Repeat Message Bit in control bit vector is cleared.
  16: Release current channel and wait until it goes to sleep

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NmTimeOut_Restart_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>4261</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  - Verify that the NM-Timeout Timer is restarted when it expires
    in the Repeat Message and Normal Operation states.
  - Verify also that the NM-Timeout Timer is reset every time it is started or restarted.

Test Object: None.
Test Precondition: 
  * NmTimeout time must be less than Repeat Message time and
    Repeat Message time must not be a multiple of NmTimeout time.
  * "UdpNmPassiveModeEnabled" is set to "false".

Test Execution: 
  01: Initialize stubs.
  02. Invoke UdpNm_Init().
  03: Execute steps 04 - 24 for each configured UdpNmChannel.
  04: Invoke Network Request.
  05: Invoke Main Function once to process UdpNm_NetworkRequest.
  06: Check if Repeat Message State is entered.
  07: Invoke Network Release.
  08: Invoke Main Function in a loop till time equivalent of Repeat Message Time elapses.
  09: Check if Ready Sleep state is reached.
  10: Invoke Main Function in a loop till 'remaining time of NM-Timeout' - 1 elapses.
  11: Check if module is still in Ready Sleep State.
  12: Invoke Main function once.
  13: VP (UdpNm.SWS_UdpNm_00096, UdpNm.SWS_UdpNm_00101, UdpNm.SWS_UdpNm_00206):
      - Prepare Bus Sleep sate is entered.
  14: Invoke Network Request again and call the Main Function once to process the request.
  15: Check if Repeat Message State is entered.
  16: Invoke Main Function in a loop until Repeat Message Time elapses.
  17: Check if normal operation state is reached.
  18: Invoke Main Function in a loop till remaining time for NM-Timeout elapses.
  19: Invoke Main Function in a loop till the time equivalent of two
      and a half of the NM timeouts elapses.
  20: Release the network.
  21: Invoke Main Function continuously for one cycle less than what
      is required for the remaining time for the NM timeouts elapses.
  22: VP (UdpNm.SWS_UdpNm_00117, UdpNm.SWS_UdpNm_00206):
      - Ready sleep state is not yet left. (This ensures that the NM Timeout
        timer has been restarted in Normal operation state; Had it not been
        restarted, the Ready sleep state would be left by now.)
  23: Invoke Main function once.
  24: VP (UdpNm.SWS_UdpNm_00117, UdpNm.SWS_UdpNm_00206):
      - Ready sleep state is left and Prepare Bus Sleep sate is entered.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NmTimeOut_Restart_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>4443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Verify that the NM-Timeout Timer is restarted at the successful reception
  or transmission of a Network Management PDU in the Network Mode.

Test Object: None.
Test Precondition: 
  * NmTimeout time must be greater than Message Cycle Offset time.
  * "UdpNmPassiveModeEnabled" is set to "false".

Test Execution: 
  01: Initialize stubs.
  02. Invoke UdpNm_Init().
  03: Execute steps 04 - 13 for each configured UdpNmChannel.
  04: Invoke Network Request and call the Main Function once to process
      the request.
  05: Verify that Repeat Message State is entered.
  06: Invoke Main Function in a loop till Message Cycle Offset time
      elapses and verify that an NM-PDU is transmitted.
  07: Invoke Main Function in a loop till the Message Cycle time elapses.
  08: Simulate the reception of an NM-PDU (which should reset the NM-Timeout
      Timer).
  09: Release the network.
  10: Invoke Main Function in a loop till the remaining time of RMS Time
      elapses.
  11: Verify that Ready Sleep State is entered.
  12: Invoke Main Function in a loop till the remaining time required for
      the NM-timeout is just about to elapse.
      (calculated as "NM Timeout Time - RMS Time - Total Elapsed Time - 1")
  13: VP (UdpNm.SWS_UdpNm_00099, UdpNm.SWS_UdpNm_00098):
        - Ready sleep state is not yet left. (This ensures that the NM Timeout
          timer had been restarted in repeat message state each time an NM-PDU
          is transmitted or received; Had it not been restarted, the Ready sleep
          state would be left by now.)
  14: Invoke main function once.
  15: VP (UdpNm.SWS_UdpNm_00099, UdpNm.SWS_UdpNm_00098):
      - Prepare Bus Sleep sate is entered.
  16: Invoke Network Request again and call the Main Function once to
      process the request.
  17: Check if Repeat Message State is entered.
  18: Invoke Main Function in a loop until Repeat Message Time elapses.
  19: Check if normal operation state is reached.
  20: Invoke Main Function in a loop till the Message Cycle time elapses
      and verify that an NM-PDU is transmitted.
  21: Invoke Main Function in a loop till the time equivalent of two
      and a half of the NM timeouts elapses (to windup the NM Timeout Timer).
  22: Simulate the reception of an NM-PDU (which should reset the NM-Timeout Timer).
  23: Release the network.
  24: Invoke Main Function continuously for one cycle less than what
      is required for the remaining time for the NM timeout to elapse.
  25: VP (UdpNm.SWS_UdpNm_00099, UdpNm.SWS_UdpNm_00098):
      - Ready sleep state is not yet left. (This ensures that the NM Timeout
        timer has been restarted in Normal operation state each time an NM-PDU
        is transmitted or received; Had it not been restarted, the Ready sleep
        state would be left by now.)
  26: Invoke Main function once.
  27: VP (UdpNm.SWS_UdpNm_00099, UdpNm.SWS_UdpNm_00098):
      - Ready sleep state is left and Prepare Bus Sleep sate is entered.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00099</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>TS_UdpNm_RepeatMsgReqCommDisable</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_6/source/application/UdpNm_ConTest_6.c</sourcefile>
      <sourceline>4665</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When the communication is disabled and UdpNm_RepeatMessageRequest() is
    called, UdpNm shall:
    - transit to "Repeat Message" state
    - set "Repeat Message" bit
    - not transmit NM PDUs
  
Test Object: None.
Test Precondition: 
    * Important configuration details:
      - "UdpNmPassiveModeEnabled" is set to "false".
      - "UdpNmNodeDetectionEnabled" is set to "true".
      - "UdpNmComControlEnabled" is set to "true".
    * Module state:
      - UdpNm must be in an initialized state
    * Misc.:
      - As for the SoAd stub TX confirmation must be enabled.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_BusSynchronization</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_7/source/application/UdpNm_ConTest_7.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State Transition
Test Description: 
  Verify UdpNm_RequestBusSynchronization calls PduR_UdpNmTriggerTransmit()
  function correctly and passes the parameters correctly to SoAd_IfTransmit().

Test Object: None.
Test Precondition: 
  "UdpNmComUserDataSupport" is set to "true".
  Channel0 is configured with Rx and Tx UserData Pdu.
  Channel1 is configured with no user data.

Test Execution: 
  01: Call UdpNm_Init().
  02: Call UdpNm_NetworkRequest for Channel0 and
      UdpNm_MainFunction to change the state to repeat message state.
  03: VP (UdpNm.SWS_UdpNm_00226):
      Call UdpNm_RequestBusSynchronization.
  04: VP (UdpNm.SWS_UdpNm_00315):
      - PduR_UdpNmTriggerTransmit &amp; SoAd_IfTransmit is invoked once each.
  05: VP (UdpNm.SWS_UdpNm_00315):
      - The Userdata passed to SoAd_IfTransmit is the same as the data
        received by PduR_UdpNmTriggerTransmit().
      - The received user data is combined with the further NM bytes
        before being passed to SoAd_IfTransmit().
  06: Set TriggerTransmit callout parameter with return parameter as E_NOT_OK.
  07: Call UdpNm_RequestBusSynchronization.
  08: VP (UdpNm.SWS_UdpNm_00315):
      - PduR_UdpNmTriggerTransmit &amp; SoAd_IfTransmit is invoked once each.
  09: Verify Userdata transferred to SoAd_IfTransmit is same as previous data
  10: Call UdpNm_NetworkRequest for second configured channel and
      UdpNm_MainFunction to change the state to repeat message state.
  11: Call UdpNm_RequestBusSynchronization for Channel1 where
      Userdata Length is 0.
  12: - PduR_UdpNmTriggerTransmit is not called and SoAd_IfTransmit is called.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_TriggerTransmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_7/source/application/UdpNm_ConTest_7.c</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  To verify that, API functions PduR_UdpNmTriggerTransmit() and
  PduR_UdpNmTxConfirmation() are invoked with correct parameters.

Test Object: None.
Test Precondition: 
  * "UdpNmComUserDataSupport" is set to "true".
  * Channel0 is configured with Rx and Tx UserData Pdu.
  * Pdu reference in UdpNmTxUserDataPduRef matches the same in PduRDestPduRef.
  * Channel1 is configured with no user data.
  * Stubs, test data buffer and UdpNm module are initialized.

Test Execution: 
  01. Prepare preconditions
  02. Call UdpNm_NetworkRequest()
  03. Call UdpNm_MainFunction() until message cycle offset time expires
  04. VP (UdpNm.SWS_UdpNm_00315):
      - PduR_UdpNmTriggerTransmit has been invoked for Channel0 and has not
        been invoked for Channel1.
      - The correct UserData passed from PduR_UdpNmTriggerTransmit is sent to
        SoAd_IfTransmit.
  05.  - PduR_UdpNmTriggerTransmit() has been invoked with correct "TxPduId".
  06. Verify that SoAd_IfTransmit() has been invoked.
  07. Call UdpNm_TxConfirmation with TxConfirmation PduId.
  08. VP (UdpNm.SWS_UdpNm_00316):
      - PduR_UdpNmTxConfirmation has been invoked for Channel0 and has not
        been invoked for Channel1.
  09.  - PduR_UdpNmTxConfirmation has been invoked with correct 'TxPduId'.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_RxIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_7/source/application/UdpNm_ConTest_7.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test to verify UdpNm_RxIndication function and the respective call to
    PduR_UdpNmRxIndication function.
  
Test Object: None.
Test Precondition: 
    "UdpNmComUserDataSupport" is set to "true".
    Channel0 is configured with Rx and Tx UserData Pdu.
    Channel1 is configured with no user data.
  
Test Execution: 
    01: Call UdpNm_Init.
    02: Call UdpNm_RxIndication for Channel0.
    03: VP (UdpNm.SWS_UdpNm_00231, UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxIndication,UdpNm.EB.PDULENGTHTYPE001):
        - PduR_UdpNmRxIndication is invoked.
    04: Verify that the UserData received in UdpNm_RxIndication is correctly
        passed to PduR_UdpNmRxIndication().
    05: Call UdpNm_RxIndication for Channel1 whose UserDataLength is 0.
    06: VP (UdpNm.SWS_UdpNm_00231):
        - PduR_UdpNmRxIndication is not invoked.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PDULENGTHTYPE001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.UdpNmUserDataRxIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_GetUserdataDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_7/source/application/UdpNm_ConTest_7.c</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Testing UdpNm_GetUserData function when Com Support is enabled and
  UserData length is 0.

Test Object: None.
Test Precondition: 
  "UdpNmComUserDataSupport" is set to "true".
  Channel0 is configured with Rx and Tx UserData Pdu.
  Channel1 is configured with no user data.

Test Execution: 
  01: Call UdpNm_Init.
  02: VP(UdpNm.EB.ComUserDataSupport.SetGetUserDataNoUserData):
      - UdpNm_GetUserData function return E_NOT_OK for second configured channel where
      UserDataLength is 0.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.ComUserDataSupport.SetGetUserDataNoUserData</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_Transmit</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_7/source/application/UdpNm_ConTest_7.c</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that UdpNm_Transmit is an empty function returning E_OK
    at any time.
  
Test Object: UdpNm_Transmit
Test Precondition: 
    "UdpNmComUserDataSupport" is set to "true".
    Channel0 is configured with Rx and Tx UserData Pdu.
    Channel1 is configured with no user data.
  
Test Execution: 
    01: Initialize stubs and call UdpNm_Init.
    02: Call UdpNm_Transmit with the configured User Data Tx Pdu Id and
        a valid PduInfo pointer.
    03: VP (UdpNm.SWS_UdpNm_00313):
        - UdpNm_Transmit returns E_OK.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_Passive_Active</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_8/source/application/UdpNm_ConTest_8.c</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Call UdpNm_PassiveStartUp() and UdpNm_NetworkRequest() while Immediate transmission is set
    check that in case UDPNM_MSG_CYCLE_TIMER_START is started with zero (due to immediate messages)
    transmission of messages are handeled before UdpNm_NetworkRequest is handeled.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Prepare test case preconditions and call UdpNm_Init().
    02: VP(UdpNm.SWS_UdpNm_00211): - Call UdpNm_PassiveStartUp()
    03: VP(UdpNm.SWS_UdpNm_00213): - Call UdpNm_NetworkRequest()
    04: Call Tst_CallMainFunction() to process the events.
    05: Check that predefined sequence is executed
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_ReEnterNetworkMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_8/source/application/UdpNm_ConTest_8.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case current state is repeat message state
    and parameter UdpNmPnHandleMultipleNetworkRequests is set to true
    and network is requested again,
    state change notification is called only if current state differs from previous state.
  
Test Object: None.
Test Precondition: 
    UdpNmPnHandleMultipleNetworkRequests is set to true
  
Test Execution: 
   01: Initialize stubs
   02: Call network request
   03: VP(UdpNm.SWS_UdpNm_00166)
       - Check that state change notification has been called
   04: Check that network mode has been called
   05: Check the current state is repeat message state
   06: Re request the network
   07: - Check that state change notification has not been called
         since previous state is equal to current state
   08: Check that network mode is called
   09: Check the current state is Network Mode
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_Nm_RepeatMsgIndication_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_9/source/application/UdpNm_ConTest_9.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Repeat message test
Test Description: 
  Verify that UdpNm module invokes Nm_RepeatMessageIndication() for each
  reception of UdpNm_RxIndication with the Repeat Message Request bit is set.

Test Object: None.
Test Precondition: 
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmRepeatMsgIndEnabled" must be "true"
  "UdpNmNodeDetectionEnabled" must be "true"

Test Execution: 
  01: Call UdpNm_Init()
  02: For each configured UdpNm Channel execute the following.
  03: Verify the value of UdpNm PDU Control bit vector is not set to "UDPNM_PDU_OFF".
  04: Verify the value of UdpNm Repeat Message Time is greater than zero.
  05: Call UdpNm_NetworkRequest() in bus sleep mode.
  06: Verify that UdpNm_NetworkRequest() return "E_OK".
  07: Call UdpNm_MainFunction() in a loop until the UdpNm Message Cycle Time expires.
  08: Invoke UdpNm_RxIndication() with repeat message bit set.
  09: Call UdpNm_MainFunction()
  10: VP (UdpNm.ASR413.SWS_UdpNm_00014):
      - Nm_RepeatMessageIndication() is invoked.
  11: Call UdpNm_MainFunction() in a loop until the UdpNm Message Cycle Time expires.
  12: Invoke UdpNm_RxIndication() with repeat message bit set.
  13: Call UdpNm_MainFunction()
  14: VP (UdpNm.ASR413.SWS_UdpNm_00014):
      - Nm_RepeatMessageIndication() is invoked.

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.ASR413.SWS_UdpNm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>TC_UDPNM_NmTimeOut_Start</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_9/source/application/UdpNm_ConTest_9.c</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When the Network Mode is entered, the UdpNm module shall start the NM-Timeout Timer.
  
Test Object: None.
Test Precondition: 
    * NmTimeout time is greater than the Repeat Message time.
    * "UdpNmPassiveModeEnabled" is set to "false".
  
Test Execution: 
    01: Initialize stubs.
    02. Invoke UdpNm_Init().
    03: Execute steps 04 - 19 for each configured UdpNmChannel.
    04: Request the Network and call Main Function once to process the request.
    05: Verify that Repeat Message State is entered.
    06: Release the Network.
    07: Invoke Main Function in a loop till the time equivalent of 'NM-Timeout' - 1 elapses.
    08: Check if module is still in Ready Sleep State.
    09: Invoke the Main function once.
    10: VP (UdpNm.SWS_UdpNm_00096, UdpNm.SWS_UdpNm_00109):
        - Prepare Bus Sleep sate is entered.
    11: Invoke Network Request again and call the Main Function once to process the request.
    12: Check if Repeat Message State is entered.
    13: Invoke Main Function in a loop until Repeat Message Time elapses.
    14: Check if normal operation state is reached.
    15: Release the network.
    16: Invoke Main Function in a loop until one more cycle will cause
        the remaining time for NM-Timeout to elapse.
    17: VP (UdpNm.SWS_UdpNm_00096, UdpNm.SWS_UdpNm_00109):
        - Ready sleep state is not yet left. (This ensures that the NM Timeout
          timer has been started in Normal operation state; Had it not been
          started, the Ready sleep state would be left by now.)
    18: Invoke Main function once.
    19: VP (UdpNm.SWS_UdpNm_00096, UdpNm.SWS_UdpNm_00109):
        - Ready sleep state is left and Prepare Bus Sleep sate is entered.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TC_UDPNM_StateChangeNotification_UdpNmRemoteSleepIndEnabledFalse</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Conformance/IN/UdpNm_ConTest_NoPassiveMode_MultipleChannels/source/application/UdpNm_ConTest_40.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: State transition test
Test Description: 
  Verify that if UdpNmRemoteSleepIndEnabled is set to false then transition from
  Repeat Message State to Normal Operation State is notified to the upper layer
  by calling Nm_StateChangeNotification.

Test Object: None.
Test Precondition: 
  More than one UdpNm channels are configured.
  "UdpNmPassiveModeEnabled" is set to "false".
  "UdpNmNodeDetectionEnabled" is set to "true".
  "UdpNmStateChangeIndEnabled" is set to "true".
  "UdpNmRemoteSleepIndEnabled" is set to "false".

Test Execution: 
  01: Initialize stubs.
  02: Call UdpNm_Init().
  03: For each configured UdpNm Channel execute the steps from 04 to 10.
  04: Verify that the current state is "NM_STATE_BUS_SLEEP" and the current mode
      is "NM_MODE_BUS_SLEEP".
  05: Call UdpNm_NetworkRequest() in prepare bus sleep state.
  06: Call UdpNm_MainFunction().
  07: Call UdpNm_GetState() in repeat message state and verify that the current
      state is "NM_STATE_REPEAT_MESSAGE" and current mode is "NM_MODE_NETWORK".
  08: Reset Nm_StateChangeNotification_Stub count.
  09: Invoke UdpNm_MainFunction() in a loop until UdpNm Repeat Message Time expires.
  10: VP (UdpNm.SWS_UdpNm_00166):
      - Nm_StateChangeNotification() is invoked to notify normal operation state.

Test Input: 
  State transition from Repeat Message State to Normal Operation State

Test Output: 
  Nm_StateChangeNotification call.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.SWS_UdpNm_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>UdpNm_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Implementation/IN/UdpNm_ImpTest_1_PbcfgM/source/application/Tests.c.m4</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function UdpNm_IsValidConfig() is implemented as specified.
  
Test Object: 
    UdpNm_IsValidConfig()
  
Test Precondition: 
    The UdpNm module is not initialized.
  
Test Execution: 
    01: Call the function UdpNm_IsValidConfig() with an NULL_PTR.
    02: VP(UdpNm.EB.PBCFGM101):
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function UdpNm_IsValidConfig() with this invalid configuration.
    05: VP(UdpNm.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    06: Create an invalid configuration regarding the link time configuration.
    07: Call the function UdpNm_IsValidConfig() with this invalid configuration.
    08: VP(UdpNm.EB.PBCFGM105):
        The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function UdpNm_IsValidConfig() with this invalid configuration.
    11: VP(UdpNm.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function UdpNm_IsValidConfig() with this invalid configuration.
    14: VP(UdpNm.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function UdpNm_IsValidConfig() with a valid configuration.
    16: VP(UdpNm.EB.PBCFGM102):
        The function must have returned with E_OK.
    17: VP(UdpNm.EB.PBCFGM107):
        Check if UDPNM_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>UdpNm_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_UdpNm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_UdpNm/test/ts5/Implementation/IN/UdpNm_ImpTest_1_PbcfgM/source/application/Tests.c.m4</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the UdpNm can be initialized via the PbcfgM.
  
Test Object: 
    UdpNm_IsValidConfig()
  
Test Precondition: 
    The UdpNm module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function UdpNm_Init() with this invalid configuration.
    03: VP(UdpNm.EB.PBCFGM110):
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function UdpNm_Init() with this invalid configuration.
    06: VP(UdpNm.EB.PBCFGM110):
        A Det call must have been performed correctly.
    07: Create an invalid configuration regarding the link time configuration.
    08: Call the function UdpNm_Init() with this invalid configuration.
    09: VP(UdpNm.EB.PBCFGM110):
        A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function UdpNm_Init() with this invalid configuration.
    12: VP(UdpNm.EB.PBCFGM110):
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function UdpNm_Init() with a null pointer.
    15: The function PbcfgM_GetConfig() must have been called once.
    16: No Det call must have been performed.
    17: The module internal configuration pointer UdpNm_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call UdpNm_Init with NULL_PTR.
    20: VP(UdpNm.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>UdpNm.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
