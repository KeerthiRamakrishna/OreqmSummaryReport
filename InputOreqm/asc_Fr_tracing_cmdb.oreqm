<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_Fr_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_OldReqdefImporter/reqm_REQDEF_LEGACY.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:59:33 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_Fr_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_OldReqdefImporter/reqm_REQDEF_LEGACY.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_SRC.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

    <specobject>
      <id>Fr.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: Fr_IsValidConfig
        Syntax: Std_ReturnType Fr_IsValidConfig( void* ConfigPtr )
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): ConfigPtr, post build configuration manager
        configuration.
        Parameters (inout): None
        Parameters (out): None
        Return value: Returns E_OK if the Fr configuration is valid otherwise E_NOT_OK. A
        null pointer is interpreted as invalid configuration.
        Description: This function determines if the Fr configuration is valid. This
        function can be called also before the Fr is initialized. No error reporting
        is necessary within this function.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro FR_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro FR_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          CfgSignature.
        - the Fr_Cfg.h file shall contain the macro
          FR_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          PublicInfoSignature.
        - the Fr_Cfg.h file shall contain the macro
          FR_PUBLIC_INFO_SIGNATURE.
        - The MCG shall generate this signature value from the list of parameters of
          configuration class 'PublishedInformation' except 'Release'. The XPath function
          asc:getConfigSignature(nodeset) shall be used to determine the signature out of the
          list of parameters. The list of parameters shall be determined with the function
          asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          LcfgSignature.
        - the link time configuration shall contain the uint32 value
          Fr_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the Fr post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding
          bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        FR_PBCFGM_SUPPORT_ENABLED defined in the file
        Fr_Cfg.h.
        If the PbcfgM configuration references the Fr configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_IsValidConfig</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_Off</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the Fr is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_Off</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_On</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1519</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>Fr.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Fr_Init() function must be extended to enable the PbcgfM
        features.
        The initialization function shall obtain the Fr configuration
        from the PbcfgM if the PbcfgM support is enabled within this Fr
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        Fr_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return, leaving the Fr uninitialized.
        In the case error reporting is enabled and no valid configuration can be obtained
        an erroneous parameter shall be indicated.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>Fr.EB.PostBuild_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Fr module shall compile and build an executable even in the absence
        of a post build configuration, i.e. without any post build generated .c and .h files
        available.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_NOPBCFG</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>TS_FR_Gen_00000_OnlyPbCfg</srcid><srcstatus/><internalId>908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>Fr.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Fr shall provide the following macros in the header file
        Fr_Cfg.h:
        - FR_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_On</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>Fr.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled Fr shall define the following macros in
        Fr_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. Fr_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. Fr_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_Off</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_On</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>Fr.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_Fr_VerifyCodeStub</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>Fr.dev.BufferCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>Fr.dev.BufferReconfig</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR528</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR542</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR443_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    <specobject>
      <id>Fr.dev.PostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.Ch10.2.1_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>
    <specobject>
      <id>Fr.dev.SlotStatus</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR605</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR627</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR628</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR629</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR630</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>
    <specobject>
      <id>Fr.dev.InitCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR647</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR598</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>Fr.dev.CancelTx</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR611</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR612</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR613</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR614</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR615</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR616</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>Fr.dev.StringentCheck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR604</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR603</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR645</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>
    <specobject>
      <id>Fr.dev.NumStartupFrames</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR547</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR549</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR550</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR551</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR553</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR554</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>Fr.dev.DynMsgBufferOpt</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>183</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>Fr.dev.ConsChck</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>Fr.dev.DebugAndTrace</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/public/changelog/Deviations.xml</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR625</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR626</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
  </specobjects>
    <specobjects doctype="req">
    <specobject>
      <id>Fr.ASR40.FR449</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      In the dynamic segment of each FlexRay Communication Cycle, a transmit/receive
      buffer of a FlexRay Communication Controller shall be used only one
      particular LPdu. This limits the reconfiguration possibilities and thus
      restricts the number of transmittable (sent and received) LPdus per
      dynamic segment to the accumulated number (over all CCs on one ECU) of
      transmit/receive buffers connected to one cluster. This limitation
      results from the unpredictability of the time of transmission of an LPdu
      within the dynamic segment. Because of that a point in time for the
      reconfiguration of a certain buffer for multiple usages within the
      dynamic segment cannot be predetermined.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      For message buffer optimization purposes, a single message buffer is shared for different LPdus in the same
      Slot on the same channel (but different cycle filter configurations).
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.DynMsgBufferOpt</srcid><srcstatus/><internalId>21</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR451</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall use the Development Error Tracer (DET) to report
      development errors.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR452</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall use the Diagnostic Event Manager (DEM) to  report
      diagnostic-relevant events and states.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR453</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall use the BSW Scheduler mechanisms for data  consistency when
      required.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is not applicable.
        BSW scheduler not required, no global variables are used in a shared way.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR454</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      On certain systems the CC might share resources with other  components (e.g.,
      the MCU), and might depend on their configurations. If  those resources
      are within the scope of the other modules (e.g., PLL  configuration,
      memory mapping), then the Fr module doesn't configure those  components
      but requires that their initialization precede the Fr module's
      initialization.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR459</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr.h file shall include Fr_GeneralTypes.h.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR460</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr.h file shall include Std_Types.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      Note: 
      Std_Types.h is already included by Fr_GeneralTypes.h
      Fr_GeneralTypes.h is included by Fr_Api.h which indeed is included by Fr.h.      
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Api.h_11</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR461</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr.h file shall include Fr_Cfg.h.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR462</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr.c file shall include Fr.h.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR462_1</srcid><srcstatus/><internalId>33</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR462_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Every c-file implementing a public API shall directly or indirectly include Fr.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      The purpose of this requirement is the inclusion of the function declarations for the
      implementation to ensure consistency between function declaration and function definition.
      This implementation implements the function declarations in Fr_Api.h. Thus this requirement
      is sufficiently fulfilled if every C-file includes (directly or indirectly) Fr_Api.h.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY.h_21</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_7</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_7</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_7</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_8</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllSlots.c_8</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_7</srcid><srcstatus/><internalId>693</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_8</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_9</srcid><srcstatus/><internalId>701</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_7</srcid><srcstatus/><internalId>705</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_7</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_21</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_8</srcid><srcstatus/><internalId>719</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_8</srcid><srcstatus/><internalId>723</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_8</srcid><srcstatus/><internalId>727</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_8</srcid><srcstatus/><internalId>731</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_8</srcid><srcstatus/><internalId>735</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_8</srcid><srcstatus/><internalId>739</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_9</srcid><srcstatus/><internalId>745</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_7</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_7</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_7</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_7</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_7</srcid><srcstatus/><internalId>765</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_7</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_16</srcid><srcstatus/><internalId>773</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_7</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_7</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_19</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_7</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_7</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_7</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_7</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Merged.c_10</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_8</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_11</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_19</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_19</srcid><srcstatus/><internalId>843</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_8</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendMTS.c_7</srcid><srcstatus/><internalId>851</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendWUP.c_8</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_7</srcid><srcstatus/><internalId>859</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_18</srcid><srcstatus/><internalId>863</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_7</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_7</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_8</srcid><srcstatus/><internalId>875</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_26</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.src.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All files related to the Fr module shall follow the naming convention
      Fr[_&amp;lt;description&amp;gt;].&amp;lt;extension&amp;gt; .
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Fr_1_ERAY_Cfg.h_3</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_3</srcid><srcstatus/><internalId>654</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Fr_1_ERAY_SymbolicNames_PBcfg.h_3</srcid><srcstatus/><internalId>657</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_3</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY.h_14</srcid><srcstatus/><internalId>661</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Api.h_3</srcid><srcstatus/><internalId>663</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Extension.h_3</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Version.h.m4_1</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY.c.m4_4</srcid><srcstatus/><internalId>671</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_3</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_3</srcid><srcstatus/><internalId>676</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_3</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_4</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllSlots.c_4</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_3</srcid><srcstatus/><internalId>692</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_4</srcid><srcstatus/><internalId>696</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_5</srcid><srcstatus/><internalId>700</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_3</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_3</srcid><srcstatus/><internalId>710</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_17</srcid><srcstatus/><internalId>714</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_4</srcid><srcstatus/><internalId>718</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_4</srcid><srcstatus/><internalId>722</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_4</srcid><srcstatus/><internalId>726</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_4</srcid><srcstatus/><internalId>730</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_4</srcid><srcstatus/><internalId>734</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_4</srcid><srcstatus/><internalId>738</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_5</srcid><srcstatus/><internalId>744</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_3</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_3</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_3</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_3</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_3</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_3</srcid><srcstatus/><internalId>768</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_12</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_3</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_3</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_3</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_3</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetVersionInfo.c.m4_3</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_3</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_3</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_3</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Merged.c_6</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_4</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_3</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_15</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_3</srcid><srcstatus/><internalId>842</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_4</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendMTS.c_3</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendWUP.c_4</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_3</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_14</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_3</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_3</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_4</srcid><srcstatus/><internalId>874</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_22</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.src.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The implementation of the Fr module shall contain the following source code
      files:
      - Fr.c for the general source code or
      - Fr_&amp;lt;purpose&amp;gt;.c if the implementation is  separated into several source code files.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Merged.c_17</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR116</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The code file structure shall not be completely defined within this
      specification.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR463</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      At this point it shall be pointed out that the code-file structure shall include
      the following files named:
      - Fr_PBcfg.c - for post build time configurable parameters.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen_246</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The implementation of the Fr module shall provide the header file Fr.h, which
      is the main module interface file.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR464</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The file Fr.h shall contain all types and function prototypes required by the Fr
      module's environment.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>266</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The implementation of the Fr module shall provide the header file Fr_Cfg.h,
      which shall contain the pre-compile-time configuration parameters.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR117</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>280</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Fr_GeneralTypes.h shall contain all types and constants that are shared among
      the AUTOSAR FlexRay modules Fr, FrIf and FrTrcv.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR455</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The integrator of the FlexRay modules shall provide the file Fr_GeneralTypes.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall include the Dem.h file.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR456</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>324</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The above inclusion also ensures that APIs to report errors as well the required
      Event Id symbols are included.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR457</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      This specification defines the name of the Event Id symbols, which are provided
      by XML to the DEM configuration tool. The DEM configuration tool assigns
      ECU dependent values to the Event Id symbols and publishes the symbols in
      Dem_IntErrId.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module source code file(s) shall include Det.h file. This inclusion
      ensures the includsion of APIs to report development errors.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR111</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module source code file(s) shall include SchM_Fr.h if data consistency
      mechanisms of the BSW scheduler are required as described in [9].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is not applicable.
        BSW scheduler is not used.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All Fr module files shall include MemMap.h and apply the memory mapping
      abstraction mechanisms as specified by [10].
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_31</srcid><srcstatus/><internalId>655</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_38</srcid><srcstatus/><internalId>656</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_23</srcid><srcstatus/><internalId>659</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_30</srcid><srcstatus/><internalId>660</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Api.h_364</srcid><srcstatus/><internalId>665</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Api.h_1516</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Extension.h_453</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/Fr_1_ERAY_Extension.h_1103</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_22</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_122</srcid><srcstatus/><internalId>675</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_22</srcid><srcstatus/><internalId>678</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_185</srcid><srcstatus/><internalId>679</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_25</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_181</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_26</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_189</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllSlots.c_26</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllSlots.c_170</srcid><srcstatus/><internalId>691</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_25</srcid><srcstatus/><internalId>694</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_171</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_23</srcid><srcstatus/><internalId>698</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_132</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_27</srcid><srcstatus/><internalId>702</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_134</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_20</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_37</srcid><srcstatus/><internalId>707</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_46</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_201</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_25</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_212</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_34</srcid><srcstatus/><internalId>716</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_944</srcid><srcstatus/><internalId>717</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_26</srcid><srcstatus/><internalId>720</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_136</srcid><srcstatus/><internalId>721</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_26</srcid><srcstatus/><internalId>724</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_129</srcid><srcstatus/><internalId>725</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_28</srcid><srcstatus/><internalId>728</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_192</srcid><srcstatus/><internalId>729</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_27</srcid><srcstatus/><internalId>732</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_137</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_23</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_132</srcid><srcstatus/><internalId>737</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_25</srcid><srcstatus/><internalId>740</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_37</srcid><srcstatus/><internalId>741</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_42</srcid><srcstatus/><internalId>742</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_142</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_27</srcid><srcstatus/><internalId>746</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_136</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_25</srcid><srcstatus/><internalId>750</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_157</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_25</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_228</srcid><srcstatus/><internalId>755</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_25</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_197</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_25</srcid><srcstatus/><internalId>762</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_191</srcid><srcstatus/><internalId>763</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_22</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_225</srcid><srcstatus/><internalId>767</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_25</srcid><srcstatus/><internalId>770</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_148</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_34</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_193</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_29</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_88</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_94</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_450</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_26</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_156</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_35</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_398</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_22</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_147</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_25</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_164</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_22</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_164</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_24</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_33</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_38</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_46</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_54</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Init.c_168</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Merged.c_15</srcid><srcstatus/><internalId>813</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Merged.c_62</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_28</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_208</srcid><srcstatus/><internalId>819</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_284</srcid><srcstatus/><internalId>822</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_292</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_297</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_305</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_309</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_314</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_320</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_Priv.h_451</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_39</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_167</srcid><srcstatus/><internalId>841</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_34</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_657</srcid><srcstatus/><internalId>845</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_24</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_366</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendMTS.c_25</srcid><srcstatus/><internalId>852</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendMTS.c_312</srcid><srcstatus/><internalId>853</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendWUP.c_26</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SendWUP.c_169</srcid><srcstatus/><internalId>857</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_22</srcid><srcstatus/><internalId>860</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_302</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_36</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_239</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_25</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_247</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_26</srcid><srcstatus/><internalId>872</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_269</srcid><srcstatus/><internalId>873</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_23</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_169</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_48</srcid><srcstatus/><internalId>880</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_73</srcid><srcstatus/><internalId>881</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_80</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_515</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.src.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR465</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      A single Fr module offers a uniform way to use features of FlexRay CCs
      independent of the CC implementation, thus hiding the actual hardware
      implementation (registers, buffers, etc.) from upper layers.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR466</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module maps abstract functional requests to sequences of CC specific
      hardware accesses.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Flexray Driver module shall perform Inter Module Checks to avoid integration
      of incompatible files. The imported included files shall be checked by
      preprocessing directives. The following version numbers shall be
      verified: - &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MAJOR_VERSION -
      &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MINOR_VERSION where &amp;lt;MODULENAME&amp;gt; is the module
      short name of the other (external) modules which provide header files
      included by the Flexray Driver module. If the values are not identical to
      the expected values, an error shall be reported.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Conflicts with EB coding guideline [BSWM_CHK_401].
        See:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/
            Software_Construction/Coding_Guidelines
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.ConsChck</srcid><srcstatus/><internalId>22</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>462</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      In case development error detection is enabled for the Fr module, then the Fr
      module shall check the validity of API parameters and report detected
      errors to the DET.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR135</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR143</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR144</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR173</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR174</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR175</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR178</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR179</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR180</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR521</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR522</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR523</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR183</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR184</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR185</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR188</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR189</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR192</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR193</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR194</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR197</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR198</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR199</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR200</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR213</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR214</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR215</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR218</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR219</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR220</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR221</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR222</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR226</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR227</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR228</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR229</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR230</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR231</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR240</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR241</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR242</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR343</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR245</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR246</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR247</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR530</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR531</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR532</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR533</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR534</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR536</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR538</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR634</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR544</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR545</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR546</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR251</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR252</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR253</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR254</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR258</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR259</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR260</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR561</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR562</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR563</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR607</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR569</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR570</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR571</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR572</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR581</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR582</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR583</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR584</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR585</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR586</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR590</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR591</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR592</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR267</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR268</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR269</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR270</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR271</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR436</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR283</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR284</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR285</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR294</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR295</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR296</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR305</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR306</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR307</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR316</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR317</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR318</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR327</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR328</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR329</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR330</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR340</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.InvalidCtrl</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.NULLPTR</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.EnableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.DisableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.AckIRQ.InvalidCtrl</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.InvalidCtrl</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.NULLPTR</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR154</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR155</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR156</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR157</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR162</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR163</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR164</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR167</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR168</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR169</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR170</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR203</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR204</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR205</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR208</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR209</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR210</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR275</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR276</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR277</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR278</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR437</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR288</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR289</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR290</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR299</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR300</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR301</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR310</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR311</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR312</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR321</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR322</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR323</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR333</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR334</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR335</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR336</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module's implementation shall conform to the HIS subset of the MISRA C
      Standard (see document [14]).
    &lt;/pre&gt;</description>
      <comment>
      The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check): 
      http://svn.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx, Checks='MISRA'
    </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module's implementer shall replace all prefixes Fr within the Fr
      specification by a vendor specific prefix Fr_&amp;lt;Vendor Id&amp;gt;_&amp;lt;Vendor specific
      name&amp;gt; during implementation to allow the usage of different FlexRay
      Drivers within one build system. The Fr module's implementer shall
      apply this rule to all prefixes within filenames, Fr module specific
      datatypes, Fr module specific constants, Fr module specific global
      variables and API functions.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall implement the API functions specified by the Fr SWS as real
      C-code functions and shall not implement the API functions as macros.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR479</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       The rationale of FR097 is to allow object code module integration.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR102</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      None of the Fr module's header files shall define global variables.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only. 
      This is a standard coding best practice but no module specific requirement.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR625</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>559</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All data/variables that shall be debugged by AUTOSAR Debugging have to be
      defined as global variables.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        EB Debug and Trace will be supported instead.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.DebugAndTrace</srcid><srcstatus/><internalId>23</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR626</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The type definitions of debugging variables shall be accessable by Fr.h in a way
      that allows to calculate the size of the elements by C-sizeof and
      decode the structure elements.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        EB Debug and Trace will be supported instead.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.DebugAndTrace</srcid><srcstatus/><internalId>23</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR106</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module or the underlying hardware or both shall stop FlexRay timers in
      case of loss of synchronization.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
        Done by FlexRay hardware. Not a requirement on the software implementation.
        FlexRay Protocol Specification 2.1 RevA, Chapter 9.3.3.1.1:
        All  absolute  timers  shall  be  deactivated  when  the  protocol  leaves  the  POC:normal
        active  state  or  the POC:normal passive state apart from transitions between the
        POC:normal active state and the POC:normal passive state.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If buffer reconfiguration is disabled (configuration parameter FrBufferReconfig
      is false), then buffers must not be configured by any Fr API function
      other than Fr_ControllerInit().
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Config parameter FrBufferReconfig is not used in the Fr implementation.&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferReconfig</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR075</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      CCs are identified via controller indices (Fr_CtrlIdx).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR467</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Each driver's CCs are identified by controller indices 0 to (n-1) where  n is
      the number of CCs controlled by the particular Fr.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR344</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>662</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      For each FlexRay CC the connected channels are identified by  channel indices
      (Fr_ChnlIdx).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR468</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      A dedicated type that holds the enumerations FR_CHANNEL_A,  FR_CHANNEL_B or
      FR_CHANNEL_AB represents the channel index.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR514</srcid><srcstatus/><internalId>134</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR469</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Channel indices are only valid within a tuple &amp;lt;Fr_CtrlIdx,  Fr_ChnlIdx&amp;gt;.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR005</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Each FlexRay frame processed by Fr API functions is identified by an LPdu index
      (Fr_LPduIdx).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR470</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Each LPdu carries the LSdu. Each controller's LPdus are identified by  LPdu
      indices from 0 to (n-1) where n is the number of LPdus processed by the
      corresponding CC.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR471</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>740</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      LPdu indices are only valid within a tuple &amp;lt;Fr_CtrlIdx,  Fr_LPduIdx&amp;gt;.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR472</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>756</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      An Fr_LPduIdx uniquely identifies the following parameters of a  FlexRay frame
      as a key: {Slot ID, Channel, cycle repetition, base cycle,
      transmit/receive}.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR345</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Each FlexRay CC contains absolute timers. Absolute FlexRay timers  are
      identified via absolute timer indices (Fr_AbsTimerIdx).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR473</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Each CC's absolute timers are identified by absolute timer indices  from 0 to
      (n-1), where n is the number of absolute timers controlled by the
      particular CC.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR474</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>806</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Absolute timer indices are only valid within a tuple &amp;lt;Fr_CtrlIdx,
      Fr_AbsTimerIdx&amp;gt;.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR477</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>822</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Since a FlexRay CC is condition-based, it internally maintains a state machine,
      the Protocol Operation Control (POC) state machine. The state transitions
      are driven both by hardware related events as well as by commands passed by the
host at the CHI (see [12] for details).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR478</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The CHI commands driving the POC state machine are incorporated into several Fr
      module API functions. API functions affecting the POC state of a FlexRay
      CC are:
      - Fr_StartCommunication()
      - Fr_HaltCommunication()
      - Fr_AbortCommunication()
      - Fr_SendWUP()
      - Fr_ControllerInit()
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
      This is only an overview. The details are specified at each particular API function specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR438</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All API functions other than those listed above shall not change the POC state
      of the FlexRay CC.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
      This is a redundent requriement, as it is sufficient to specifiy the behaviour of the API functions.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR593</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>880</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Requirement DEVIATION: Rx FIFO not supported on ERAY devices.

      Original Requirement text:
      The hardware receive-FIFO shall be used if the FIFO filter-criterias as
      configured can be applied to the hardware FIFO.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is set to coverage TEST in order to stay in sync with requirements
        of variant AUTOSAR_MFR4300.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR594</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>901</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Requirement DEVIATION: Rx FIFO not supported on ERAY devices.

      Original Requirement text:
      All LPdus (as configured within FrIf) matching a receive-FIFO's
      filter-criteria shall be assigned to the respective receive-FIFO.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is set to coverage TEST in order to stay in sync with requirements
        of variant AUTOSAR_MFR4300.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR595</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>922</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Requirement DEVIATION: Rx FIFO not supported on ERAY devices.

      Original Requirement text:
      No specific buffers shall be assigned to LPdus that are assigned to a
      receive-FIFO.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is set to coverage TEST in order to stay in sync with requirements
        of variant AUTOSAR_MFR4300.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR596</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>943</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Requirement DEVIATION: Rx FIFO not supported on ERAY devices.

      Original Requirement text:
      If Fr_ReceiveRxLPdu() is called for an LPdu assigned to the receive FIFO, the
      service Fr_ReceiveRxPdu() consumes the first valid frame out of the
      respective FIFO and returns it as received frame. There is no
      receive-FIFO specific API, thus
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is set to coverage TEST in order to stay in sync with requirements
        of variant AUTOSAR_MFR4300.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_Received</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR597</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Requirement DEVIATION: Rx FIFO not supported on ERAY devices.

      Original Requirement text:
      LPdus received via the FIFO shall be returned in the same order as they were
      received on the FlexRay network.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is set to coverage TEST in order to stay in sync with requirements
        of variant AUTOSAR_MFR4300.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_Received</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR080</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>987</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall provide an XML file that contains the data, which is
      required for the SW identification and configuration parameters. This
      file shall describe vendor specific configuration parameters if
      applicable.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR480</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1005</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      A driver MCG reads the ECU configuration parameters of the Fr and the FrIf
      modules. While cluster related configuration parameters are contained in
      the FrIf module's configuration, CC related configuration parameters
      are contained in the Fr module's configuration. The Fr module's
      specific configuration tool shall read both ECU module configurations to
      derive the configuration parameters for all FlexRay CCs mapped to the Fr
      module.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR481</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1027</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All frame transmission/reception related configuration parameters are located
      only in the FrIf module description (within configuration containers
      FrIf/FrIfConfig/FrIfCluster/FrIfLPdu and
      FrIf/FrIfConfig/FrIfCluster/FrIfFrameTriggering). The Fr must be
      able to handle all transmission/reception requests of all related LPdus.
      The LPdus within the FrIf configuration contain both an LPduIdx which is
      passed to the Fr API as well as a link to a frame triggering that holds
      the link of the LPdu to the FlexRay network (assignment to Slot, channel,
      cycle). The CC configuration parameters related to frame transmission and
      reception shall be derived from the communication matrix the CC is mapped
      to within the FrIf.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR482</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1053</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      For optimization purposes the Fr MCG shall read the FrIf job list for detecting
      the points in time certain actions on the Fr will be synchronously
      invoked by the FrIf (see [7] for the FrIf configuration parameters).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR483</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1071</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Based on those invocation times the Fr MCG might decide certain resource
      alignment optimizations for transmission and reception (share buffers
      among different LPdus).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the FrIf job list contains dedicated buffer reconfiguration entries that
      allow for optimization, then the Fr module's MCG may decide to share
      one buffer for several LPdus within the static segment.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_StaticReconfig</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR624</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the Fr module's MCG detects that there are multiple LPdus assigned to the
      same FlexRay frame-triggering (same slot, same channel, same cycle
      configuration), (by runtime allocation of Fr_ReconfigLPdu() and
      Fr_DisbableLPdu()). The MCG may decide to assign a single message buffer
      to those LPdus.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable.
      This requriement is in conflict to requirement FR526, which is prefered over this one.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR484</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr MCG shall have knowledge about the capabilities of the CC and the
      corresponding driver, therefore this tool is called driver dependent.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR485</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1140</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If an Fr MCG is unable to map all required communication operations to the
      available resources, then it has to report that conflict 1 .
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR486</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The number of supported FlexRay CCs is defined at configuration time.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR394_Conf</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR487</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1167</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The MCG shall ensure the consistency of the generated configuration.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartupSyncFrameInconsistency</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall support the pre-compile-time and post-build-time
      configuration classes.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Only Post-Build-Time configuration is supported.
        Refined by requriements
        Fr.ASR40.Ch10.2.1_1
        Fr.ASR40.Ch10.2.1_2
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.Ch10.2.1_1</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR124</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Values for production code Event Ids are assigned externally by the
      configuration of the Dem.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR125</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Development error values are of type uint8.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
      This is a SWS requriement but not on the implementation.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1232</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: parameter timer index exceeds number of available timers
      Relevance: Development
      Error: FR_E_INV_TIMER_IDX
      Value: 0x01
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR269</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR285</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR296</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR307</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR318</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR329</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR277</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR290</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR301</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR312</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR323</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR335</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR488</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid pointer in parameter list
      Relevance: Development
      Error: FR_E_INV_POINTER
      Value: 0x02
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR135</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR215</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR222</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR229</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR230</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR231</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR343</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR253</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR254</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR260</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR563</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR607</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR571</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR572</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR583</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR584</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR585</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR586</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR592</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR330</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR340</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.NULLPTR</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.NULLPTR</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR170</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR210</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR336</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR489</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1264</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: parameter offset exceeds bounds
      Relevance: Development
      Error: FR_E_INV_OFFSET
      Value: 0x03
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR271</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR278</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR490</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1280</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid controller index
      Relevance: Development
      Error: FR_E_INV_CTRL_IDX
      Value: 0x04
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR144</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR174</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR179</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR522</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR184</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR189</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR193</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR198</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR214</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR219</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR227</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR241</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR246</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR531</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR545</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR252</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR259</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR562</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR570</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR582</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR591</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR268</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR284</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR295</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR306</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR317</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR328</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.InvalidCtrl</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.EnableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.DisableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.AckIRQ.InvalidCtrl</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.InvalidCtrl</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR155</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR163</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR168</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR204</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR209</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR276</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR289</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR300</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR311</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR322</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR334</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR491</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid channel index
      Relevance: Development
      Error: FR_E_INV_CHNL_IDX
      Value: 0x05
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR199</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR533</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR156</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR164</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR169</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR492</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1312</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: parameter cycle exceeds 63
      Relevance: Development
      Error: FR_E_INV_CYCLE
      Value: 0x06
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR534</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR536</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR270</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR494</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: Fr module was not initialized
      Relevance: Development
      Error: FR_E_NOT_INITIALIZED
      Value: 0x08
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR143</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR173</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR178</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR521</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR183</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR188</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR192</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR197</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR213</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR218</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR226</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR240</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR245</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR530</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR544</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR251</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR258</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR561</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR569</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR581</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR590</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR267</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR283</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR294</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR305</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR316</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR327</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.Uninit</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.EnableIRQ.Uninit</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.DisableIRQ.Uninit</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.AckIRQ.Uninit</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.Uninit</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR154</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR162</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR167</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR203</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR208</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR275</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR288</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR299</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR310</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR321</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR333</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR495</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: Fr CC is not in the expected
      Relevance: Development
      Error: FR_E_INV_POCSTATE
      Value: 0x09
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR175</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR180</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR523</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR185</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR194</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR200</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR436</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR157</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR205</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR437</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR496</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: Payload length parameter has an invalid value.
      Relevance: Development
      Error: FR_E_INV_LENGTH
      Value: 0x0A
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR221</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR538</srcid><srcstatus/><internalId>274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR497</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1376</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid LPdu index
      Relevance: Development
      Error: FR_E_INV_LPDU_IDX
      Value: 0x0B
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR220</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR228</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR242</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR247</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR532</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR546</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR633</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid FlexRay header CRC
      Relevance: Development
      Error: FR_E_INV_HEADERCRC
      Value: 0x0C
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidCrc</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR634</srcid><srcstatus/><internalId>275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR633_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1409</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: invalid value passed as parameter Fr_ConfigParamIdx.
      Relevance: Development
      Error: FR_E_INV_CONFIG_IDX
      Value: 0x0D
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This development error is only used in DEVIATION requirement Fr.ASR40.FR651.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_InvalidConfigIdx</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR498</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: Access to FlexRay CC event id
      Relevance: Production
      EventId: FrDemCtrlTestResultRef
      Value: Assigned by DEM
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR176</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR181</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR520</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR186</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR190</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR195</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR201</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR216</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR223</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR232</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR243</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR248</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR529</srcid><srcstatus/><internalId>264</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR543</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR255</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR261</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR560</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR568</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR580</srcid><srcstatus/><internalId>330</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR589</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR272</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR286</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR297</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR308</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR319</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR331</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.Dem</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Enable.Dem</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Disable.Dem</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Ack.Dem</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.GetStatus.Dem</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.Fr_ControllerInit.Dem</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR160</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR165</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR171</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR279</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR291</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR302</srcid><srcstatus/><internalId>619</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR313</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR324</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR337</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR600</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Description: SlotStatus of a particular FlexRay FrameTriggering
      Relevance: Production
      EventId: FrIfDemFTSlotStatusRef
      Value: Assigned by DEM
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This production error is only used in DEVIATION requirement Fr.ASR40.FR627.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR078</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The DET error values and EventIds are named in capital letters according to the
      scheme FR_E_&amp;lt;NAME&amp;gt;, where NAME describes the error/EventId and may
      consist of several words separated by underscores.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1480</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The detection of development errors is configurable at pre-compile-time. The
      switch FrDevErrorDetect (see chapter 10) shall activate (true) or
      deactivate (false) the detection of all development errors.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR393_Conf</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR126</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The detection of production code errors cannot be switched off.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is not applicable.
        Conflicts with EB requirement [BSWM_EB_002].
        See:
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Engineering_AutoCore/
            Software_Construction/Coding_Guidelines
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Detected development errors shall be reported to the Det_ReportError service of
      the Development Error Tracer (DET) if the pre-processor switch
      FrDevErrorDetect is set (see chapter 10) to true.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR135</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR143</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR144</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR173</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR174</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR175</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR178</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR179</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR180</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR521</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR522</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR523</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR183</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR184</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR185</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR188</srcid><srcstatus/><internalId>180</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR189</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR192</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR193</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR194</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR197</srcid><srcstatus/><internalId>191</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR198</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR199</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR200</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR213</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR214</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR215</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR218</srcid><srcstatus/><internalId>206</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR219</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR220</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR221</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR222</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR226</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR227</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR228</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR229</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR230</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR231</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR240</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR241</srcid><srcstatus/><internalId>249</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR242</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR343</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR245</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR246</srcid><srcstatus/><internalId>257</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR247</srcid><srcstatus/><internalId>258</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR530</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR531</srcid><srcstatus/><internalId>266</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR532</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR533</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR534</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR536</srcid><srcstatus/><internalId>272</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR538</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR634</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR544</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR545</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR546</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR251</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR252</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR253</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR254</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR258</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR259</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR260</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR561</srcid><srcstatus/><internalId>314</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR562</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR563</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR607</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR569</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR570</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR571</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR572</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR581</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR582</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR583</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR584</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR585</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR586</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR590</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR591</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR592</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR267</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR268</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR269</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR270</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR271</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR436</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR283</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR284</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR285</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR294</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR295</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR296</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR305</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR306</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR307</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR316</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR317</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR318</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR327</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR328</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR329</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR330</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR340</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.Uninit</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.InvalidCtrl</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.NULLPTR</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.EnableIRQ.Uninit</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.EnableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.DisableIRQ.Uninit</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.DisableIRQ.InvalidCtrl</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.AckIRQ.Uninit</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.AckIRQ.InvalidCtrl</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.Uninit</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.InvalidCtrl</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetIRQStatus.NULLPTR</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR154</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR155</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR156</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR157</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR162</srcid><srcstatus/><internalId>577</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR163</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR164</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR167</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR168</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR169</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR170</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR203</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR204</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR205</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR208</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR209</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR210</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR275</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR276</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR277</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR278</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR437</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR288</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR289</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR290</srcid><srcstatus/><internalId>615</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR299</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR300</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR301</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR310</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR311</srcid><srcstatus/><internalId>628</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR312</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR321</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR322</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR323</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR333</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR334</srcid><srcstatus/><internalId>642</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR335</srcid><srcstatus/><internalId>643</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR336</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The status of EventIds shall be reported to the Diagnostic Event Manager (see
      chapter 8.7).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR176</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR181</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR520</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR186</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR190</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR195</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR201</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR216</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR223</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR232</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR243</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR248</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR529</srcid><srcstatus/><internalId>264</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR543</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR255</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR261</srcid><srcstatus/><internalId>298</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR560</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR568</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR580</srcid><srcstatus/><internalId>330</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR589</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR272</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR286</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR297</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR308</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR319</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR331</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.GetControllerErrorStatus.Dem</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Enable.Dem</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Disable.Dem</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.Ack.Dem</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.ExtendedIRQ.GetStatus.Dem</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.Fr_ControllerInit.Dem</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR160</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR165</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR171</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR279</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR291</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR302</srcid><srcstatus/><internalId>619</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR313</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR324</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>Fr.EB.FR337</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR098</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All API functions or global variables, whether they are specified or not shall
      follow the naming scheme Fr_&amp;lt;name&amp;gt;, where the first letter of each word
      in &amp;lt;name&amp;gt; is written uppercase and the remainder of the word lowercase.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR099</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Module   Imported Type
       Dem      Dem_EventIdType
                Dem_EventStatusType
      Std_Type  Std_ReturnType
                Std_VersionInfoType
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR657</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1579</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The macros listed in this chapter shall be defined in Fr_GeneralTypes.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR110</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The content of Fr_GeneralTypes.h consists of types specified within [7], [8] and
      the following type specifications within this document except
      Fr_ConfigType.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
      This requriement specifies which of the subsequent requirements is part of the implementation.
      Thus it is not an requirement on the implementation, but on the requirements analysis itself.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR499</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The content of Fr_GeneralTypes.h shall be protected by a FR_GENERAL_TYPES
      define.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR500</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If different FlexRay drivers are used, only one instance of this file has to be
      included in the source tree. For implementation all Fr_GeneralTypes.h
      related types in the documents mentioned before shall be considered.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR077</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      All types whether they are specified or implementation dependant shall follow
      the naming scheme Fr_&amp;lt;name&amp;gt;Type, where the first letter of each word in
      &amp;lt;name&amp;gt; is written uppercase and the remainder of the word is written
      lowercase.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR501</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1664</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Fr_ConfigType
      This type contains the definition of the implementation-specific post build
      configuration structure.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen_247</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR646</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Fr_ConfigType shall be provided by the headerfile Fr.h.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR648</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Rules of FR076 shall be applied to Fr_ConfigType.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR505</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_POCStateType
      Type: Enumeration
      Range:
      FR_POCSTATE_CONFIG
        Represents literal CONFIG of formal type  definition T_POCState.
      FR_POCSTATE_DEFAULT_CONFIG
        Represents literal DEFAULT_CONFIG of  formal type definition T_POCState.
      FR_POCSTATE_HALT
        Represents literal HALT of formal type  definition T_POCState.
      FR_POCSTATE_NORMAL_ACTIVE
        Represents literal NORMAL_ACTIVE of formal type definition T_POCState.
      FR_POCSTATE_NORMAL_PASSIVE
        Represents literal NORMAL_PASSIVE of  formal type definition T_POCState.
      FR_POCSTATE_READY
        Represents literal READY of formal type  definition T_POCState.
      FR_POCSTATE_STARTUP
        Represents literal STARTUP of formal type  definition T_POCState.
      FR_POCSTATE_WAKEUP
        Represents literal WAKEUP of formal type  definition T_POCState.

      Description:
      This formal definition refers to the
      description of type T_POCState in chapter 2.2.1.3  POC status of [12].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR506</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_SlotModeType
      Type: Enumeration
      Range:
      FR_SLOTMODE_KEYSLOT
        Represents literal KEYSLOT of formal type definition  T_SlotMode.
      FR_SLOTMODE_ALL_PENDING
        Represents literal ALL_PENDING of formal type definition T_SlotMode.
      FR_SLOTMODE_ALL
        Represents literal ALL of formal type definition  T_SlotMode.

      Description:
      This formal definition refers to the description of type T_SlotMode in
      chapter 2.2.1.3  POC status of [12].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR599</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1769</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a preprocessor macro with name FR_SLOTMODE_SINGLE that maps to
      value FR_SLOTMODE_KEYSLOT in file Fr_GeneralTypes.h.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR507</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1785</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_ErrorModeType
      Type: Enumeration
      Range:
      FR_ERRORMODE_ACTIVE
        Represents literal ACTIVE of formal type definition T_ErrorMode.
      FR_ERRORMODE_PASSIVE
        Represents literal PASSIVE of formal type definition T_ErrorMode.
      FR_ERRORMODE_COMM_HALT
        Represents literal COMM_HALT of formal type definition T_ErrorMode.

      Description:
      This formal definition refers to the description of type T_ErrorMode in
      chapter 2.2.1.3  POC status of [12].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR508</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1812</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_WakeupStatusType
      Type: Enumeration
      Range:
      FR_WAKEUP_UNDEFINED (=0)
        Represents literal UNDEFINED of formal type  definition T_WakeupStatus.
      FR_WAKEUP_RECEIVED_HEADER
        Represents literal RECEIVED_HEADER of  formal type definition T_WakeupStatus.
      FR_WAKEUP_RECEIVED_WUP
        Represents literal RECEIVED_WUP of formal  type definition T_WakeupStatus.
      FR_WAKEUP_COLLISION_HEADER
        Represents literal COLLISION_HEADER of  formal type definition T_WakeupStatus.
      FR_WAKEUP_COLLISION_WUP
        Represents literal COLLISION_WUP of formal  type definition T_WakeupStatus.
      FR_WAKEUP_COLLISION_UNKNOWN
        Represents literal COLLISION_UNKNOWN of formal type definition T_WakeupStatus.
      FR_WAKEUP_TRANSMITTED
        Represents literal TRANSMITTED of formal type definition T_WakeupStatus.

      Description:
      This formal definition refers to the description of type T_WakeupStatus in chapter
      2.2.1.3 POC status of [12].

    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR509</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1848</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_StartupStateType
      Type: Enumeration
      Range:
      FR_STARTUP_UNDEFINED
        Represents literal UNDEFINED of formal  type definition T_StartupState.
      FR_STARTUP_COLDSTART_LISTEN
        Represents literal COLDSTART_LISTEN  of formal type definition T_StartupState.
      FR_STARTUP_INTEGRATION_COLDSTART_CHECK
        Represents literal INTEGRATION_COLDSTART_CHECK of  formal type definition T_StartupState.
      FR_STARTUP_COLDSTART_JOIN
        Represents literal COLDSTART_JOIN of  formal type definition T_StartupState.
      FR_STARTUP_COLDSTART_COLLISION_RESOLUTION
        Represents literal COLDSTART_COLLISION_RESOLUTION  of formal type definition T_StartupState.
      FR_STARTUP_COLDSTART_CONSISTENCY_CHECK
        Represents literal COLDSTART_CONSISTENCY_CHECK of  formal type definition T_StartupState.
      FR_STARTUP_INTEGRATION_LISTEN
        Represents literal INTEGRATION_LISTEN  of formal type definition T_StartupState.
      FR_STARTUP_INITIALIZE_SCHEDULE
        Represents literal INITIALIZE_SCHEDULE  of formal type definition T_StartupState.
      FR_STARTUP_INTEGRATION_CONSISTENCY_CHECK
        Represents literal INTEGRATION_CONSISTENCY_CHECK of formal type definition T_StartupState.
      FR_STARTUP_COLDSTART_GAP
        Represents literal COLDSTART_GAP of  formal type definition T_StartupState.
      FR_STARTUP_EXTERNAL_STARTUP
        Represents literal EXTERNAL_STARTUP  of formal type definition T_StartupState.

      Description:
      This formal definition refers to the description of type T_StartupState in chapter
      2.2.1.3 POC status of [12].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR510</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_POCStatusType
      Type: Structure
      Element:
      boolean CHIHaltRequest
      boolean ColdstartNoise
      Fr_ErrorModeType ErrorMode
      boolean Freeze
      Fr_SlotModeType SlotMode
      Fr_StartupStateType StartupState
      Fr_POCStateType State
      Fr_WakeupStatusType WakeupStatus
      boolean CHIReadyRequest

      Description: This formal definition refers to the description of type T_POCStatus in chapter
      2.2.1.3  POC status of [12].
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR511</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_TxLPduStatusType
      Type: Enumeration
      Range:
      FR_TRANSMITTED
        LPdu has been transmitted
      FR_NOT_TRANSMITTED
        LPdu has not been transmitted

      Description: These values are used to determine whether a LPdu has been
      transmitted or not.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR512</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_RxLPduStatusType
      Type: Enumeration
      Range:
      FR_RECEIVED
        LPdu has been received
      FR_NOT_RECEIVED
        LPdu has not been received
      FR_RECEIVED_MORE_DATA_AVAILABLE
        LPdu has been received. More instances of this LPdu are available  (FIFO usage).

      Description: These values are used to determine if a LPdu has been received or not.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR514</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1969</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name: Fr_ChannelType
      Type: Enumeration
      Range:
      FR_CHANNEL_A
        Refers to channel A of a CC.
      FR_CHANNEL_B
        Refers to channel B of a CC.
      FR_CHANNEL_AB
        Refers to both channels (A and B) of a CC.

      Description: The values are used to reference channels on a CC.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is not applicable. Not implemented in Fr module.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR468</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.Ch8.4_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>1995</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       If API functions of the Fr module erroneously finish (return E_NOT_OK), then no output
       parameter  shall  be  written.  Output  parameters  shall  keep  their original values
       in this case.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_Uninit</srcid><srcstatus/><internalId>1185</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_Uninit</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_Uninit</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_Uninit</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_Uninit</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_Uninit</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_Uninit</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_Uninit</srcid><srcstatus/><internalId>1203</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_Uninit</srcid><srcstatus/><internalId>1208</internalId></linkedfrom><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_Uninit</srcid><srcstatus/><internalId>1214</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_Uninit</srcid><srcstatus/><internalId>1219</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_InvalidCtrlIdx</srcid><srcstatus/><internalId>1234</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_InvalidCtrlIdx</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1236</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_InvalidCtrlIdx</srcid><srcstatus/><internalId>1237</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidCtrlIdx</srcid><srcstatus/><internalId>1238</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1239</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_InvalidCtrlIdx</srcid><srcstatus/><internalId>1251</internalId></linkedfrom><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1257</internalId></linkedfrom><linkedfrom><srcid>Fr_GetControllerErrorStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1258</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1262</internalId></linkedfrom><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_InvalidTimerIdx</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidTimerIdx</srcid><srcstatus/><internalId>1275</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_InvalidPtr</srcid><srcstatus/><internalId>1283</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_InvalidPtr_1</srcid><srcstatus/><internalId>1284</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_InvalidPtr</srcid><srcstatus/><internalId>1286</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_InvalidPtr_1</srcid><srcstatus/><internalId>1287</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_InvalidPtr</srcid><srcstatus/><internalId>1288</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_InvalidPtr_1</srcid><srcstatus/><internalId>1289</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr</srcid><srcstatus/><internalId>1290</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_1</srcid><srcstatus/><internalId>1291</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_2</srcid><srcstatus/><internalId>1292</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_3</srcid><srcstatus/><internalId>1293</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_InvalidIrqIdx</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2010</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_Init
      Syntax: void Fr_Init( const Fr_ConfigType* Fr_ConfigPtr )
      Service ID[hex]: 0x1c
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in):
        Fr_ConfigPtr
            Address to an Fr dependant configuration structure that contains all   information
            for operating the Fr subsequently.
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: Initalizes the Fr.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_GenericInit</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>Fr_Init_InvalidAccess</srcid><srcstatus/><internalId>1102</internalId></linkedfrom><linkedfrom><srcid>Fr_Init_OK</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_Init shall internally store the configuration address to enable
      subsequent API calls to access the configuration.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_Init_OK</srcid><srcstatus/><internalId>1116</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_Init shall check whether the parameter Fr_ConfigPtr is a NULL pointer
      (NULL_PTR). If Fr_ConfigPtr is a NULL pointer, then the function Fr_Init
      shall raise development error FR_E_INV_POINTER and return.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_Init_InvalidPtr</srcid><srcstatus/><internalId>1101</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2068</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_ControllerInit
      Syntax: Std_ReturnType Fr_ControllerInit( uint8 Fr_CtrlIdx )
      Service ID[hex]: 0x00
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_NOT_OK: API call aborted due to errors.
        E_OK: API call finished successfully.

      Description: Initialzes a FlexRay CC.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_NoKeySlot</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2095</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall perform the following tasks on FlexRay CC Fr_CtrIdx:
        1. Switch CC into 'POC:config' (from any other POCState).
        2. Configure all FlexRay cluster and node configuration parameters
            (e.g., cycle  length, macrotick duration).
        3. Configure all transmit/receive resources (e.g., buffer initialization) according to
            the frame triggering configuration parameters contained in the FrIf.
        4. Switch CC into 'POC:ready'
        5. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_NoKeySlot</srcid><srcstatus/><internalId>1100</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_FIFOBDisabled</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_FIFOADisabled</srcid><srcstatus/><internalId>1115</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2115</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall ensure that no transmission requests are
      pending.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall ensure that no reception indications are
      pending.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall ensure that no interrupts are pending.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall ensure that all timers are disabled.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall ensure that all interrupts are disabled.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR515</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ControllerInit shall disable all LPdus which are dynamically
      reconfigurable (see Fr_ReconfigLPdu, Fr_DisableLPdu).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ControllerInit detects errors while testing the CC (CC test),
      then it shall repeat the test procedure a configurable number
      (FrCtrlTestCount) of times. If all tests fail, then it calls
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and returns E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.InitCheck</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR147_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ControllerInit detects errors while initializing the CC,
      then it shall call Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Currentyl recplaces Fr.ASR40.FR147.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_ConfigBufferError</srcid><srcstatus/><internalId>921</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_Timeouts</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR647</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The CC test as described in FR147 shall verify (read back and compare to
      reference values held in the configuration) that the node and cluster
      FlexRay parameters were written properly into the FlexRay CC.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.InitCheck</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR598</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2252</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ControllerInit passes the CC test within a number of
      configurable (FrCtrlTestCount) times, then it calls Dem_ReportErrorStatus
      (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_PASSED).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.InitCheck</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2270</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_ControllerInit is called before the successful initialization of Fr,
      then the function Fr_ControllerInit shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Uninit</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ControllerInit shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_ControllerInit shall raise
      the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_InvalidCtrlIdx</srcid><srcstatus/><internalId>1221</internalId></linkedfrom><linkedfrom><srcid>Fr_ControllerInit_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2308</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_StartCommunication
      Syntax: Std_ReturnType Fr_StartCommunication(  uint8 Fr_CtrlIdx  )
      Service ID[hex]: 0x03
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout):  None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Starts communication.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_StartUp</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_StartUpInHalt</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_BusyCheckFail</srcid><srcstatus/><internalId>918</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_AcceptCheckFailStartup</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_StartCommunication shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Invoke the CC CHI command 'RUN', which initiates the startup procedure
            within the FlexRay CC.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_StartUp</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2351</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_StartCommunication is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_BusyCheckFail</srcid><srcstatus/><internalId>918</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_AcceptCheckFailStartup</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_InvalidAccess</srcid><srcstatus/><internalId>1167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_StartCommunication is called before successful initialization of the
      Fr, then the function Fr_StartCommunication shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_Uninit</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2388</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and the function
      Fr_StartCommunication shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_StartCommunication shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_InvalidCtrlIdx</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_StartCommunication shall check whether the CC Fr_CtrlIdx's POCState
      is in POC:ready. If the POCState is not POC:ready, then the function
      Fr_StartCommunication shall raise the development error FR_E_INV_POCSTATE
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StartCommunication_StartUpInHalt</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>Fr_StartCommunication_InvalidState</srcid><srcstatus/><internalId>1090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_AllowColdstart
      Syntax: Std_ReturnType Fr_AllowColdstart( uint8 Fr_CtrlIdx  )
      Service ID[hex]: 0x23
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Invokes the CC CHI command 'ALLOW_COLDSTART'.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstart</srcid><srcstatus/><internalId>975</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInHalt</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInHalt2</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInConfig</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInDefaultConfig</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_BusyCheckFailAllowColdstart</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AcceptCheckFailAllowColdstart</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AllowColdstart shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Invoke the CC CHI command 'ALLOW_COLDSTART'.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstart</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AllowColdstart is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_BusyCheckFailAllowColdstart</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AcceptCheckFailAllowColdstart</srcid><srcstatus/><internalId>981</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_InvalidAccess</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2488</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_AllowColdstart is called before the successful initialization of Fr,
      then the function Fr_AllowColdstart shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_Uninit</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2507</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AllowColdstart shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_AllowColdstart shall raise
      the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_InvalidCtrlIdx</srcid><srcstatus/><internalId>1223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AllowColdstart shall check the CC Fr_CtrlIdx's POCState. If the
      POCState is POC:default config, POC:config, or POC:halt, then the
      function Fr_AllowColdstart shall raise the development error
      FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInHalt</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInHalt2</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInConfig</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_AllowColdstartInDefaultConfig</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>Fr_AllowColdstart_InvalidState</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR516</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2546</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_AllSlots
      Syntax: Std_ReturnType Fr_AllSlots(  uint8 Fr_CtrlIdx  )
      Service ID[hex]: 0x24
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_NOT_OK: API call aborted due to errors.
        E_OK: API call finished successfully.
      Description: Invokes the CC CHI command 'ALL_SLOTS'.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_AllSlots</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_AllSlotsInHalt</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_AllSlotsInReady</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_BusyCheckFailAllSlots</srcid><srcstatus/><internalId>973</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_AcceptCheckFailAllSlots</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR518</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AllSlots shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Invoke the CC CHI command 'ALL_SLOTS', which requests
        a switch from key  slot only mode to all slots transmission mode at the
        beginning of the next  communication cycle.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_AllSlots</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR520</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2590</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AllSlots is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_BusyCheckFailAllSlots</srcid><srcstatus/><internalId>973</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_AcceptCheckFailAllSlots</srcid><srcstatus/><internalId>974</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_InvalidAccess</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR521</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2608</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_AllSlots is called before the successful initialization of Fr, then
      the function Fr_AllSlots shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_Uninit</srcid><srcstatus/><internalId>1181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR522</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AllSlots shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_AllSlots shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_InvalidCtrlIdx</srcid><srcstatus/><internalId>1224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR523</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AllSlots shall check whether the CC Fr_CtrlIdx is synchronous to the
      FlexRay global time. If the CC Fr_CtrlIdx is not synchronous to the
      FlexRay global time, then the function Fr_AllSlots shall raise the
      development error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AllSlots_AllSlotsInHalt</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_AllSlotsInReady</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>Fr_AllSlots_InvalidState</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2666</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_HaltCommunication
      Syntax: Std_ReturnType  Fr_HaltCommunication(  uint8 Fr_CtrlIdx  )
      Service ID[hex]: 0x04
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Invokes the CC CHI command 'DEFERRED_HALT'.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_NormalActive</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_NormalPassive</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_BusyCheckFail</srcid><srcstatus/><internalId>1015</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_AcceptCheckFail</srcid><srcstatus/><internalId>1016</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_InvPOCState</srcid><srcstatus/><internalId>1017</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2691</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_HaltCommunication shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Invoke the CC CHI command 'DEFERRED_HALT'.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_NormalActive</srcid><srcstatus/><internalId>1013</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_NormalPassive</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2707</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_HaltCommunication is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_BusyCheckFail</srcid><srcstatus/><internalId>1015</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_AcceptCheckFail</srcid><srcstatus/><internalId>1016</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_InvalidAccess</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2725</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_HaltCommunication is called before the successful initialization of
      Fr, then the function Fr_HaltCommunication shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_Uninit</srcid><srcstatus/><internalId>1182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_HaltCommunication shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_HaltCommunication shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_InvalidCtrlIdx</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2764</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_HaltCommunication shall check whether the CC Fr_CtrlIdx is synchronous
      to the FlexRay global time. If the CC Fr_CtrlIdx is not synchronous to
      the FlexRay global time, then the function Fr_HaltCommunication shall
      raise the development error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_HaltCommunication_InvPOCState</srcid><srcstatus/><internalId>1017</internalId></linkedfrom><linkedfrom><srcid>Fr_HaltCommunication_InvalidState</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2784</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_AbortCommunication
      Syntax: Std_ReturnType Fr_AbortCommunication(  uint8 Fr_CtrlIdx  )
      Service ID[hex]: 0x05
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Invokes the CC CHI command 'FREEZE'.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AbortCommunication_OK</srcid><srcstatus/><internalId>912</internalId></linkedfrom><linkedfrom><srcid>Fr_AbortCommunication_BusyCheckFail</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>Fr_AbortCommunication_AcceptCheckFail</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AbortCommunication shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Invoke the CC CHI command 'FREEZE', which immediately aborts  communication (if active)
        and changes to the POC:halt state from any  previous POCState.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AbortCommunication_OK</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2827</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AbortCommunication is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AbortCommunication_BusyCheckFail</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>Fr_AbortCommunication_AcceptCheckFail</srcid><srcstatus/><internalId>914</internalId></linkedfrom><linkedfrom><srcid>Fr_AbortCommunication_InvalidAccess</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_AbortCommunication is called before the successful initialization of
      Fr, then the function Fr_AbortCommunication shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AbortCommunication_Uninit</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AbortCommunication shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_AbortCommunication shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AbortCommunication_InvalidCtrlIdx</srcid><srcstatus/><internalId>1220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2884</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_SendWUP
      Syntax: Std_ReturnType Fr_SendWUP( uint8 Fr_CtrlIdx )
      Service ID[hex]: 0x06
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Invokes the CC CHI command 'WAKEUP'.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_Ready</srcid><srcstatus/><internalId>958</internalId></linkedfrom><linkedfrom><srcid>Fr_SendWUP_BusyCheckFail</srcid><srcstatus/><internalId>959</internalId></linkedfrom><linkedfrom><srcid>Fr_SendWUP_AcceptCheckFail</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SendWUP shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Invoke the CC CHI command 'WAKEUP', which initiates
        the wakeup  transmission procedure on the configured FlexRay channel.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_Ready</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SendWUP is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_BusyCheckFail</srcid><srcstatus/><internalId>959</internalId></linkedfrom><linkedfrom><srcid>Fr_SendWUP_AcceptCheckFail</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>Fr_SendWUP_InvalidAccess</srcid><srcstatus/><internalId>1164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_SendWUP is called before the successful initialization of Fr, then the
      function Fr_SendWUP shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_Uninit</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2963</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SendWUP shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_SendWUP shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_InvalidCtrlIdx</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>2982</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SendWUP shall check whether the CC Fr_CtrlIdx's POCState is
      POC:ready. If the POCState is not POC:ready, then the function Fr_SendWUP
      shall raise the development error FR_E_INV_POCSTATE and return E_NOT_OK.
          &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendWUP_InvalidState</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3001</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_SetWakeupChannel
      Syntax: Std_ReturnType Fr_SetWakeupChannel( uint8 Fr_CtrlIdx,  Fr_ChannelType Fr_ChnlIdx )
      Service ID[hex]: 0x07
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
          Fr_ChnlIdx
            Index of FlexRay channel within the context of the FlexRay CC  Fr_CtrlIdx. Valid values
            are FR_CHANNEL_A and FR_CHANNEL_B.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Sets a wakeup channel.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_ReadyA</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_ReadyB</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_BusyCheckFailConfig</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_AcceptCheckFailConfig</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_BusyCheckFailReady</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_AcceptCheckFailReady</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3030</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetWakeupChannel shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Change the CC's POCState to POC:config by invoking the CHI command  'CONFIG'.
      2. Configure the wakeup channel according to parameter Fr_ChnlIdx.
      3. Change the CC's POCState to POC:ready again by invoking the CHI  command
        'CONFIG_COMPLETE'.
      4. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_ReadyA</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_ReadyB</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SetWakeupChannel is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_BusyCheckFailConfig</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_AcceptCheckFailConfig</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_BusyCheckFailReady</srcid><srcstatus/><internalId>1036</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_AcceptCheckFailReady</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>Fr_SetWakeupChannel_InvalidAccess</srcid><srcstatus/><internalId>1169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3067</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_SetWakeupChannel is called before the successful initialization of Fr,
      then the function Fr_SetWakeupChannel shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_Uninit</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3086</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetWakeupChannel shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_SetWakeupChannel shall
      raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_InvalidCtrlIdx</srcid><srcstatus/><internalId>1227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetWakeupChannel shall check the validity of the parameter Fr_ChnlIdx.
      If Fr_ChnlIdx is invalid, then the function Fr_SetWakeupChannel shall
      raise the development error FR_E_INV_CHNL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_InvalidChnlIdx</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetWakeupChannel shall check whether the CC Fr_CtrlIdx's POCState is
      POC:ready. If the POCState is not 'POC:ready', then the function
      Fr_SetWakeupChannel shall raise the development error FR_E_INV_POCSTATE
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetWakeupChannel_InvalidState</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetPOCStatus
      Syntax: Std_ReturnType Fr_GetPOCStatus( uint8 Fr_CtrlIdx,  Fr_POCStatusType* Fr_POCStatusPtr )
      Service ID[hex]: 0x0a
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_POCStatusPtr
            Address the output value is stored to.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the POC status.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_Status1</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status2</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status3</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status4</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetPOCStatus shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Query the CC's actual POC status by reading the CHI
        variable 'vPOC' and  write the result to parameter Fr_POCStatusPtr.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_Status1</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status2</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status3</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>Fr_GetPOCStatus_Status4</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR216</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3189</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetPOCStatus is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_InvalidAccess</srcid><srcstatus/><internalId>1157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR213</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3207</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetPOCStatus is called before the successful initialization of Fr,
      then the function Fr_GetPOCStatus shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_Uninit</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR214</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetPOCStatus shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_GetPOCStatus shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetPOCStatus shall check whether the parameter Fr_POCStatusPtr is a
      NULL pointer (NULL_PTR). If Fr_POCStatusPtr is a NULL pointer, then the
      function Fr_GetPOCStatus shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetPOCStatus_InvalidPtr</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3265</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_TransmitTxLPdu
      Syntax: Std_ReturnType Fr_TransmitTxLPdu( uint8 Fr_CtrlIdx,  uint16 Fr_LPduIdx,  const uint8* Fr_LSduPtr,  uint8 Fr_LSduLength  )
      Service ID[hex]: 0x0b
      Sync/Async: Asynchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx This index is used to uniquely identify a FlexRay frame.
        Fr_LSduPtr This reference points to a buffer where the assembled LSdu to be  transmitted within this LPdu is stored at.
        Fr_LSduLength Determines the length of the data (in Bytes) to be transmitted.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Transmits data on the FlexRay network.
      CC precondition for the function Fr_TransmitTxLPdu: None.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_1B</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_8B</srcid><srcstatus/><internalId>1063</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Reconfigurable_Static_Payload_2B</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Dynamic_Reconfigurable_Static_Payload_3B</srcid><srcstatus/><internalId>1065</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_1B</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_2B</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_3B</srcid><srcstatus/><internalId>1068</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_32B</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_MessageBufferDiabled</srcid><srcstatus/><internalId>1070</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_MessageBufferError</srcid><srcstatus/><internalId>1071</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_DummyBuffer</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3294</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_TransmitTxLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped
        to the transmission of  the FlexRay frame identified by Fr_LPduIdx.
      2. If the transmit Lpdu supports dynamic payload length (configuration
        parameter  FrIfAllowDynamicLSduLength is set to true), then the
        transmission  resource shall be reconfigured to match the payload length
        Fr_LsduLength  passed to the API. Note that the dynamic payload length is
        only applicable to  frames within the dynamic FlexRay segment.
      3. Copy Fr_LsduLength bytes from address Fr_LsduPtr into the FlexRay CC's
        transmission resource and then activate it for transmission.
      4. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_1B</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_8B</srcid><srcstatus/><internalId>1063</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Reconfigurable_Static_Payload_2B</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Dynamic_Reconfigurable_Static_Payload_3B</srcid><srcstatus/><internalId>1065</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_1B</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_2B</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_3B</srcid><srcstatus/><internalId>1068</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_32B</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_MessageBufferDiabled</srcid><srcstatus/><internalId>1070</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_DummyBuffer</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR440</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If a transmit resource is shared between more than 1 Lpdu (using the
      reconfiguration mechanism of Fr_PrepareLPdu), then the function
      Fr_TransmitTxLPdu must ensure that the transmit resource is correctly
      configured to match the properties of Fr_LpduIdx. This means that if a
      transmit operation (Fr_TransmitTxLPdu) is called for a particular
      Fr_LpduIdx and the Lpdu shares a single buffer with another Lpdu, then it
      shall check at the time of service invocation whether the buffer is
      configured according to the Lpdu to be processed. The function
      Fr_TransmitTxLPdu shall return E_NOT_OK and abort the function execution
      if a wrong buffer configuration is detected.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      The MCG prohibits reconfiguring message buffers which do not have the PREPARE_LPDU
      and DECOUPLED_TRANSMISSION communication operation within the same FrIf Job. By this
      mechanism, wrong FrameTriggering/L-PDU mappings are avoided at configuration time
      which finally saves execution time and code size.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferCheck</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The Fr module shall ensure that the payload data is transmitted on the FlexRay
      network in the same byte order as was passed by the parameter Fr_LsduPtr
      in the function Fr_TransmitTxLPdu. (first byte = lowest address, last
      byte = highest address).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_32B</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3362</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_TransmitTxLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_MessageBufferError</srcid><srcstatus/><internalId>1071</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidAccess</srcid><srcstatus/><internalId>1168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_TransmitTxLPdu is called before the successful initialization of Fr,
      then the function Fr_TransmitTxLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_Uninit</srcid><srcstatus/><internalId>1186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3399</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_TransmitTxLPdu shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_TransmitTxLPdu shall raise
      the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidCtrlIdx</srcid><srcstatus/><internalId>1229</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR220</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3418</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_TransmitTxLPdu shall check the validity of the parameter Fr_LpduIdx.
      If Fr_LpduIdx is invalid, then the function Fr_TransmitTxLPdu shall raise
      the development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidLpduId</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3437</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_TransmitTxLPdu shall check the validity of the parameter
      Fr_LsduLength. If Fr_LsduLength is invalid, then the function
      Fr_TransmitTxLPdu shall raise the development error FR_E_INV_LENGTH and
      return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidLength</srcid><srcstatus/><internalId>1310</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR222</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3457</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_TransmitTxLPdu shall check whether the parameter Fr_LsduPtr is a NULL
      pointer (NULL_PTR). If Fr_LsduPtr is a NULL pointer, then the function
      Fr_TransmitTxLPdu shall raise the development error FR_E_INV_POINTER and
      return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_TransmitTxLPdu_InvalidPtr</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR610</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_CancelTxLPdu
      Syntax: Std_ReturnType Fr_CancelTxLPdu( uint8 Fr_CtrlIdx,  uint16 Fr_LPduIdx )
      Service ID[hex]: 0x2d
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx This index is used to uniquely identify a FlexRay frame
      Parameters (inout): None
      Parameters (out): None
      Return value:  Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Cancels the already pending transmission of a LPdu contained in a controllers  physical transmit
      resource (e.g. message buffer).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR611</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3508</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CancelTxLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped
        to the transmission of  the FlexRay frame identified by Fr_LpduIdx.
      2. If the physical resource figured out is actively pending for
        transmission, then  the transmit request of this particular resource
        shall be terminated and E_OK  returned. If no transmission is pending
        E_NOT_OK shall be returned,  indicating that no such cancelation took
        place.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR612</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If a transmit resource is shared between more than 1 Lpdu (using reconfiguration
      mechanism of Fr_PrepareLPdu), then the function Fr_CancelTxLPdu must
      ensure that the transmit resource is correctly configured to match the
      properties of Fr_LpduIdx. This means that if a cancel transmit operation
      (Fr_CancelTxLPdu) is called for a particular Fr_LpduIdx and the Lpdu
      shares a single buffer with another Lpdu, then it shall check at the time
      of service invocation that the buffer is configured The function
      Fr_PrepareLPdu shall return E_NOT_OK and abort the function execution if
      a wrong configuration is detected.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR613</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3556</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_CancelTxLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR614</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3575</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_CancelTxLPdu is called before the successful initialization of Fr,
      then the function Fr_CancelTxLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR615</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CancelTxLPdu shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_CancelTxLPdu shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR616</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CancelTxLPdu shall check the validity of the parameter Fr_LpduIdx. If
      Fr_LpduIdx is invalid, then the function Fr_CancelTxLPdu shall raise the
      development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.CancelTx</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3632</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_ReceiveRxLPdu
      Syntax: Std_ReturnType Fr_ReceiveRxLPdu( uint8 Fr_CtrlIdx, uint16 Fr_LPduIdx, uint8* Fr_LSduPtr, Fr_RxLPduStatusType* Fr_LPduStatusPtr, uint8* Fr_LSduLengthPtr )
      Service ID[hex]: 0x0c
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx
            This index is used to uniquely identify a FlexRay frame.
      Parameters  (inout): None
      Parameters (out):
        Fr_LSduPtr
            This reference points to the buffer where the LSdu to be  received shall be stored.
        Fr_LPduStatusPtr
            This reference points to the memory location where the status  of the LPdu shall be stored
        Fr_LSduLengthPtr
            This reference points to the memory location where the length  of the LSdu (in bytes) shall be stored.
            This length represents  the number of bytes copied to Fr_LSduPtr.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Receives data from the FlexRay network.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_0B</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_2B</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_4B</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_Payload_10B</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Dynamic_Reconfigurable_Payload_14B</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Normal_WrongCycle</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_WrongCycle</srcid><srcstatus/><internalId>1051</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Receive</srcid><srcstatus/><internalId>1052</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_NoReceive</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidFrame</srcid><srcstatus/><internalId>1055</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_Received</srcid><srcstatus/><internalId>1056</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHB_MoreDataAvailable</srcid><srcstatus/><internalId>1057</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_NoReceive</srcid><srcstatus/><internalId>1058</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Normal_BoundaryViolation</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_MessageBufferError_1</srcid><srcstatus/><internalId>1060</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_MessageBufferError_2</srcid><srcstatus/><internalId>1061</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_DummyBuffer</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer, a receive-FIFO) mapped to the
         reception of the FlexRay frame as identified by Fr_LpduIdx.
      2. Figure out whether a new FlexRay frame instance has been received within  the
         receive resource as figured in bullet 1. If the receive resource is a FIFO,  then
         consume the first element out of the FIFO.
      3. If a new FlexRay frame has been accepted, then copy the received payload  data to
         address Fr_LsduPtr, store the number of bytes copied to  Fr_LsduLengthPtr and store
         the status FR_RECEIVED to Fr_RxLPduStatusPtr. If a FIFO is used as received resource
         and the FIFO is  not empty, then store the status FR_RECEIVED_MORE_DATA_AVAILABLE  to
         Fr_RxLPduStatusPtr.
      4. If no new frame has been accepted, then do not copy any payload data to
         Fr_LsduPtr, write 0 to the parameter Fr_LsduLengthPtr and store the status
         FR_NOT_RECEIVED to Fr_RxLPduStatusPtr.
      5. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_0B</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_2B</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_4B</srcid><srcstatus/><internalId>1046</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_Payload_10B</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Dynamic_Reconfigurable_Payload_14B</srcid><srcstatus/><internalId>1049</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Normal_WrongCycle</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_WrongCycle</srcid><srcstatus/><internalId>1051</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_NoReceive</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidFrame</srcid><srcstatus/><internalId>1055</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_Received</srcid><srcstatus/><internalId>1056</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHB_MoreDataAvailable</srcid><srcstatus/><internalId>1057</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Fifo_CHA_NoReceive</srcid><srcstatus/><internalId>1058</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Normal_BoundaryViolation</srcid><srcstatus/><internalId>1059</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_DummyBuffer</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.tsc.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR441</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3695</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If a receive resource is shared between more than 1 LPdus (using reconfiguration
      mechanism of Fr_PrepareLPdu), then the function Fr_ReceiveRxLPdu must
      ensure that the receive resource is correctly configured to match the
      properties of Fr_LpduIdx. This means that if a receive operation
      (Fr_ReceiveRxLPdu) is called for a particular FrLPduIdx and the LPdu
      shares a single buffer with another LPdu, then it shall check that at the
      time of service invocation the buffer is configured according to the Lpdu
      to be processed. The function Fr_ReceiveRxLPdu shall return E_NOT_OK and
      abort the function execution if a wrong buffer configuration is detected.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR441_1</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR441_2</srcid><srcstatus/><internalId>222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR441_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3716</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If a receive resource is shared between more than 1 LPdus (using reconfiguration
      mechanism of Fr_PrepareLPdu), then the function Fr_ReceiveRxLPdu must
      ensure that the receive resource is correctly configured to match the
      properties of Fr_LpduIdx. This means that if a receive operation
      (Fr_ReceiveRxLPdu) is called for a particular FrLPduIdx and the LPdu
      shares a single buffer with another LPdu, then it shall check that at the
      time of service invocation the buffer is configured according to the Lpdu
      to be processed.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_Payload_10B</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_HeaderError</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR441_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3737</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall return E_NOT_OK and
      abort the function execution if a wrong buffer configuration is detected.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_HeaderError</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR441</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3752</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that the payload data is copied to
      Fr_LsduPtr in the same byte order as it was received on the FlexRay bus.
      (first byte = lowest address, last byte = highest address).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Dynamic_Reconfigurable_Payload_14B</srcid><srcstatus/><internalId>1049</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR604</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3767</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If stringent check is disabled by configuration parameter (FrRxStringentCheck is
      false), then received data is accepted if the SlotStatus shows a valid
      frame (vSS!ValidFrame). Otherwise FR_NOT_RECEIVED is written to
      Fr_RxLPduStatusPtr and 0 is written to Fr_LsduLengthPtr.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.StringentCheck</srcid><srcstatus/><internalId>19</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR603</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3786</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If stringent check is enabled by configuration parameter (FrRxStringentCheck is
      true), then received data is accepted only if the SlotStatus shows a
      valid frame (vSS!ValidFrame) and there was no single SlotStatus error bit
      set (vSS!SyntaxError, vSS!ContentError, vSS!Bviolation). Otherwise
      FR_NOT_RECEIVED is written to Fr_RxLPduStatusPtr and 0 is written to
      Fr_LsduLengthPtr.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.StringentCheck</srcid><srcstatus/><internalId>19</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR236</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3807</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that FR_RECEIVED is returned only for
      non-Nullframes.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_NullFrame</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR237</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3821</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that the function returns FR_RECEIVED only once per received frame.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Receive</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR645</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3834</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If stringent length check is enabled by configuration parameter
      (FrRxStringentLengthCheck is true), then received data is accepted only
      if the received payload length exactly matches the expected payload
      length as provided by configuration parameter FrIfLSduLength.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.StringentCheck</srcid><srcstatus/><internalId>19</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR239</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3853</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that the number of payload bytes
      copied to Fr_LsduPtr, and therefore the payload length stored to
      Fr_LsduLengthPtr are limited both by the received payload length as well
      as by the configuration parameter FrIfLSduLength configured in the FrIf.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.ASR40.FR239_1</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>Fr.ASR40.FR239_2</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR239_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3869</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that the number of payload bytes
      copied to Fr_LsduPtr, and therefore the payload length stored to
      Fr_LsduLengthPtr are limited by the received payload length.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Normal_Payload_2B</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR239_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3885</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReceiveRxLPdu shall ensure that the number of payload bytes
      copied to Fr_LsduPtr, and therefore the payload length stored to
      Fr_LsduLengthPtr are limited by the configuration parameter FrIfLSduLength 
      configured in the FrIf.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Static_Reconfigurable_Payload_10B</srcid><srcstatus/><internalId>1047</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3903</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ReceiveRxLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_MessageBufferError_1</srcid><srcstatus/><internalId>1060</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_MessageBufferError_2</srcid><srcstatus/><internalId>1061</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidAccess</srcid><srcstatus/><internalId>1163</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR605</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3921</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the optional configuration parameter FrIfDemFTSlotStatusRef exists and a
      single slot status error bit (vSS!SyntaxError, vSS!ContentError,
      vSS!Bviolation) is set, then the slot status information shall be
      reported to DEM as Dem_ReportErrorStatus (FrIfDemFTSlotStatusRef,
      DEM_EVENT_STATUS_FAILED).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR627</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3941</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the optional configuration parameter FrIfDemFTSlotStatusRef exists and no
      single slot status error bit (vSS!SyntaxError, vSS!ContentError,
      vSS!Bviolation) is set, then the slot status information shall be
      reported to DEM as Dem_ReportErrorStatus (FrIfDemFTSlotStatusRef,
      DEM_EVENT_STATUS_PASSED).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR628</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Dem_ReportErrorStatus() shall only be called if the optional configuration
      parameter FrIfDemFTSlotStatusRef exists.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3978</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_ReceiveRxLPdu is called before the successful initialization of Fr,
      then the function Fr_ReceiveRxLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_Uninit</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR227</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>3997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReceiveRxLPdu shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_ReceiveRxLPdu shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidCtrlIdx</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4016</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReceiveRxLPdu shall check the validity of the parameter Fr_LpduIdx. If
      Fr_LpduIdx is invalid, then the function Fr_ReceiveRxLPdu shall raise the
      development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidLpduId</srcid><srcstatus/><internalId>1313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReceiveRxLPdu shall check whether the parameter Fr_LsduPtr is a NULL
      pointer (NULL_PTR). If Fr_LsduPtr is a NULL pointer, then the function
      Fr_ReceiveRxLPdu shall raise the development error FR_E_INV_POINTER and
      return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidPtr</srcid><srcstatus/><internalId>1279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR230</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4055</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReceiveRxLPdu shall check whether the parameter Fr_RxLPduStatusPtr is
      a NULL pointer (NULL_PTR). If Fr_RxLPduStatusPtr is a NULL pointer, then
      the function Fr_ReceiveRxLPdu shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidPtr_1</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR231</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4075</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReceiveRxLPdu shall check whether the parameter Fr_LsduLengthPtr is a
      NULL pointer (NULL_PTR). If Fr_LsduLengthPtr is a NULL pointer, then the
      function Fr_ReceiveRxLPdu shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxLPdu_InvalidPtr_2</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4095</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_CheckTxLPduStatus
      Syntax: Std_ReturnType Fr_CheckTxLPduStatus( uint8 Fr_CtrlIdx, uint16 Fr_LPduIdx, Fr_TxLPduStatusType* Fr_TxLPduStatusPtr )
      Service ID[hex]: 0x0d
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx T
            his index is used to uniquely identify a FlexRay frame
      Parameters (inout): None
      Parameters (out):
        Fr_TxLPduStatusPtr This reference is used to store the transmit status of the LPdu
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Checks the transmit status of the LSdu.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_Pending</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckTxLPduStatus_NotPending</srcid><srcstatus/><internalId>988</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckTxLPduStatus_DummyBuffer</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR244</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CheckTxLPduStatus shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped to the transmission of  the
        FlexRay frame identified by Fr_LpduIdx.
      2. Check whether the transmission resource as figured in bullet 1 is pending
        for transmission.
      3. If a transmission request is pending, then store the status
        FR_NOT_TRANSMITTED to Fr_TxLPduStatusPtr.
      4. If no transmission request is pending, then store the status
      5. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_Pending</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckTxLPduStatus_NotPending</srcid><srcstatus/><internalId>988</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckTxLPduStatus_DummyBuffer</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR243</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_CheckTxLPduStatus is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_InvalidAccess</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR606</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the optional configuration parameter FrIfDemFTSlotStatusRef exists and a
      single slot status error bit (vSS!SyntaxError, vSS!ContentError,
      vSS!Bviolation) is set, then the slot status information shall be
      reported to DEM as Dem_ReportErrorStatus (FrIfDemFTSlotStatusRef,
      DEM_EVENT_STATUS_FAILED).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR629</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the optional configuration parameter FrIfDemFTSlotStatusRef exists and no
      single slot status error bit (vSS!SyntaxError, vSS!ContentError,
      vSS!Bviolation) is set, then the slot status information shall be
      reported to DEM as Dem_ReportErrorStatus (FrIfDemFTSlotStatusRef,
      DEM_EVENT_STATUS_PASSED).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR630</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4201</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Dem_ReportErrorStatus() shall be called only if the optional configuration
      parameter FrIfDemFTSlotStatusRef exists.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.SlotStatus</srcid><srcstatus/><internalId>16</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR240</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_CheckTxLPduStatus is called before the successful initialization of
      Fr, then the function Fr_CheckTxLPduStatus shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_Uninit</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR241</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CheckTxLPduStatus shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_CheckTxLPduStatus shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckTxLPduStatus_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4257</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CheckTxLPduStatus shall check the validity of the parameter
      Fr_LpduIdx. If Fr_LpduIdx is invalid, then the function
      Fr_CheckTxLPduStatus shall raise the development error FR_E_INV_LPDU_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_InvalidLpduId</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR343</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CheckTxLPduStatus shall check whether the parameter Fr_TxLPduStatusPtr
      is a NULL pointer (NULL_PTR). If Fr_TxLPduStatusPtr is a NULL pointer,
      then the function Fr_CheckTxLPduStatus shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckTxLPduStatus_InvalidPtr</srcid><srcstatus/><internalId>1282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_PrepareLPdu
      Syntax: Std_ReturnType Fr_PrepareLPdu( uint8 Fr_CtrlIdx, uint16 Fr_LPduIdx )
      Service ID[hex]: 0x1f
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx
            This index is used to uniquely identify a FlexRay frame
      Parameters (inout): None
      Parameters (out): None
      Return value:  Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Prepares a LPdu.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_StaticReconfig</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_MessageBufferError</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_StaticNormal</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_DummyBuffer</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR249</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4325</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_PrepareLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped
        to the processing of  the FlexRay frame identified by Fr_LpduIdx.
      2. Configure the physical resource (a buffer) appropriate for Fr_LpduIdx
        operation (SlotId, Cycle filter, payload length, header CRC, etc.) if the
        MCG  uses the reconfiguration feature 6 .
      3. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_StaticReconfig</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_StaticNormal</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_DummyBuffer</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR250</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_PrepareLPdu shall be pre compile time configurable On/Off by the
      configuration parameter: FrBufferReconfig.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Fr_PrepareLPdu can be enabled/disabled with the parameter Fr.EB.PrepareLpduApiEnable.&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferReconfig</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR248</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_PrepareLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_MessageBufferError</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_InvalidAccess</srcid><srcstatus/><internalId>1162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR245</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4378</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_PrepareLPdu is called before the successful initialization of Fr, then
      the function Fr_PrepareLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_Uninit</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR246</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4397</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_PrepareLPdu shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_PrepareLPdu shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_InvalidCtrlIdx</srcid><srcstatus/><internalId>1232</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_PrepareLPdu shall check the validity of the parameter Fr_LpduIdx. If
      Fr_LpduIdx is invalid, then the function Fr_PrepareLPdu shall raise the
      development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_PrepareLPdu_InvalidLpduId</srcid><srcstatus/><internalId>1315</internalId></linkedfrom><linkedfrom><srcid>Fr_PrepareLPdu_InvalidLpduId_DynReconfig</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR524</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4435</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_ReconfigLPdu
      Syntax: Std_ReturnType Fr_ReconfigLPdu( uint8 Fr_CtrlIdx, uint16 Fr_LPduIdx, uint16 Fr_FrameId,
                Fr_ChannelType Fr_ChnlIdx, uint8 Fr_CycleRepetition, uint8 Fr_CycleOffset,
                uint8 Fr_PayloadLength,  uint16 Fr_HeaderCRC )
      Service ID[hex]: 0x25
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay  Driver.
        Fr_LPduIdx
            This index is used to uniquely identify a FlexRay frame
        Fr_FrameId
            FlexRay Frame ID the FrIf_LPdu shall be configured to.
        Fr_ChnlIdx
            FlexRay Channel the FrIf_LPdu shall be configured to.
        Fr_CycleRepetition
            Cycle Repetition part of the cycle filter mechanism FrIf_LPdu shall be configured to.
        Fr_CycleOffset
            Cycle Offset part of the cycle filter mechanism FrIf_LPdu  shall be configured
            to.
        Fr_PayloadLength
            Payloadlength in units of bytes the FrIf_LPduIdx shall be  configured to.
        Fr_HeaderCRC
            Header CRC the FrIf_LPdu shall be configured to.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Reconfigures a given LPdu according to the parameters (FrameId, Channel,
      CycleRepetition, CycleOffset, PayloadLength, HeaderCRC) at runtime.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_Reconfig_CHA_Tx</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_Reconfig_CHB_Rx</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_CycleRepetition</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_PayloadRound</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_BaseCycle</srcid><srcstatus/><internalId>1042</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_MessageBufferError</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_DummyBuffer</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR525</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReconfigLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped
        to the processing of  the FlexRay frame as identified by Fr_LpduIdx.
      2. Configure the physical resource (a buffer) according to the parameters
        given  at the API. The Lpdu direction is statically associated with the
        Lpdu and  cannot be changed by this service.
      3. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_Reconfig_CHA_Tx</srcid><srcstatus/><internalId>1038</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_Reconfig_CHB_Rx</srcid><srcstatus/><internalId>1039</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_DummyBuffer</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR526</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Whether an Lpdu is dynamically reconfigurable is determined via the
      configuration parameter FrIfReconfigurable which is a property of the
      FrIfLPdu configuration parameter container.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidLpduId_NotDynReconfig</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR527</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Since FlexRay supports only even number of bytes as payload length, the
      parameter Fr_PayloadLength must be internally rounded to the next higher
      even number if it is odd.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_PayloadRound</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR528</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReconfigLPdu shall be pre compile time configurable On/Off by
      the configuration parameter: FrBufferReconfig.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Fr_ReconfigLPdu can be enabled/disable by the parameter Fr.EB.ReconfigLPduApiEnable&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferReconfig</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR529</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ReconfigLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_MessageBufferError</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidAccess</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR530</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4562</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_ReconfigLPdu is called before the successful initialization of Fr,
      then the function Fr_ReconfigLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_Uninit</srcid><srcstatus/><internalId>1190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR531</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_ReconfigLPdu shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidCtrlIdx</srcid><srcstatus/><internalId>1246</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR532</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4600</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the validity of the parameter Fr_LpduIdx. If
      Fr_LpduIdx is invalid, then the function Fr_ReconfigLPdu shall raise the
      development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidLpduId</srcid><srcstatus/><internalId>1317</internalId></linkedfrom><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidLpduId_NotDynReconfig</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR533</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4619</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the validity of the parameter Fr_ChnlIdx. If
      Fr_ChnlIdx is invalid, then the function Fr_ReconfigLPdu shall raise the
      development error FR_E_INV_CHNL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidChnlIdx</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR534</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4638</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the validity of the parameter
      Fr_CycleRepetition. If Fr_CycleRepetition is invalid, then the function
      Fr_ReconfigLPdu shall raise the development error FR_E_INV_CYCLE and
      return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidCycle</srcid><srcstatus/><internalId>1307</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR535</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4658</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Valid values for parameter Fr_CycleRepetition are 1, 2, 4, 5, 8, 10, 16, 20,
      32, 40, 50 and 64.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is not applicable:
        Instead it is replaced by requirement Fr.ASR40.FR535_1.
        FlexRay 2.1 harware supports only a subset of the repetition values.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR535_1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Valid values for parameter Fr_CycleRepetition are 1, 2, 4, 8, 16, 32, and 64.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_CycleRepetition</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR536</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4689</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the parameter Fr_BaseCycle for being valid.
      If Fr_BaseCycle is invalid, then the function Fr_ReconfigLPdu shall raise
      the development error FR_E_INV_CYCLE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Fr_BaseCycle has been renamed to Fr_CycleOffset&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidBaseCycle</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR537</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4709</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Valid values for parameter Fr_BaseCycle are 0 to (Fr_CycleRepetition - 1).
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Fr_BaseCycle has been renamed&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_BaseCycle</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR538</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the validity of the parameter
      Fr_PayloadLength. If Fr_PayloadLength
      is invalid, then the function Fr_ReconfigLPdu shall raise the development
      error FR_E_INV_LENGTH and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidLength</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR634</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the parameter Fr_HeaderCRC for being valid.
      If Fr_HeaderCRC is invalid, then the function Fr_ReconfigLPdu shall
      raise the development error FR_E_INV_HEADERCRC and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidCrc</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR633</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReconfigLPdu.InvFrameID</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4762</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReconfigLPdu shall check the parameter Fr_FrameId for being valid.
      If Fr_FrameId is invalid, then the function Fr_ReconfigLPdu shall
      raise the development error FR_E_INV_CONFIG and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReconfigLPdu_InvalidConfig</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR539</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4778</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_DisableLPdu
      Syntax: Std_ReturnType Fr_DisableLPdu( uint8 Fr_CtrlIdx, uint16 Fr_LPduIdx )
      Service ID[hex]: 0x26
      Sync/Async: Synchronous
      Reentrancy:  Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_LPduIdx
            This index is used to uniquely identify a FlexRay frame
      Parameters (inout): None
      Parameters (out): None
      Return value:  Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Disables the hardware resource of a LPdu for transmission/reception.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_Disable_Tx</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_Disable_Rx</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_AlreadyDisabled</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_Disable_HardwareError</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_DummyBuffer</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR540</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4806</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_DisableLPdu shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Figure out the physical resource (e.g., a buffer) mapped
         to the processing of  the FlexRay frame identified by Fr_LpduIdx.
      2. Configure the physical resource (a buffer) in a way that it doesn't
         take part in  the transmission/reception process.
      3. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_Disable_Tx</srcid><srcstatus/><internalId>933</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_Disable_Rx</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_AlreadyDisabled</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_DummyBuffer</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR541</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Only Lpdus that can be dynamically reconfigured can be disabled by this service
      (see Fr_ReconfigLPdu).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_InvalidLpduId_NotDynReconfig</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR542</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4839</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_DisableLPdu shall be pre compile time configurable On/Off by the
      configuration parameter: FrBufferReconfig.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;Fr_DisableLPdu can be disabled with the parameter Fr.EB.DisableLPduApiEnable.&lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferReconfig</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR543</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4854</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_DisableLPdu is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_Disable_HardwareError</srcid><srcstatus/><internalId>936</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_InvalidAccess</srcid><srcstatus/><internalId>1145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR544</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4872</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_DisableLPdu is called before the successful initialization of Fr, then
      the function Fr_DisableLPdu shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_Uninit</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR545</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4891</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_DisableLPdu shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_DisableLPdu shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_InvalidCtrlIdx</srcid><srcstatus/><internalId>1233</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR546</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_DisableLPdu shall check the validity of the parameter Fr_LpduIdx. If
      Fr_LpduIdx is invalid, then the function Fr_DisableLPdu shall raise the
      development error FR_E_INV_LPDU_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableLPdu_InvalidLpduId</srcid><srcstatus/><internalId>1319</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableLPdu_InvalidLpduId_NotDynReconfig</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR497</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetGlobalTime
      Syntax: Std_ReturnType Fr_GetGlobalTime( uint8 Fr_CtrlIdx, uint8* Fr_CyclePtr, uint16* Fr_MacroTickPtr )
      Service ID[hex]: 0x10
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_CyclePtr
            Address where the current FlexRay communication cycle value shall be stored.
        Fr_MacroTickPtr
            Address where the current macrotick value shall be stored.
      Return value: Std_ReturnType
      E_OK: API call finished successfully.
      E_NOT_OK: API call aborted due to errors.
      Description: Gets the current global FlexRay time.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_NormalActive</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_WrapAround</srcid><srcstatus/><internalId>1003</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_WrongState</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR256</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4959</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetGlobalTime shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Read the current global FlexRay time and write it to the
        output parameters  Fr_CyclePtr and Fr_MacrotickPtr.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_NormalActive</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>Fr_GetGlobalTime_WrapAround</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR257</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetGlobalTime shall ensure that the time information is
      consistent and valid. This means that the values returned of both
      parameters (Fr_CyclePtr and Fr_MacrotickPtr) must be taken from a single
      point in time. The resulting global time shall always strictly increase
      over time (until it wraps around at the time-boundary).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_WrapAround</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>4993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetGlobalTime shall ensure that the time information is valid
      and up to date (synchronized CC), - otherwise the output parameters
      shall not be written and E_NOT_OK returned.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_WrongState</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR255</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5008</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetGlobalTime is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_InvalidAccess</srcid><srcstatus/><internalId>1154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR251</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5026</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetGlobalTime is called before the successful initialization of Fr,
      then the function Fr_GetGlobalTime shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_Uninit</srcid><srcstatus/><internalId>1192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR252</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetGlobalTime shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_GetGlobalTime shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_InvalidCtrlIdx</srcid><srcstatus/><internalId>1234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR253</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5064</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetGlobalTime shall check whether the parameter Fr_CyclePtr is a NULL
      pointer (NULL_PTR). If Fr_CyclePtr is a NULL pointer, the function
      Fr_GetGlobalTime shall raise the development error FR_E_INV_POINTER and
      return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_InvalidPtr</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR254</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5084</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetGlobalTime shall check whether the parameter Fr_MacroTickPtr is a
      NULL pointer (NULL_PTR). If Fr_MacroTickPtr is a NULL pointer, the
      function Fr_GetGlobalTime shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetGlobalTime_InvalidPtr_1</srcid><srcstatus/><internalId>1284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetNmVector
      Syntax: Std_ReturnType Fr_GetNmVector( uint8 Fr_CtrlIdx, uint8* Fr_NmVectorPtr )
      Service ID[hex]: 0x22
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_NmVectorPtr Address where the NmVector of the last communication cycle shall be stored.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the network management vector of the last communication cycle.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_NormalActive_1Byte</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_NormalPassive_12Byte</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_Startup</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR262</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetNmVector shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Read the current accrued network management vector out of
        the FlexRay CC  and then write it to the output parameter Fr_NmVectorPtr.
        The number of  bytes written to the output parameter is constant and is
        known at configuration  time (FrIf configuration parameter
        FrIfGNetworkManagementVectorLength).
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_NormalActive_1Byte</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_NormalPassive_12Byte</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR263</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetNmVector shall ensure that the FlexRay CC is synchronous to
      global time when the data is read - otherwise the output parameters
      shall not be written and E_NOT_OK returned.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_Startup</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR264</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetNmVector shall ensure that the payload data is copied to
      Fr_NmVectorPtr in the same byte order as they were received on the
      FlexRay bus. (first byte = lowest address, last byte = highest address).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_NormalPassive_12Byte</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetNmVector is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_InvalidAccess</srcid><srcstatus/><internalId>1156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5198</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetNmVector is called before the successful initialization of Fr, then
      the function Fr_GetNmVector shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_Uninit</srcid><srcstatus/><internalId>1193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR259</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetNmVector shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_GetNmVector shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_InvalidCtrlIdx</srcid><srcstatus/><internalId>1235</internalId></linkedfrom><linkedfrom><srcid>Fr_GetNmVector_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR260</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5236</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetNmVector shall check whether the parameter Fr_NmVectorPtr is a NULL
      pointer (NULL_PTR). If Fr_NmVectorPtr is a NULL pointer, then the
      function Fr_GetNmVector shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetNmVector_InvalidPtr</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR547</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetNumOfStartupFrames
      Syntax: Std_ReturnType Fr_GetNumOfStartupFrames( uint8 Fr_CtrlIdx, uint8* Fr_NumOfStartupFramesPtr )
      Service ID[hex]: 0x27
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_NumOfStartupFramesPtr
            Address where the number of startup frames seen within the
            last even/odd cycle pair shall be stored.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the current number of startup frames seen on
      the cluster.  See variable vStartupPairs of [12] for details.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR549</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5289</sourceline>
      <version>1</version>
      <description>
      The function Fr_GetNumOfStartupFrames shall perform the following tasks on
      FlexRay CC Fr_CtrIdx:
      1. Read the number of aligned startup frame pairs received or transmitted during  the previous double cycle, aggregated
        across both channels and write it to the  output parameter Fr_NumOfStartupFramesPtr.
      2. Return E_OK.
    </description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR550</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the hardware doesn't support accumulating the number of startupframes,
      (FlexRay 2.1 Rev A compliant hardware), then the driver shall always
      assume 2 startup frames available.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR551</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetNumOfStartupFrames shall ensure that the information is valid
      and up to date (synchronized CC) otherwise the output parameters
      shall not be written and E_NOT_OK returned.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR552</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetNumOfStartupFrames is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR553</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetNumOfStartupFrames is called before the successful initialization
      of Fr, then the function Fr_GetNumOfStartupFrames shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR554</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetNumOfStartupFrames shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_GetNumOfStartupFrames shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR555</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetNumOfStartupFrames shall check whether the parameter
      Fr_NumOfStartupFramesPtr is a NULL pointer (NULL_PTR). If
      Fr_NumOfStartupFramesPtr is a NULL pointer, then the function
      Fr_GetNumOfStartupFrames shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.NumStartupFrames</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR556</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5424</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_GetChannelStatus
      Syntax: Std_ReturnType Fr_GetChannelStatus( uint8 Fr_CtrlIdx,  uint16* Fr_ChannelAStatusPtr,  uint16* Fr_ChannelBStatusPtr  )
      Service ID[hex]: 0x28
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
        Fr_ChannelAStatusPtr
            Address where the bitcoded channel A status information  shall be stored.
      Parameters (out):
        Fr_ChannelBStatusPtr
            Address where the bitcoded channel B status information  shall be stored.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the channel status information.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant2</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant3</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant4</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant1</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant2</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant3</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant4</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_Startup</srcid><srcstatus/><internalId>1088</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_NoStatusAvailable</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR558</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetChannelStatus shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:
      1. Read the aggregated channel status, NIT status, symbol window status and  write it to
          the output parameter Fr_ChannelAStatusPtr/Fr_ChannelBStatusPtr.
          The value of *Fr_ChannelAStatusPtr/*Fr_ChannelBStatusPtr is bitcoded with  the
          following meaning (Bit 0 = LSB, Bit 15 = MSB):
          Bit  0: Channel A/B aggregated channel status vSS!ValidFrame
          Bit  1: Channel A/B aggregated channel status vSS!SyntaxError
          Bit  2: Channel A/B aggregated channel status vSS!ContentError
          Bit  3: Channel A/B aggregated channel status additional  communication
          Bit  4: Channel A/B aggregated channel status vSS!Bviolation
          Bit  5: Channel A/B aggregated channel status vSS!TxConflict
          Bit  6: Not used (0)
          Bit  7: Not used (0)
          Bit  8: Channel A/B symbol window status data vSS!ValidMTS
          Bit  9: Channel A/B symbol window status data vSS!SyntaxError
          Bit 10: Channel A/B symbol window status data vSS!Bviolation
          Bit 11: Channel A/B symbol window status data vSS!TxConflict
          Bit 12: Channel A/B NIT status data vSS!SyntaxError
          Bit 13: Channel A/B NIT status data vSS!Bviolation
          Bit 14: Not used (0)
          Bit 15: Not used (0)
      2. Reset the aggregated channel status information within the FlexRay controller.
      3. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant1</srcid><srcstatus/><internalId>1080</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant2</srcid><srcstatus/><internalId>1081</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant3</srcid><srcstatus/><internalId>1082</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelAVariant4</srcid><srcstatus/><internalId>1083</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant1</srcid><srcstatus/><internalId>1084</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant2</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant3</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_ChannelBVariant4</srcid><srcstatus/><internalId>1087</internalId></linkedfrom><linkedfrom><srcid>Fr_GetChannelStatus_NoStatusAvailable</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR559</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5490</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetChannelStatus shall ensure that the information is valid and
      up to date (synchronized CC) - otherwise the output parameters shall
      not be written and E_NOT_OK returned.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_Startup</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR560</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5505</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetChannelStatus is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_InvalidAccess</srcid><srcstatus/><internalId>1151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR561</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5523</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetChannelStatus is called before the successful initialization of Fr,
      then the function Fr_GetChannelStatus shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_Uninit</srcid><srcstatus/><internalId>1194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR562</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5542</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetChannelStatus shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_GetChannelStatus shall
      raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR563</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetChannelStatus shall check whether the parameter
      Fr_ChannelAStatusPtr is a NULL pointer (NULL_PTR). If
      Fr_ChannelAStatusPtr is a NULL pointer, then the function
      Fr_GetChannelStatus shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_InvalidPtr</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR607</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetChannelStatus shall check whether the parameter
      Fr_ChannelBStatusPtr is a NULL pointer (NULL_PTR). If
      Fr_ChannelBStatusPtr is a NULL pointer, then the function
      Fr_GetChannelStatus shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetChannelStatus_InvalidPtr_1</srcid><srcstatus/><internalId>1287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR564</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5603</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_GetClockCorrection
      Syntax: Std_ReturnType Fr_GetClockCorrection( uint8 Fr_CtrlIdx, sint16* Fr_RateCorrectionPtr, sint32* Fr_OffsetCorrectionPtr )
      Service ID[hex]: 0x29
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_RateCorrectionPtr
            Address where the current rate correction value shall be stored.
        Fr_OffsetCorrectionPtr
            Address where the current offset correction value shall be stored.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.

      Description: Gets the current clock correction values. See variables vInterimRateCorrection
      and vInterimOffsetCorrection of [12] for details.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_SuccessPositive</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_SuccessNegative</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR566</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5635</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetClockCorrection shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Read the rate correction value
        (vInterimRateCorrection11) and write it as  signed integer to the output
        parameter Fr_RateCorrectionPtr. Read the offset  correction value
        (vInterimOffsetCorrection12) and write it as signed integer to  the
        output parameter Fr_OffsetCorrectionPtr
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_SuccessPositive</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>Fr_GetClockCorrection_SuccessNegative</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR568</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetClockCorrection is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_InvalidAccess</srcid><srcstatus/><internalId>1152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR569</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5673</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetClockCorrection is called before the successful initialization of
      Fr, then the function Fr_GetClockCorrection shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_Uninit</srcid><srcstatus/><internalId>1195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR570</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetClockCorrection shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_GetClockCorrection shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_InvalidCtrlIdx</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR571</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetClockCorrection shall check whether the parameter
      Fr_RateCorrectionPtr is a NULL pointer (NULL_PTR). If
      Fr_RateCorrectionPtr is a NULL pointer, then the function
      Fr_GetClockCorrection shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_InvalidPtr</srcid><srcstatus/><internalId>1288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR572</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function a
      NULL pointer (NULL_PTR). If Fr_OffsetCorrectionPtr is a NULL pointer,
      then the function Fr_GetClockCorrection shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetClockCorrection_InvalidPtr_1</srcid><srcstatus/><internalId>1289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR573</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5752</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetSyncFrameList
      Syntax: Std_ReturnType Fr_GetSyncFrameList( uint8 Fr_CtrlIdx,
                                                  uint8 Fr_ListSize,
                                                  uint16* Fr_ChannelAEvenListPtr,
                                                  uint16* Fr_ChannelBEvenListPtr,
                                                  uint16* Fr_ChannelAOddListPtr,
                                                  uint16* Fr_ChannelBOddListPtr  )
      Service ID[hex]: 0x2a
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay  Driver.
        Fr_ListSize
            Size of the arrays passed via parameters: Fr_ChannelAEvenListPtr, Fr_ChannelBEvenListPtr,
            Fr_ChannelAOddListPtr, Fr_ChannelBOddListPtr.  The service must ensure to not write more entries
            into  those arrays than granted by this parameter.
      Parameters (inout): None
      Parameters (out):
        Fr_ChannelAEvenListPtr
            Address the list of syncframes on channel A within the  even communication cycle is written to.
            The exact number of elements written to the list is limited by  parameter
            Fr_ListSize.  Unused list elements are filled with the value '0' to
            indicate that no more syncframe has been seen.
        Fr_ChannelBEvenListPtr
            Address the list of syncframes on channel B within the  even
            communication cycle is written to. The exact  number of elements written
            to the list is limited by  parameter Fr_ListSize.  Unused list elements
            are filled with the value '0' to  indicate that no more syncframe has
            been seen.
        Fr_ChannelAOddListPtr
            Address the list of syncframes on channel A within the odd communication cycle is written
            to. The exact number  of elements written to the list is limited by
            parameter  Fr_ListSize.  Unused list elements are filled with the value
            '0' to  indicate that no more syncframe has been seen.
        Fr_ChannelBOddListPtr
            Address the list of syncframes on channel B within
            the  odd communication cycle is written to. The exact number  of elements
            written to the list is limited by parameter  Fr_ListSize.  Unused list
            elements are filled with the value '0' to  indicate that no more
            syncframe has been seen.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets a list of syncframes received or transmitted on channel A and channel B via  the even and odd
      communication cycle.  See variables vsSyncIdListA and vsSyncIdListB of [12] for details.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_LockError</srcid><srcstatus/><internalId>1018</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_Success</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_Success_2</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_SmallerList</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR575</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetSyncFrameList shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Read the list of syncframes received in the last even
          communication cycle on  channel A and write it as array to the memory
          location  Fr_ChannelAEvenListPtr.  Read the list of syncframes received
          in the last even communication cycle on  channel B and write it as array
          to the memory location  Fr_ChannelBEvenListPtr.  Read the list of
          syncframes received in the last odd communication cycle on  channel A and
          write it as array to the memory location  Fr_ChannelAOddListPtr.  Read
          the list of syncframes received in the last odd communication cycle on
          channel B and write it as array to the memory location
          Fr_ChannelBOddListPtr.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_Success</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_Success_2</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_SmallerList</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR576</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5835</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The size of the array written to Fr_ChannelAEvenListPtr, Fr_ChannelBEvenListPtr,
      Fr_ChannelAOddListPtr and Fr_ChannelBOddListPtr shall be limited to
      Fr_ListSize (array elements 0 to (Fr_ListSize - 1)).
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_Success_2</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_SmallerList</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR577</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5850</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Unused array elements shall be set to 0, indicating no valid sync frame.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_Success</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR578</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      A maximum number of 15 syncframes shall be supported.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidConfig</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR580</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5876</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetSyncFrameList is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_LockError</srcid><srcstatus/><internalId>1018</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidAccess</srcid><srcstatus/><internalId>1171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR581</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5894</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetSyncFrameList is called before the successful initialization of Fr,
      then the function Fr_GetSyncFrameList shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_Uninit</srcid><srcstatus/><internalId>1196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR582</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetSyncFrameList shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_GetSyncFrameList shall
      raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidCtrlIdx</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR583</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetSyncFrameList shall check whether the parameter
      Fr_ChannelAEvenListPtr is a NULL pointer (NULL_PTR). If
      Fr_ChannelAEvenListPtr is a NULL pointer, then the function
      Fr_GetSyncFrameList shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR584</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5953</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetSyncFrameList shall check whether the parameter Fr_ChannelBEvenListPtr is a
      NULL pointer (NULL_PTR). If Fr_ChannelBEvenListPtr is a NULL pointer,
      then the function Fr_GetSyncFrameList shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_1</srcid><srcstatus/><internalId>1291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR585</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5973</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetSyncFrameList shall check whether the parameter
      Fr_ChannelAOddListPtr is a NULL pointer (NULL_PTR). If
      Fr_ChannelAOddListPtr is a NULL pointer, then the function
      Fr_GetSyncFrameList shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_2</srcid><srcstatus/><internalId>1292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR586</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>5994</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetSyncFrameList shall check whether the parameter
      Fr_ChannelBOddListPtr is a NULL pointer (NULL_PTR). If
      Fr_ChannelBOddListPtr is a NULL pointer, then the function
      Fr_GetSyncFrameList shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncFrameList_InvalidPtr_3</srcid><srcstatus/><internalId>1293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR587</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6015</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetWakeupRxStatus
      Syntax: Std_ReturnType Fr_GetWakeupRxStatus(  uint8 Fr_CtrlIdx,  uint8* Fr_WakeupRxStatusPtr  )
      Service ID[hex]: 0x2b
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device Driver.
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay
      Parameters (inout): None
      Parameters (out):
        Fr_WakeupRxStatusPtr
            Address where bitcoded wakeup reception status shall
            be  stored.
            Bit 0: Wakeup received on channel A indicator
            Bit 1: Wakeup received on channel B indicator
            Bit 2-7: Unused
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the wakeup received information from the FlexRay controller.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_NoWUP</srcid><srcstatus/><internalId>1009</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChAWUP</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChBWUP</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChABWUP</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR588</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6047</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetWakeupRxStatus shall perform the following tasks on FlexRay
      CC Fr_CtrIdx:
      1. Read the wakeup pattern received indicators for channel A and channel B and  write it
         to the output parameter Fr_WakeupRxStatusPtr. The value of  *Fr_WakeupRxStatusPtr is bitcoded
         with the following meaning (Bit 0 = LSB,  Bit 7 = MSB):
         Bit 0: Wakeup pattern received on channel A (1), otherwise (0)
         Bit 1: Wakeup pattern received on channel B (1), otherwise (0)
         Bit 2: Not used (always 0)
         Bit 3: Not used (always 0)
         Bit 4: Not used (always 0)
         Bit 5: Not used (always 0)
         Bit 6: Not used (always 0)
         Bit 7: Not used (always 0)
       2. Reset the wakeup received indication status information within the FlexRay  controller.
       3. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_NoWUP</srcid><srcstatus/><internalId>1009</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChAWUP</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChBWUP</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>Fr_GetWakeupRxStatus_ChABWUP</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR589</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetWakeupRxStatus is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_InvalidAccess</srcid><srcstatus/><internalId>1160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR590</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6092</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetWakeupRxStatus is called before the successful initialization of
      Fr, then the function Fr_GetWakeupRxStatus shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_Uninit</srcid><srcstatus/><internalId>1197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR591</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6111</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetWakeupRxStatus shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_GetWakeupRxStatus shall raise the development error FR_E_INV_CTRL_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR592</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetWakeupRxStatus shall check whether the parameter
      Fr_WakeupRxStatusPtr is a NULL pointer (NULL_PTR). If
      Fr_WakeupRxStatusPtr is a NULL pointer, then the function
      Fr_GetWakeupRxStatus shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetWakeupRxStatus_InvalidPtr</srcid><srcstatus/><internalId>1294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6152</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_SetAbsoluteTimer
      Syntax: Std_ReturnType Fr_SetAbsoluteTimer( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx, uint8 Fr_Cycle, uint16 Fr_Offset )
      Service ID[hex]: 0x11
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx
            Index of absolute timer within the context of the FlexRay CC.
        Fr_Cycle
            Absolute cycle the timer shall elapse in.
        Fr_Offset
            Offset within cycle Fr_Cycle in units of macrotick the timer shall  elapse at.
      Parameters (inout):  None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Sets the absolute FlexRay timer.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_NormalActive</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_NormalPassive</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_Halt</srcid><srcstatus/><internalId>963</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_Halt1</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvOffset</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR273</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetAbsoluteTimer shall perform the following tasks:
      1. Program the absolute FlexRay timer Fr_AbsTimerIdx according to the  parameters
        Fr_Cycle and Fr_Offset.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_NormalActive</srcid><srcstatus/><internalId>961</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_NormalPassive</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR272</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6200</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SetAbsoluteTimer is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvalidAccess</srcid><srcstatus/><internalId>1165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR267</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_SetAbsoluteTimer is called before the successful initialization of Fr,
      then the function Fr_SetAbsoluteTimer shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_Uninit</srcid><srcstatus/><internalId>1198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR268</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetAbsoluteTimer shall check the validity of the parameter Fr_CtrlIdx.
      If Fr_CtrlIdx is invalid, then the function Fr_SetAbsoluteTimer shall
      raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvalidCtrlIdx</srcid><srcstatus/><internalId>1240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR269</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetAbsoluteTimer shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_SetAbsoluteTimer shall raise the development error FR_E_INV_TIMER_IDX
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvalidTimerIdx</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR270</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetAbsoluteTimer shall check the validity of the parameter Fr_Cycle.
      If Fr_Cycle is invalid, then the function Fr_SetAbsoluteTimer shall raise
      the development error FR_E_INV_CYCLE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvalidCycle</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR492</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR271</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6295</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetAbsoluteTimer shall check the validity of the parameter Fr_Offset.
      If Fr_Offset is invalid, then the function Fr_SetAbsoluteTimer shall
      raise the development error FR_E_INV_OFFSET and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvalidOffset</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR436</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6314</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_SetAbsoluteTimer shall check whether the CC Fr_CtrlIdx is synchronous
      to the FlexRay global time. If the CC Fr_CtrlIdx is not synchronous to
      the FlexRay global time, then the function Fr_SetAbsoluteTimer shall
      raise the development error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetAbsoluteTimer_Halt</srcid><srcstatus/><internalId>963</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_Halt1</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>Fr_SetAbsoluteTimer_InvOffset</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_CancelAbsoluteTimer
      Syntax: Std_ReturnType Fr_CancelAbsoluteTimer( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx )
      Service ID[hex]: 0x13
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx
            Index of absolute timer within the context of the FlexRay CC.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Stops an absolute timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_OK</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR287</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6362</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CancelAbsoluteTimer shall perform the following tasks:
      1. Stop the absolute timer Fr_AbsTimerIdx.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_OK</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR286</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6377</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_CancelAbsoluteTimer is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_InvalidAccess</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR283</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6395</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_CancelAbsoluteTimer is called before the successful initialization of
      Fr, then the function Fr_CancelAbsoluteTimer shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_Uninit</srcid><srcstatus/><internalId>1199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR284</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6414</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CancelAbsoluteTimer shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_CancelAbsoluteTimer shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_InvalidCtrlIdx</srcid><srcstatus/><internalId>1241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR285</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6434</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_CancelAbsoluteTimer shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_CancelAbsoluteTimer shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelAbsoluteTimer_InvalidTimerIdx</srcid><srcstatus/><internalId>1265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_EnableAbsoluteTimerIRQ
      Syntax: Std_ReturnType Fr_EnableAbsoluteTimerIRQ( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx )
      Service ID[hex]: 0x15
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx
            Index of absolute timer within the context of the FlexRay CC.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Enables the interrupt line of an absolute timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR298</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6482</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_EnableAbsoluteTimerIRQ shall perform the following tasks:
      1. Enable the interrupt line related to timer Fr_AbsTimerIdx.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR297</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6497</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_EnableAbsoluteTimerIRQ is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR294</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6515</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_EnableAbsoluteTimerIRQ is called before the successful initialization
      of Fr, then the function Fr_EnableAbsoluteTimerIRQ shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_Uninit</srcid><srcstatus/><internalId>1200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR295</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6534</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_EnableAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_EnableAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR296</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_EnableAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_EnableAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableAbsoluteTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_AckAbsoluteTimerIRQ
      Syntax: Std_ReturnType Fr_AckAbsoluteTimerIRQ( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx )
      Service ID[hex]: 0x17
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx
            Index of absolute timer within the context of the FlexRay CC.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Resets the interrupt condition of an absolute timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR309</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6602</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AckAbsoluteTimerIRQ shall perform the following tasks:
      1. Reset the interrupt condition of absolute timer Fr_AbsTimerIdx.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR308</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AckAbsoluteTimerIRQ is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR305</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6635</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_AckAbsoluteTimerIRQ is called before the successful initialization of
      Fr, then the function Fr_AckAbsoluteTimerIRQ shall raise the development
      error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_Uninit</srcid><srcstatus/><internalId>1201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR306</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6654</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AckAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_AckAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR307</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6674</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_AckAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_AckAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6694</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_DisableAbsoluteTimerIRQ
      Syntax: Std_ReturnType Fr_DisableAbsoluteTimerIRQ( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx )
      Service ID[hex]: 0x19
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx Index of absolute timer within the context of the FlexRay CC.
      Parameters (inout): None
      Parameters (out): None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Disables the interrupt line of an absolute timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR320</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6721</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_DisableAbsoluteTimerIRQ shall perform the following tasks:
      1. Disable the interrupt line related to absolute timer Fr_AbsTimerIdx.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR319</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6736</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_DisableAbsoluteTimerIRQ is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR316</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6754</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_DisableAbsoluteTimerIRQ is called before the successful initialization
      of Fr, then the function Fr_DisableAbsoluteTimerIRQ shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_Uninit</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR317</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_DisableAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_DisableAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR318</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6793</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_DisableAbsoluteTimerIRQ shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_DisableAbsoluteTimerIRQ shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableAbsoluteTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6813</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_GetAbsoluteTimerIRQStatus
      Syntax: Std_ReturnType Fr_GetAbsoluteTimerIRQStatus( uint8 Fr_CtrlIdx, uint8 Fr_AbsTimerIdx, boolean* Fr_IRQStatusPtr )
      Service ID[hex]: 0x20
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
        Fr_AbsTimerIdx
            Index of absolute timer within the context of the FlexRay CC.
      Parameters (inout): None
      Parameters (out):
        Fr_IRQStatusPtr
            Address the output value is stored to.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets IRQ status of an absolute timer.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_Pending</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_NotPending</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR332</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6843</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetAbsoluteTimerIRQStatus shall perform the following tasks:
      1. Check whether the interrupt of absolute timer Fr_AbsTimerIdx is pending.
        Write TRUE to output parameter Fr_IRQStatusPtr in case the interrupt is
        pending, FALSE otherwise.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_Pending</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_NotPending</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR331</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6860</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetAbsoluteTimerIRQStatus is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_InvalidAccess</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR327</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6878</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_GetAbsoluteTimerIRQStatus is called before the successful
      initialization of Fr, then the function Fr_GetAbsoluteTimerIRQStatus
      shall raise the development error FR_E_NOT_INITIALIZED and return
      E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_Uninit</srcid><srcstatus/><internalId>1203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR328</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6898</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetAbsoluteTimerIRQStatus shall check the validity of the parameter
      Fr_CtrlIdx. If Fr_CtrlIdx is invalid, then the function
      Fr_GetAbsoluteTimerIRQStatus shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR329</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetAbsoluteTimerIRQStatus shall check the validity of the parameter
      Fr_AbsTimerIdx. If Fr_AbsTimerIdx is invalid, then the function
      Fr_GetAbsoluteTimerIRQStatus shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_InvalidTimerIdx</srcid><srcstatus/><internalId>1269</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR330</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6938</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetAbsoluteTimerIRQStatus shall check whether the parameter
      Fr_IRQStatusPtr is a NULL pointer (NULL_PTR). If Fr_IRQStatusPtr is a
      NULL pointer, then the function Fr_GetAbsoluteTimerIRQStatus shall raise
      the development error FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetAbsoluteTimerIRQStatus_InvalidPtr</srcid><srcstatus/><internalId>1295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6958</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_GetVersionInfo
      Syntax: void Fr_GetVersionInfo( Std_VersionInfoType* VersioninfoPtr )
      Service ID[hex]: 0x1b
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant
      Parameters (in): None
      Parameters None  (inout):
      Parameters (out):
        VersioninfoPtr Pointer to where to store the version information of this module.
      Return value: None
      Description: Returns the version information of this module.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetVersionInfo_RetrieveVersion</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR340</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>6981</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_GetVersionInfo shall check whether the parameter VersioninfoPtr is a
      NULL pointer (NULL_PTR). If VersioninfoPtr is a NULL pointer, then the
      function Fr_GetVersionInfo shall raise the development error
      FR_E_INV_POINTER and return.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetVersionInfo_InvalidPtr</srcid><srcstatus/><internalId>1296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR341</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7001</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetVersionInfo shall return the version information of this
      module. The version information includes:  - Module Id  - Vendor Id  -
      Vendor specific version numbers.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetVersionInfo_RetrieveVersion</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR342</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7016</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetVersionInfo shall be pre compile time configurable On/Off by
      the configuration parameter: FrVersionInfoApi.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR651</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7030</sourceline>
      <version>1</version>
      <description>
      Service name: Fr_ReadCCConfig
      Syntax: Std_ReturnType Fr_ReadCCConfig( uint8 Fr_CtrlIdx, uint8 Fr_ConfigParamIdx, uint32* Fr_ConfigParamValuePtr )
      Service ID[hex]: 0x2e
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
        Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay  Driver.
        Fr_ConfigParamIdx
            Index that identifies the configuration parameter to read.
            See macros FR_CIDX_&amp;lt;config_parameter_name&amp;gt;.
      Parameters (inout): None
      Parameters (out):
        Fr_ConfigParamValuePtr
            Address the output value is stored to.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Reads a FlexRay protocol configuration parameter for a particular FlexRay  controller out
      of the module's configuration.
    </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_145</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR651.1</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7063</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_ReadCCConfig shall perform the following tasks:
      1. Read the value of the configuration parameter requested by Fr_ConfigParamIdx from
         the configuration and write it to output parameter *Fr_ConfigParamValuePtr.
      2. Return E_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR652</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7083</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ReadCCConfig is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_InvalidAccess</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_135</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR653</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7103</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, and if the function
      Fr_ReadCCConfig is called before the successful initialization of Fr,
      then the function Fr_ReadCCConfig shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_Uninit</srcid><srcstatus/><internalId>1177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_70</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR654</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7123</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReadCCConfig shall check the validity of the parameter Fr_CtrlIdx. If
      Fr_CtrlIdx is invalid, then the function Fr_ReadCCConfig shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_81</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_94</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR655</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7143</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReadCCConfig shall check the validity of the parameter
      Fr_ConfigParamIdx. If Fr_ConfigParamIdxIdx is invalid 13 , then the
      function Fr_ReadCCConfig shall raise the development error
      FR_E_INV_CONFIG_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_InvalidConfigIdx</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_105</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR656</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled, then the function
      Fr_ReadCCConfig shall check whether the parameter Fr_ConfigParamValuePtr
      is a NULL pointer (NULL_PTR). If Fr_ConfigParamValuePtr is a NULL
      pointer, then the function Fr_ReadCCConfig shall raise the development
      error FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_InvalidPtr</srcid><srcstatus/><internalId>1276</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_114</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR658</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    Config parameter mapping rule:
      integers are mapped 1 to 1.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR659</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    Config parameter mapping rule:
      floats (units of seconds) are converted to units of nanoseconds (with
      nanosecond granularity) and converted to uint32.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR662</id>
      <status>approved</status>
      <source>
      AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0,
      http://www.autosar.org/bugzilla/show_bug.cgi?id=47058
    </source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7220</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If parameter Fr_ConfigParamIdx is set to FR_CIDX_PCHANNELS (FrPChannels) then the value
        stored at Fr_ConfigParamValuePtr shall be interpreted as the following literals:
        0	FR_CHANNEL_A
        1	FR_CHANNEL_B
        2	FR_CHANNEL_AB
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        -&gt; replaces  requirements FR660
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR663</id>
      <status>approved</status>
      <source>
      AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0,
      http://www.autosar.org/bugzilla/show_bug.cgi?id=47058
    </source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7246</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If parameter Fr_ConfigParamIdx is set to FR_CIDX_PSAMPLESPERMICROTICK
        (FrPSamplesPerMicrotick) then the value stored at Fr_ConfigParamValuePtr shall
        be interpreted as the following literals:
        0	N1SAMPLES
        1	N2SAMPLES
        2	N4SAMPLES
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        -&gt; replaces  requirements FR660
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR664</id>
      <status>approved</status>
      <source>
      AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0,
      http://www.autosar.org/bugzilla/show_bug.cgi?id=47058
    </source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7273</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If parameter Fr_ConfigParamIdx is set to FR_CIDX_PWAKEUPCHANNEL (FrPWakeupChannel)
        then the value stored at Fr_ConfigParamValuePtr shall be interpreted as the following
        literals:
        0	FR_CHANNEL_A
        1	FR_CHANNEL_B
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        -&gt; replaces  requirements FR660
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR665</id>
      <status>approved</status>
      <source>
      AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0,
      http://www.autosar.org/bugzilla/show_bug.cgi?id=47058
    </source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7299</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If parameter Fr_ConfigParamIdx is set to FR_CIDX_PDMICROTICK (FrPdMicrotick) then
        the value stored at Fr_ConfigParamValuePtr shall be interpreted as the following literals:
        0	T12_5NS
        1	T25NS
        2	T50NS
        3	T100NS
        4	T200NS
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        -&gt; replaces  requirements FR660
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR666</id>
      <status>approved</status>
      <source>
      AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0,
      http://www.autosar.org/bugzilla/show_bug.cgi?id=47058
    </source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7327</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If parameter Fr_ConfigParamIdx is set to FR_CIDX_GDSAMPLECLOCKPERIOD
        (FrIfGdSampleClockPeriod) then the value stored at Fr_ConfigParamValuePtr shall be
        interpreted as the following literals:
        0	T12_5NS
        1	T25NS
        2	T50NS
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        -&gt; replaces  requirements FR660
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR661</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    Config parameter mapping rule:
      booleans shall output 1 for true and 0 for false.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        Functionality is not implemented.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReadCCConfig_OK</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR390</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       API function Description  Dem_ReportErrorStatus Queues the reported events from
      the BSW modules (API is only used  by BSW modules). The interface has an
      asynchronous behavior,  because the processing of the event is done
      within the Dem main  function.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR391</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7389</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       API function Description  Det_ReportError Service to report development errors.
       SchM_Enter_Fr - SchM_Exit_Fr -
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR067</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7405</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Containers structure the set of configuration parameters. This means:
        - all configuration parameters are kept in containers.
        - (sub-)  containers  can  reference  (sub-)  containers. It  is  possible  to  assign
          a multiplicity  to  these  references.  The  multiplicity  then  defines  the
          possible number of instances of the contained parameters.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.Ch10.2.1_1</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        VARIANT-POST-BUILD:  All  configuration  parameters  in  container  'FrGeneral'  shall
        be  configurable  at  pre-compile  time.    All  other  configuration  parameters  shall  be
        configurable at post-build-time.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This requirement is informational only.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.Ch10.2.1_2</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      VARIANT-PRE-COMPILE: All configuration parameters shall be configurable at pre-
      compile time.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      Only post-build variant is supported by this implementation.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.PostBuild</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR392_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7460</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrGeneral Description General configuration (parameters) of the
      FlexRay Driver module. Configuration Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR443_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7476</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrBufferReconfig Description Enables or disables buffer reconfiguration at
      runtime. Multiplicity 1 Type EcucBooleanParamDef Default value
      -ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      FrBufferReconfig is not used in the implementation.
      Instead Fr.EB.DisableLPduApiEnable, Fr.EB.PrepareLpduApiEnable and
      Fr.EB.ReconfigLPduApiEnable can be used to specifically enable/disable required
      buffer functionality.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr.dev.BufferReconfig</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR001_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7498</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrCtrlTestCount Description Maxmimum number of iterations the FlexRay
      controller hardware test  is performed during controller initialization.
      Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 255 ConfigurationClass
      Pre-compile time X All Variants  Link time - Post-build time -Scope /
      Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR393_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7517</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrDevErrorDetect Description Switches the Development Error Detection and
      Notification on or off.  true: Development Error Detection and
      Notification enabled. false:  Development Error Detection and
      Notification disabled. Multiplicity 1 Type EcucBooleanParamDef Default
      value -ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR439_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrIndex Description Specifies the InstanceId of this module instance. If
      only one instance is  present it shall have the Id 0. Multiplicity 1 Type
      EcucIntegerParamDef Range 0 .. 255 Default value -ConfigurationClass
      Pre-compile time X All Variants  Link time - Post-build time -Scope /
      Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR394_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7557</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrNumCtrlSupported Description Determines the maximum number of
      communication controllers that  the driver supports. Multiplicity 1 Type
      EcucIntegerParamDef Range 1 .. 256 Default value -ConfigurationClass
      Pre-compile time X All Variants  Link time - Post-build time -Scope /
      Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR486</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR002_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7577</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrRxStringentCheck Description If stringent check is enabled (true),
      received frames are only accepted  if no slot status error occured.
      Multiplicity 1 Type EcucBooleanParamDef Default value false
      ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR016_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7596</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrRxStringentLengthCheck Description If stringent check is enabled (true),
      received frames are only accepted  the received payload length matches
      the configured payload length. Multiplicity 1 Type EcucBooleanParamDef
      Default value false ConfigurationClass Pre-compile time X All Variants
      Link time - Post-build time -Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR396_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrVersionInfoApi Description Enables/disables the existence of the
      Fr_GetVersionInfo API. Multiplicity 1 Type EcucBooleanParamDef Default
      value -ConfigurationClass Pre-compile time X All Variants  Link time -
      Post-build time -Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR083_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7633</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrController Description Configuration of the individual
      controller. Configuration Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR400_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrCtrlIdx Description Determines index of CC within Fr. Multiplicity 1 Type
      EcucIntegerParamDef (Symbolic Name generated for this parameter) Range 0
      .. 255 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
      This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR402_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7668</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPAllowHaltDueToClock Description Boolean flag that controls the
      transition to the POC:halt state due to a  clock synchronization errors.
      If set to true, the CC is allowed to  transition to POC:halt. If set to
      false, the CC will not transition to the  POC:halt state but will enter
      or remain in the POC:normal passive state  (self healing would still be
      possible) Multiplicity 1 Type EcucBooleanParamDef Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Post-build
      time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR403_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPAllowPassiveToActive Description Number of consecutive even/odd cycle
      pairs that must have valid clock  correction terms before the CC will be
      allowed to transition from the  POC:normal passive state to POC:normal
      active state. If set to zero,  the CC is not allowed to transition from
      POC:normal passive to  POC:normal active Multiplicity 1 Type
      EcucIntegerParamDef Range 0 .. 31 Default value -ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR404_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7712</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPChannels Description Channels to which the node is connected.
      Implementation Type:  Fr_ChannelType Multiplicity 1 Type
      EcucEnumerationParamDef Range FR_CHANNEL_A Cluster uses channel A
      FR_CHANNEL_AB Cluster uses channel A and B  FR_CHANNEL_B Cluster uses
      channel B ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR405_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPClusterDriftDamping Description Local cluster drift damping factor used
      for rate correction [Microticks].  Remark: Upper limit 10 for FlexRay
      Protocol 3.0 compliance. Multiplicity 1 Type EcucIntegerParamDef Range 0
      .. 20 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR406_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7753</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPDecodingCorrection Description Value used by the receiver to calculate
      the difference between primary  time reference point and secondary time
      reference point [Microticks].  Remark: Lower limit 14 for FlexRay
      Protocol 2.1 Rev. A compliance.  Upper limit 136 for FlexRay Protocol 3.0
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 12 .. 143
      ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR407_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7774</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPDelayCompensationA Description Value used to compensate for reception
      delays on the indicated  channel. This covers assumed propagation delay
      up to  cPropagationDelayMax for microticks in the range of 0.0125us to
      0.05us [Microticks]. Remark: Lower limit 4 for FlexRay Protocol 3.0
      compliance. Remark: Upper limit 200 for FlexRay Protocol 2.1 Rev A
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 211
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR408_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7797</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPDelayCompensationB Description Value used to compensate for reception
      delays on the indicated  channel. This covers assumed propagation delay
      up to  cPropagationDelayMax for microticks in the range of 0.0125us to
      0.05us [Microticks]. Remark: Lower limit 4 for FlexRay Protocol 3.0
      compliance. Remark: Upper limit 200 for FlexRay Protocol 2.1 Rev A
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 211
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR448_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7820</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPExternalSync Description Flag indicating whether the node is externally
      synchronized (operating  as time gateway sink in an TT-E cluster) or
      locally synchronized. If  FrPExternalSync is set to 'true' then
      FrPTwoKeySlotMode must also be  set to 'true'. Remarks: Set to 'false'
      for FlexRay Protocol 2.1 Rev. A  compliance. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR447_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7842</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPFallBackInternal Description Flag indicating whether a time gateway sink
      node will switch to local  clock operation when synchronization with the
      time gateway source  node is lost (FrPFallBackInternal = true) or will
      instead go to  POC:ready (FrPFallBackInternal =false). Remarks: Set to
      'false' for  FlexRay Protocol 2.1 Rev. A compliance. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR411_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPKeySlotId Description ID of the key slot, i.e., the slot used to
      transmit the startup frame, sync  frame, or designated key slot frame. If
      this parameter is set to zero the  node does not have a key slot.
      Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 1023 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR425_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7884</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPKeySlotOnlyEnabled Description Flag indicating whether or not the node
      shall enter key slot only mode  following startup. Remarks: This
      parameter maps to FlexRay Protocol  2.1 Rev. A parameter
      pSingleSlotEnabled. Multiplicity 1 Type EcucBooleanParamDef Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR412_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7904</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPKeySlotUsedForStartup Description Flag indicating whether the key slot
      is used to transmit a startup frame.  If FrPKeySlotUsedForStartup is set
      to true then  FrPKeySlotUsedForSync must also be set to true. If
      FrPTwoKeySlotMode is set to true then both FrPKeySlotUsedForSync  and
      FrPKeySlotUsedForStartup must also be set to true. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR413_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPKeySlotUsedForSync Description Flag indicating whether the key slot is
      used to transmit a sync frame. If  FrPKeySlotUsedForStartup is set to
      true then FrPKeySlotUsedForSync  must also be set to true. If
      FrPTwoKeySlotMode is set to true then both  FrPKeySlotUsedForSync and
      FrPKeySlotUsedForStartup must also be  set to true. Multiplicity 1 Type
      EcucBooleanParamDef Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR414_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7948</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPLatestTx Description Number of the last minislot in which a frame
      transmission can start in  the dynamic segment. Remark: Upper limit 7980
      for FlexRay Protocol  2.1 Rev A compliance. Multiplicity 1 Type
      EcucIntegerParamDef Range 0 .. 7988 Default value -ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR415_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7968</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPMacroInitialOffsetA Description Integer number of macroticks between the
      static slot boundary and the  following macrotick boundary of the
      secondary time reference point  based on the nominal macrotick duration
      [Macroticks]. Multiplicity 1 Type EcucIntegerParamDef Range 2 .. 68
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR416_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>7989</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPMacroInitialOffsetB Description Integer number of macroticks between the
      static slot boundary and the  following macrotick boundary of the
      secondary time reference point  based on the nominal macrotick duration
      [Macroticks]. Multiplicity 1 Type EcucIntegerParamDef Range 2 .. 68
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR417_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8010</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPMicroInitialOffsetA Description Number of microticks between the
      secondary time reference point and  the macrotick boundary immediately
      following the secondary time  reference point. The parameter depends on
      FrPDelayCompensationA  and therefore it has to be set independently for
      each channel  [Microticks]. Multiplicity 1 Type EcucIntegerParamDef Range
      0 .. 239 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR418_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8032</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPMicroInitialOffsetB Description Number of microticks between the
      secondary time reference point and  the macrotick boundary immediately
      following the secondary time  reference point. The parameter depends on
      FrPDelayCompensationB  and therefore it has to be set independently for
      each channel  [Microticks]. Multiplicity 1 Type EcucIntegerParamDef Range
      0 .. 239 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR419_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8054</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPMicroPerCycle Description Nominal number of microticks in the
      communication cycle of the local  node. If nodes have different microtick
      durations this number will differ  from node to node [Microticks].
      Remark: Lower limit 960 for FlexRay  Protocol 3.0 compliance. Upper limit
      640000 for FlexRay Protocol 2.1  Rev A compliance. Multiplicity 1 Type
      EcucIntegerParamDef Range 640 .. 1280000 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR444_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8076</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPNmVectorEarlyUpdate Description Flag indicating when the update of the
      Network Management Vector in  the CHI shall take place. If
      FrPNmVectorEarlyUpdate is set to false, the  update shall take place
      after the NIT. If FrPNmVectorEarlyUpdate is set  to true, the update
      shall take place after the end of the static segment.  Remarks: Set to
      'false' for FlexRay Protocol 2.1 Rev. A compliance. Multiplicity 1
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR421_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8099</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPOffsetCorrectionOut Description Magnitude of the maximum permissible
      offset correction value  [Microticks]. Remark: Upper limit 15567 for
      FlexRay Protocol 2.1 Rev A  compliance. Remark: Lower limit 15 for
      FlexRay Protocol 3.0  compliance. Multiplicity 1 Type EcucIntegerParamDef
      Range 13 .. 16082 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR450_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8120</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPOffsetCorrectionStart Description Start of the offset correction phase
      within the NIT, expressed as the  number of macroticks from the start of
      cycle [Macroticks]. Remark: This  parameter maps to FlexRay Protocol 2.1
      Rev. A parameter  gOffsetCorrectionStart. Remark: Lower limit 9 for
      FlexRay Protocol 2.1  Rev A compliance. Multiplicity 1 Type
      EcucIntegerParamDef Range 7 .. 15999 Default value -ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR422_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPPayloadLengthDynMax Description Maximum payload length for dynamic
      frames [16 bit words]. Multiplicity 1 Type EcucIntegerParamDef Range 0 ..
      127 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR423_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8161</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPRateCorrectionOut Description Magnitude of the maximum permissible rate
      correction value and the  maximum drift offset between two nodes
      operating with  unsynchronized clocks for one communication cycle
      [Microticks].  Remarks: This parameter maps to FlexRay Protocol 2.1 Rev.
      A  parameter pdMaxDrift. Lower limit 3 for FlexRay Protocol 3.0
      compliance. Upper limit 1923 for FlexRay Protocol 2.1 Rev A  compliance.
      Multiplicity 1 Type EcucIntegerParamDef Range 2 .. 3846 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR424_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPSamplesPerMicrotick Description Number of samples per microtick. Remark:
      Allowed range N1SAMPLES,  N2SAMPLES for FlexRay Protocol 3.0 compliance.
      Multiplicity 1 Type EcucEnumerationParamDef Range N1SAMPLES 1 sample
      N2SAMPLES 2 samples  N4SAMPLES 4 samples ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR445_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPSecondKeySlotId Description ID of the second key slot, in which a second
      startup frame shall be sent  when operating as a coldstart node in a TT-L
      or TT-D cluster. If this  parameter is set to zero the node does not have
      a second key slot.  Remark: Set to 0 for FlexRay Protocol 2.1 Rev A
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 1023
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR446_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPTwoKeySlotMode Description Flag indicating whether node operates as a
      coldstart node in a TT-E or  TT-L cluster. If pTwoKeySlotMode is set to
      true then both  pKeySlotUsedForSync and pKeySlotUsedForStartup must also
      be set  to true. If pExternalSync is set to true then pTwoKeySlotMode
      must  also be set to true. Remark: Set to false for FlexRay Protocol 2.1
      Rev A  compliance. Multiplicity 1 Type EcucBooleanParamDef Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR426_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPWakeupChannel Description Channel used by the node to send a wakeup
      pattern. FrPWakeupChannel  must be selected from among the channels
      configured by FrPChannels. Multiplicity 1 Type EcucEnumerationParamDef
      Range FR_CHANNEL_A - FR_CHANNEL_B -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR427_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8268</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPWakeupPattern Description Number of repetitions of the wakeup symbol
      that are combined to form  a wakeup pattern when the node enters the
      POC:wakeup send state.  Remark: Lower limit 2 for FlexRay Protocol 2.1
      Rev A compliance. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 63
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR428_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPdAcceptedStartupRange Description Expanded range of measured clock
      deviation allowed for startup frames  during integration [Microticks].
      Remark: Upper limit 1875 for FlexRay  Protocol 2.1 Rev A compliance.
      Remark: Lower limit 29 for FlexRay  Protocol 3.0 compliance. Multiplicity
      1 Type EcucIntegerParamDef Range 0 .. 2743 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR429_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPdListenTimeout Description Value for the startup listen timeout and
      wakeup listen timeout. Although  this is a node local parameter, the real
      time equivalent of this value  should be the same for all nodes in the
      cluster [Microticks]. Remark:  Lower limit 1926 for FlexRay Protocol 3.0
      compliance. Upper limit  1283846 for FlexRay Protocol 2.1 Rev. A
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 1284 .. 2567692
      Default value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE
      Link time - Post-build time X VARIANT-POST-BUILD Scope / Dependency
      scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR431_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8333</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrPdMicrotick Description Duration of a microtick. Remark: Allowed range
      T12_5NS, T25NS, T50NS for  FlexRay Protocol 3.0 compliance. Multiplicity
      1 Type EcucEnumerationParamDef Range T100NS 100 ns  T12_5NS 12.5 ns
      T25NS 25 ns  T50NS 50 ns ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR432_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8353</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrAbsoluteTimer Description Specifies the absolute timer
      configuration parameters of the Fr. Configuration Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR433_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrAbsTimerIdx Description Contains the index of an absolute timer contained
      in Fr on a certain  FlexRay CC. Multiplicity 1 Type EcucIntegerParamDef
      (Symbolic Name generated for this parameter) Range 0 .. 254 Default value
      -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link time -
      Post-build time X VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR452_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8388</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrControllerDemEventParameterRefs  Container for the references
      to DemEventParameter elements which shall  be invoked using the API
      Dem_ReportErrorStatus API in case the  corresponding error occurs. The
      EventId is taken from the referenced Description  DemEventParameter's
      DemEventId value. The standardized errors are  provided in the container
      and can be extended by vendor specific error  references. Configuration
      Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR005_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8409</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrDemCtrlTestResultRef Description Reference to DEM event Id that is
      reported for FlexRay controller  hardware test failure. If this parameter
      is not configured, no event  reporting happens. Multiplicity 0..1 Type
      Reference to [ DemEventParameter ] ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR009_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8429</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrFifo  One First In First Out (FIFO) queued receive structure,
      defining the Description admittance criteria to the FIFO, and mandating
      the ability to admit  messages into the FIFO based on Message Id
      filtering criteria. Configuration Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR006_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrAdmitWithoutMessageId Description Determines whether or not frames
      received in the dynamic segment  that don't contain a message ID will be
      admitted into the FIFO. Multiplicity 1 Type EcucBooleanParamDef Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR007_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8467</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrBaseCycle Description FIFO cycle counter acceptance criteria.
      Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 63 ConfigurationClass
      Pre-compile time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR449_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrChannels Description FIFO channel admittance criteria. Multiplicity 1
      Type EcucEnumerationParamDef Range FR_CHANNEL_A Frames received on
      channel A  FR_CHANNEL_AB Frames received on channel A and  B
      FR_CHANNEL_B Frames received on channel B ConfigurationClass Pre-compile
      time X VARIANT-PRE-COMPILE  Link time - Post-build time X
      VARIANT-POST-BUILD Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR008_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8505</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrCycleRepetition Description FIFO cylce counter acceptance criteria. Valid
      values are  1,2,4,5,8,10,16,20,32,40,50,64. Remark: Values
      1,2,4,8,16,32,64 are  valid only for FlexRay Protocol 2.1 Rev A
      compliance. Multiplicity 1 Type EcucIntegerParamDef Range 1 .. 64 Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR010_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrFifoDepth Description Fifo Depth. Multiplicity 1 Type EcucIntegerParamDef
      Range 1 .. 2048 Default value -ConfigurationClass Pre-compile time X
      VARIANT-PRE-COMPILE  Link time - Post-build time X VARIANT-POST-BUILD
      Scope / Dependency scope: Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR011_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrMsgIdMask Description FIFO message identifier acceptance criteria (Mask
      filter). Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 65535 Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR012_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8562</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrMsgIdMatch Description FIFO message identifier acceptance criteria (Match
      filter). Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 65535 Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8581</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrRange Description FIFO Frame Id range acceptance criteria.
      Configuration Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR014_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrRangeMax Description Last FrameId of this range that will be accepted by
      the FIFO. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 2047 Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8616</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name FrRangeMin Description First FrameId of this range that will be accepted by
      the FIFO. Multiplicity 1 Type EcucIntegerParamDef Range 0 .. 2047 Default
      value -ConfigurationClass Pre-compile time X VARIANT-PRE-COMPILE  Link
      time - Post-build time X VARIANT-POST-BUILD Scope / Dependency scope:
      Module
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR397_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8635</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name FrMultipleConfiguration [Multi Config Container] Configuration
      Parameters
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR001_PI</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8651</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        The standardized common published parameters as required by BSW00402 in the
        General Requirements on Basic Software Modules [3] shall be published within the header file
        of this module and need to be provided in the BSW Module Description. The according module
        abbreviation can be found in the List of Basic Software Modules [1].
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>Fr.ASR40.FR650</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.5.0</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/AUTOSAR_SWS_FlexRayDriver.xml</sourcefile>
      <sourceline>8667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The version numbers of AUTOSAR Basic Software Modules shall be enumerated
      according to the following rules: - Increasing a more significant digit
      of a version number resets all less significant digits - The
      PATCH_VERSION is incremented if the module is still upwards and downwards
      compatible  (e.g. bug fixed) - The MINOR_VERSION is incremented if the
      module is still downwards compatible (e.g. new  functionality added) -
      The MAJOR_VERSION is incremented if the module is not compatible any more
      (e.g. existing API  changed)
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
          This requirement is not applicable.
          Software versioning is vendor specific.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
  </specobjects>
    <specobjects doctype="req">
    <specobject>
      <id>Fr.EB.HWBusyWaitingTimeout</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        If software performs busy waiting for a hardware event (e.g. a command completed),
        then this loop shall have a timeout counter to break the loop in order to avoid
        endless loops if the hardware is defect.
        This timeout counter value shall be configurable by configuration parameter
        HardwareAccessTimeoutLoopLimit.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>Fr.EB.BSWMDGeneration_1</id>
      <status>rejected</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    The Fr module's generator shall generate a basic software
    module description (BSWMD) based on the Fr module's
    configuration containing information on the exclusive areas
    required by the Fr module's implementation.
  &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
    This requirement is not applicable.
    The Fr module does not require any exclusive areas.
  &lt;/pre&gt;</comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>Fr.EB.BSWMDGeneration_2</id>
      <status>rejected</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    The Fr module's generator shall generate a basic software
    module description (BSWMD) based on the Fr module's
    configuration containing information on the scheduled
    MainFunctions together with the scheduling period.
  &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
    This requirement is not applicable.
    The Fr module does not have any MainFunctions.
  &lt;/pre&gt;</comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>Fr.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
    The Fr module's BSWMD shall be generated using a generator
    mode named "generate_swcd".
  &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_SCHM</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a API function that returns the error flags of the FlexRay controller.
      Service name: Fr_GetControllerErrorStatus
      Syntax: Std_ReturnType Fr_GetControllerErrorStatus(uint8 Fr_CtrlIdx, uint16* Fr_ControllerErrorStatusPtr)
      Service ID[hex]: 0x81
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
      Parameters (inout): None
      Parameters (out):
        Fr_ControllerErrorStatusPtr
            Address where the bitcoded controller status information shall be stored.
            Bit 0: CHI Error
            Bit 1: POC Error
            Bit 2: Parity Error
            Bit 3: Buffer Error
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Gets the controller status information.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetControllerErrorStatus_Error1</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>Fr_GetControllerErrorStatus_Error2</srcid><srcstatus/><internalId>998</internalId></linkedfrom><linkedfrom><srcid>Fr_GetControllerErrorStatus_Error3</srcid><srcstatus/><internalId>999</internalId></linkedfrom><linkedfrom><srcid>Fr_GetControllerErrorStatus_Error4</srcid><srcstatus/><internalId>1000</internalId></linkedfrom><linkedfrom><srcid>Fr_GetControllerErrorStatus_Error5</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetControllerErrorStatus is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetControllerErrorStatus_InvalidAccess</srcid><srcstatus/><internalId>1153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus.ApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetControllerErrorStatusApiEnable|FR_GETCONTROLLERERRORSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetControllerErrorStatus().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReadCCConfig.ApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (ReadCCConfigApiEnable|FR_READCCCONFIG_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_ReadCCConfig().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_34</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_GetControllerErrorStatus is called before the Fr was initialized successfully, the
      function Fr_GetControllerErrorStatus shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetControllerErrorStatus_Uninit</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus.InvalidCtrl</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetControllerErrorStatus shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_GetControllerErrorStatus shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetControllerErrorStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetControllerErrorStatus.NULLPTR</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetControllerErrorStatus shall check the parameter Fr_ControllerErrorStatusPtr for not
      being a NULL pointer (NULL_PTR). If Fr_ControllerErrorStatusPtr is a NULL pointer, the
      function Fr_GetControllerErrorStatus shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetControllerErrorStatus_InvalidPtr</srcid><srcstatus/><internalId>1300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Startup</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The extended IRQ Api shall support a startup completed interrupt (if available in hardware).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_Startup</srcid><srcstatus/><internalId>989</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_Startup</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_StartupPending</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.CycleStart</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The extended IRQ Api shall support a cycle start interrupt (if available in hardware).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_CycleStart</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_CycleStart</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_CycleStartPending</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.DynamicSegmentStart</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The extended IRQ Api shall support a dynamic segment start interrupt (if available in hardware).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_DynamicSegment</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_DynamicSegment</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_DynamicSegmentPending</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.NmVector</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The extended IRQ Api shall support a Nm-vector update interrupt (if available in hardware).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_NmVectorUpdatePending</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.InvalidIRQIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>
      If an invalid value for API function parameter Fr_IRQIdx is passed to any of the extended interrupt API functions:
      - Fr_EnableIRQ()
      - Fr_DisableIRQ()
      - Fr_AckIRQ()
      - Fr_GetIRQStatus()
      then the DET shall be called with error code FR_E_INV_IRQ_IDX if DET development error detection is enabled.
     </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableIRQ_InvalidIrqIdx</srcid><srcstatus/><internalId>1322</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableIRQ_InvalidIrqIdx</srcid><srcstatus/><internalId>1323</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_InvalidIrqIdx</srcid><srcstatus/><internalId>1324</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_InvalidIrqIdx</srcid><srcstatus/><internalId>1325</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a API function that enables IRQs of the FlexRay controller.
      Service name: Fr_EnableIRQ
      Syntax: Std_ReturnType Fr_EnableIRQ(uint8 Fr_CtrlIdx, uint8 Fr_IRQIdx)
      Service ID[hex]: 0x86
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
          Fr_IRQIdx
            Index of the IRQ to enable:
            0: Startup completed IRQ
            1: Cycle Start IRQ
            2: dynamic segment start IRQ.
            3: NM-Vector changed IRQ.
      Parameters (inout): None
      Parameters (out):  None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Enables extended IRQs.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableIRQ_Startup</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_CycleStart</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_DynamicSegment</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>Fr_EnableIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Enable.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_EnableIRQ is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableIRQ_InvalidAccess</srcid><srcstatus/><internalId>1148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>Fr.EB.EnableIRQ.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_EnableIRQ is called before the Fr was initialized successfully, the
      function Fr_EnableIRQ shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableIRQ_Uninit</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>Fr.EB.EnableIRQ.InvalidCtrl</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_EnableIRQ shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_EnableIRQ shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Disable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a API function that disables IRQs of the FlexRay controller.
      Service name: Fr_DisableIRQ
      Syntax: Std_ReturnType Fr_DisableIRQ(uint8 Fr_CtrlIdx, uint8 Fr_IRQIdx)
      Service ID[hex]: 0x87
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
          Fr_IRQIdx
            Index of the IRQ to disable:
            0: Startup completed IRQ
            1: Cycle Start IRQ
            2: dynamic segment start IRQ.
            3: NM-Vector changed IRQ.
      Parameters (inout): None
      Parameters (out):  None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Disables extended IRQs.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_Startup</srcid><srcstatus/><internalId>989</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableIRQ_CycleStart</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableIRQ_DynamicSegment</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>Fr_DisableIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Disable.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_StartCommunication is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_InvalidAccess</srcid><srcstatus/><internalId>1144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>Fr.EB.DisableIRQ.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>358</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_DisableIRQ is called before the Fr was initialized successfully, the
      function Fr_DisableIRQ shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_Uninit</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>Fr.EB.DisableIRQ.InvalidCtrl</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_DisableIRQ shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_DisableIRQ shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Ack</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a API function that acknowledges IRQs of the FlexRay controller.
      Service name: Fr_AckIRQ
      Syntax: Std_ReturnType Fr_AckIRQ(uint8 Fr_CtrlIdx, uint8 Fr_IRQIdx)
      Service ID[hex]: 0x88
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
          Fr_IRQIdx
            Index of the IRQ to acknowledge:
            0: Startup completed IRQ
            1: Cycle Start IRQ
            2: dynamic segment start IRQ.
            3: NM-Vector changed IRQ.
      Parameters (inout): None
      Parameters (out):  None
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Acknowledges extended IRQs.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckIRQ_Startup</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_CycleStart</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_DynamicSegment</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.Ack.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AckIRQ is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckIRQ_InvalidAccess</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckIRQ.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>434</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_AckIRQ is called before the Fr was initialized successfully, the
      function Fr_AckIRQ shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckIRQ_Uninit</srcid><srcstatus/><internalId>1218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckIRQ.InvalidCtrl</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_AckIRQ shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_AckIRQ shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.GetStatus</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a API function that reads the IRQs pending status of the FlexRay controller.
      Service name: Fr_GetIRQStatus
      Syntax: Std_ReturnType Fr_GetIRQStatus(uint8 Fr_CtrlIdx, uint8 Fr_IRQIdx, boolean* Fr_IRQStatusPtr)
      Service ID[hex]: 0x89
      Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device
      Parameters (in):
          Fr_CtrlIdx
            Index of FlexRay CC within the context of the FlexRay Driver.
          Fr_IRQIdx
            Index of the IRQ to acknowledge:
            0: Startup completed IRQ
            1: Cycle Start IRQ
            2: dynamic segment start IRQ.
            3: NM-Vector changed IRQ.
      Parameters (inout): None
      Parameters (out):
        Fr_IRQStatusPtr
            Address to write the IRQs pending status to.
            TRUE: IRQ is pending.
            FALSE: IRQ is not pending.
      Return value: Std_ReturnType
        E_OK: API call finished successfully.
        E_NOT_OK: API call aborted due to errors.
      Description: Reads the extended IRQs pending status.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetIRQStatus_StartupPending</srcid><srcstatus/><internalId>1072</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_CycleStartPending</srcid><srcstatus/><internalId>1073</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_DynamicSegmentPending</srcid><srcstatus/><internalId>1074</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_NmVectorUpdatePending</srcid><srcstatus/><internalId>1075</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_StartupNotPending</srcid><srcstatus/><internalId>1076</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_CycleStartNotPending</srcid><srcstatus/><internalId>1077</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_DynamicSegmentNotPending</srcid><srcstatus/><internalId>1078</internalId></linkedfrom><linkedfrom><srcid>Fr_GetIRQStatus_NmVectorUpdateNotPending</srcid><srcstatus/><internalId>1079</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.GetStatus.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetIRQStatus is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetIRQStatus_InvalidAccess</srcid><srcstatus/><internalId>1155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExtendedIRQ.ApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>514</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (ExtIRQServicesApiEnable|FR_GEXTIRQSERVICES_API_ENABLE) which allows
        inclusion/exclusion of the API functions Fr_EnableIRQ(), Fr_DisableIRQ(),
        Fr_AckIRQ() and Fr_GetIRQStatus().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetIRQStatus.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_GetIRQStatus is called before the Fr was initialized successfully, the
      function Fr_GetIRQStatus shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetIRQStatus_Uninit</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetIRQStatus.InvalidCtrl</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>541</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetIRQStatus shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_GetIRQStatus shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetIRQStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetIRQStatus.NULLPTR</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>557</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetIRQStatus shall check the parameter Fr_IRQStatusPtr for not
      being a NULL pointer (NULL_PTR). If Fr_IRQStatusPtr is a NULL pointer, the
      function Fr_GetIRQStatus shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetIRQStatus_InvalidPtr</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExactRxCycleMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which a maps Rx-LPdus of the same
        slot with different cycles filters to a single message buffer if a new cycle filter
        can be derived which maps exactly to the set of LPdus covered.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExactRxCycleMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>586</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which disables the message buffer optimization for
        exact Rx cycle sets.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1157</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExactTxCycleMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which a maps Tx-LPdus of the same
        slot with different cycles filters to a single message buffer if a new cycle filter
        can be derived which maps exactly to the set of LPdus covered.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>Fr.EB.ExactTxCycleMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>609</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which disables the message buffer optimization for
        exact Tx cycle sets.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1200</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>Fr.EB.IncompleteRxCycleMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which maps Rx-LPdus of the same
        slot with different cycles filters to a single message buffer.
        The API function Fr_ReceiveRxsLPdu() filters out LPdus which are received in a wrong cycle
        (not matching the original cycles).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>Fr.EB.IncompleteRxCycleMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which disables the message buffer optimization for
        incomplete Rx cycle sets.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1243</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>Fr.EB.IncompleteTxCycleMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which a maps Tx-LPdus of the same
        slot with different cycles filters to a single message buffer.
        This optimization is performed only for the static FlexRay segment.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>Fr.EB.IncompleteTxCycleMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which disables the message buffer optimization for
        incomplete Tx cycle sets.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1288</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>Fr.EB.DynamicRxReconfigMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which is able to map Rx-LPdus in the
        dynamic FlexRay segment of different slots to the same message buffer by considering the
        availability of PREPARE_LPDU ComOps for the related Rx-LPdus.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>Fr.EB.DynamicRxReconfigMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>679</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter (DynamicRxReconfigMsgBufOptEnable) which disables
        the message buffer reconfiguration optimization for dynamic FlexRay segment Rx-Slots.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1374</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>Fr.EB.DynamicGuaranteedTxReconfigMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which is able to map Tx-LPdus in an
        guaranteed dynamic FlexRay segment of different slots to the same message buffer by
        considering the availability of PREPARE_LPDU ComOps for the related Tx-LPdus.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>Fr.EB.DynamicGuaranteedTxReconfigMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>702</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter (DynamicGuaranteedTxReconfigMsgBufOptEnable) which
        disables the message buffer reconfiguration optimization for guaranteed dynamic FlexRay
        segment Tx-Slots.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1415</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>Fr.EB.TxConfirmationReconfigMsgBufOpt</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a message buffer assignment optimization which is able to map Tx-LPdus which
        require a TxConfirmation to the same message buffer by considering the availability of
        PREPARE_LPDU ComOps for the related Tx-LPdus.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>Fr.EB.TxConfirmationReconfigMsgBufOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>726</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter (TxConfirmMsgBufOptEnable) which disables the
        message buffer reconfiguration optimization for Tx-LPdus which require a TxConfirmation.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1458</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>Fr.EB.MsgBufRuntimeOpt.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>737</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which determines whether the message buffer
        reconfiguration optimization algorithm shall prefer FrameTriggerings with less or with
        high occurence.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/Fr_EBParameters.xdm.m4_1333</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckInterruptValidation</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be interrupt validation for the Fr_1_ERAY_AckAbsoluteTimerIRQ, Fr_1_ERAY_AckIRQ and
        Fr_1_ERAY_AckRelativeTimerIRQ api functions. The interrupt validation shall implement the
        workaround as proposed by the infineon FlexRay_AI.H011 Errata description, which states:

        "After clearing the flag, the software shall read the flag and repeat clearing until
        the flag reads zero."
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ERAY_ImpTest_Ack_Interrupt_Validation</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>923</internalId></linkedfrom><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_NOT_OK</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_NOT_OK</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_Startup</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_CycleStart</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_DynamicSegment</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_NOT_OK</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckInterruptValidation.Enable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>764</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a configuration parameter which disables the ack interrupt validation
        implementation.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ERAY_ImpTest_Ack_Interrupt_Validation</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckInterruptValidationCount</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>775</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a retry counter to ensure not having an endless loop in the
      Fr.EB.AckInterruptValidation implementation.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ERAY_ImpTest_Ack_Interrupt_Validation</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_OK</srcid><srcstatus/><internalId>923</internalId></linkedfrom><linkedfrom><srcid>Fr_AckAbsoluteTimerIRQ_NOT_OK</srcid><srcstatus/><internalId>924</internalId></linkedfrom><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_NOT_OK</srcid><srcstatus/><internalId>926</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_Startup</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_CycleStart</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_DynamicSegment</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_NmVectorUpdate</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>Fr_AckIRQ_NOT_OK</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>Fr.EB.AckInterruptValidationCount.Value</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a configuration paramerter which sets the maximum amount the interrupt
      validation loop in the Fr.EB.AckInterruptValidation implementation, is iterated.
      When set it shall at least be 1 and not more than 255.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ERAY_ImpTest_Ack_Interrupt_Validation</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>Fr.EB.SingleCtrlOptEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (SingleCtrlOptEnable|FR_SINGLE_CTRL_OPT_ENABLE) which
        optimizes code for usage of the module with a single FlexRay controller only.
        Runtime indexing can be removed when accessing data structures designed for multiple
        FlexRay controllers.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>Fr.EB.FrIfIntegrationEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>812</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrIfIntegrationEnable|FR_FRIFINTEGRATION_ENABLE) which
        renames all API functions from Fr_* to FrIf_* which have the same signature as their releated FrIf function.
        Thus if only a single Fr is used, those functions can be removed from FrIf eliminating the FrIf wrapper functions.
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>Fr.EB.SetExtSyncApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (SetExtSyncApiEnable|FR_SETEXTSYNC_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_SetExtSync().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>Fr.EB.MtsApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>836</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (MtsApiEnable|FR_MTS_API_ENABLE) which allows
        inclusion/exclusion of the API functions Fr_SendMTS(), Fr_CheckMTS() and Fr_StopMTS().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>Fr.EB.WakeupApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>847</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (WakeupApiEnable|FR_WAKEUP_API_ENABLE) which allows
        inclusion/exclusion of the API functions Fr_SendWUP() and Fr_SetWakeupChannel().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>Fr.EB.PrepareLpduApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (PrepareLpduApiEnable|FR_PREPARELPDU_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_PrepareLPdu().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetIrqStatusApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (GetIrqStatusApiEnable|FR_GETIRQSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API functions Fr_GetAbsoluteTimerIRQStatus() and Fr_GetRelativeTimerIRQStatus().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>Fr.EB.DisableIrqApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>880</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (DisableIrqApiEnable|FR_DISABLEIRQ_API_ENABLE) which allows
        inclusion/exclusion of the API functions Fr_DisableAbsoluteTimerIRQ() and Fr_DisableRelativeTimerIRQStatus().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetChannelStatusApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>891</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetChannelStatusApiEnable|FR_GETCHANNELSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetChannelStatus().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>Fr.EB.AllSlotsApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>902</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (AllSlotsApiEnable|FR_ALLSLOTS_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_AllSlots().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReconfigLPduApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (ReconfigLPduApiEnable|FR_RECONFIGLPDU_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_ReconfigLPdu().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>Fr.EB.DisableLPduApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>924</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (DisableLPduApiEnable|FR_DISABLELPDU_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_DisableLPdu().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>Fr.EB.AllowColdstartApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (AllowColdstartApiEnable|FR_ALLOWCOLDSTART_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_AllowColdstart().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetWakeupRxStatusApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>946</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetWakeupRxStatusApiEnable|FR_GETWAKEUPRXSTATUS_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetWakeupRxStatus().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetClockCorrectionApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetClockCorrectionApiEnable|FR_GETCLOCKCORRECTION_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetClockCorrection().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetSyncFrameListApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>968</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (GetSyncFrameListApiEnable|FR_GETSYNCFRAMELIST_API_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetSyncFrameList().
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>Fr.EB.GetNmVectorApiEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time parameter (GetNmVectorApiEnable|FR_NMVECTOR_ENABLE) which allows
        inclusion/exclusion of the API function Fr_GetNmVector().
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>Fr.EB.RxFIFOEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>990</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay in sync with variant Autosar_MFR4300.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>Fr.EB.SingleChannelMode</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay in sync with variant Autosar_MFR4300.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>Fr.EB.MTSTransmitChannel</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1010</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      There shall be a configuration parameter (MTSTransmitChannel) which allows
      configuration on which channel the MTS symbol is transmitted (A, B, AB).
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_Normal</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>Fr.EB.FrDemCtrlTestResultReportToDem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1021</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time parameter (FrDemCtrlTestResultReportToDem|FR_PROD_ERR_HANDLING_CTRL_TEST) which
        selects the handling of the production error FrDemCtrlTestResult:
        - DEM: The error is reported to the Diagnostics Event Manager (Dem).
        - DET: The error is reported to the Development Error Tracer (Det) if enabled.
        - DISABLE: The error is not reported at all.
    </description>
      <comment>&lt;pre&gt;
    &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>Fr_ComTest_3</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>Fr_ComTest_NonLegSymbolicNames</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>Fr.EB.FrDemCtrlTestResultReportToDemDetErrorId</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Defines the error Id which is reported towards the Det in case the production error FrDemCtrlTestResult
        is reported to Det. The macro shall be named FR_E_DEMTODET_CTRL_TEST.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
    &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>Fr_ComTest_3</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>Fr_ComTest_NonLegSymbolicNames</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReportToDetEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1050</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        There shall be a pre-compile-time config parameter FrGeneral/VendorSpecific/ReportToDetEnable
        (FR_REPORT_TO_DET_ENABLE), which enables reporting to DET if set to 'true' and
        disables reporting to DET if set to 'false'.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>Fr.EB.DynamicPayloadLengthEnable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1062</sourceline>
      <version>1</version>
      <description>
        There shall be a pre-compile-time config parameter FrGeneral/VendorSpecific/DynamicPayloadLengthEnable
        (FR_DYNAMIC_PAYLOAD_LENGTH_ENABLE), which enables usage of dynamic LPdu length in the dynamic FlexRay segment if set to 'true'
        and disables dynamic LPdu length if set to 'false'.
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_1B</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_2B</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_3B</srcid><srcstatus/><internalId>1068</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_32B</srcid><srcstatus/><internalId>1069</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>Fr.EB.PayloadPadding</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <description>
      There shall be a pre-compile-time configuration parameter FrGeneral/VendorSpecific/PayloadPaddingEnable
      (FR_PAYLOAD_PADDING_ENABLE) which if set to 'true' enables insertion of padding bytes at unused frame areas.
      The value used for padding is specified in the pre-compile-time configuration parameter PayloadPaddingU8Value
      (FR_PAYLOAD_PADDING_U8_VALUE).
      If FrGeneral/VendorSpecific/PayloadPaddingEnable is set to 'false', the unused frame areas might contain random data.

    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_1B</srcid><srcstatus/><internalId>1062</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Reconfigurable_Static_Payload_2B</srcid><srcstatus/><internalId>1064</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Dynamic_Reconfigurable_Static_Payload_3B</srcid><srcstatus/><internalId>1065</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_1B</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_2B</srcid><srcstatus/><internalId>1067</internalId></linkedfrom><linkedfrom><srcid>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_3B</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>Fr.EB.MaxJobExecutionTime</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <description>
      There shall be a post-build-time configuration parameter FrGeneral/VendorSpecific/MaxJobExecutionTime
      which specifies the maximum execution time of a single job execution. This configuration parameter is an input in the
      MCG only in order to perform the message buffer optimization algorithms.
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>Fr.EB.NumberOfMessageBuffers</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <description>
      There shall be a post-build-time configuration parameter FrGeneral/FrController/VendorSpecific/NumberOfMessageBuffers
      which specifies the available number of message buffers a FlexRay controller owns. This configuration parameter is an input in the
      MCG only in order to perform the message buffer optimization algorithms.
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>Fr.EB.MessageRamSize</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <description>
      There shall be a post-build-time configuration parameter FrGeneral/FrController/VendorSpecific/MessageRamSize
      which specifies the available number of message RAM a FlexRay controller owns. This configuration parameter is an input in the
      MCG only in order to perform the message buffer optimization algorithms.
    </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_Empty</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxFIFO_CHA_Received</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxFIFO_CHB_Received</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxFIFO_FifoOverrun</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidFifoIdxCfg</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidAccess</srcid><srcstatus/><internalId>1117</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_Uninit</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidCtrlIdx</srcid><srcstatus/><internalId>1121</internalId></linkedfrom><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1131</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvFIFOIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1165</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidFifoIdx</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvFrameIdPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_FrameId</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvChannelIdPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1185</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_Channel</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvCyclePtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_Cycle</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvLSduPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_LSdu</srcid><srcstatus/><internalId>1128</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvLPduStatusPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_LPduStatus</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>Fr.EB.ReceiveRxFIFO.InvLSduLengthPtr</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ReceiveRxFIFO_InvalidPtr_LSduLength</srcid><srcstatus/><internalId>1130</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>Fr.EB.RxFIFOMode</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>Fr.EB.FlushRxFIFO</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_FlushRxFIFO_Empty</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>Fr_FlushRxFIFO_CHA</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>Fr_FlushRxFIFO_CHA_DepthReached</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>Fr_FlushRxFIFO_CHB_DepthReached</srcid><srcstatus/><internalId>1111</internalId></linkedfrom><linkedfrom><srcid>Fr_FlushRxFIFO_InvalidFifoIdxCfg</srcid><srcstatus/><internalId>1113</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>Fr.EB.FlushRxFIFO.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1255</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_FlushRxFIFO_InvalidAccess</srcid><srcstatus/><internalId>1118</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>Fr.EB.FlushRxFIFO.Uninit</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_FlushRxFIFO_Uninit</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>Fr.EB.FlushRxFIFO.InvCtrlIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1275</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_FlushRxFIFO_InvalidCtrlIdx</srcid><srcstatus/><internalId>1122</internalId></linkedfrom><linkedfrom><srcid>Fr_FlushRxFIFO_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1132</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>Fr.EB.FlushRxFIFO.InvFIFOIdx</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1285</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
        Dummy requirement to stay sync with MFR4300 requirements
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_FlushRxFIFO_InvalidFifoIdx</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>Fr.EB.Fr_ControllerInit.Dem</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1295</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_ControllerInit is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ControllerInit_InvalidAccess</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1312</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_SendMTS  Syntax: Std_ReturnType Fr_SendMTS(  uint8 Fr_CtrlIdx,
       Fr_ChannelType Fr_ChnlIdx  )  Service ID[hex]: 0x96  Sync/Async:
      Asynchronous  Reentrancy: Non Reentrant for the same device  Fr_CtrlIdx
      Index of FlexRay CC within the context of the FlexRay Driver.  Fr_ChnlIdx
      Index of FlexRay channel within the context of the FlexRay CC  Parameters
      (in):  Fr_CtrlIdx. Valid values are FR_CHANNEL_A and  FR_CHANNEL_B.
      Parameters None  (inout):  Parameters (out): None  Std_ReturnType E_OK:
      API call finished successfully.  Return value:  E_NOT_OK: API call
      aborted due to errors.  Description: Triggers a MTS.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_NormalActiveChA</srcid><srcstatus/><internalId>1022</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_NormalPassiveChB</srcid><srcstatus/><internalId>1023</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_BusyCheckFail</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_AcceptCheckFail</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_InvPOCState</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_DisabledChannelA</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_DisabledChannelB</srcid><srcstatus/><internalId>1028</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_Freeze</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SendMTS shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:  1. Trigger a Media test symbol transmission on FlexRay
      channel Fr_ChnlIdx.  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_NormalActiveChA</srcid><srcstatus/><internalId>1022</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_NormalPassiveChB</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SendMTS is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_BusyCheckFail</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_AcceptCheckFail</srcid><srcstatus/><internalId>1025</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_InvalidAccess</srcid><srcstatus/><internalId>1175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1366</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_SendMTS is called before the Fr module was initialized successfully,
      the function Fr_SendMTS shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_Uninit</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR155</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1385</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SendMTS shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_SendMTS shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_InvalidCtrlIdx</srcid><srcstatus/><internalId>1247</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_InvalidCtrlCfgIdx</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SendMTS shall check the parameter Fr_ChnlIdx for being valid. If
      Fr_ChnlIdx is invalid, the function Fr_SendMTS shall raise the
      development error FR_E_INV_CHNL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_DisabledChannelA</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_DisabledChannelB</srcid><srcstatus/><internalId>1028</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_InvalidChnlIdx</srcid><srcstatus/><internalId>1304</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1423</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SendMTS shall check the CC Fr_CtrlIdx for being synchronized to the
      FlexRay global time. If the CC Fr_CtrlIdx is not synchronized to the
      FlexRay global time, the function Fr_SendMTS shall raise the development
      error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SendMTS_InvPOCState</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>Fr_SendMTS_Freeze</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_StopMTS  Syntax: Std_ReturnType Fr_StopMTS(  uint8 Fr_CtrlIdx,
       Fr_ChannelType Fr_ChnlIdx  )  Service ID[hex]: 0x97  Sync/Async:
      Synchronous  Reentrancy: Non Reentrant for the same device  Fr_CtrlIdx
      Index of FlexRay CC within the context of the FlexRay Driver.  Fr_ChnlIdx
      Index of FlexRay channel within the context of the FlexRay CC  Parameters
      (in):  Fr_CtrlIdx. Valid values are FR_CHANNEL_A and  FR_CHANNEL_B.
      Parameters None  (inout):  Parameters (out): None  Std_ReturnType E_OK:
      API call finished successfully.  Return value:  E_NOT_OK: API call
      aborted due to errors.  Description: Stops the periodic transmission of
      MTS symbols.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_ChannelA</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>Fr_StopMTS_ChannelB</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      This API function shall perform the following tasks on FlexRay CC Fr_CtrIdx:  1.
      Stop the periodic transmission of MTS symbols.  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_ChannelA</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>Fr_StopMTS_ChannelB</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1479</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_StopMTS is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_InvalidAccess</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1497</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_StopMTS is called before the Fr module was initialized successfully,
      the function Fr_StopMTS shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_Uninit</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_StopMTS shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_StopMTS shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_InvalidCtrlIdx</srcid><srcstatus/><internalId>1248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_StopMTS shall check the parameter Fr_ChnlIdx for being valid. If
      Fr_ChnlIdx is invalid, the function Fr_StopMTS shall raise the
      development error FR_E_INV_CHNL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_StopMTS_InvalidChnlIdx</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_CheckMTS  Syntax: Std_ReturnType Fr_CheckMTS(  uint8
      Fr_CtrlIdx,  Fr_ChannelType Fr_ChnlIdx,  Fr_MTSStatusType*
      Fr_MTSStatusPtr  )  Service ID[hex]: 0x98  Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device  Fr_CtrlIdx Index of
      FlexRay CC within the context of the FlexRay Driver.  Fr_ChnlIdx Index of
      FlexRay channel within the context of the FlexRay CC  Parameters (in):
      Fr_CtrlIdx. Valid values are FR_CHANNEL_A and  FR_CHANNEL_B.  Parameters
      None  (inout):  Parameters (out): Fr_MTSStatusPtr Address the output
      value is stored to.  Std_ReturnType E_OK: API call finished successfully.
       Return value:  E_NOT_OK: API call aborted due to errors.  Description:
      Checks the MTS.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_MTS_ChA</srcid><srcstatus/><internalId>947</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckMTS_MTS_ChB</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1577</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CheckMTS shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:  1. Read the symbol window status and MTS receive status of
      the last symbol  window and write it to output parameter Fr_MTSStatusPtr.
       2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_MTS_ChA</srcid><srcstatus/><internalId>947</internalId></linkedfrom><linkedfrom><srcid>Fr_CheckMTS_MTS_ChB</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1593</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_CheckMTS is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_InvalidAccess</srcid><srcstatus/><internalId>1172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_CheckMTS is called before the Fr was initialized successfully, the
      function Fr_CheckMTS shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_Uninit</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1630</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_CheckMTS shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_CheckMTS shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_InvalidCtrlIdx</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1649</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_CheckMTS shall check the parameter Fr_ChnlIdx for being valid. If
      Fr_ChnlIdx is invalid, the function Fr_CheckMTS shall raise the
      development error FR_E_INV_CHNL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_InvalidChnlIdx</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR491</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1668</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_CheckMTS shall check the parameter Fr_MTSStatusPtr for not being a
      NULL pointer (NULL_PTR). If Fr_MTSStatusPtr is a NULL pointer, the
      function Fr_CheckMTS shall raise the development error FR_E_INV_POINTER
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CheckMTS_InvalidPtr</srcid><srcstatus/><internalId>1297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1688</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_SetExtSync  Syntax: Std_ReturnType Fr_SetExtSync(  uint8
      Fr_CtrlIdx,  Fr_OffsetCorrectionType Fr_Offset,  Fr_RateCorrectionType
      Fr_Rate  )  Service ID[hex]: 0x99  Sync/Async: Asynchronous  Reentrancy:
      Non Reentrant for the same device  Fr_CtrlIdx Index of FlexRay CC within
      the context of the FlexRay Driver.  Parameters (in): Fr_Offset Determines
      the kind of offset correction.  Fr_Rate Determines the kind of rate
      correction.  Parameters None  (inout):  Parameters (out): None
      Std_ReturnType E_OK: API call finished successfully.  Return value:
      E_NOT_OK: API call aborted due to errors.  Description: Adjusts the
      global time of a FlexRay CC to an external clock source.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_Increase</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>Fr_SetExtSync_Decrease</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>Fr_SetExtSync_NoChange</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>Fr_SetExtSync_Halt</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1710</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetExtSync shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:  1. Depending on the parameters Fr_Offset and Fr_Rate, the
      external clock  correction values are added/subtracted/ignored to the
      internal clock correction  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_Increase</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>Fr_SetExtSync_Decrease</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>Fr_SetExtSync_NoChange</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1726</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SetExtSync is able to and detects a hardware error while
      performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_InvalidAccess</srcid><srcstatus/><internalId>1170</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_SetExtSync is called before the Fr was initialized successfully, the
      function Fr_SetExtSync shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_Uninit</srcid><srcstatus/><internalId>1207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1761</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetExtSync shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_SetExtSync shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_InvalidCtrlIdx</srcid><srcstatus/><internalId>1250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1780</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetExtSync shall check the CC Fr_CtrlIdx for being synchronized to the
      FlexRay global time. If the CC Fr_CtrlIdx is not synchronized to the
      FlexRay global time, the function Fr_SetExtSync shall raise the
      development error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetExtSync_Halt</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1800</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_GetSyncState  Syntax: Std_ReturnType Fr_GetSyncState(  uint8
      Fr_CtrlIdx,  Fr_SyncStateType* Fr_SyncStatePtr  )  Service ID[hex]: 0x9A
      Sync/Async: Synchronous  Reentrancy: Non Reentrant for the same device
      Parameters (in): Fr_CtrlIdx Index of FlexRay CC within the context of the
      FlexRay Driver.  Parameters None  (inout):  Parameters (out):
      Fr_SyncStatePtr Address the output value is stored to.  Std_ReturnType
      E_OK: API call finished successfully.  Return value:  E_NOT_OK: API call
      aborted due to errors.  Description: Gets the sync state.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_Async</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_Async_2</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_Sync</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR212</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1820</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetSyncState shall perform the following tasks on FlexRay CC
      Fr_CtrIdx:  1. Evaluate whether the CC is synchronized to the global
      FlexRay time and write  the result to parameter Fr_SyncStatePtr.  2.
      Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_Async</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_Async_2</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>Fr_GetSyncState_Sync</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR211</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1836</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetSyncState is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_InvalidAccess</srcid><srcstatus/><internalId>1159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_GetSyncState is called before the Fr was initialized successfully, the
      function Fr_GetSyncState shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_Uninit</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetSyncState shall check the parameter Fr_CtrlIdx for being valid. If
      Fr_CtrlIdx is invalid, the function Fr_GetSyncState shall raise the
      development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_InvalidCtrlIdx</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1890</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetSyncState shall check the parameter Fr_SyncStatePtr for not being a
      NULL pointer (NULL_PTR). If Fr_SyncStatePtr is a NULL pointer, the
      function Fr_GetSyncState shall raise the development error
      FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetSyncState_InvalidPtr</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_SetRelativeTimer  Syntax: Std_ReturnType Fr_SetRelativeTimer(
      uint8 Fr_RelTimerIdx,  uint16 Fr_Offset  )  Service ID[hex]: 0x90
      Sync/Async: Synchronous  Reentrancy: Non Reentrant for the same device
      Fr_CtrlIdx Index of FlexRay CC within the context of the FlexRay Driver.
      Fr_RelTimerIdx Index of relative timer within the context of the FlexRay
      CC.  Parameters (in):  Fr_Offset Relative offset from time of service
      invocation the timer shall  elapse at in units of macrotick  Parameters
      None  (inout):  Parameters (out): None  Std_ReturnType E_OK: API call
      finished successfully.  Return value:  E_NOT_OK: API call aborted due to
      errors.  Description: Sets the FlexRay timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_NormalActive</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_NormalPassive</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_Halt</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_Halt1</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1932</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetRelativeTimer shall perform the following tasks:  1. Program
      the relative FlexRay timer Fr_RelTimerIdx according to the  parameter
      Fr_Offset.  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_NormalActive</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_NormalPassive</srcid><srcstatus/><internalId>967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR281</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1947</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetRelativeTimer shall ensure that the timer was programmed
      successfully, is up and running at the moment of timer programming
      (synchronized CC) - otherwise E_NOT_OK shall be returned.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_NormalActive</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_NormalPassive</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_Halt</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR282</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1962</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_SetRelativeTimer shall be pre compile time configurable On/Off
      by the configuration parameter: FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR279</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_SetRelativeTimer is able to and detects a hardware
      error while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_InvalidAccess</srcid><srcstatus/><internalId>1166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>1994</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_SetRelativeTimer is called before the Fr was initialized successfully,
      the function Fr_SetRelativeTimer shall raise the development error
      FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_Uninit</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR276</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2013</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetRelativeTimer shall check the parameter Fr_CtrlIdx for being valid.
      If Fr_CtrlIdx is invalid, the function Fr_SetRelativeTimer shall raise
      the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_InvalidCtrlIdx</srcid><srcstatus/><internalId>1252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2032</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetRelativeTimer shall check the parameter Fr_RelTimerIdx for being
      valid. If Fr_RelTimerIdx is invalid, the function Fr_SetRelativeTimer
      shall raise the development error FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_InvalidTimerIdx</srcid><srcstatus/><internalId>1270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2051</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetRelativeTimer shall check the parameter Fr_Offset for being valid.
      If Fr_Offset is invalid, the function Fr_SetRelativeTimer shall raise the
      development error FR_E_INV_OFFSET and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_InvalidOffset</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR489</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR437</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2070</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_SetRelativeTimer shall check the CC Fr_CtrlIdx for being synchronized
      to the FlexRay global time. If the CC Fr_CtrlIdx is not synchronized to
      the FlexRay global time, the function Fr_SetRelativeTimer shall raise the
      development error FR_E_INV_POCSTATE and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_SetRelativeTimer_Halt</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_Halt1</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>Fr_SetRelativeTimer_InvalidState</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR495</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2090</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_CancelRelativeTimer  Syntax: Std_ReturnType
      Fr_CancelRelativeTimer(  uint8 Fr_CtrlIdx,  uint8 Fr_RelTimerIdx  )
      Service ID[hex]: 0x91  Sync/Async: Synchronous  Reentrancy: Non Reentrant
      for the same device  Fr_CtrlIdx Index of FlexRay CC within the context of
      the FlexRay Driver.  Parameters (in):  Fr_RelTimerIdx Index of relative
      timer within the context of the FlexRay CC.  Parameters None  (inout):
      Parameters (out): None  Std_ReturnType E_OK: API call finished
      successfully.  Return value:  E_NOT_OK: API call aborted due to errors.
      Description: Stops a relative timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_OK</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR292</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2111</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CancelRelativeTimer shall perform the following tasks:  1. Stop
      the relative timer Fr_RelTimerIdx.  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_OK</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR293</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_CancelRelativeTimer shall be pre compile time configurable
      On/Off by the configuration parameter: FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR291</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_CancelRelativeTimer is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_InvalidAccess</srcid><srcstatus/><internalId>1141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_CancelRelativeTimer is called before the Fr was initialized
      successfully, the function Fr_CancelRelativeTimer shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_Uninit</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR289</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_CancelRelativeTimer shall check the parameter Fr_CtrlIdx for being
      valid. If Fr_CtrlIdx is invalid, the function Fr_CancelRelativeTimer
      shall raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_InvalidCtrlIdx</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR290</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2195</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_CancelRelativeTimer shall check the parameter Fr_RelTimerIdx for being
      valid. If Fr_RelTimerIdx is invalid, the function Fr_CancelRelativeTimer
      shall raise the development error FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_CancelRelativeTimer_InvalidTimerIdx</srcid><srcstatus/><internalId>1271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2214</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_EnableRelativeTimerIRQ  Syntax: Std_ReturnType
      Fr_EnableRelativeTimerIRQ(  uint8 Fr_CtrlIdx,  uint8 Fr_RelTimerIdx  )
      Service ID[hex]: 0x92  Sync/Async: Synchronous  Reentrancy: Non Reentrant
      for the same device  Fr_CtrlIdx Index of FlexRay CC within the context of
      the FlexRay Driver.  Parameters (in):  Fr_RelTimerIdx Index of relative
      timer within the context of the FlexRay CC.  Parameters None  (inout):
      Parameters (out): None  Std_ReturnType E_OK: API call finished
      successfully.  Return value:  E_NOT_OK: API call aborted due to errors.
      Description: Enables the interrupt line of a relative timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR303</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_EnableRelativeTimerIRQ shall perform the following tasks:  1.
      Enable the interrupt line related to timer Fr_RelTimerIdx.  2. Return
      E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR304</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2250</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_EnableRelativeTimerIRQ shall be pre compile time
      configurable On/Off by the configuration parameter:
      FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR302</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_EnableRelativeTimerIRQ is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR299</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_EnableRelativeTimerIRQ is called before the Fr was initialized
      successfully, the function Fr_EnableRelativeTimerIRQ shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_Uninit</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR300</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_EnableRelativeTimerIRQ shall check the parameter Fr_CtrlIdx for being
      valid. If Fr_CtrlIdx is invalid, the function Fr_EnableRelativeTimerIRQ
      shall raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR301</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2321</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_EnableRelativeTimerIRQ shall check the parameter Fr_RelTimerIdx for
      being valid. If Fr_RelTimerIdx is invalid, the function
      Fr_EnableRelativeTimerIRQ shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_EnableRelativeTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2341</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: Fr_AckRelativeTimerIRQ  Syntax: Std_ReturnType
      Fr_AckRelativeTimerIRQ(  uint8 Fr_CtrlIdx,  uint8 Fr_RelTimerIdx  )
      Service ID[hex]: 0x93  Sync/Async: Synchronous
      Reentrancy: Non Reentrant for the same device  Fr_CtrlIdx Index of
      FlexRay CC within the context of the FlexRay Driver.  Parameters (in):
      Fr_RelTimerIdx Index of relative timer within the context of the FlexRay
      CC.  Parameters None  (inout):  Parameters (out): None  Std_ReturnType
      E_OK: API call finished successfully.  Return value:  E_NOT_OK: API call
      aborted due to errors.  Description: Resets the interrupt condition of a
      releative timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR314</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AckRelativeTimerIRQ shall perform the following tasks:  1. Reset
      the interrupt condition of relative timer Fr_RelTimerIdx.  2. Return
      E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR315</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2378</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_AckRelativeTimerIRQ shall be pre compile time configurable
      On/Off by the configuration parameter: FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_AckRelativeTimerIRQ is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR310</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2410</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_AckRelativeTimerIRQ is called before the Fr was initialized
      successfully, the function Fr_AckRelativeTimerIRQ shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_Uninit</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR311</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2429</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_AckRelativeTimerIRQ shall check the parameter Fr_CtrlIdx for being
      valid. If Fr_CtrlIdx is invalid, the function Fr_AckRelativeTimerIRQ
      shall raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR312</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2448</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_AckRelativeTimerIRQ shall check the parameter Fr_RelTimerIdx for being
      valid. If Fr_RelTimerIdx is invalid, the function Fr_AckRelativeTimerIRQ
      shall raise the development error FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_AckRelativeTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2467</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_DisableRelativeTimerIRQ  Syntax: Std_ReturnType
      Fr_DisableRelativeTimerIRQ(  uint8 Fr_CtrlIdx,  uint8 Fr_RelTimerIdx  )
      Service ID[hex]: 0x94  Sync/Async: Synchronous  Reentrancy: Non Reentrant
      for the same device  Parameters (in): Fr_CtrlIdx Index of FlexRay CC
      within the context of the FlexRay Driver.  Fr_RelTimerIdx Index of
      relative timer within the context of the FlexRay CC.  Parameters None
      (inout):  Parameters (out): None  Std_ReturnType E_OK: API call finished
      successfully.  Return value:  E_NOT_OK: API call aborted due to errors.
      Description: Disables the interrupt line of a timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR325</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2488</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_DisableRelativeTimerIRQ shall perform the following tasks:  1.
      Disable the interrupt line related to relative timer Fr_RelTimerIdx.  2.
      Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_OK</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR326</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2503</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_DisableRelativeTimerIRQ shall be pre compile time configurable
      On/Off by the configuration parameter: FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR324</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2517</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_DisableRelativeTimerIRQ is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_InvalidAccess</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR321</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_DisableRelativeTimerIRQ is called before the Fr was initialized
      successfully, the function Fr_DisableRelativeTimerIRQ shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_Uninit</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_DisableRelativeTimerIRQ shall check the parameter Fr_CtrlIdx for being
      valid. If Fr_CtrlIdx is invalid, the function Fr_DisableRelativeTimerIRQ
      shall raise the development error FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_InvalidCtrlIdx</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR323</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2573</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_DisableRelativeTimerIRQ shall check the parameter Fr_RelTimerIdx for
      being valid. If Fr_RelTimerIdx is invalid, the function
      Fr_DisableRelativeTimerIRQ shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_DisableRelativeTimerIRQ_InvalidTimerIdx</srcid><srcstatus/><internalId>1274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2593</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
       Service name: Fr_GetRelativeTimerIRQStatus  Syntax: Std_ReturnType
      Fr_GetRelativeTimerIRQStatus(  uint8 Fr_CtrlIdx,  uint8 Fr_RelTimerIdx,
      )  Service ID[hex]: 0x95  Sync/Async: Synchronous  Reentrancy: Non
      Reentrant for the same device  Fr_CtrlIdx Index of FlexRay CC within the
      context of the FlexRay Driver.  Parameters (in): Fr_RelTimerIdx Index of
      relative timer within the context of the FlexRay CC.  Fr_IRQStatusPtr
      Address the output value is stored to.  Parameters None  (inout):
      Parameters (out): None  Std_ReturnType E_OK: API call finished
      successfully.  Return value:  E_NOT_OK: API call aborted due to errors.
      Description: Gets IRQ status of a relative timer.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_Pending</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_NotPending</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR338</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2615</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetRelativeTimerIRQStatus shall perform the following tasks:  1.
      Check whether the interrupt of relative timer Fr_RelTimerIdx is pending.
      Write  TRUE to output parameter Fr_IRQStatusPtr in case the interrupt is
      pending,  FALSE otherwise.  2. Return E_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_Pending</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_NotPending</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR339</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The function Fr_GetRelativeTimerIRQStatus shall be pre compile time configurable
      On/Off by the configuration parameter: FrRelativeTimerEnable.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30036</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR337</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2645</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If the function Fr_GetRelativeTimerIRQStatus is able to and detects a hardware error
      while performing the requested functionality, then it shall call
      Dem_ReportErrorStatus (FrDemCtrlTestResultRef, DEM_EVENT_STATUS_FAILED)
      and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidAccess</srcid><srcstatus/><internalId>1158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR333</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2663</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: if the function
      Fr_GetRelativeTimerIRQStatus is called before the Fr was initialized
      successfully, the function Fr_GetRelativeTimerIRQStatus shall raise the
      development error FR_E_NOT_INITIALIZED and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_Uninit</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR494</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR334</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2682</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetRelativeTimerIRQStatus shall check the parameter Fr_CtrlIdx for
      being valid. If Fr_CtrlIdx is invalid, the function
      Fr_GetRelativeTimerIRQStatus shall raise the development error
      FR_E_INV_CTRL_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidCtrlIdx</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR490</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR335</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2702</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetRelativeTimerIRQStatus shall check the parameter Fr_RelTimerIdx for
      being valid. If Fr_RelTimerIdx is invalid, the function
      Fr_GetRelativeTimerIRQStatus shall raise the development error
      FR_E_INV_TIMER_IDX and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidTimerIdx</srcid><srcstatus/><internalId>1275</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR336</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2722</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If development error detection for the Fr module is enabled: the function
      Fr_GetRelativeTimerIRQStatus shall check the parameter Fr_IRQStatusPtr
      for not being a NULL pointer (NULL_PTR). If Fr_IRQStatusPtr is a NULL
      pointer, the function Fr_GetRelativeTimerIRQStatus shall raise the
      development error FR_E_INV_POINTER and return E_NOT_OK.
    &lt;/pre&gt;</description>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_GetRelativeTimerIRQStatus_InvalidPtr</srcid><srcstatus/><internalId>1299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR409_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2742</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name PExternOffsetCorrection Description Number of microticks added or
      subtracted to the NIT to carry out a host requested external offset
      correction [Microticks]. Multiplicity 1 Type IntegerParamDef Range 0 .. 7
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>Fr.EB.FR410_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_FlexRayDriver.pdf, V2.2.1</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Name PExternRateCorrection Description Number of microticks added or subtracted
      to the cycle to carry out a host requested external rate correction
      [Microticks]. Multiplicity 1 Type IntegerParamDef Range 0 .. 7
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
        This is a configuration parameter requirement without functional specification.
    &lt;/pre&gt;</comment>
      <releases>
        <release>AUTOSAR 3.1.1</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>Fr.EB.HandleIdGenerator</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      The module shall support the correct automatic calculation of
      the handle IDs for the following parameter:
        - FrCtrlIdx
        - FrAbsTimerIdx
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_ComTest_HandleIdGenerator</srcid><srcstatus/><internalId>904</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>Fr.EB.Fr_TransmitTxLPdu.StaticReconfigureable</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2789</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      Buffers between two or more Lpdus are only shared if the PREPARE_LPDU
      and DECOUPLED_TRANSMISSION communication operation of a Fr_LpduIdx is 
      within the same FrIf Job.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_RegressionTestMCG_1</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>Fr.EB.RelocatablePBCfg</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2801</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      In order to support post-build-time configuration data handled by relative offsets to the
      configuration start address, the container FrGeneral must be extended by the configuration
      parameter FrRelocatablePbcfgEnable.
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_Off</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>Fr_1_ERAY_Test_PBcfgM_On</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>Fr.EB.PBSelectable.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2813</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If asc:getVariantName() returns a non-empty string (= variantName) the module's 
      post-build-time configuration file names shall be changed in the following way:
      &amp;lt;Mod&amp;gt;[_*]_PBcfg.* to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;[_*]_PBcfg.*
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>Fr.EB.PBSelectable.TypeName</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2825</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If asc:getVariantName() returns a non-empty string (= variantName) the module's 
      post-build-time configuration type/variable names shall be changed in the following way:
      - &amp;lt;Mod&amp;gt;_[Const]ConfigLayoutType to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;_[Const]ConfigLayoutType
      - &amp;lt;Mod&amp;gt;_ConfigLayout to &amp;lt;Mod&amp;gt;_&amp;lt;variantName&amp;gt;_ConfigLayout
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>Fr.EB.PBSelectable.ConfigName</id>
      <status>approved</status>
      <source>EB</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/doc/Autosar/project/requirements/Fr_1_ERAY_EBExtensions.xml</sourcefile>
      <sourceline>2838</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;
      If asc:getVariantName() returns a non-empty string (= variantName) the module's 
      post-build-time configuration name shall be: &amp;lt;Mod&amp;gt;_Confif_&amp;lt;variantName&amp;gt;
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_FR_30037</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/Fr_1_ERAY_Cfg.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/include/Fr_1_ERAY_Cfg.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/include/Fr_1_ERAY_Lcfg.h</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/include/Fr_1_ERAY_SymbolicNames_PBcfg.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/include/Fr_1_ERAY_SymbolicNames_PBcfg.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c_30</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/src/Fr_1_ERAY_Lcfg.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY.h_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY.h</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY.h_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY.h</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Api.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Api.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Api.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Api.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR460</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Api.h_364</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Api.h</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Api.h_1516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Api.h</sourcefile>
      <sourceline>1516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Extension.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Extension.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Extension.h_453</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Extension.h</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Extension.h_1103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Extension.h</sourcefile>
      <sourceline>1103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/include/Fr_1_ERAY_Version.h.m4_1</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/include/Fr_1_ERAY_Version.h.m4</sourcefile>
      <sourceline>1</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY.c.m4_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY.c.m4</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AbortCommunication.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AbortCommunication.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AbortCommunication.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AbortCommunication.c_122</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AbortCommunication.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c_185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckIRQ.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckIRQ.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckIRQ.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckIRQ.c_181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckIRQ.c</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c_189</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AckRelativeTimerIRQ.c</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllSlots.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllSlots.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllSlots.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllSlots.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllSlots.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllSlots.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllSlots.c_170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllSlots.c</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllowColdstart.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllowColdstart.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllowColdstart.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_AllowColdstart.c_171</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_AllowColdstart.c</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelAbsoluteTimer.c</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CancelRelativeTimer.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_20</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckMTS.c_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckMTS.c</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c_212</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_CheckTxLPduStatus.c</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ControllerInit.c</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ControllerInit.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ControllerInit.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ControllerInit.c_944</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ControllerInit.c</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableIRQ.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableIRQ.c_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableIRQ.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableLPdu.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableLPdu.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableLPdu.c</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableLPdu.c_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableLPdu.c</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_DisableRelativeTimerIRQ.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableAbsoluteTimerIRQ.c</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_37</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableIRQ.c_142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableIRQ.c</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_5</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>5</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c_136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_EnableRelativeTimerIRQ.c</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c_157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetAbsoluteTimerIRQStatus.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c_228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetChannelStatus.c</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetClockCorrection.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c_191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetControllerErrorStatus.c</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c_225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetGlobalTime.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c_148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetIRQStatus.c</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_12</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetNmVector.c</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetNmVector.c</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetNmVector.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetNmVector.c_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetNmVector.c</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c_450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetPOCStatus.c</sourcefile>
      <sourceline>450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c_156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetRelativeTimerIRQStatus.c</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_35</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c_398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncFrameList.c</sourcefile>
      <sourceline>398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncState.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncState.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncState.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetSyncState.c_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetSyncState.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetVersionInfo.c.m4_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetVersionInfo.c.m4</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c_164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_GetWakeupRxStatus.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_HaltCommunication.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_HaltCommunication.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_HaltCommunication.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_HaltCommunication.c_164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_HaltCommunication.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Init.c_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Init.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Merged.c_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Merged.c</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Merged.c_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Merged.c</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Merged.c_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Merged.c</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Merged.c_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Merged.c</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Merged.c_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Merged.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c_208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_PrepareLPdu.c</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_Priv.h_451</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_Priv.h</sourcefile>
      <sourceline>451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReadCCConfig.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_70</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR655</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR656</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR652</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR651</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c_167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReadCCConfig.c</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_34</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c_657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReceiveRxLPdu.c</sourcefile>
      <sourceline>657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_ReconfigLPdu.c</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendMTS.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendMTS.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendMTS.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendMTS.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendMTS.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendMTS.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendMTS.c_312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendMTS.c</sourcefile>
      <sourceline>312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendWUP.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendWUP.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendWUP.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendWUP.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendWUP.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendWUP.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SendWUP.c_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SendWUP.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c_302</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetAbsoluteTimer.c</sourcefile>
      <sourceline>302</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetExtSync.c</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetExtSync.c</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetExtSync.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetExtSync.c_239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetExtSync.c</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_25</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetRelativeTimer.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c_269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_SetWakeupChannel.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_StartCommunication.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_StartCommunication.c</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_23</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_StartCommunication.c</sourcefile>
      <sourceline>23</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_StartCommunication.c_169</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_StartCommunication.c</sourcefile>
      <sourceline>169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR462_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c_515</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/src/Fr_1_ERAY_TransmitTxLPdu.c</sourcefile>
      <sourceline>515</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExactRxCycleMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExactTxCycleMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1243</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1243</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.IncompleteRxCycleMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.IncompleteTxCycleMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.MsgBufRuntimeOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.DynamicRxReconfigMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.DynamicGuaranteedTxReconfigMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.TxConfirmationReconfigMsgBufOpt.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/Fr_EBParameters.xdm.m4_1519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/config/Fr_EBParameters.xdm.m4</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen_246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen</sourcefile>
      <sourceline>246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR463</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/src/Autosar/generate/templates/xgen/Fr_1_ERAY_Fragments.ixgen</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_1_ERAY_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function Fr_1_ERAY_IsValidConfig() is implemented as specified.
  
Test Object: 
    Fr_1_ERAY_IsValidConfig()
  
Test Precondition: 
    The Fr module is not initialized.
  
Test Execution: 
    01: Call the function Fr_1_ERAY_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function Fr_1_ERAY_IsValidConfig() with this invalid configuration.
    05: VP(Fr.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    The following 3 steps are only executed if the module has a link-time configuration:
        06: Create an invalid configuration regarding the link time configuration.
        07: Call the function Fr_1_ERAY_IsValidConfig() with this invalid configuration.
        08: VP(Fr.EB.PBCFGM105):
                The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function Fr_1_ERAY_IsValidConfig() with this invalid configuration.
    11: VP(Fr.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function Fr_1_ERAY_IsValidConfig() with this invalid configuration.
    14: VP(Fr.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function Fr_1_ERAY_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(Fr.EB.PBCFGM107):
        Check if FR_1_ERAY_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>Fr_1_ERAY_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the Fr can be initialized via the PbcfgM.
  
Test Object: 
    Fr_1_ERAY_IsValidConfig()
  
Test Precondition: 
    The Fr module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function Fr_1_ERAY_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function Fr_1_ERAY_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    The following 3 steps are only executed if the module has a link-time configuration:
        07: Create an invalid configuration regarding the link time configuration.
        08: Call the function Fr_1_ERAY_Init() with this invalid configuration.
        09: VP:
            A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function Fr_1_ERAY_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function Fr_1_ERAY_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer Fr_1_ERAY_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call Fr_1_ERAY_Init with NULL_PTR.
    20: VP(Fr.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_1_ERAY_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_Off_Compile_Test.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then Fr_1_ERAY_PBCfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      FR_1_ERAY_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
      FR_1_ERAY_RELOCATABLE_CFG_ENABLE shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module Fr (or no config exists)
      - Include Fr_1_ERAY_PBcfg.c only for step 01 and 02.
      - Include Fr_1_ERAY_Cfg.h for step 03.
    
Test Execution: 
        01: VP(Fr.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(Fr.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            Fr_1_ERAY_ConfigLayoutType and FR_1_ERAY_CONFIG_NAME respectively.
        03: VP (Fr.EB.PBCFGM107):
            Verify that FR_1_ERAY_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
        04: VP(Fr.EB.PBCFGM108, Fr.EB.RelocatablePBCfg):
            FR_1_ERAY_RELOCATABLE_CFG_ENABLE shall be STD_OFF
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_1_ERAY_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_PbcfgM_On_Compile_Test.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that FR_1_ERAY_RELOCATABLE_CFG_ENABLE is defined
      in the header file Fr_1_ERAY_Cfg.h.
      2.)
      Verify that if PbcfgM support is enabled then Fr_1_ERAY_PBCfg.c shall NOT define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
    
Test Object: None.
Test Precondition: 
        - FR_1_ERAY_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (Fr.EB.PbcfgM_General_3,
                Fr.EB.PBCFGM108,
                Fr.EB.RelocatablePBCfg):
            Verify that FR_1_ERAY_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        ------------------------ 2.) ---------------------
        02: Include Fr_1_ERAY_PBcfg.c.
        03: VP(Fr.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_Fr_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/build/reqm/common_req/Fr_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(Fr.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FR_30036</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_1/source/application/Fr_ComTest_1.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test pre-compile-time configuration parameters.
      Test tool based configuration generation.

      Check that code compiles if DEM events are switched to DEM reporting.
      Check that code compiles if DET is disabled - source code shall not include Det.h.
      
      Inclusion of header files:
        - Fr.h
        - Fr_Cfg.h
        
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR648</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR646</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR464</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR459</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR461</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrIfIntegrationEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.SetExtSyncApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.MtsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.WakeupApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PrepareLpduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetIrqStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DisableIrqApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetChannelStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReadCCConfig.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AllSlotsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReconfigLPduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DisableLPduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AllowColdstartApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetWakeupRxStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetNmVectorApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReportToDetEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetClockCorrectionApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetSyncFrameListApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.HWBusyWaitingTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RxFIFOEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RxFIFOMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR001_PI</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FR_30037</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_2/source/application/Fr_ComTest_2.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test pre-compile-time configuration parameters.
      Test tool based configuration generation.
      
      Check that code compiles if DEM events are disabled.
      Check that code compiles if DET enabled - source code shall include Det.h.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: VP(Fr.EB.PBSelectable.FileName):
          Verify that files &amp;lt;Mod&amp;gt;_Variant1_PBcfg.h and &amp;lt;Mod&amp;gt;_Variant1_PBcfg.h exist.
          (see files &amp;lt;Mod&amp;gt;_PBcfg.h and &amp;lt;Mod&amp;gt;_PBcfg.c for verification)
      02: VP(Fr.EB.PBSelectable.TypeName):
          Verify that types &amp;lt;Mod&amp;gt;_Variant1_ConstConfigLayoutType and 
          &amp;lt;Mod&amp;gt;_Variant1_ConfigLayoutType exist.
      03: VP(Fr.EB.PBSelectable.TypeName):
          Verify that configuration variable &amp;lt;Mod&amp;gt;_Variant1_ConfigLayout exists.
      04: VP(Fr.EB.PBSelectable.ConfigName):
          Verify that symbol &amp;lt;Mod&amp;gt;_Config_Variant1 exists.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR648</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR646</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR342</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.SingleCtrlOptEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrIfIntegrationEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.SetExtSyncApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.MtsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.WakeupApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PrepareLpduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetIrqStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DisableIrqApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetChannelStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReadCCConfig.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AllSlotsApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReconfigLPduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DisableLPduApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AllowColdstartApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetWakeupRxStatusApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.ApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR293</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetNmVectorApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ReportToDetEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetClockCorrectionApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.GetSyncFrameListApiEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.HWBusyWaitingTimeout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RxFIFOEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.RxFIFOMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR282</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR304</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR315</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR326</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR339</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PBSelectable.ConfigName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ComTest_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_3/source/application/Fr_ComTest_3.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Check that macros are generated for configuration parameters which are specified as 
      SYMBOLICNAMEVALUES.

      Check that code compiles if DEM events are switched to DET reporting.
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: 
      01: Check that macros are generated with the names and the values listed in output (1).
      02: Check that macros are generated with the names and the values listed in output (2).
    
Test Input: 
        None.
    
Test Output: 
      (1)
        Fr_Conf_FrController_0 0U
        FrController_0 0U
        Fr_FrController_0 0U
        Fr_Conf_FrController_1 1U
        FrController_1 1U
        Fr_FrController_1 1U
        Fr_Conf_FrController_2 2U
        FrController_2 2U
        Fr_FrController_2 2U

      (2)
         FR_PROD_ERR_HANDLING_CTRL_TEST TS_PROD_ERR_REP_TO_DET
         FR_E_DEMTODET_CTRL_TEST 130U       
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FR_GenericInit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_4_Generic_Init/source/application/Fr_ComTest_4_Generic_Init.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Test existence Fr.h and renaming of Fr_&lt;VendorId&gt;_&lt;ApiInfix&gt;_Init() to Fr_Init().
    
Test Object: None.
Test Precondition: 
        None.
    
Test Execution: None.
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ComTest_HandleIdGenerator</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_HandleIdGenerator/source/application/Fr_ComTest_HandleIdGenerator.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test checks that invoking the handle ID autocalc wizard creates a valid configuration
      (i.e., a configuration adhering to the constraints of the module's generator (e.g., zero-based,
      dense, and unique)) out of an invalid configuration (i.e., a configuration violating the
      constraints of the module's generator (e.g., not zero-based, not dense, and not unique)).

      The handle Ids of following parameters are checked by this test:
      - FrAbsTimerIdx
      - FrCtrlIdx

    
Test Object: None.
Test Precondition: 
    
Test Execution: 
    
Test Input: 
        Configuration with deliberately wrong handle IDs (non
        zero-based, not dense, and not unique).
    
Test Output: 
      Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.HandleIdGenerator</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FR_NOPBCFG</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_NoPbCfg/source/application/Fr_ComTest_NoPBcfg.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test shall prove that that the FR also compiles without any post build information
    
Test Object: None.
Test Precondition: 
        * Set TS_FR_COMPILE_WITH_POSTBUILD to FALSE in the merged make file to prevent the compilation
          of the post build C file.
        * The merged make file holds a rule which removes all post build files after generation
    
Test Execution: 
        The test run is successful when the FR compiles under sticking to the precondition.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ComTest_NonLegSymbolicNames</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_NonLegSymbolicNames/source/application/Fr_ComTest_NonLegSymbolicNames.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Checking the symbolic name macros generated when FR_1_ERAY_DONT_PROVIDE_LEGACY_SYMBOLIC_NAMES is ON.
    
Test Object: None.
Test Precondition: 
        FR_1_ERAY_DONT_PROVIDE_LEGACY_SYMBOLIC_NAMES is defined.
    
Test Execution: 
      01.Check that macros are generated with the names and the values listed in output (1)
      02.Check that macros with the names listed in output (2) are not defined.
    
Test Input: 
        None.
    
Test Output: 
    (1)All symbolic name Macros generated should be defined as per Autosar 4.0 rev3
       and the values should be :
        Fr_1_ERAYConf_FrController_0 0U
        Fr_1_ERAYConf_FrController_1 1U
        Fr_1_ERAYConf_FrController_2 2U

    (2)The Symbolic name Macros that should not be defined are :
        FrController_0 must not be defined
        Fr_1_ERAY_FrController_0 must not be defined
        FrController_1 must not be defined
        Fr_1_ERAY_FrController_1 must not be defined
        FrController_2 must not be defined
        Fr_1_ERAY_FrController_2 must not be defined
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FrDemCtrlTestResultReportToDemDetErrorId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>EB_FR_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Compile/IN/Fr_ComTest_SchM/source/application/Fr_ComTest_SchM.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test checks that the Fr module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is
   invoked. 

Test Object: None.
Test Precondition: None.
Test Execution: 
  Ts5 build environment steps:
    The module configuration generator produces the BSWMD. This
    implicitly verifies that the BSWMD is syntactically and
    semantically correct.

Test Input: 
  Usage of a common ASR configuration having all adjacent ASR modules
  configured.

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_FR_Gen_00000_OnlyPbCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Generic/IN/Fr_GenTest_00_OnlyPbCfg/source/application/Fr_GenTest_00_OnlyPBcfg.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall prove that the FR post build configuration also compiles stand alone.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * Set TS_BUILD_POST_BUILD_BINARY to TRUE in the merged make file to prevent the compilation
      of all other FR C files.
    * Remove all generated FR C files except post build files if there are any.

Test Execution: 
    The test run is successful when the FR compiles under sticking to the precondition and a
    binary file is generated.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_StartupSyncFrameInconsistency</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Generic/IN/Fr_GenTest_01_InvalidConfiguration/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that an error message is reported if Keyslot is used as startup frame but 
    not as syncframe.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Start generator with erroneous configuration.
    02: VP: The generator must have issued the expoected error (see util/runTest.cfg.m4)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_RegressionTestMCG_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Generic/IN/Fr_RegressionTestMCG/source/application/testspec.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Regression Test for the Fr module code generator (MCG).
      This test case consists of multiple configurations that are loaded one after another and their
      generated output is compaired with the expected output (i.e. reference files)
    
Test Object: None.
Test Precondition: 
        None
    
Test Execution: None.
Test Input: 
        Valid input configuration files (source/.*.epc).
    
Test Output: 
        Correct output files (identical to reference/.*).
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.DynamicRxReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicGuaranteedTxReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.TxConfirmationReconfigMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR487</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExactRxCycleMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExactTxCycleMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.IncompleteRxCycleMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.IncompleteTxCycleMsgBufOpt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.MaxJobExecutionTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.NumberOfMessageBuffers</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.MessageRamSize</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.Fr_TransmitTxLPdu.StaticReconfigureable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ERAY_ImpTest_Ack_Interrupt_Validation</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_ERAY_ImpTest_Ack_Interrupt_Validation/source/application/Fr_ERAY_ImpTest_Ack_Interrupt_Validation.c.m4</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test verifies that the FR_1_ERAY_ACK_INTERRUPT_VALIDATION_ENABLE and
    FR_1_ERAY_ACK_INTERRUPT_VALIDATION_COUNT macros are correctly set.
    The individual test objects (Fr_1_ERAY_AckAbsoluteTimerIRQ(), Fr_1_ERAY_AckRelativeTimerIRQ()
    and Fr_1_ERAY_AckIRQ()) are tested within the Fr_HostTest_ERAY_1 testcase.
  
Test Object: 
    Fr_1_ERAY_AckAbsoluteTimerIRQ(), Fr_1_ERAY_AckRelativeTimerIRQ() and Fr_1_ERAY_AckIRQ()
  
Test Precondition: 
    AckInterruptValidationEnable configured.
  
Test Execution: 
    01: clear the trace buffer.
    02: VP: Check the value of the ack interrupt validation counter for when the workaround is enabled and not. Shall be 0
        when not enabled regardless of what is set in tresos studio.
    03: VP: Verify the order of function calls.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount.Value</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_AbortCommunication_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Successfully execute Fr_AbortCommunication().
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Setup required read-registers.
  
Test Execution: 
      01: Call Fr_AbortCommunication() for controller 0.
      02: VP(Fr.ASR40.FR191):
          Fr_AbortCommunication() shall return E_OK.
      03: VP(Fr.ASR40.FR191):
          Check that required device specific register access sequence is performed.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>Fr_AbortCommunication_BusyCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is called while FlexRay CC is busy.
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Setup required read-registers.
  
Test Execution: 
      01: Call Fr_AbortCommunication() for controller 0.
      02: VP(Fr.ASR40.FR191):
          Fr_AbortCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR191):
          Check that required device specific register access sequence is performed.
      04: VP(Fr.ASR40.FR190):
          Check that Dem_Report&gt;ErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>Fr_AbortCommunication_AcceptCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>770</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is called and FREEZE command is not accepted.
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Setup required read-registers.
  
Test Execution: 
      01: Call Fr_AbortCommunication() for controller 0.
      02: VP(Fr.ASR40.FR191):
          Fr_AbortCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR191):
          Check that required device specific register access sequence is performed.
      04: VP(Fr.ASR40.FR190):
          Check that Dem_Report&gt;ErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Successfully execute Fr_ReadCCConfig().
  
Test Object: 
      Fr_ReadCCConfig()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Setup required read-registers.
  
Test Execution: 
      01: Call Fr_ReadCCConfig() for controller 0.
      02: VP(Fr.ASR40.FR651, Fr.ASR40.FR651.1):
          Fr_ReadCCConfig() shall return E_OK.
      03: VP(Fr.ASR40.FR651,
             Fr.ASR40.FR651.1,
             Fr.ASR40.FR658,
             Fr.ASR40.FR659,
             Fr.ASR40.FR661,
             Fr.ASR40.FR662,
             Fr.ASR40.FR663,
             Fr.ASR40.FR664,
             Fr.ASR40.FR665,
             Fr.ASR40.FR666):
          Check that correct configuration parameter values are returned
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR651</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR651.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR659</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR661</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR662</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR663</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR664</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR665</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR666</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_StartUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StartCommunication() successfully initiates the start up procedure.
  
Test Object: 
    Fr_StartCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StartCommunication() for controller 0.
    02: VP(Fr.ASR40.FR177):
        Fr_StartCommunication() shall return E_OK.
    03: VP(Fr.ASR40.FR177):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_StartUpInHalt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1177</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StartCommunication() reports to DET if called when the FlexRay CC is not in
      POC state READY.
  
Test Object: 
    Fr_StartCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StartCommunication() for controller 0.
    02: VP(Fr.ASR40.FR175):
        Fr_StartCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR175):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR175):
        Check that Det_ReportError() with FR_E_INV_POCSTATE has been called.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_BusyCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1253</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StartCommunication() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_StartCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StartCommunication() for controller 0.
    02: VP(Fr.ASR40.FR176):
        Fr_StartCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR176):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR176):
        Check that Dem_Report&gt;ErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_AcceptCheckFailStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1343</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StartCommunication() reports to DEM if 'RUN' command is not accepted.
  
Test Object: 
    Fr_StartCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StartCommunication() for controller 0.
    02: VP(Fr.ASR40.FR176):
        Fr_StartCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR176):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR176):
        Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_Normal</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1432</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ControllerInit() executes successfully.
  
Test Object: 
    Fr_ControllerInit()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ControllerInit() for controller 0.
    02: VP(Fr.ASR40.FR148):
        Fr_ControllerInit() shall return E_OK.
    03: VP(Fr.ASR40.FR148):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR515</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR593</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR594</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR595</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.SingleChannelMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.MTSTransmitChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_ConfigBufferError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ControllerInit() reports DEM_EVENT_STATUS_FAILED to Dem
    if a error occurs during buffer configuration.
  
Test Object: 
    Fr_ControllerInit()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ControllerInit() for controller 0.
    02: VP():
        Fr_ControllerInit() shall return E_NOT_OK because hardware error occurred.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP():
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR147_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_Timeouts</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1678</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ControllerInit() reports DEM_EVENT_STATUS_FAILED to Dem
    if a hardware error occurs during controller initialization.
  
Test Object: 
    Fr_ControllerInit()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ControllerInit() for controller 0.
    02: VP():
        Fr_ControllerInit() shall return E_NOT_OK because hardware error occurred.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP():
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR147_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckAbsoluteTimerIRQ() executes successfully.
  
Test Object: 
    Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckAbsoluteTimerIRQ() for controller 0.
    02: VP(Fr.ASR40.FR309):
        Fr_AckAbsoluteTimerIRQ() shall return E_OK.
    03: VP(Fr.ASR40.FR309)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR309</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckAbsoluteTimerIRQ() executes un-successfully.
  
Test Object: 
    Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckAbsoluteTimerIRQ() for controller 0, where the rgister dosen't reset succesfully.
    02: VP(Fr.EB.AckInterruptValidation):
        Fr_AckAbsoluteTimerIRQ() shall return E_NOT_OK.
    03: VP(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check if the according Dem error was raised.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1908</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckRelativeTimerIRQ() executes successfully.
  
Test Object: 
    Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckRelativeTimerIRQ() for controller 0.
    02: VP(Fr.EB.FR314):
        Fr_AckRelativeTimerIRQ() shall return E_OK.
    03: VP(Fr.EB.FR314)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR314</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>1986</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckRelativeTimerIRQ() executes successfully.
  
Test Object: 
    Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckRelativeTimerIRQ() for controller 0, where the rgister dosen't reset succesfully.
    02: VP(Fr.EB.AckInterruptValidation):
        Fr_AckRelativeTimerIRQ() shall return E_NOT_OK.
    03: VP(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check if the according Dem error was raised.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>Fr_CancelAbsoluteTimer_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2084</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CancelAbsoluteTimer() executes successfully.
  
Test Object: 
    Fr_CancelAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CancelAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR287):
        Fr_CancelAbsoluteTimer() shall return E_OK.
    03: VP(Fr.ASR40.FR287):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR287</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
    <specobject>
      <id>Fr_CancelRelativeTimer_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CancelRelativeTimer() executes successfully.
  
Test Object: 
    Fr_CancelRelativeTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CancelRelativeTimer() for controller 0.
    02: VP(Fr.EB.FR292):
        Fr_CancelRelativeTimer() shall return E_OK.
    03: VP(Fr.EB.FR292):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR292</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
    <specobject>
      <id>Fr_DisableAbsoluteTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2206</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableAbsoluteTimerIRQ() executes successfully.
  
Test Object: 
    Fr_DisableAbsoluteTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableAbsoluteTimerIRQ() for controller 0.
    02: VP(Fr.ASR40.FR320):
        Fr_DisableAbsoluteTimerIRQ() shall return E_OK.
    03: VP(Fr.ASR40.FR320):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>Fr_DisableRelativeTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2267</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableRelativeTimerIRQ() executes successfully.
  
Test Object: 
    Fr_DisableRelativeTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableRelativeTimerIRQ() for controller 0.
    02: VP(Fr.EB.FR325):
        Fr_DisableRelativeTimerIRQ() shall return E_OK.
    03: VP(Fr.EB.FR325):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>Fr_EnableAbsoluteTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2328</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableAbsoluteTimerIRQ() executes successfully.
  
Test Object: 
    Fr_EnableAbsoluteTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableAbsoluteTimerIRQ() for controller 0.
    02: VP(Fr.ASR40.FR298):
        Fr_EnableAbsoluteTimerIRQ() shall return E_OK.
    03: VP(Fr.ASR40.FR298):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR298</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>Fr_EnableRelativeTimerIRQ_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2389</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableRelativeTimerIRQ() executes successfully.
  
Test Object: 
    Fr_EnableRelativeTimerIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableRelativeTimerIRQ() for controller 0.
    02: VP(Fr.EB.FR303):
        Fr_EnableRelativeTimerIRQ() shall return E_OK.
    03: VP(Fr.EB.FR303):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_Disable_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2450</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableLPdu() disables a dynamic reconfigurable TX LPdu
    correctly and returns E_OK.
  
Test Object: 
    Fr_DisableLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR540):
        Fr_DisableLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR540):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR540</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_Disable_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2519</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableLPdu() disables a dynamic reconfigurable RX LPdu
    correctly and returns E_OK.
  
Test Object: 
    Fr_DisableLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR540):
        Fr_DisableLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR540):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR540</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_AlreadyDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2589</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableLPdu() does not try to disable a LPdu if it is
    already disabled and return E_OK.
  
Test Object: 
    Fr_DisableLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR540):
        Fr_DisableLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR540):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR540</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_Disable_HardwareError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2627</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableLPdu() returns E_NOT_OK and reports
    DEM_EVENT_STATUS_FAILED to Dem if a problem in the hardware is detected.
  
Test Object: 
    Fr_DisableLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR543):
        Fr_DisableLPdu() shall return E_NOT_OK, because production error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR543):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR543</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_Async</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2716</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncState() returns E_OK and FR_ASYNC if POC state
    is HALT.
  
Test Object: 
    Fr_GetSyncState()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncState() for controller 0.
    02: VP(Fr.EB.FR212):
        Fr_GetSyncState() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR212):
        Verify that Fr_GetSyncState() returns FR_ASYNC
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_Async_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2788</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncState() returns E_OK and FR_ASYNC if POC state
    HALT was requested due to FREEZE command.
  
Test Object: 
    Fr_GetSyncState()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncState() for controller 0.
    02: VP(Fr.EB.FR212):
        Fr_GetSyncState() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR212):
        Verify that Fr_GetSyncState() returns FR_ASYNC
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_Sync</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2833</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncState() returns E_OK and FR_SYNC if POC state
    is normal passive
  
Test Object: 
    Fr_GetSyncState()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncState() for controller 0.
    02: VP(Fr.EB.FR212):
        Fr_GetSyncState() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR212):
        Verify that Fr_GetSyncState() returns FR_SYNC
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_StaticReconfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2904</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_PrepareLPdu() prepares a static reconfigurable Lpdu correctly
    and returns E_OK.
  
Test Object: 
    Fr_PrepareLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_PrepareLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR249):
        Fr_PrepareLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR249):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_MessageBufferError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>2974</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_PrepareLPdu() returns E_NOT_OK and reports
    DEM_EVENT_STATUS_FAILED to Dem if a problem in the hardware is detected.
  
Test Object: 
    Fr_PrepareLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_PrepareLPdu() for controller 0 and LPdu 0.
    02: VP(Fr.ASR40.FR248):
        Fr_PrepareLPdu() shall return E_NOT_OK, because production error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR248):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_StaticNormal</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3063</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_PrepareLPdu() returns E_OK and do not prepare
    a normal static Lpdu.
  
Test Object: 
    Fr_PrepareLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_PrepareLPdu() for controller 0 and a static normal Lpdu.
    02: VP(Fr.ASR40.FR249):
        Fr_PrepareLPdu() shall return E_OK.
    03: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_Increase</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetExtSync() executes successfully.
  
Test Object: 
    Fr_SetExtSync()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetExtSync() for controller 0.
    02: VP(Fr.EB.FR207):
        Fr_SetExtSync() shall return E_OK.
    03: VP(Fr.EB.FR207):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_Decrease</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetExtSync() executes successfully.
  
Test Object: 
    Fr_SetExtSync()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetExtSync() for controller 0.
    02: VP(Fr.EB.FR207):
        Fr_SetExtSync() shall return E_OK.
    03: VP(Fr.EB.FR207):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_NoChange</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetExtSync() executes successfully.
  
Test Object: 
    Fr_SetExtSync()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetExtSync() for controller 0.
    02: VP(Fr.EB.FR207):
        Fr_SetExtSync() shall return E_OK.
    03: VP(Fr.EB.FR207):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_Halt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetExtSync() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_SetExtSync()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetExtSync() for controller 0.
    02: VP(Fr.EB.FR205):
        Fr_SetExtSync() shall return E_NOT_OK.
    03: VP(Fr.EB.FR205):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR205):
        Check if Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_MTS_ChA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CheckMTS() executes successfully.
  
Test Object: 
    Fr_CheckMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CheckMTS() for controller 0 and channel A.
    02: VP(Fr.EB.FR172):
        Fr_CheckMTS() shall return E_OK.
    03: VP(Fr.EB.FR172):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_MTS_ChB</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CheckMTS() executes successfully.
  
Test Object: 
    Fr_CheckMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CheckMTS() for controller 0 and channel B.
    02: VP(Fr.EB.FR172):
        Fr_CheckMTS() shall return E_OK.
    03: VP(Fr.EB.FR172):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_Pending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetAbsoluteTimerIRQStatus() executes successfully returning status 'Pending'.
  
Test Object: 
    Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetAbsoluteTimerIRQStatus() for controller 0.
    02: VP(Fr.ASR40.FR332):
        Fr_GetAbsoluteTimerIRQStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR332):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_NotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetAbsoluteTimerIRQStatus() executes successfully returning status 'NotPending'.
  
Test Object: 
    Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetAbsoluteTimerIRQStatus() for controller 0.
    02: VP(Fr.ASR40.FR332):
        Fr_GetAbsoluteTimerIRQStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR332):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR332</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_SuccessPositive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3650</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetClockCorrection() executes successfully returning a positive value.
  
Test Object: 
    Fr_GetClockCorrection()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetClockCorrection() for controller 0.
    02: VP(Fr.ASR40.FR566):
        Fr_GetClockCorrection() shall return E_OK.
    03: VP(Fr.ASR40.FR566):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR564</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR566</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_SuccessNegative</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3722</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetClockCorrection() executes successfully returning a negative value.
  
Test Object: 
    Fr_GetClockCorrection()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetClockCorrection() for controller 0.
    02: VP(Fr.ASR40.FR566):
        Fr_GetClockCorrection() shall return E_OK.
    03: VP(Fr.ASR40.FR566):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR564</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR566</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_NormalActive_1Byte</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetNmVector() executes successfully returning a 1 byte vector value.
  
Test Object: 
    Fr_GetNmVector()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetNmVector() for controller 0.
    02: VP(Fr.ASR40.FR262):
        Fr_GetNmVector() shall return E_OK.
    03: VP(Fr.ASR40.FR262):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_NormalPassive_12Byte</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3831</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetNmVector() executes successfully returning a 12 bytes vector value.
  
Test Object: 
    Fr_GetNmVector()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetNmVector() for controller 0.
    02: VP(Fr.ASR40.FR262):
        Fr_GetNmVector() shall return E_OK.
    03: VP(Fr.ASR40.FR262):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR264):
        Verify that data was correctly retrieved
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR262</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR264</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>3920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetNmVector() returns failure if not in state NormalActive 
    or NormalPassive .
  
Test Object: 
    Fr_GetNmVector()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetNmVector() for controller 0.
    02: VP(Fr.ASR40.FR263):
        Fr_GetNmVector() shall return E_NOT_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR263):
        Verfiy that information was not written 
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR263</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_Pending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4005</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetRelativeTimerIRQStatus() executes successfully and returns status 'Pending'.
  
Test Object: 
    Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetRelativeTimerIRQStatus() for controller 0.
    02: VP(Fr.EB.FR338):
        Fr_GetRelativeTimerIRQStatus() shall return E_OK.
    03: VP(Fr.EB.FR338):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_NotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4073</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetRelativeTimerIRQStatus() executes successfully and returns status 'NotPending'.
  
Test Object: 
    Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetRelativeTimerIRQStatus() for controller 0.
    02: VP(Fr.EB.FR338):
        Fr_GetRelativeTimerIRQStatus() shall return E_OK.
    03: VP(Fr.EB.FR338):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR338</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_Ready</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendWUP() executes successfully.
  
Test Object: 
    Fr_SendWUP()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendWUP() for controller 0.
    02: VP(Fr.ASR40.FR196):
        Fr_SendWUP() shall return E_OK.
    03: VP(Fr.ASR40.FR196):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_BusyCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendWUP() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_SendWUP()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendWUP() for controller 0.
    02: VP(Fr.ASR40.FR195):
        Fr_SendWUP() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR195):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR195):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_AcceptCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendWUP() reports to DEM if WAKEUP command is not accepted.
  
Test Object: 
    Fr_SendWUP()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendWUP() for controller 0.
    02: VP(Fr.ASR40.FR195):
        Fr_SendWUP() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR195):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR195):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_NormalActive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetAbsoluteTimer() executes successfully in NormalActive state.
  
Test Object: 
    Fr_SetAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR273):
        Fr_SetAbsoluteTimer() shall return E_OK.
    03: VP(Fr.ASR40.FR273):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_NormalPassive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4459</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetAbsoluteTimer() executes successfully in NormalPassive state.
  
Test Object: 
    Fr_SetAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR273):
        Fr_SetAbsoluteTimer() shall return E_OK.
    03: VP(Fr.ASR40.FR273):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR273</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_Halt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetAbsoluteTimer() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_SetAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR436):
        Fr_SetAbsoluteTimer() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR436):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR436):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_Halt1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetAbsoluteTimer() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_SetAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR436):
        Fr_SetAbsoluteTimer() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR436):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR436):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4642</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetAbsoluteTimer() reports to DET if called if absolute timer offset is invalid.
  
Test Object: 
    Fr_SetAbsoluteTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetAbsoluteTimer() for controller 0.
    02: VP(Fr.ASR40.FR436):
        Fr_SetAbsoluteTimer() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR436):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR436):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR436</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_NormalActive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4681</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetRelativeTimer() executes successfully in NormalActive state.
  
Test Object: 
    Fr_SetRelativeTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetRelativeTimer().
    02: VP(Fr.EB.FR280):
        Fr_SetRelativeTimer() shall return E_OK.
    03: VP(Fr.EB.FR280):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR281</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_NormalPassive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4747</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetRelativeTimer() executes successfully in NormalPassive state.
  
Test Object: 
    Fr_SetRelativeTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetRelativeTimer().
    02: VP(Fr.EB.FR280):
        Fr_SetRelativeTimer() shall return E_OK.
    03: VP(Fr.EB.FR280):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR281</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_Halt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4813</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetRelativeTimer() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_SetRelativeTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetRelativeTimer().
    02: VP(Fr.EB.FR437):
        Fr_SetRelativeTimer() shall return E_NOT_OK.
    03: VP(Fr.EB.FR437):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR437):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR281</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_Halt1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4889</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetRelativeTimer() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_SetRelativeTimer()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetRelativeTimer().
    02: VP(Fr.EB.FR437):
        Fr_SetRelativeTimer() shall return E_NOT_OK.
    03: VP(Fr.EB.FR437):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR437):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_AllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>4928</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() executes successfully.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR518):
        Fr_AllSlots() shall return E_OK.
    03: VP(Fr.ASR40.FR518):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR516</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR518</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_AllSlotsInHalt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5000</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR523):
        Fr_AllSlots() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR523):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR523):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR516</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR523</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_AllSlotsInReady</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5075</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() reports to DET if called when FlexRay CC is in state Ready.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR523):
        Fr_AllSlots() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR523):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR523):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR516</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR523</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_BusyCheckFailAllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR520):
        Fr_AllSlots() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR520):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR520):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR516</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR520</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_AcceptCheckFailAllSlots</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() reports to DEM if 'ALL_SLOTS' command is not accepted.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR520):
        Fr_AllSlots() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR520):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR520):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR516</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR520</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() executes successfully.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR182):
        Fr_AllowColdstart() shall return E_OK.
    03: VP(Fr.ASR40.FR182):
        Check that required device specific register access sequence is performed.
    04: VP():
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AllowColdstartInHalt</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR180):
        Fr_AllowColdstart() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR180):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR180):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AllowColdstartInHalt2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() reports to DET if called when FlexRay CC is in state HALT.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR180):
        Fr_AllowColdstart() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR180):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR180):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AllowColdstartInConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() reports to DET if called when FlexRay CC is in state CONFIG.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR180):
        Fr_AllowColdstart() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR180):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR180):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AllowColdstartInDefaultConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() reports to DET if called when FlexRay CC is in state
    DEFAULT CONFIG.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR180):
        Fr_AllowColdstart() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR180):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR180):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_BusyCheckFailAllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5556</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllSlots() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_AllSlots()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllSlots() for controller 0.
    02: VP(Fr.ASR40.FR181):
        Fr_AllSlots() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR181):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR181):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_AcceptCheckFailAllowColdstart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AllowColdstart() reports to DEM if 'ALLOW_COLDSTART' command is not accepted.
  
Test Object: 
    Fr_AllowColdstart()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AllowColdstart() for controller 0.
    02: VP(Fr.ASR40.FR181):
        Fr_AllowColdstart() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR181):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR181):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5733</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckIRQ() executes successfully.
  
Test Object: 
    Fr_AckIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Ack):
        Fr_AckIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Ack)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Ack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_CycleStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5810</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckIRQ() executes successfully.
  
Test Object: 
    Fr_AckIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Ack):
        Fr_AckIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Ack)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Ack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_DynamicSegment</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5887</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckIRQ() executes successfully.
  
Test Object: 
    Fr_AckIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Ack):
        Fr_AckIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Ack)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Ack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_NmVectorUpdate</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>5964</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckIRQ() executes successfully.
  
Test Object: 
    Fr_AckIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Ack):
        Fr_AckIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Ack)(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Ack</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6041</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_AckIRQ() executes un-successfully.
  
Test Object: 
    Fr_AckIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_AckIRQ() for controller 0, where the rgister dosen't reset succesfully.
    02: VP:
        Fr_AckIRQ() shall return E_NOT_OK
    03: VP(Fr.EB.AckInterruptValidation)(Fr.EB.AckInterruptValidationCount):
        Check that required device specific register access sequence is performed.
    04: VP:
    	Check if the according Dem error was raised.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.AckInterruptValidationCount</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_Pending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CheckTxLPduStatus() executes successfully and returns status 'Pending'.
  
Test Object: 
    Fr_CheckTxLPduStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CheckTxLPduStatus() for controller 0.
    02: VP(Fr.ASR40.FR244):
        Fr_CheckTxLPduStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR244):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that Fr_CheckTxLPduStatus() returns FR_NOT_TRANSMITTED.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_NotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_CheckTxLPduStatus() executes successfully and returns status 'NotPending'.
  
Test Object: 
    Fr_CheckTxLPduStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_CheckTxLPduStatus() for controller 0.
    02: VP(Fr.ASR40.FR244):
        Fr_CheckTxLPduStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR244):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that Fr_CheckTxLPduStatus() returns FR_TRANSMITTED.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableIRQ() executes successfully.
  
Test Object: 
    Fr_DisableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Disable):
        Fr_DisableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Disable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Disable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Startup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_CycleStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableIRQ() executes successfully.
  
Test Object: 
    Fr_DisableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Disable):
        Fr_DisableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Disable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Disable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.CycleStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_DynamicSegment</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableIRQ() executes successfully.
  
Test Object: 
    Fr_DisableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Disable):
        Fr_DisableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Disable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Disable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.DynamicSegmentStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_NmVectorUpdate</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_DisableIRQ() executes successfully.
  
Test Object: 
    Fr_DisableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_DisableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Disable):
        Fr_DisableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Disable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Disable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.NmVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableIRQ() executes successfully.
  
Test Object: 
    Fr_EnableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Enable):
        Fr_EnableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Enable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Startup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_CycleStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6596</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableIRQ() executes successfully.
  
Test Object: 
    Fr_EnableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Enable):
        Fr_EnableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Enable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.CycleStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_DynamicSegment</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableIRQ() executes successfully.
  
Test Object: 
    Fr_EnableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Enable):
        Fr_EnableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Enable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.DynamicSegmentStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_NmVectorUpdate</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6718</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_EnableIRQ() executes successfully.
  
Test Object: 
    Fr_EnableIRQ()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_EnableIRQ() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.Enable):
        Fr_EnableIRQ() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.Enable):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Enable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.NmVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Error1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6779</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetControllerErrorStatus() returns correct error flags and E_OK.
  
Test Object: 
    Fr_GetControllerErrorStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetControllerErrorStatus() for controller 0.
    02: VP(Fr.EB.GetControllerErrorStatus):
        Fr_GetControllerErrorStatus() shall return E_OK.
    03: VP(Fr.EB.GetControllerErrorStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that flags are set according to detected errors
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Error2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6850</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetControllerErrorStatus() returns correct error flags and E_OK.
  
Test Object: 
    Fr_GetControllerErrorStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetControllerErrorStatus() for controller 0.
    02: VP(Fr.EB.GetControllerErrorStatus):
        Fr_GetControllerErrorStatus() shall return E_OK.
    03: VP(Fr.EB.GetControllerErrorStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that flags are set according to detected errors
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Error3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6924</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetControllerErrorStatus() returns correct error flags and E_OK.
  
Test Object: 
    Fr_GetControllerErrorStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetControllerErrorStatus() for controller 0.
    02: VP(Fr.EB.GetControllerErrorStatus):
        Fr_GetControllerErrorStatus() shall return E_OK.
    03: VP(Fr.EB.GetControllerErrorStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that flags are set according to detected errors
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Error4</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>6999</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetControllerErrorStatus() returns correct error flags and E_OK.
  
Test Object: 
    Fr_GetControllerErrorStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetControllerErrorStatus() for controller 0.
    02: VP(Fr.EB.GetControllerErrorStatus):
        Fr_GetControllerErrorStatus() shall return E_OK.
    03: VP(Fr.EB.GetControllerErrorStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that flags are set according to detected errors
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Error5</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetControllerErrorStatus() returns correct error flags and E_OK.
  
Test Object: 
    Fr_GetControllerErrorStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetControllerErrorStatus() for controller 0.
    02: VP(Fr.EB.GetControllerErrorStatus):
        Fr_GetControllerErrorStatus() shall return E_OK.
    03: VP(Fr.EB.GetControllerErrorStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that flags are set according to detected errors
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_NormalActive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7112</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetGlobalTime() executes successfully in Normal Active state.
  
Test Object: 
    Fr_GetGlobalTime()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetGlobalTime() for controller 0.
    02: VP(Fr.ASR40.FR256):
        Fr_GetGlobalTime() shall return E_OK.
    03: VP(Fr.ASR40.FR256):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_WrapAround</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7188</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetGlobalTime() executes successfully.
  
Test Object: 
    Fr_GetGlobalTime()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetGlobalTime() for controller 0.
    02: VP(Fr.ASR40.FR256):
        Fr_GetGlobalTime() shall return E_OK.
    03: VP(Fr.ASR40.FR256):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR256</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR257</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_WrongState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7290</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetGlobalTime() call fails if not in state NormalActive of NormalPassive.
  
Test Object: 
    Fr_GetGlobalTime()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetGlobalTime() for controller 0.
    02: VP(Fr.ASR40.FR044):
        Fr_GetGlobalTime() shall return E_NOT_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR044):
        Verify that information was not written
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_Status1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetPOCStatus() returns E_OK and the correct POC status.
  
Test Object: 
    Fr_GetPOCStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetPOCStatus() for controller 0.
    02: VP(Fr.ASR40.FR217):
        Fr_GetPOCStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR217):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that POC status was created correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_Status2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7450</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetPOCStatus() returns E_OK and the correct POC status.
  
Test Object: 
    Fr_GetPOCStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetPOCStatus() for controller 0.
    02: VP(Fr.ASR40.FR217):
        Fr_GetPOCStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR217):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that POC status was created correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_Status3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetPOCStatus() returns E_OK and the correct POC status.
  
Test Object: 
    Fr_GetPOCStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetPOCStatus() for controller 0.
    02: VP(Fr.ASR40.FR217):
        Fr_GetPOCStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR217):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that POC status was created correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_Status4</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7610</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetPOCStatus() returns E_OK and the correct POC status.
  
Test Object: 
    Fr_GetPOCStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetPOCStatus() for controller 0.
    02: VP(Fr.ASR40.FR217):
        Fr_GetPOCStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR217):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that POC status was created correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_NoWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7691</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetWakeupRxStatus() executes successfully returning No Wakeup pattern.
  
Test Object: 
    Fr_GetWakeupRxStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetWakeupRxStatus() for controller 0.
    02: VP(Fr.ASR40.FR588):
        Fr_GetWakeupRxStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR588):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR587</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_ChAWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7759</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetWakeupRxStatus() executes successfully returning Wakeup pattern on
      Channel A.
  
Test Object: 
    Fr_GetWakeupRxStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetWakeupRxStatus() for controller 0.
    02: VP(Fr.ASR40.FR588):
        Fr_GetWakeupRxStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR588):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR587</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_ChBWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetWakeupRxStatus() executes successfully returning Wakeup pattern on
      Channel B.
  
Test Object: 
    Fr_GetWakeupRxStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetWakeupRxStatus() for controller 0.
    02: VP(Fr.ASR40.FR588):
        Fr_GetWakeupRxStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR588):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR587</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_ChABWUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7899</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetWakeupRxStatus() executes successfully returning Wakeup pattern on
      Channel AB.
  
Test Object: 
    Fr_GetWakeupRxStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetWakeupRxStatus() for controller 0.
    02: VP(Fr.ASR40.FR588):
        Fr_GetWakeupRxStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR588):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR587</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR588</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_NormalActive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>7969</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_HaltCommunication() executes successfully in Normal Active state.
  
Test Object: 
    Fr_HaltCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_HaltCommunication() for controller 0.
    02: VP(Fr.ASR40.FR187):
        Fr_HaltCommunication() shall return E_OK.
    03: VP(Fr.ASR40.FR187):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_NormalPassive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8041</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_HaltCommunication() executes successfully in Normal Passive state.
  
Test Object: 
    Fr_HaltCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_HaltCommunication() for controller 0.
    02: VP(Fr.ASR40.FR187):
        Fr_HaltCommunication() shall return E_OK.
    03: VP(Fr.ASR40.FR187):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_BusyCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_HaltCommunication() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_HaltCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_HaltCommunication() for controller 0.
    02: VP(Fr.ASR40.FR186):
        Fr_HaltCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR186):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR186):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_AcceptCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_HaltCommunication() reports to DEM if 'DEFERRED_HALT' command is not accepted.
  
Test Object: 
    Fr_HaltCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_HaltCommunication() for controller 0.
    02: VP(Fr.ASR40.FR186):
        Fr_HaltCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR186):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR186):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_InvPOCState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8292</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_HaltCommunication() reports to DET if CC is not synchronous to the GlobalTime.
  
Test Object: 
    Fr_HaltCommunication()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_HaltCommunication() for controller 0.
    02: VP(Fr.ASR40.FR185):
        Fr_HaltCommunication() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR185):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR185):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_LockError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8367</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncFrameList() reports to DEM in case of hardware error.
  
Test Object: 
    Fr_GetSyncFrameList()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncFrameList() for controller 0.
    02: VP(Fr.ASR40.FR580):
        Fr_GetSyncFrameList() shall return E_OK.
    03: VP(Fr.ASR40.FR580):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR573</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR580</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_Success</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncFrameList() inserts ids of snyc frames into frame
    lists correctly and returns E_OK.
  
Test Object: 
    Fr_GetSyncFrameList()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncFrameList() for controller 0.
    02: VP(Fr.ASR40.FR575):
        Fr_GetSyncFrameList() shall return E_OK.
    03: VP(Fr.ASR40.FR575):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR577):
        Verify that frame lists contain correct sync frame ids.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR573</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR575</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR577</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_Success_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncFrameList() inserts ids of snyc frames into frame
    lists correctly and returns E_OK.
  
Test Object: 
    Fr_GetSyncFrameList()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncFrameList() for controller 0.
    02: VP(Fr.ASR40.FR575):
        Fr_GetSyncFrameList() shall return E_OK.
    03: VP(Fr.ASR40.FR575):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR576):
        Verify that frame lists contain correct sync frame ids.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR573</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR575</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR576</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_SmallerList</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetSyncFrameList() inserts ids of snyc frames into frame
    lists correctly and returns E_OK in case th egiven list is smaller than the number of sync frames 
    received for each channel/cycle. Check that at maximum list size entries are written.
  
Test Object: 
    Fr_GetSyncFrameList()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetSyncFrameList() for controller 0.
    02: VP(Fr.ASR40.FR575):
        Fr_GetSyncFrameList() shall return E_OK.
    03: VP(Fr.ASR40.FR575):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR576):
        Verify that frame lists contain correct sync frame ids.
    05: VP():
        Verify that frame lists does not contain more IDs as passed with parameter Fr_ListSize.
    06: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR573</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR575</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR576</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_NormalActiveChA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8894</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() executes successfully in Normal Active state.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR161):
        Fr_SendMTS() shall return E_OK.
    03: VP(Fr.EB.FR161):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_NormalPassiveChB</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>8966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() executes successfully in Normal Passive state.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR023):
        Fr_SendMTS() shall return E_OK.
    03: VP(Fr.EB.FR161):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_BusyCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9038</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports to DEM if called when FlexRay CC is busy.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR160):
        Fr_SendMTS() shall return E_NOT_OK.
    03: VP(Fr.EB.FR160):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR160):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_AcceptCheckFail</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports to DEM if symbol transmission is not accepted.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR160):
        Fr_SendMTS() shall return E_NOT_OK.
    03: VP(Fr.EB.FR160):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR160):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_InvPOCState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9219</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports to DET if CC is not synchronous to the GlobalTime.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR157):
        Fr_SendMTS() shall return E_NOT_OK.
    03: VP(Fr.EB.FR157):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR157):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_DisabledChannelA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports FR_E_INV_CHNL_IDX to DET if channel
    is disabled.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP():
        Fr_SendMTS(Fr.EB.FR156) shall return E_NOT_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR156):
        Det error FR_E_INV_CHNL_IDX is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_DisabledChannelB</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9372</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports FR_E_INV_CHNL_IDX to DET if channel
    is disabled.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR156):
        Fr_SendMTS() shall return E_NOT_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR156):
        Det error FR_E_INV_CHNL_IDX is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_Freeze</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9448</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SendMTS() reports to DET if CC is not synchronous to the GlobalTime.
  
Test Object: 
    Fr_SendMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SendMTS() for controller 0.
    02: VP(Fr.EB.FR157):
        Fr_SendMTS() shall return E_NOT_OK.
    03: VP(Fr.EB.FR157):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.EB.FR157):
        Det error FR_E_INV_POCSTATE is reported.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_ChannelA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StopMTS() stops MTS on channel A and return E_OK.
  
Test Object: 
    Fr_StopMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StopMTS() for controller 0.
    02: VP(Fr.EB.FR166):
        Fr_StopMTS() shall return E_OK.
    03: VP(Fr.EB.FR166):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_ChannelB</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_StopMTS() stops MTS on channel B and return E_OK.
  
Test Object: 
    Fr_StopMTS()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_StopMTS() for controller 0.
    02: VP(Fr.EB.FR166):
        Fr_StopMTS() shall return E_OK.
    03: VP(Fr.EB.FR166):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.FR166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_ReadyA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9583</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() executes successfully when POC Ready for Channel A.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR202):
        Fr_SetWakeupChannel() shall return E_OK.
    03: VP(Fr.ASR40.FR202):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_ReadyB</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() executes successfully when POC Ready for Channel B.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR202):
        Fr_SetWakeupChannel() shall return E_OK.
    03: VP(Fr.ASR40.FR202):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_BusyCheckFailConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9751</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() reports to DEM if FlexRay CC is busy when executing 'CONFIG'
      command.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR201):
        Fr_SetWakeupChannel() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR201):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR201):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_AcceptCheckFailConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9842</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() reports to DEM if 'CONFIG' command is not accepted.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR201):
        Fr_SetWakeupChannel() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR201):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR201):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_BusyCheckFailReady</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>9929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() reports to DEM if FlexRay CC is busy when executing
      'CONFIG_COMPLETE' command.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR201):
        Fr_SetWakeupChannel() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR201):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR201):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_AcceptCheckFailReady</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10034</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_SetWakeupChannel() reports to DEM if 'CONFIG_COMPLETE' command is not accepted.
  
Test Object: 
    Fr_SetWakeupChannel()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_SetWakeupChannel() for controller 0.
    02: VP(Fr.ASR40.FR201):
        Fr_SetWakeupChannel() shall return E_NOT_OK.
    03: VP(Fr.ASR40.FR201):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR201):
        DEM_EVENT_STATUS_FAILED is reported to DEM.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_Reconfig_CHA_Tx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10135</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() executes successfully.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR525):
        Fr_ReconfigLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR525):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR525</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_Reconfig_CHB_Rx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() executes successfully.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR525):
        Fr_ReconfigLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR525):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR525</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_CycleRepetition</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() returns E_NOT_OK/E_OK if function is
    called with in/valid cycle repetition.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR535_1):
        Verify that Fr_ReconfigLPdu returns E_NOT_OK if function is
        called with invalid cycle.
    03: VP(Fr.ASR40.FR535_1):
        Verify that  FR_E_INV_CYCLE is reported to Det if function is
        called with invalid cycle.
    04: VP(Fr.ASR40.FR535_1):
        Verify that Fr_ReconfigLPdu returns E_OK if function is
        called with valid cycle.
    05: VP(Fr.ASR40.FR535_1):
        Check that required device specific register access sequence is performed.
    06: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR535_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_PayloadRound</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() rounds the payload length to the next higher
    even number if Fr_PayloadLength is odd.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP():
        Fr_ReconfigLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR527):
        Verify that payload length is rounded to the next higher even number
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR527</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_BaseCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() returns E_NOT_OK/E_OK if function is
    called with in/valid base cycle.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR537):
        Verify that Fr_ReconfigLPdu returns E_OK if function is
        called with valid base cycle.
    03: VP(Fr.ASR40.FR537):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR537):
        Verify that Fr_ReconfigLPdu returns E_NOT_OK if function is
        called with invalid base cycle.
    05: VP(Fr.ASR40.FR537):
        Verify that  FR_E_INV_CYCLE is reported to Det if function is
        called with invalid base cycle.
    06: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR537</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_MessageBufferError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10606</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReconfigLPdu() returns E_NOT_OK and reports
    DEM_EVENT_STATUS_FAILED to Dem if a error occurs with the message buffer.
  
Test Object: 
    Fr_ReconfigLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR529):
        Fr_ReconfigLPdu() shall return E_NOT_OK, because error occurred during
        buffer access
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR529):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR529</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Normal_Payload_0B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10706</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that 0 bytes payload of a static normal Lpdu is correctly retrieved
    from Fr driver buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR233):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that FR_RECEIVED and a payload of 0 bytes is returned.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Normal_Payload_2B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10804</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that 2 bytes payload of a static normal Lpdu is correctly retrieved
    from Fr driver buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR233):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR239_1):
        Verify that FR_RECEIVED and a payload of 2 bytes is returned
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR239_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Normal_Payload_4B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>10906</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that 4 bytes payload of a static normal Lpdu is correctly retrieved
    from Fr driver buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR233):
        Check that required device specific register access sequence is performed.
    04: VP:
        Verify that FR_RECEIVED and a payload of 4 bytes is returned
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Static_Reconfigurable_Payload_10B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11009</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if 10 bytes payload are received and 8 bytes configured that 8 bytes
    of a static reconfigurable Lpdu are correctly retrieved from Fr driver buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR233):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR441_1):
        Verify that header section is checked if buffer is shared between two Lpdus
    05: VP(Fr.ASR40.FR239_2):
        Verify that function returned status FR_RECEIVED
        and a payload of 8 bytes (configured payload length)
    06: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR441_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR239_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Static_Reconfigurable_HeaderError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11132</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_NOT_OK if a static reconfigurable
    Lpdu is not prepared with Fr_PrepareLPdu().
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR441_2):
        Fr_ReceiveRxLPdu() shall return E_NOT_OK, because a header error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR441_1):
        Verify that header section is checked if buffer is shared between two Lpdus 
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR441_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR441_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Dynamic_Reconfigurable_Payload_14B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that 14 bytes payload of a dynamic reconfigurable Lpdu is correctly retrieved
    from Fr driver buffer. Note: Cycle is not checked.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR233):
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR234):
        Verify that function returned status FR_RECEIVED and a payload of 14 byte
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Static_Normal_WrongCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK, FR_NOT_RECEIVED and LSduLength = 0,
    if a static normal Ldpu is received in a wrong cycle.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that status equals FR_NOT_RECEIVED because a wrong cycle was detected.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Static_Reconfigurable_WrongCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11435</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK, FR_NOT_RECEIVED and LSduLength = 0,
    if a static reconfigurable Ldpu is received in a wrong cycle.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that status equals FR_NOT_RECEIVED because a wrong cycle was detected.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Receive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11529</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu_Receive() returns FR_NOT_RECEIVED and a
    payload of 0 bytes if the same Ldpu is retrieved twice in a row.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP():
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR237):
        Verify that FR_RECEIVED and a payload of 2 bytes is returned
    05: Call Fr_ReceiveRxLPdu() again for the same Lpdu
    06: VP():
        Check that required device specific register access sequence is performed.
    07: VP(Fr.ASR40.FR237):
        Verify that FR_NOT_RECEIVED and a payload of 0 bytes is returned because
        palyoad was already retrieved
    08: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR237</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_NoReceive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11688</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK and FR_NOT_RECEIVED if 
    there is no pending data for the requested Lpdu.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu returns FR_NOT_RECEIVED because no data was
        pending for the requested Lpdu.
    05: VP():
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_NullFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK and FR_NOT_RECEIVED if 
    a null frame was received.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP():
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR236):
        Verify that Fr_ReceiveRxLPdu returns FR_NOT_RECEIVED because null frame was
        received.
    05: VP():
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidFrame</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11820</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK and FR_NOT_RECEIVED if 
    a invalid frame was received.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu returns FR_NOT_RECEIVED because invalid frame
        was received.
    05: VP():
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Fifo_CHA_Received</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11868</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK and FR_RECEIVED if payload of 
    Lpdu is completely retrived from Fifo.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu returns FR_RECEIVED and payload is copied correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR596</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR597</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Fifo_CHB_MoreDataAvailable</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_OK and FR_RECEIVED_MORE_DATA_AVAILABLE
    if more data for this Lpdu is avialable.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu returns FR_RECEIVED_MORE_DATA_AVAILABLE 
        and payload is copied correctly.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Fifo_CHA_NoReceive</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns FR_NOT_RECEIVED and a payload length of
    0 if no data is avialable for requested Lpdu.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu returns FR_NOT_RECEIVED and a payload length of
        0.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Static_Normal_BoundaryViolation</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>11994</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns FR_NOT_RECEIVED and a LSduLength = 0,
    if a boundary violation was detected by the Fr driver.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu() returns FR_NOT_RECEIVED because 
        boundary violation was detected
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_MessageBufferError_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_NOT_OK and reports 
    DEM_EVENT_STATUS_FAILED to Dem if a error occurs with the message buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR232):
        Fr_ReceiveRxLPdu() shall return E_NOT_OK because production error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR232):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_MessageBufferError_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxLPdu() returns E_NOT_OK and reports 
    DEM_EVENT_STATUS_FAILED to Dem if a error occurs with the message buffer.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR232):
        Fr_ReceiveRxLPdu() shall return E_NOT_OK production error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR232):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem 
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_1B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with static sdu length is transmitted successfully.
    The payload length is 1 byte, static sdu length 7 bytes.
    Check that bytes 1 - 7 are filled with the configured padding byte value. 
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Static_Payload_8B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12376</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with static sdu length is transmitted successfully.
    The payload length is 8 byte, static sdu length 7 bytes.
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Reconfigurable_Static_Payload_2B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static reconfigurable TxLPdu with static sdu length is transmitted
    successfully. The payload length is 2 bytes, static sdu length 8 bytes.
    Check that bytes 2 - 7 are filled with the configured padding byte value. 
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Dynamic_Reconfigurable_Static_Payload_3B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a dynamic reconfigurable TxLPdu with static sdu length is transmitted
    successfully. The payload length is 3 bytes, static sdu length 16 bytes.
    Check that bytes 3 - 15 are filled with the configured padding byte value. 

Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_1B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12595</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with dynamic sdu length is transmitted successfully.
    The payload length is 1 byte.
    Check that bytes 1 - 31 are filled with the configured padding byte value 
    (permutation: dynamic payload length globally disabled). 
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_2B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12683</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with dynamic sdu length is transmitted successfully.
    The payload length is 2 bytes.
    Check that bytes 2 - 31 are filled with the configured padding byte value 
    (permutation: dynamic payload length globally disabled). 
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_3B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12770</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with dynamic sdu length is transmitted successfully.
    The payload length is 3 bytes.
    Check that bytes 3 - 31 are filled with the configured padding byte value 
    (permutation: dynamic payload length globally disabled). 
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.PayloadPadding</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Static_Normal_Dynamic_Payload_32B</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12857</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that a static normal TxLPdu with dynamic sdu length is transmitted successfully.
    The payload length is 32 bytes.
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224, Fr.ASR40.FR225):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.DynamicPayloadLengthEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_MessageBufferDiabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12946</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_TransmitTxLPdu() returns E_OK if the configured Message buffer
    is disabled.
  
Test Object: 
    Fr_ReceiveRxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_ReceiveRxLPdu() shall return E_OK.
    03: VP(Fr.ASR40.FR224):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_MessageBufferError</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>12984</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_TransmitTxLPdu() returns E_NOT_OK and reports
    DEM_EVENT_STATUS_FAILED to Dem if a buffer error occurs.
  
Test Object: 
    Fr_TransmitTxLPdu()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR223):
        Fr_TransmitTxLPdu() shall return E_NOT_OK production error was detected.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR223):
        Verify that DEM_EVENT_STATUS_FAILED was reported to Dem.
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_StartupPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13077</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Startup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_CycleStartPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.CycleStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_DynamicSegmentPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13213</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.DynamicSegmentStart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_NmVectorUpdatePending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.NmVector</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_StartupNotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_CycleStartNotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_DynamicSegmentNotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13483</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_NmVectorUpdateNotPending</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13550</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetIRQStatus() executes successfully.
  
Test Object: 
    Fr_GetIRQStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetIRQStatus() for controller 0.
    02: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Fr_GetIRQStatus() shall return E_OK.
    03: VP(Fr.EB.ExtendedIRQ.GetStatus):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelAVariant1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelAVariant2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13693</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelAVariant3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13768</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelAVariant4</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13844</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelBVariant1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelBVariant2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>13996</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelBVariant3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14072</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_ChannelBVariant4</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14148</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() should return E_NOT_OK if information is 
    not valid and not up to date
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR559):
        Fr_GetChannelStatus() shall return E_NOT_OK.
    03: VP():
        Check that required device specific register access sequence is performed.
    04: VP(Fr.ASR40.FR559):
        Verify that information was not written
    05: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_NoStatusAvailable</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14305</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetChannelStatus() executes successfully.
  
Test Object: 
    Fr_GetChannelStatus()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_GetChannelStatus() for controller 0.
    02: VP(Fr.ASR40.FR558):
        Fr_GetChannelStatus() shall return E_OK.
    03: VP(Fr.ASR40.FR558):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14381</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StartCommunication() is called in a state other than POC:Ready.
  
Test Object: 
      Fr_StartCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_StartCommunication() after Fr initialization.
      02: VP(Fr.ASR40.FR175):
          Fr_StartCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR175):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14433</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllSlots() is called when CC is not synchronous to the FlexRay global time.
  
Test Object: 
      Fr_AllSlots()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AllSlots() before synchronizing the CC to the flexray global time.
      02: VP(Fr.ASR40.FR523):
          Fr_AllSlots() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR523):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR523</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14484</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendWUP() is called when CC Fr_CtrlIdx's POCState is not POC:ready.
  
Test Object: 
      Fr_SendWUP()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SendWUP() when POCState is not "POC:ready".
      02: VP(Fr.ASR40.FR194):
          Fr_SendWUP() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR194):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllowColdstart() is called in a state other than POC:Ready.
  
Test Object: 
      Fr_AllowColdstart()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AllowColdstart() after Fr initialization.
      02: VP(Fr.ASR40.FR180):
          Fr_AllowColdstart() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR180):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14586</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_HaltCommunication() is called when CC is not synchronous to the FlexRay global time.
  
Test Object: 
      Fr_HaltCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_HaltCommunication() before synchronizing the CC to the flexray global time.
      02: VP(Fr.ASR40.FR185):
          Fr_HaltCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR185):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14637</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetWakeupChannel() is called when POCState is not 'POC:ready'
  
Test Object: 
      Fr_SetWakeupChannel()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetWakeupChannel() in a state other than 'POC:ready'.
      02: VP(Fr.ASR40.FR200):
          Fr_SetWakeupChannel() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR200):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_InvalidState</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14688</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called when CC is not synchronous to the FlexRay global time.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() before synchronizing the CC to the flexray global time.
      02: VP(Fr.EB.FR437):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR437):
          Check that Det_ReportError() with errorcode FR_E_INV_POCSTATE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvalidOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14740</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called with invalid Fr_Offset.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() with invalid Fr_Offset.
      02: VP(Fr.ASR40.FR271):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR271):
          Check that Det_ReportError() with errorcode FR_E_INV_OFFSET has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR271</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>Fr_GetVersionInfo_RetrieveVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/RegisterTest_ERAY.c.m4</sourcefile>
      <sourceline>14792</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_GetVersionInfo returns version info correctly.
  
Test Object: 
    Fr_GetVersionInfo()
  
Test Precondition: 
  
Test Execution: 
     01: Call Fr_GetVersionInfo() to retrieve version information.
     02: VP(Fr.ASR40.FR341):
         Verify that Fr_GetVersionInfo() returns correct information.
     03: VP:
         Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR341</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_SetRelativeTimer_InvalidOffset</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY/source/application/tests_ERAY.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called with invalid Fr_Offset.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() with invalid Fr_Offset.
      02: VP(Fr.EB.FR278):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR278):
          Check that Det_ReportError() with errorcode FR_E_INV_OFFSET has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ControllerInit_NoKeySlot</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY_1/source/application/RegisterTest_ERAY.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ControllerInit() executes successfully.
  
Test Object: 
    Fr_ControllerInit()
  
Test Precondition: 
    FlexRay driver is already initialized (Fr_Init_OK has been executed).
    Set up required read-registers.
  
Test Execution: 
    01: Call Fr_ControllerInit() for controller 0.
    02: VP(Fr.ASR40.FR148):
        Fr_ControllerInit() shall return E_OK.
    03: VP(Fr.ASR40.FR148):
        Check that required device specific register access sequence is performed.
    04: VP:
        Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_Init_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_ERAY_NoPbcfgM/source/application/tests_ERAY.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Initialize FlexRay Driver with a valid configuration.
  
Test Object: 
      Fr_Init()
  
Test Precondition: 
      FlexRay Driver is not initialized.
  
Test Execution: 
      01: Call Fr_Init() with NULL_PTR.
      02: VP(Fr.ASR40.FR135):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      03: No other function shall be called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_Init_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300/source/application/tests_MFR4300.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_Init() is called with invalid hardware access.
      Applicable for MFR4300 only.
  
Test Object: 
      Fr_Init()
  
Test Precondition: 
    Hardware device is not accessable.
  
Test Execution: 
      01: Call Fr_Init() with a valid configuration pointer.
      02: VP():
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300/source/application/tests_MFR4300.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StopMTS() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_StopMTS()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_StopMTS() for controller 0.
      02: VP(Fr.EB.FR165):
          Fr_StopMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR165):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ReceiveRxFIFO_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxFIFO() returns E_OK, FR_NOT_RECEIVED and a payload
    length 0 if Fifo is empty.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_ReceiveRxFIFO() returns E_OK although Fifo is empty
      03: VP():
          Check that required device specific register access sequence is
          performed.
      04: VP():
          Verify that Fr_ReceiveRxFIFO() returns FR_NOT_RECEIVED and payload
          length 0
      05: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_CHA_Received</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxFIFO() returns E_OK, FR_RECEIVED, correct frame
    information and data if Fifo contains a valid frame.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_ReceiveRxFIFO() returns E_OK
      03: VP():
          Check that required device specific register access sequence is
          performed.
      04: VP():
          Verify that Fr_ReceiveRxFIFO() returns retrieved frame information
          and data correctly
      05: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_CHB_Received</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxFIFO() returns E_OK, FR_RECEIVED, correct frame
    information and data if Fifo contains a valid frame.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_ReceiveRxFIFO() returns E_OK
      03: VP():
          Check that required device specific register access sequence is
          performed.
      04: VP():
          Verify that Fr_ReceiveRxFIFO() returns retrieved frame information
          and data correctly
      05: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_FifoOverrun</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_ReceiveRxFIFO() reports FR_E_RX_FIFO_OVFL to Det if Fifo
    overrun error is detected. The function continues to retrieve the frame
    and returns E_OK, FR_RECEIVED, correct frame information and data.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_ReceiveRxFIFO() returns E_OK
      03: VP():
          Verify that Fr_ReceiveRxFIFO() checks for Fifo overrun and reports
          FR_E_RX_FIFO_OVFL to Det if one is detected
      04: VP():
          Verify that Fr_ReceiveRxFIFO() continues to retrieve frame form Fifo
      05: VP():
          Verify that Fr_ReceiveRxFIFO() returns retrieved frame information
          and data correctly
      06: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_Empty</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>509</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_FlushRxFIFO() returns E_OK if Fifo is empty.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_FlushRxFIFO() returns E_OK
      03: VP():
          Verify that Fr_FlushRxFIFO() clears Fifo overrun flags
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_CHA</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_FlushRxFIFO() flushes frames until Not Empty Interrupt Flag
    is 0.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_FlushRxFIFO() returns E_OK
      03: VP():
          Verify that Fr_FlushRxFIFO() flushes frames until Not Empty
          Interrupt Flag is 0
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_CHA_DepthReached</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_FlushRxFIFO() flushes frames until Fifo depth is reached.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_FlushRxFIFO() returns E_OK
      03: VP():
          Verify that Fr_FlushRxFIFO() flushes frames until Fifo depth is
          reached
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_CHB_DepthReached</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo/source/application/FifoExtendedTest_MFR4300.c</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that Fr_FlushRxFIFO() flushes frames until Fifo depth is reached.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Verify that Fr_FlushRxFIFO() returns E_OK
      03: VP():
          Verify that Fr_FlushRxFIFO() flushes frames until Fifo depth is
          reached
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidFifoIdxCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo_1/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with invalid FifoIdx (not configured FIFO).
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with invalid FifoIdx.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_InvalidFifoIdxCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo_1/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called with invalid FifoIdx.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() with invalid FifoIdx.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ControllerInit_FIFOBDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo_1/source/application/RegisterTest_MFR4300.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ControllerInit() is called for a controller with only FIFO A enabled.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ControllerInit()
      02: VP():
          Fr_ControllerInit() shall return E_OK.
      03: VP():
          Check for correct register initialization sequence.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ControllerInit_FIFOADisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Implementation/IN/Fr_HostTest_MFR4300_Fifo_2/source/application/RegisterTest_MFR4300.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ControllerInit() is called for a controller with only FIFO B enabled.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ControllerInit()
      02: VP():
          Fr_ControllerInit() shall return E_OK.
      03: VP():
          Check for correct register initialization sequence.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_Init_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Common_ERAY/source/application/InitTests.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Initialize FlexRay Driver with a valid configuration.
  
Test Object: 
      Fr_Init()
  
Test Precondition: 
      FlexRay Driver is not initialized.
  
Test Execution: 
      01: Call Fr_Init() and pass a valid configuration.
      02: VP: Check that PbcfgM_GetConfig has been called.
      03: VP: No other function shall be called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Dem.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED
          has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Dem.c</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED
          has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_ReceiveRxFIFO_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called when Fr is not initialized.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() for controller 0.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called when Fr is not initialized.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() for controller 0.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>178</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with invalid CtrlIdx.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() with invalid CtrlIdx.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO.InvCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidFifoIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with invalid FifoIdx.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with invalid FifoIdx.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvFIFOIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>553</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_InvalidFifoIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called with invalid FifoIdx.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() with invalid FifoIdx.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO.InvFIFOIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_FrameId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>418</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_FrameIDPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_FrameIDPtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvFrameIdPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>554</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_ChannelPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_ChannelPtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvChannelIdPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>555</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_Cycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_CyclePtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_CyclePtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvCyclePtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_LSdu</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>614</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_LSduPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_LSduPtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvLSduPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_LPduStatus</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>680</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_LPduStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_LPduStatusPtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvLPduStatusPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidPtr_LSduLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>745</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with Fr_LSduLengthPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with Fr_LSduLengthPtr as NULL_PTR.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvLSduLengthPtr</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxFIFO_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>811</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxFIFO() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReceiveRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxFIFO() with invalid CtrlIdx, i.e, Id of valid device,
          but not contained in the PBconfig.
      02: VP():
          Fr_ReceiveRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReceiveRxFIFO.InvCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>Fr_FlushRxFIFO_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Fifo_Generic/source/application/FifoExtendedTest_Det.c</sourcefile>
      <sourceline>878</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_FlushRxFIFO() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_FlushRxFIFO()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_FlushRxFIFO() with invalid CtrlIdx, i.e, Id of valid device,
          but not contained in the PBconfig.
      02: VP():
          Fr_FlushRxFIFO() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FlushRxFIFO.InvCtrlIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_AbortCommunication_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AbortCommunication() for controller 0.
      02: VP(Fr.ASR40.FR190):
          Fr_AbortCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR190):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReadCCConfig() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_ReadCCConfig()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_ReadCCConfig() for controller 0.
      02: VP(Fr.ASR40.FR652):
          Fr_ReadCCConfig() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR652):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR652</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckAbsoluteTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AckAbsoluteTimerIRQ() for controller 0.
      02: VP(Fr.ASR40.FR308):
          Fr_AckAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR308):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AckIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AckIRQ() for controller 0.
      02: VP(Fr.EB.ExtendedIRQ.Ack.Dem):
          Fr_AckIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.Ack.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Ack.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckRelativeTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AckRelativeTimerIRQ() for controller 0.
      02: VP(Fr.EB.FR313):
          Fr_AckRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR313):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllowColdstart() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AllowColdstart()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AllowColdstart() for controller 0.
      02: VP(Fr.ASR40.FR181):
          Fr_AllowColdstart() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR181):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>415</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllSlots() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_AllSlots()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_AllSlots() for controller 0.
      02: VP(Fr.ASR40.FR520):
          Fr_AllSlots() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR520):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR520</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>Fr_CancelAbsoluteTimer_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>478</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelAbsoluteTimer() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_CancelAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_CancelAbsoluteTimer() for controller 0.
      02: VP(Fr.ASR40.FR286):
          Fr_CancelAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR286):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR286</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>Fr_CancelRelativeTimer_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>541</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelRelativeTimer() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_CancelRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_CancelRelativeTimer() for controller 0.
      02: VP(Fr.EB.FR291):
          Fr_CancelRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR291):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR291</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ControllerInit() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_ControllerInit() for controller 0.
      02: VP(Fr.EB.Fr_ControllerInit.Dem):
          Fr_ControllerInit() shall return E_NOT_OK.
      03: VP(Fr.EB.Fr_ControllerInit.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.Fr_ControllerInit.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>Fr_DisableAbsoluteTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>667</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableAbsoluteTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_DisableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_DisableAbsoluteTimerIRQ() for controller 0.
      02: VP(Fr.ASR40.FR319):
          Fr_DisableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR319):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR319</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_DisableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_DisableIRQ() for controller 0.
      02: VP(Fr.EB.ExtendedIRQ.Disable.Dem):
          Fr_DisableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.Disable.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Disable.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>793</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_DisableLPdu() for controller 0.
      02: VP(Fr.ASR40.FR543):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR543):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR543</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>Fr_DisableRelativeTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>856</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableRelativeTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_DisableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_DisableRelativeTimerIRQ() for controller 0.
      02: VP(Fr.EB.FR324):
          Fr_DisableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR324):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR324</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>Fr_EnableRelativeTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>919</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableRelativeTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_EnableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_EnableRelativeTimerIRQ() for controller 0.
      02: VP(Fr.EB.FR302):
          Fr_EnableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR302):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>619</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>982</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_EnableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_EnableIRQ() for controller 0.
      02: VP(Fr.EB.ExtendedIRQ.Enable.Dem):
          Fr_EnableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.Enable.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.Enable.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>Fr_EnableAbsoluteTimerIRQ_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1045</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableAbsoluteTimerIRQ() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_EnableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_EnableAbsoluteTimerIRQ() for controller 0.
      02: VP(Fr.ASR40.FR297):
          Fr_EnableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR297):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR297</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetAbsoluteTimerIRQStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetAbsoluteTimerIRQStatus() for controller 0.
      02: VP(Fr.ASR40.FR331):
          Fr_GetAbsoluteTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR331):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR331</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetChannelStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetChannelStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetChannelStatus() for controller 0.
      02: VP(Fr.ASR40.FR560):
          Fr_GetChannelStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR560):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1239</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetClockCorrection() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetClockCorrection()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetClockCorrection() for controller 0.
      02: VP(Fr.ASR40.FR568):
          Fr_GetClockCorrection() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR568):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1305</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetControllerErrorStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetControllerErrorStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetControllerErrorStatus() for controller 0.
      02: VP(Fr.EB.GetControllerErrorStatus.Dem):
          Fr_GetControllerErrorStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetControllerErrorStatus.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetGlobalTime() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetGlobalTime()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetGlobalTime() for controller 0.
      02: VP(Fr.ASR40.FR255):
          Fr_GetGlobalTime() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR255):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR255</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetIRQStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetIRQStatus() for controller 0.
      02: VP(Fr.EB.ExtendedIRQ.GetStatus.Dem):
          Fr_GetIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.GetStatus.Dem):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.GetStatus.Dem</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1501</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetNmVector() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetNmVector()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetNmVector() for controller 0.
      02: VP(Fr.ASR40.FR261):
          Fr_GetNmVector() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR261):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1566</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetPOCStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetPOCStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetPOCStatus() for controller 0.
      02: VP(Fr.ASR40.FR216):
          Fr_GetPOCStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR216):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetRelativeTimerIRQStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetRelativeTimerIRQStatus() for controller 0.
      02: VP(Fr.EB.FR337):
          Fr_GetRelativeTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.FR337):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR337</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1696</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncState() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetSyncState()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetSyncState() for controller 0.
      02: VP(Fr.EB.FR211):
          Fr_GetSyncState() shall return E_NOT_OK.
      03: VP(Fr.EB.FR211):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1761</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetWakeupRxStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetWakeupRxStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetWakeupRxStatus() for controller 0.
      02: VP(Fr.ASR40.FR589):
          Fr_GetWakeupRxStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR589):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR589</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_HaltCommunication() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_HaltCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_HaltCommunication() for controller 0.
      02: VP(Fr.ASR40.FR186):
          Fr_HaltCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR186):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1889</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() for controller 0.
      02: VP(Fr.ASR40.FR248):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR248):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR248</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>1952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() for controller 0.
      02: VP(Fr.ASR40.FR232):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR232):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2019</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendWUP() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SendWUP()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SendWUP() for controller 0.
      02: VP(Fr.ASR40.FR195):
          Fr_SendWUP() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR195):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2082</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() for controller 0.
      02: VP(Fr.ASR40.FR272):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR272):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR272</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() for controller 0.
      02: VP(Fr.EB.FR279):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR279):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR279</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StartCommunication() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_StartCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_StartCommunication() for controller 0.
      02: VP(Fr.ASR40.FR176):
          Fr_StartCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR176):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() for controller 0.
      02: VP(Fr.ASR40.FR223):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR223):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2336</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetWakeupChannel() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SetWakeupChannel()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SetWakeupChannel() for controller 0.
      02: VP(Fr.ASR40.FR201):
          Fr_SetWakeupChannel() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR201):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2399</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetExtSync() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SetExtSync()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SetExtSync() for controller 0.
      02: VP(Fr.EB.FR206):
          Fr_SetExtSync() shall return E_NOT_OK.
      03: VP(Fr.EB.FR206):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2462</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() for controller 0.
      02: VP(Fr.ASR40.FR580):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR580):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR580</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2530</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckMTS() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_CheckMTS()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_CheckMTS() for controller 0.
      02: VP(Fr.EB.FR171):
          Fr_CheckMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR171):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() for controller 0.
      02: VP(Fr.ASR40.FR243):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR243):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR243</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2659</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() for controller 0.
      02: VP(Fr.ASR40.FR529):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR529):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR529</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_InvalidAccess</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DemTests.c</sourcefile>
      <sourceline>2722</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendMTS() is called while FlexRay CC access is invalid.
  
Test Object: 
      Fr_SendMTS()
  
Test Precondition: 
      FlexRay driver is already initialized (Fr_Init_OK has been executed).
      Set device access to invalid.
  
Test Execution: 
      01: Call Fr_SendMTS() for controller 0.
      02: VP(Fr.EB.FR160):
          Fr_SendMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR160):
          Check that Dem_ReportErrorStatus() with DEM_EVENT_STATUS_FAILED has been called.
      04: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_AbortCommunication_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is called when Fr is not initialized.
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AbortCommunication() for controller 0.
      02: VP(Fr.ASR40.FR188):
          Fr_AbortCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR188):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReadCCConfig() is called when Fr is not initialized.
  
Test Object: 
      Fr_ReadCCConfig()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_ReadCCConfig() for controller 0.
      02: VP(Fr.ASR40.FR653):
          Fr_ReadCCConfig() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR653):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>166</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is when Fr is not initialized.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_ControllerInit() for controller 0.
      02: VP(Fr.ASR40.FR143):
          Fr_ControllerInit() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR143):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StartCommunication() is called when Fr is not initialized.
  
Test Object: 
      Fr_StartCommunication()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_StartCommunication() for controller 0.
      02: VP(Fr.ASR40.FR173):
          Fr_StartCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR173):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>264</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllowColdstart() is called when Fr is not initialized.
  
Test Object: 
      Fr_AllowColdstart()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AllowColdstart() for controller 0.
      02: VP(Fr.ASR40.FR188):
          Fr_AllowColdstart() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR188):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllSlots() is called when Fr is not initialized.
  
Test Object: 
      Fr_AllSlots()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AllSlots() for controller 0.
      02: VP(Fr.ASR40.FR521):
          Fr_AllSlots() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR521):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR521</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>362</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_HaltCommunication() is called when Fr is not initialized.
  
Test Object: 
      Fr_HaltCommunication()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_HaltCommunication() for controller 0.
      02: VP(Fr.ASR40.FR183):
          Fr_HaltCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR183):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendWUP() is called when Fr is not initialized.
  
Test Object: 
      Fr_SendWUP()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SendWUP() for controller 0.
      02: VP(Fr.ASR40.FR192):
          Fr_SendWUP() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR192):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetWakeupChannel() is called when Fr is not initialized.
  
Test Object: 
      Fr_SetWakeupChannel()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SetWakeupChannel() with valid parameters.
      02: VP(Fr.ASR40.FR197):
          Fr_SetWakeupChannel() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR197):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>509</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetPOCStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetPOCStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetPOCStatus() with valid parameters.
      02: VP(Fr.ASR40.FR213):
          Fr_GetPOCStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR213):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called when Fr is not initialized.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with valid parameters.
      02: VP(Fr.ASR40.FR218):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR218):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called when Fr is not initialized.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with valid parameters.
      02: VP(Fr.ASR40.FR226):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR226):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() with valid parameters.
      02: VP(Fr.ASR40.FR240):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR240):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR240</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>737</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called when Fr is not initialized.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() with valid parameters.
      02: VP(Fr.ASR40.FR245):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR245):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR245</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called when Fr is not initialized.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with valid parameters.
      02: VP(Fr.ASR40.FR530):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR530):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR530</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>835</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called when Fr is not initialized.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_DisableLPdu() with valid parameters.
      02: VP(Fr.ASR40.FR544):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR544):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR544</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>884</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetGlobalTime() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetGlobalTime()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetGlobalTime() with valid parameters.
      02: VP(Fr.ASR40.FR251):
          Fr_GetGlobalTime() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR251):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>942</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetNmVector() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetNmVector()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetNmVector() for controller 0.
      02: VP(Fr.ASR40.FR258):
          Fr_GetNmVector() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR258):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetChannelStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetChannelStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetChannelStatus() with valid parameters.
      02: VP(Fr.ASR40.FR561):
          Fr_GetChannelStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR561):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR561</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1056</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetClockCorrection() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetClockCorrection()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetClockCorrection() with valid parameters.
      02: VP(Fr.ASR40.FR569):
          Fr_GetClockCorrection() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR569):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR569</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with valid parameters.
      02: VP(Fr.ASR40.FR581):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR581):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR581</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetWakeupRxStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetWakeupRxStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetWakeupRxStatus() with valid parameters.
      02: VP(Fr.ASR40.FR590):
          Fr_GetWakeupRxStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR590):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR590</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called when Fr is not initialized.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() with valid parameters.
      02: VP(Fr.ASR40.FR267):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR267):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR267</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>Fr_CancelAbsoluteTimer_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelAbsoluteTimer() is called when Fr is not initialized.
  
Test Object: 
      Fr_CancelAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_CancelAbsoluteTimer() with valid parameters.
      02: VP(Fr.ASR40.FR283):
          Fr_CancelAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR283):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR283</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>Fr_EnableAbsoluteTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1338</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableAbsoluteTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_EnableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_EnableAbsoluteTimerIRQ() with valid parameters.
      02: VP(Fr.ASR40.FR294):
          Fr_EnableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR294):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR294</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1387</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckAbsoluteTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AckAbsoluteTimerIRQ() with valid parameters.
      02: VP(Fr.ASR40.FR305):
          Fr_AckAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR305):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR305</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>Fr_DisableAbsoluteTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableAbsoluteTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_DisableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_DisableAbsoluteTimerIRQ() with valid parameters.
      02: VP(Fr.ASR40.FR316):
          Fr_DisableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR316):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetAbsoluteTimerIRQStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetAbsoluteTimerIRQStatus() with valid parameters.
      02: VP(Fr.ASR40.FR327):
          Fr_GetAbsoluteTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR327):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1541</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendMTS() is called when Fr is not initialized.
  
Test Object: 
      Fr_SendMTS()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SendMTS() with valid parameters.
      02: VP(Fr.EB.FR154):
          Fr_SendMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR154):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR154</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1590</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StopMTS() is called when Fr is not initialized.
  
Test Object: 
      Fr_StopMTS()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_StopMTS() with valid parameters.
      02: VP(Fr.EB.FR162):
          Fr_StopMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR162):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1639</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckMTS() is called when Fr is not initialized.
  
Test Object: 
      Fr_CheckMTS()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_CheckMTS() with valid parameters.
      02: VP(Fr.EB.FR167):
          Fr_CheckMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR167):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1689</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetExtSync() is called when Fr is not initialized.
  
Test Object: 
      Fr_SetExtSync()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SetExtSync() with valid parameters.
      02: VP(Fr.EB.FR203):
          Fr_SetExtSync() shall return E_NOT_OK.
      03: VP(Fr.EB.FR203):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1738</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncState() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetSyncState()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetSyncState() with valid parameters.
      02: VP(Fr.EB.FR208):
          Fr_GetSyncState() shall return E_NOT_OK.
      03: VP(Fr.EB.FR208):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called when Fr is not initialized.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() with valid parameters.
      02: VP(Fr.EB.FR275):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR275):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>Fr_CancelRelativeTimer_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1843</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelRelativeTimer() is called when Fr is not initialized.
  
Test Object: 
      Fr_CancelRelativeTimer()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_CancelRelativeTimer() with valid parameters.
      02: VP(Fr.EB.FR288):
          Fr_CancelRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR288):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>Fr_EnableRelativeTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1892</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableRelativeTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_EnableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_EnableRelativeTimerIRQ() with valid parameters.
      02: VP(Fr.EB.FR299):
          Fr_EnableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR299):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1941</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckRelativeTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AckRelativeTimerIRQ() with valid parameters.
      02: VP(Fr.EB.FR310):
          Fr_AckRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR310):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>Fr_DisableRelativeTimerIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>1990</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableRelativeTimerIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_DisableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_DisableRelativeTimerIRQ() with valid parameters.
      02: VP(Fr.EB.FR321):
          Fr_DisableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR321):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR321</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2039</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetRelativeTimerIRQStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetRelativeTimerIRQStatus() with valid parameters.
      02: VP(Fr.EB.FR333):
          Fr_GetRelativeTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.FR333):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR333</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2095</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetControllerErrorStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetControllerErrorStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetControllerErrorStatus() with valid parameters.
      02: VP(Fr.EB.GetControllerErrorStatus.Uninit):
          Fr_GetControllerErrorStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetControllerErrorStatus.Uninit):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_EnableIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_EnableIRQ() with valid parameters.
      02: VP(Fr.EB.EnableIRQ.Uninit):
          Fr_EnableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.EnableIRQ.Uninit):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.EnableIRQ.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2199</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_DisableIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_DisableIRQ() with valid parameters.
      02: VP(Fr.EB.DisableIRQ.Uninit):
          Fr_DisableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.DisableIRQ.Uninit):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.DisableIRQ.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckIRQ() is called when Fr is not initialized.
  
Test Object: 
      Fr_AckIRQ()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_AckIRQ() with valid parameters.
      02: VP(Fr.EB.AckIRQ.Uninit):
          Fr_AckIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.AckIRQ.Uninit):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckIRQ.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2297</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetIRQStatus() is called when Fr is not initialized.
  
Test Object: 
      Fr_GetIRQStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
      01: Call Fr_GetIRQStatus() with valid parameters.
      02: VP(Fr.EB.GetIRQStatus.Uninit):
          Fr_GetIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetIRQStatus.Uninit):
          Check that Det_ReportError() with errorcode FR_E_NOT_INITIALIZED has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetIRQStatus.Uninit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>Fr_AbortCommunication_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2354</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AbortCommunication() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AbortCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AbortCommunication() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR189):
          Fr_AbortCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR189):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2404</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ControllerInit() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ControllerInit() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR144):
          Fr_ControllerInit() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR144):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2454</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StartCommunication() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_StartCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_StartCommunication() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR174):
          Fr_StartCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR174):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>Fr_AllowColdstart_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllowColdstart() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AllowColdstart()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AllowColdstart() for with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR179):
          Fr_AllowColdstart() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR179):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>Fr_AllSlots_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AllSlots() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AllSlots()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AllSlots() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR522):
          Fr_AllSlots() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR522):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR522</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>Fr_HaltCommunication_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_HaltCommunication() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_HaltCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_HaltCommunication() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR184):
          Fr_HaltCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR184):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>Fr_SendWUP_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2654</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendWUP() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SendWUP()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SendWUP() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR193):
          Fr_SendWUP() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR193):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2704</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetWakeupChannel() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SetWakeupChannel()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetWakeupChannel() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR198):
          Fr_SetWakeupChannel() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR198):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2754</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetPOCStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetPOCStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetPOCStatus() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR214):
          Fr_GetPOCStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR214):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2828</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR219):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR219):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2878</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR227):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR227):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2937</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR241):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR241):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>2987</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR246):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR246):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3037</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableLPdu() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR545):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR545):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR545</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3087</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetGlobalTime() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetGlobalTime()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetGlobalTime() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR252):
          Fr_GetGlobalTime() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR252):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetNmVector() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetNmVector()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetNmVector() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR259):
          Fr_GetNmVector() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR259):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3201</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetChannelStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetChannelStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetChannelStatus() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR562):
          Fr_GetChannelStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR562):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR562</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetClockCorrection() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetClockCorrection()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetClockCorrection() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR570):
          Fr_GetClockCorrection() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR570):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR570</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3325</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR582):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR582):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3395</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetWakeupRxStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetWakeupRxStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetWakeupRxStatus() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR591):
          Fr_GetWakeupRxStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR591):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR591</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3451</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR268):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR268):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR268</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>Fr_CancelAbsoluteTimer_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3500</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelAbsoluteTimer() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_CancelAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CancelAbsoluteTimer() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR284):
          Fr_CancelAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR284):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR284</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>Fr_EnableAbsoluteTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3549</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableAbsoluteTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_EnableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableAbsoluteTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR295):
          Fr_EnableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR295):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3598</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckAbsoluteTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckAbsoluteTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR306):
          Fr_AckAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR306):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR306</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>Fr_DisableAbsoluteTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableAbsoluteTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_DisableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableAbsoluteTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR317):
          Fr_DisableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR317):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR317</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3696</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetAbsoluteTimerIRQStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetAbsoluteTimerIRQStatus() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR328):
          Fr_GetAbsoluteTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR328):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR328</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3753</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid CtrlIdx.
      02: VP(Fr.ASR40.FR531):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR531):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR531</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3802</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendMTS() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SendMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SendMTS() with invalid CtrlIdx.
      02: VP(Fr.EB.FR155):
          Fr_SendMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR155):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StopMTS() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_StopMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_StopMTS() with invalid CtrlIdx.
      02: VP(Fr.EB.FR163):
          Fr_StopMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR163):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3902</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckMTS() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_CheckMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckMTS() with invalid CtrlIdx.
      02: VP(Fr.EB.FR168):
          Fr_CheckMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR168):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>Fr_SetExtSync_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>3952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetExtSync() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SetExtSync()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetExtSync() with invalid CtrlIdx.
      02: VP(Fr.EB.FR204):
          Fr_SetExtSync() shall return E_NOT_OK.
      03: VP(Fr.EB.FR204):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4001</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncState() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetSyncState()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncState() with invalid CtrlIdx.
      02: VP(Fr.EB.FR209):
          Fr_GetSyncState() shall return E_NOT_OK.
      03: VP(Fr.EB.FR209):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4057</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() with invalid CtrlIdx.
      02: VP(Fr.EB.FR276):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR276):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR276</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>Fr_EnableRelativeTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4106</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableRelativeTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_EnableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableRelativeTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.FR300):
          Fr_EnableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR300):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>Fr_CancelRelativeTimer_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelRelativeTimer() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_CancelRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CancelRelativeTimer() with invalid CtrlIdx.
      02: VP(Fr.EB.FR289):
          Fr_CancelRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR289):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR289</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4204</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckRelativeTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckRelativeTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.FR311):
          Fr_AckRelativeTimerIRQ() shall return E_NOT_OK.
      04: VP(Fr.EB.FR311):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>Fr_DisableRelativeTimerIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4253</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableRelativeTimerIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_DisableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableRelativeTimerIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.FR322):
          Fr_DisableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR322):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4302</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetRelativeTimerIRQStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetRelativeTimerIRQStatus() with invalid CtrlIdx.
      02: VP(Fr.EB.FR334):
          Fr_GetRelativeTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.FR334):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR334</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4360</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetControllerErrorStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetControllerErrorStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetControllerErrorStatus() with invalid CtrlIdx.
      02: VP(Fr.EB.GetControllerErrorStatus.InvalidCtrl):
          Fr_GetControllerErrorStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetControllerErrorStatus.InvalidCtrl):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.InvalidCtrl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4418</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_EnableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.EnableIRQ.InvalidCtrl):
          Fr_EnableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.EnableIRQ.InvalidCtrl):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.EnableIRQ.InvalidCtrl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4467</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_DisableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.DisableIRQ.InvalidCtrl):
          Fr_DisableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.DisableIRQ.InvalidCtrl):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.DisableIRQ.InvalidCtrl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckIRQ() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_AckIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckIRQ() with invalid CtrlIdx.
      02: VP(Fr.EB.AckIRQ.InvalidCtrl):
          Fr_AckIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.AckIRQ.InvalidCtrl):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.AckIRQ.InvalidCtrl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_InvalidCtrlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4565</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetIRQStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetIRQStatus() with invalid CtrlIdx.
      02: VP(Fr.EB.GetIRQStatus.InvalidCtrl):
          Fr_GetIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetIRQStatus.InvalidCtrl):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetIRQStatus.InvalidCtrl</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_InvalidConfigIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReadCCConfig() is called with invalid ConfigIdx.
  
Test Object: 
      Fr_ReadCCConfig()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReadCCConfig() with invalid ConfigIdx.
      02: VP(Fr.ASR40.FR655):
          Fr_ReadCCConfig() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR633_1, Fr.ASR40.FR655):
          Check that Det_ReportError() with errorcode FR_E_INV_CONFIG_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR655</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR633_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4675</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() with invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR269):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR269):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR269</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>Fr_CancelAbsoluteTimer_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4724</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelAbsoluteTimer() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_CancelAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CancelAbsoluteTimer() invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR285):
          Fr_CancelAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR285):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR285</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>Fr_EnableAbsoluteTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableAbsoluteTimerIRQ() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_EnableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableAbsoluteTimerIRQ() with invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR296):
          Fr_EnableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR296):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>Fr_AckAbsoluteTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4822</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckAbsoluteTimerIRQ() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_AckAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckAbsoluteTimerIRQ() with invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR307):
          Fr_AckAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR307):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR307</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>Fr_DisableAbsoluteTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableAbsoluteTimerIRQ() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_DisableAbsoluteTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableAbsoluteTimerIRQ() with invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR318):
          Fr_DisableAbsoluteTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR318):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR318</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetAbsoluteTimerIRQStatus() is called with invalid Absolute timer index.
  
Test Object: 
      Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetAbsoluteTimerIRQStatus() with invalid Fr_AbsTimerIdx.
      02: VP(Fr.ASR40.FR329):
          Fr_GetAbsoluteTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR329):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR329</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>Fr_SetRelativeTimer_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>4980</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetRelativeTimer() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_SetRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetRelativeTimer() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR277):
          Fr_SetRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR277):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>Fr_CancelRelativeTimer_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5029</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CancelRelativeTimer() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_CancelRelativeTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CancelRelativeTimer() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR290):
          Fr_CancelRelativeTimer() shall return E_NOT_OK.
      03: VP(Fr.EB.FR290):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR290</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>Fr_EnableRelativeTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableRelativeTimerIRQ() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_EnableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableRelativeTimerIRQ() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR301):
          Fr_EnableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR301):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>Fr_AckRelativeTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5127</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckRelativeTimerIRQ() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_AckRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckRelativeTimerIRQ() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR312):
          Fr_AckRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR312):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR312</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>Fr_DisableRelativeTimerIRQ_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableRelativeTimerIRQ() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_DisableRelativeTimerIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableRelativeTimerIRQ() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR323):
          Fr_DisableRelativeTimerIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.FR323):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR323</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_InvalidTimerIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetRelativeTimerIRQStatus() is called with invalid Fr_RelTimerIdx.
  
Test Object: 
      Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetRelativeTimerIRQStatus() with invalid Fr_RelTimerIdx.
      02: VP(Fr.EB.FR335):
          Fr_GetRelativeTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.FR335):
          Check that Det_ReportError() with errorcode FR_E_INV_TIMER_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR335</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5284</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetPOCStatus() is called with Fr_ReadCCConfig as NULL_PTR.
  
Test Object: 
      Fr_GetPOCStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_Fr_ReadCCConfig() with Fr_ReadCCConfig as NULL_PTR.
      02: VP(Fr.ASR40.FR656):
          Fr_Fr_ReadCCConfig() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR656):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR656</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>Fr_GetPOCStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetPOCStatus() is called with Fr_POCStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetPOCStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetPOCStatus() with Fr_POCStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR215):
          Fr_GetPOCStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR215):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5383</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called with Fr_LSduPtr as NULL_PTR.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with Fr_LSduPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR222):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR222):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5432</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with Fr_LsduPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with Fr_LsduPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR229):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      04: VP(Fr.ASR40.FR229):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidPtr_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5487</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with Fr_RxLPduStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with Fr_RxLPduStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR230):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR230):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR230</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidPtr_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with Fr_LsduLengthPtr as NULL_PTR.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with Fr_LsduLengthPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR231):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR231):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR231</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5589</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called with Fr_TxLPduStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() with Fr_TxLPduStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR343):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR343):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR343</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5638</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetGlobalTime() is called with Fr_CyclePtr as NULL_PTR.
  
Test Object: 
      Fr_GetGlobalTime()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetGlobalTime() with Fr_CyclePtr as NULL_PTR.
      02: VP(Fr.ASR40.FR253):
          Fr_GetGlobalTime() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR253):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR253</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>Fr_GetGlobalTime_InvalidPtr_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5694</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetGlobalTime() is called with Fr_MacroTickPtr as NULL_PTR.
  
Test Object: 
      Fr_GetGlobalTime()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetGlobalTime() with Fr_MacroTickPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR254):
          Fr_GetGlobalTime() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR254):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR254</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5750</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetNmVector() is called with Fr_NmVectorPtr as NULL_PTR.
  
Test Object: 
      Fr_GetNmVector()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetNmVector() with Fr_NmVectorPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR260):
          Fr_GetNmVector() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR260):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR260</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5799</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetChannelStatus() is called with Fr_ChannelAStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetChannelStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetChannelStatus() with Fr_ChannelAStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR563):
          Fr_GetChannelStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR563):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>Fr_GetChannelStatus_InvalidPtr_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetChannelStatus() is called with Fr_ChannelBStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetChannelStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetChannelStatus() with Fr_ChannelBStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR607):
          Fr_GetChannelStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR607):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR607</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5911</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetClockCorrection() is called with Fr_RateCorrectionPtr as NULL_PTR.
  
Test Object: 
      Fr_GetClockCorrection()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetClockCorrection() with Fr_RateCorrectionPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR571):
          Fr_GetClockCorrection() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR571):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>Fr_GetClockCorrection_InvalidPtr_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>5967</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetClockCorrection() is called with Fr_OffsetCorrectionPtr as NULL_PTR.
  
Test Object: 
      Fr_GetClockCorrection()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetClockCorrection() with Fr_OffsetCorrectionPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR572):
          Fr_GetClockCorrection() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR572):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR572</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6023</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with Fr_ChannelAEvenListPtr as NULL_PTR.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with Fr_ChannelAEvenListPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR583):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR583):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR583</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidPtr_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6087</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with Fr_ChannelBEvenListPtr as NULL_PTR.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with Fr_ChannelBEvenListPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR584):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR584):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR584</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidPtr_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6154</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with Fr_ChannelAOddListPtr as NULL_PTR.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with Fr_ChannelAOddListPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR585):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR585):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR585</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidPtr_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with Fr_ChannelBOddListPtr as NULL_PTR.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncFrameList() with Fr_ChannelBOddListPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR586):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR586):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR586</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>Fr_GetWakeupRxStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6290</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetWakeupRxStatus() is called with Fr_WakeupRxStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetWakeupRxStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetWakeupRxStatus() with Fr_WakeupRxStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR592):
          Fr_GetWakeupRxStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR592):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR592</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>Fr_GetAbsoluteTimerIRQStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetAbsoluteTimerIRQStatus() is called with Fr_IRQStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetAbsoluteTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetAbsoluteTimerIRQStatus() with Fr_IRQStatusPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR330):
          Fr_GetAbsoluteTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR330):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR330</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>Fr_GetVersionInfo_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6388</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetVersionInfo() is called with NULL_PTR.
  
Test Object: 
      Fr_GetVersionInfo()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetVersionInfo() with VersioninfoPtr as NULL_PTR.
      02: VP(Fr.ASR40.FR340):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR340</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6435</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckMTS() is called with Fr_MTSStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_CheckMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckMTS() with Fr_MTSStatusPtr as NULL_PTR.
      02: VP(Fr.EB.FR170):
          Fr_CheckMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR170):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncState_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6484</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncState() is called with Fr_SyncStatePtr as NULL_PTR.
  
Test Object: 
      Fr_GetSyncState()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetSyncState() with Fr_SyncStatePtr as NULL_PTR.
      02: VP(Fr.EB.FR210):
          Fr_GetSyncState() shall return E_NOT_OK.
      03: VP(Fr.EB.FR210):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>Fr_GetRelativeTimerIRQStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6533</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetRelativeTimerIRQStatus() is called with Fr_IRQStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetRelativeTimerIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetRelativeTimerIRQStatus() with Fr_IRQStatusPtr as NULL_PTR.
      02: VP(Fr.EB.FR336):
          Fr_GetRelativeTimerIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.FR336):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>Fr_GetControllerErrorStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetControllerErrorStatus() is called with Fr_ControllerErrorStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetControllerErrorStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetControllerErrorStatus() with Fr_ControllerErrorStatusPtr as NULL_PTR.
      02: VP(Fr.EB.GetControllerErrorStatus.NULLPTR):
          Fr_GetControllerErrorStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetControllerErrorStatus.NULLPTR):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetControllerErrorStatus.NULLPTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_InvalidPtr</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetIRQStatus() is called with Fr_IRQStatusPtr as NULL_PTR.
  
Test Object: 
      Fr_GetIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetIRQStatus() with Fr_IRQStatusPtr as NULL_PTR.
      02: VP(Fr.EB.GetIRQStatus.NULLPTR):
          Fr_GetIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.GetIRQStatus.NULLPTR):
          Check that Det_ReportError() with errorcode FR_E_INV_POINTER has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.GetIRQStatus.NULLPTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>Fr_SetWakeupChannel_InvalidChnlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6681</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetWakeupChannel() is called with invalid channel index.
  
Test Object: 
      Fr_SetWakeupChannel()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetWakeupChannel() with invalid Fr_ChnlIdx.
      02: VP(Fr.ASR40.FR199):
          Fr_SetWakeupChannel() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR199):
          Check that Det_ReportError() with errorcode FR_E_INV_CHNL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidChnlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6730</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid channel index.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_ChnlIdx.
      02: VP(Fr.ASR40.FR533):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR533):
          Check that Det_ReportError() with errorcode FR_E_INV_CHNL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR533</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_InvalidChnlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6779</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendMTS() is called with invalid channel index.
  
Test Object: 
      Fr_SendMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SendMTS() with invalid Fr_ChnlIdx.
      02: VP(Fr.EB.FR156):
          Fr_SendMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR156):
          Check that Det_ReportError() with errorcode FR_E_INV_CHNL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>Fr_StopMTS_InvalidChnlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6828</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StopMTS() is called with invalid channel index.
  
Test Object: 
      Fr_StopMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_StopMTS() with invalid Fr_ChnlIdx.
      02: VP(Fr.EB.FR164):
          Fr_StopMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR164):
          Check that Det_ReportError() with errorcode FR_E_INV_CHNL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>Fr_CheckMTS_InvalidChnlIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6877</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckMTS() is called with invalid channel index.
  
Test Object: 
      Fr_CheckMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckMTS() with invalid Fr_ChnlIdx.
      02: VP(Fr.EB.FR169):
          Fr_CheckMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR169):
          Check that Det_ReportError() with errorcode FR_E_INV_CHNL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6927</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid Fr_CycleRepetition.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_CycleRepetition.
      02: VP(Fr.ASR40.FR534):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR534):
          Check that Det_ReportError() with errorcode FR_E_INV_CYCLE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR534</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidBaseCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>6976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid Fr_BaseCycle.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_BaseCycle.
      02: VP(Fr.ASR40.FR536):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR536):
          Check that Det_ReportError() with errorcode FR_E_INV_CYCLE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR536</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>Fr_SetAbsoluteTimer_InvalidCycle</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7025</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SetAbsoluteTimer() is called with invalid Fr_Cycle.
  
Test Object: 
      Fr_SetAbsoluteTimer()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SetAbsoluteTimer() with invalid Fr_Cycle.
      02: VP(Fr.ASR40.FR270):
          Fr_SetAbsoluteTimer() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR270):
          Check that Det_ReportError() with errorcode FR_E_INV_CYCLE has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7074</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called with invalid LsduLength.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with invalid Fr_LsduLength.
      02: VP(Fr.ASR40.FR221):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR221):
          Check that Det_ReportError() with errorcode FR_E_INV_LENGTH has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid payload length.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_PayloadLength.
      02: VP(Fr.ASR40.FR538):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR538):
          Check that Det_ReportError() with errorcode FR_E_INV_LENGTH has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR538</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called with invalid Lpdu index.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR220):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR220):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with invalid Lpdu index.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR228):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR228):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7292</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called with invalid Lpdu index.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR242):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR242):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called with invalid Lpdu index.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR247):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR247):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_InvalidLpduId_DynReconfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7391</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called with dynamic reconfigurable LPdu.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() with dynamic reconfigurable LPdu.
      02: VP(Fr.ASR40.FR247):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR247):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7440</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid Lpdu index.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR532):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR532):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR532</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidLpduId_NotDynReconfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7489</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with static normal LPdu.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with static normal LPdu.
      02: VP(Fr.ASR40.FR532, Fr.ASR40.FR526):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR532):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR532</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR526</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_InvalidLpduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7541</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called with LPdu index.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableLPdu() with invalid Fr_LpduIdx.
      02: VP(Fr.ASR40.FR546):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR546):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR546</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_InvalidLpduId_NotDynReconfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7590</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called with static normal LPdu.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableLPdu() with static normal LPdu.
      02: VP(Fr.ASR40.FR546, Fr.ASR40.FR541):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR546):
          Check that Det_ReportError() with errorcode FR_E_INV_LPDU_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR546</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR541</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidCrc</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7640</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid header Crc.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid Fr_HeaderCRC.
      02: VP(Fr.ASR40.FR633, Fr.ASR40.FR634):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR633, Fr.ASR40.FR634):
          Check that Det_ReportError() with errorcode FR_E_INV_HEADERCRC has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR634</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR633</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>Fr_EnableIRQ_InvalidIrqIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_EnableIRQ() is called with invalid IRQIdx.
  
Test Object: 
      Fr_EnableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_EnableIRQ() with invalid IRQIdx.
      02: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Fr_EnableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Check that Det_ReportError() with errorcode FR_E_INV_IRQ_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.InvalidIRQIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>Fr_DisableIRQ_InvalidIrqIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableIRQ() is called with invalid IRQIdx.
  
Test Object: 
      Fr_DisableIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableIRQ() with invalid IRQIdx.
      02: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Fr_DisableIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Check that Det_ReportError() with errorcode FR_E_INV_IRQ_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.InvalidIRQIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>Fr_AckIRQ_InvalidIrqIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7788</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_AckIRQ() is called with invalid IRQIdx.
  
Test Object: 
      Fr_AckIRQ()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_AckIRQ() with invalid IRQIdx.
      02: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Fr_AckIRQ() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Check that Det_ReportError() with errorcode FR_E_INV_IRQ_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.InvalidIRQIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>Fr_GetIRQStatus_InvalidIrqIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7837</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetIRQStatus() is called with invalid IRQIdx.
  
Test Object: 
      Fr_GetIRQStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetIRQStatus() with invalid IRQIdx.
      02: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Fr_GetIRQStatus() shall return E_NOT_OK.
      03: VP(Fr.EB.ExtendedIRQ.InvalidIRQIdx):
          Check that Det_ReportError() with errorcode FR_E_INV_IRQ_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ExtendedIRQ.InvalidIRQIdx</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>Fr_ControllerInit_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7893</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ControllerInit() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ControllerInit()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ControllerInit() with invalid CtrlIdx, i.e, Id of valid device, but not contained
          in the PBconfig.
      02: VP(Fr.ASR40.FR144):
          Fr_ControllerInit() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR144):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_CheckTxLPduStatus() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_CheckTxLPduStatus() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR241):
          Fr_CheckTxLPduStatus() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR241):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR241</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>Fr_ReadCCConfig_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>7996</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReadCCConfig() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReadCCConfig()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReadCCConfig() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR654):
          Fr_ReadCCConfig() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR654):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>Fr_DisableLPdu_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8049</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_DisableLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_DisableLPdu() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR545):
          Fr_DisableLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR545):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR545</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>Fr_GetNmVector_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetNmVector() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_GetNmVector()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_GetNmVector() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR259):
          Fr_GetNmVector() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR259):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP(Fr.ASR40.Ch8.4_1):
          Verify that the out parameters are not overwritten.
      05: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR259</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.Ch8.4_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8157</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_PrepareLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_PrepareLPdu() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR246):
          Fr_PrepareLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR246):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR246</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReceiveRxLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReceiveRxLPdu() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR227):
          Fr_ReceiveRxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR227):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8268</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_ReconfigLPdu() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR531):
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR531):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR531</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>Fr_SendMTS_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_SendMTS() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_SendMTS()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_SendMTS() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.EB.FR155):
          Fr_SendMTS() shall return E_NOT_OK.
      03: VP(Fr.EB.FR155):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.FR155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>Fr_StartCommunication_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8369</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_StartCommunication() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_StartCommunication()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_StartCommunication() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR174):
          Fr_StartCommunication() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR174):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_InvalidCtrlCfgIdx</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8424</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_TransmitTxLPdu() is called with invalid CtrlIdx.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Call Fr_TransmitTxLPdu() with invalid CtrlIdx, i.e, Id of valid device, but not
          contained in the PBconfig.
      02: VP(Fr.ASR40.FR219):
          Fr_TransmitTxLPdu() shall return E_NOT_OK.
      03: VP(Fr.ASR40.FR219):
          Check that Det_ReportError() with errorcode FR_E_INV_CTRL_IDX has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>Fr_GetSyncFrameList_InvalidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_GetSyncFrameList() is called with invalid list size.
  
Test Object: 
      Fr_GetSyncFrameList()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Fr_GetSyncFrameList() with invalid list size.
      02: VP(Fr.ASR40.FR578):
          Fr_GetSyncFrameList() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode TEST_FR_E_INV_CONFIG
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR578</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_InvalidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DetTests.c</sourcefile>
      <sourceline>8538</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Fr_ReconfigLPdu() is called with invalid frame id.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is already initialized.
  
Test Execution: 
      01: Fr_ReconfigLPdu() with invalid Fr_FrameId.
      02: VP():
          Fr_ReconfigLPdu() shall return E_NOT_OK.
      03: VP():
          Check that Det_ReportError() with errorcode TEST_FR_E_INV_CONFIG
          has been called.
      04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.EB.ReconfigLPdu.InvFrameID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>Fr_DisableLPdu_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_DisableLPdu() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_DisableLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_DisableLPdu() for controller 0.
    02: VP(Fr.ASR40.FR540):
        Fr_DisableLPdu() shall return E_OK and take no action.
    03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR540</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>Fr_PrepareLPdu_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_PrepareLPdu() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_PrepareLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_PrepareLPdu() for controller 0.
    02: VP(Fr.ASR40.FR249):
        Fr_PrepareLPdu() shall return E_OK and take no action.
    03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR249</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>Fr_CheckTxLPduStatus_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_CheckTxLPduStatus() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_CheckTxLPduStatus()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_CheckTxLPduStatus() for controller 0.
    02: VP(Fr.ASR40.FR244):
        Fr_CheckTxLPduStatus() shall return E_OK and take no action.
    03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR244</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>Fr_ReconfigLPdu_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_ReconfigLPdu() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_ReconfigLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_ReconfigLPdu() for controller 0.
    02: VP(Fr.ASR40.FR525):
        Fr_ReconfigLPdu() shall return E_OK and take no action.
    03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR524</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR525</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>Fr_ReceiveRxLPdu_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_ReceiveRxLPdu() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_ReceiveRxLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_ReceiveRxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR233):
        Fr_ReceiveRxLPdu() shall return E_OK and take no action.
    03: VP(Fr.ASR40.FR233):
        Verify that Fr_ReceiveRxLPdu() returned FR_NOT_RECEIVED and
        a length of 0 bytes.
    04: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>Fr_TransmitTxLPdu_DummyBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_Fr)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_Fr/test/ts5/Include/Fr_HostTest_Generic/source/application/DummyBufferTests.c</sourcefile>
      <sourceline>283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     Fr_TransmitTxLPdu() is called for a LPdu which is configured as dummy buffer.
  
Test Object: 
      Fr_TransmitTxLPdu()
  
Test Precondition: 
      FlexRay driver is not initialized.
  
Test Execution: 
    01: Call Fr_TransmitTxLPdu() for controller 0.
    02: VP(Fr.ASR40.FR224):
        Fr_TransmitTxLPdu() shall return E_OK and take no action.
    03: VP: Check that no other function has been called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>Fr.ASR40.FR092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>Fr.ASR40.FR224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
