<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_J1939Nm_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_AUTOSAR_SWS_SAEJ1939NetworkManagement_4_2_2.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_AUTOSAR_SWS_SAEJ1939NetworkManagement_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/common_req/J1939Nm_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 20:03:13 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_J1939Nm_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_AUTOSAR_SWS_SAEJ1939NetworkManagement_4_2_2.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_AUTOSAR_SWS_SAEJ1939NetworkManagement_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_Native/asc_J1939Nm_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/common_req/J1939Nm_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_ACLOST_INDICATION</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'DynamicAddressClaimed' is enabled, J1939NmNodeAddressClaimedLostCallout indicates to the NodeChannel user that the node lost the address.
        The integrator shall use J1939Nm_RetryAddressClaiming() to retry claiming a new address for the node on the channels the node is required to communicate.
        When any of the NodeChannels are not required for communication now (J1939Nm_RetryAddressClaiming() will not be called for this NodeChannel ),
        the intergrator shall use J1939Nm_SetNodeAddress() to set the claimed address for that NodeChannel to preserve unique address over all the NodeChannels that reference the same node.
      </description>
      <rationale>
        The purpose of the 'DynamicAddressClaimed' is to allow the address changeability of the node in run-time.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_SET_ADDRESS</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'DynamicAddressClaimed' is enabled, The integrator shall use J1939Nm_SetNodeAddress() to update the address of the NodeChannel while the NodeChannel is not in normal operation mode (in bus sleep, or offline mode).
        J1939Nm_SetNodeAddress shall be called for all the NodeChannels that refer to the same node when updating the addresses to avoid assigning different addresses for a node on different channels.        
      </description>
      <rationale>
        J1939Nm_SetNodeAddress() is used to set the NodeChannel address while the node is not in normal operation mode.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_CLAIMED_ADDRESS</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'DynamicAddressClaimed' is enabled, The integrator saves the successfully claimed address in NVM before calling J1939Nm_DeInit().
        The J1939Nm Module after initialization uses the preferred address as the node address initially, the integrator shall retrieve the saved address and update it using the J1939Nm_SetNodeAddress() API.
        The integrator shall use J1939Nm_SetNodeAddress() to set the claimed Node address on all the channels that use that node.
        For the node that successfully claimed an address, The integrator shall update the node address on all the modules that use that Node (J1939Rm, J1939Dcm ...etc.).
      </description>
      <rationale>
        The J1939Nm Module doesn't save the claimed address in the NVM, it uses the preffereed address as the inital node address after initialization.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_BAUDRATE_DETECTION</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'J1939NmChannelAutomaticBaudrateDetection' is enabled, the integrator shall configure a list of potential baudrates refferencing baudrates in the afferent CanController.
          The integrator shall configure the J1939NmSupportedBaudRates parameter, that represents the number of cycles between attempts to capture a new baudrate.
      </description>
      <rationale>
            J1939NmSupportedBaudRates and J1939NmBaudRateDetectionWaitTime are necessary for the functioning of the automatic baudrate detection feature.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_BAUDRATE_DETECTION_CALLBACK</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'J1939NmChannelAutomaticBaudrateDetection' is enabled, the integrator shall configure the callback present in CanIf/CanIfHookOnRxSupport/CanIfHookOnReceptionFunctionName and shall include 
           J1939Nm_Externals.h as a foreign header file for CanIF.
      </description> 
      <rationale>
              CanIfHookOnReceptionFunctionName() is called whenever there is succesful reception detected on a canChannel, which signals that a baudrate was succesfully captured for that channel, which in term 
              means that J1939Nm can go on to normal operation.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_BAUDRATE_DETECTION_CANSM_SETBAUDRATE</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'J1939NmChannelAutomaticBaudrateDetection' is enabled, the integrator shall enable the API function CanSM_SetBaudrate() in the CanSm General Tab
      </description> 
      <rationale>
              CanSM_SetBaudrate() is called by J1939Nm_MainFunction in an attempt to command CanIf to set a new baudrate for the CanController
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    
        <specobject>
      <id>lim.J1939Nm.EB_INTREQ_J1939NM_BAUDRATE_DETECTION_CANIF_SETBAUDRATE</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>If 'J1939NmChannelAutomaticBaudrateDetection' is enabled, the integrator shall enable the function CanIfSetBaudrateApi() in the CanIf General Tab
      </description> 
      <rationale>
              CanIfSetBaudrateApi() is called by CanSM_SetBaudrate in order to set a new baudrate for the can controller if no tranzitions are ongoing.
      </rationale>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Nm.ASR42.SWS_J1939Nm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R4.2.2</source>
      <version>1</version>
      <description>
        The implementation and callback header files (J1939Nm.h and J1939Nm_Cbk.h) shall include
        the file J1939Nm_Types.h.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00001.1</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00001.2</srcid><srcstatus/><internalId>118</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>J1939Nm.ASR42.SWS_J1939Nm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R4.2.2</source>
      <version>1</version>
      <description>
        The header file J1939Nm_Types.h shall include the file ComStack_Types.h.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Nm_Types.h_10</srcid><srcstatus/><internalId>250</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>J1939Nm.ASR42.SWS_J1939Nm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R4.2.2</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall support the configuration variants
        VARIANT-PRE-COMPILE, VARIANT-LINK-TIME, and VARIANT-POST-BUILD.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_33</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmGeneral
        Container Type: Container
        Description: Contains the general configuration parameters of the module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmVersionInfoApi
        Parameter Type: Boolean
        Parent Containers: J1939NmGeneral,
        Description: Pre-processor switch for enabling version info API support.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmDevErrorDetect
        Parameter Type: Boolean
        Parent Containers: J1939NmGeneral,
        Description: Switches the development error detection and notification on or off.
        Introduction: * true: detection and notification is enabled. * false: detection and 
        notification is disabled.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmMainFunctionPeriod
        Parameter Type: FloatValue
        Parent Containers: J1939NmGeneral,
        Description: Call cycle in seconds of J1939Nm_MainFunction.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: OPEN)
        Min-Value: 0 (Type: OPEN)
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development tool chain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmChannel
        Container Type: Sub-Container
        Parent Containers: J1939NmConfigSet,
        Sub-Containers: J1939NmNodeSpecificDemEventParameterRefs J1939NmRxPdu J1939NmTxPdu 
        Description: Physical CAN channel handled by J1939Nm.
        Lower Multiplicity: 1
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeSpecificDemEventParameterRefs
        Container Type: Sub-Container
        Parent Containers: J1939NmChannel,
        Description: Container for the references to DemEventParameter elements related to one 
        J1939NmNode which shall be invoked using the API Dem_SetEventStatus in case the corresponding 
        error occurs. The EventId is taken from the referenced DemEventParameter's DemEventId symbolic 
        value. The standardized errors are provided in this container and can be extended by vendor-
        specific error references.
        Lower Multiplicity: 0
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NM_E_ADDRESS_LOST
        Parameter Type: Reference
        Parent Containers: J1939NmNodeSpecificDemEventParameterRefs,
        Description: Reference to the DemEventParameter which shall be issued when the ECU failed to 
        claim one of its addresses.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/Dem/DemConfigSet/DemEventParameter
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmComMNetworkHandleRef
        Parameter Type: Reference
        Parent Containers: J1939NmChannel,
        Description: Reference to the channel defined by the ComMChannel providing access to the unique 
        channel index ComMChannelId.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmTxPdu
        Container Type: Sub-Container
        Parent Containers: J1939NmChannel,
        Description: Contains the configuration of the PDU used to transmit the AddressClaimed PG. This 
        PDU produces a meta data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_163</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmRxPdu
        Container Type: Sub-Container
        Parent Containers: J1939NmChannel,
        Description: Contains the configuration of the PDU used to receive the AddressClaimed PG. This 
        PDU consumes a meta data item of type CAN_ID_32.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01003_Err_EcuC_NonConfigured_MetaDataItem</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmTxPduId
        Parameter Type: Integer
        Parent Containers: J1939NmTxPdu,
        Description: The PDU identifier used for TxConfirmation from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmTxPduRef
        Parameter Type: Reference
        Parent Containers: J1939NmTxPdu,
        Description: Reference to the Pdu object representing the PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01005_Err_EcuC_Invalid_TxMetaDataItem</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01006_Err_EcuC_Invalid_TxMetaDataTypeRef</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmRxPduRef
        Parameter Type: Reference
        Parent Containers: J1939NmRxPdu,
        Description: Reference to the Pdu object representing the PDU.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/EcuC/EcucConfigSet/EcucPduCollection/Pdu
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01001_Err_EcuC_Invalid_RxMetaDataItem</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_GenTest_01004_Err_EcuC_Invalid_RxMetaDataTypeRef</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmRxPduId
        Parameter Type: Integer
        Parent Containers: J1939NmRxPdu,
        Description: The PDU identifier used for RxIndication from CanIf.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNode
        Container Type: Sub-Container
        Parent Containers: J1939NmConfigSet,
        Description: Logical node representing one function handled by J1939Nm.
        Lower Multiplicity: 1
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodePreferredAddress
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Source address of this node used for address claiming.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeStartUpDelay
        Parameter Type: Boolean
        Parent Containers: J1939NmNode,
        Description: If enabled, the node will start communication after a delay of 250ms after 
        transmission of the initial AddressClaimed, depending on the configured 
        J1939NmNodePreferredAddress. If disabled, the node will start communication immediately at 
        network start-up.
        Introduction: Please note: According to J1939/81, the 250ms delay is not required for single 
        address CAs with desired source addresses in the ranges 0..127 or 248..253.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameArbitraryAddressCapable
        Parameter Type: Boolean
        Parent Containers: J1939NmNode,
        Description: Arbitrary Address Capable field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameIndustryGroup
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Industry Group field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 7 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameVehicleSystemInstance
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Vehicle System Instance field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 15 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameVehicleSystem
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Vehicle System field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 127 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameFunction
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Function field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameFunctionInstance
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Function Instance field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 31 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameECUInstance
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: ECU Instance field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 7 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameManufacturerCode
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Manufacturer Code field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 2047 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeNameIdentityNumber
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Identity Number field of the NAME of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 2097151 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmConfigSet
        Container Type: Container
        Sub-Containers: J1939NmChannel J1939NmExternalNode J1939NmNode J1939NmSharedAddressSpace 
        Description: This container contains the configuration parameters and sub containers of the 
        AUTOSAR J1939Nm module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeChannelRef
        Parameter Type: Reference
        Parent Containers: J1939NmNode,
        Description: Reference to the channels this node has access to.
        Lower Multiplicity: 1
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: LINK, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeId
        Parameter Type: Integer
        Parent Containers: J1939NmNode,
        Description: Unique identifier of this node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmUserCallout
        Parameter Type: FunctionRef
        Parent Containers: J1939NmGeneral,
        Description: Pre-processor switch for enabling the &lt;User_AddressClaimedIndication&gt; and defining 
        the name of the callout function.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        FunctionName Def Condition:Max-Length: , Min-Length
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmBusOffDelayTickPeriod
        Parameter Type: FloatValue
        Parent Containers: J1939NmGeneral,
        Description: Duration of ticks that are used to time BusOff delays after conflicting address 
        claims. This parameter must be synchronized with the main function period of the CAN State 
        Manager.
        Lower Multiplicity: 0
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: false
        Post-Build-Variant-Value: false
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: LINK, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: LINK, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: INF (Type: OPEN)
        Min-Value: 0 (Type: OPEN)
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_Init initializes all internal variables and sets the J1939 Network Management 
        module to the initialized state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00002.1</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00002.2</srcid><srcstatus/><internalId>120</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_DeInit sets the J1939 Network Management module back to the uninitialized 
        state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_488</srcid><srcstatus/><internalId>269</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_DEINIT</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When J1939Nm_Init is called in initialized state, the J1939 Network Management module shall not 
        re-initialize its internal variables. It shall instead call Det_ReportError with the error code 
        J1939NM_E_REINIT if DET reporting is enabled via J1939NmDevErrorDetect.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INIT</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_390</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall use the J1939Nm_MainFunction for timing related 
        purposes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1413</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        During initialization via J1939Nm_Init, the J1939 Network Management module shall silently 
        assume the 'SleepMode' for all NodeChannels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_SLEEP_MODE</srcid><srcstatus/><internalId>514</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_FALSE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_421</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_NetworkRequest shall set all NodeChannels of the reported channel to '
        NetworkMode'. The J1939 Network Management module shall notify this mode change to the NM 
        Interface via Nm_NetworkMode, and shall trigger transmission of an AddressClaimed PG for each 
        NodeChannel where J1939NmChannelUsesAddressArbitration is enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00009.1</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00009.2</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00009.3</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for deferred online state (
        J1939NmNodeStartUpDelay enabled), its NodeChannels shall enter the sub state 'Claiming' of the 
        state 'Offline' immediately after the switch from 'SleepMode' to 'NetworkMode'. The J1939 
        Network Management module shall report this state change to the Basic Software Mode Manager via 
        BswM_J1939Nm_StateChangeNotification(NM_STATE_OFFLINE)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00010.1</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00010.2</srcid><srcstatus/><internalId>128</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for immediate online state (
        J1939NmNodeStartUpDelay disabled), its NodeChannels shall enter the state 'NormalOperation' 
        immediately after the switch from 'SleepMode' to 'NetworkMode'. The J1939 Network Management 
        module shall report this state change to the Basic Software Mode Manager via 
        BswM_J1939Nm_StateChangeNotification(NM_STATE_NORMAL_OPERATION)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00011.1</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00011.2</srcid><srcstatus/><internalId>130</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        See "SWS_SAEJ1939NetworkManagement__Table_7"
        Error Name: | J1939NM_E_ADDRESS_LOST 
        Short Description: | The desired address could not be claimed.
        Long Description: | During start-up of the ECU, all J1939Nm nodes need to send an address claim 
        to the bus and wait for acceptance of the claimed address. If another ECU claims the same 
        address and has a higher priority, the ECU loses its address and stops communication. This is a 
        critical problem, because J1939Nm was not specified for networks where this can happen.
        Detection Criteria: | Fail | When address claiming failed, because an AddressClaimed message 
        with higher priority was received (see [SWS_J1939Nm_00021]), the J1939 Network Management 
        module shall report the extended production error J1939NM_E_ADDRESS_LOST with event status 
        DEM_EVENT_STATUS_PREFAILED to DEM.
        Pass | When address claiming succeeded, because the J1939 Network Management entered the state 
        NormalOperation' (see [SWS_J1939Nm_00011] and [SWS_J1939Nm_00013]), the J1939 Network 
        Management module shall report the extended production error J1939NM_E_ADDRESS_LOST with event 
        status DEM_EVENT_STATUS_PREPASSED to DEM.
        Secondary Parameters: | Address claiming is started when a node enters NetworkMode for a 
        channel.
        Time Required: | Typically 250ms after changing to NetworkMode, but possible during entire run 
        time when addresses can change at run time or ECUs are attached later (or wake up later)
        Monitor Frequency | The bus is continuously monitored for AddressClaimed messages.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00012.1</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00012.2</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the delay timer of a NodeChannel expires in sub state 'Claiming', the J1939 Network 
        Management module shall switch that NodeChannel to state 'NormalOperation' and shall report 
        this state change to the Basic Software Mode Manager via BswM_J1939Nm_StateChangeNotification(
        NM_STATE_NORMAL_OPERATION)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00013.1</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00013.2</srcid><srcstatus/><internalId>132</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When a NodeChannel loses its address in 'NetworkMode', it shall switch to the sub state 'AcLost'
        of state 'Offline' and, after a delay calculated according to [SWS_J1939Nm_00068], trigger 
        transmission of a CannotClaimAddress PG.
      </description>
      <comment>
        This delay called as BusoffRandomDelay and it shall be processed in the
        J1939Nm_Mainfunction().
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00014.1</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00014.2</srcid><srcstatus/><internalId>134</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_NetworkRelease shall set all NodeChannels of the reported channel to '
        SleepMode'. The J1939 Network Management module shall notify this mode change to the NM 
        Interface via Nm_BusSleepMode, and shall report a state change to 'SleepMode' to the NM 
        Interface via Nm_StateChangeNotification(NM_STATE_BUS_SLEEP) and to BswM via 
        BswM_J1939Nm_StateChangeNotification(NM_STATE_BUS_SLEEP)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00015.1</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00015.2</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00015.3</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00015.4</srcid><srcstatus/><internalId>138</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the J1939 Network Management module needs to send an AddressClaimed (or CannotClaimAddress)
        PG, and no previous transmission is pending, it shall directly forward the corresponding PDU to 
        the CAN Interface via CanIf_Transmit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_NULL_ADDRESS</srcid><srcstatus/><internalId>563</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1303</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2299</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the J1939 Network Management module needs to send an AddressClaimed (or CannotClaimAddress)
        PG, and the CAN Interface has not yet called J1939Nm_TxConfirmation for the previous 
        transmission, the J1939 Network Management module shall buffer this PG for later transmission.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2326</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Apart from the initial AddressClaimed PG, the J1939 Network Management module shall buffer only 
        the latest AddressClaimed or CannotClaimAddress PG.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BUFFER_HANDLE</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_173</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_TxConfirmation with result E_OK shall trigger transmission of a buffered 
        AddressClaimed or CannotClaimAddress PG via CanIf_Transmit.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_GenTest_01002_Err_CanIf_Invalid_TxPduId</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_MULTIPLE_NODES</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1141</srcid><srcstatus/><internalId>341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If J1939NmChannelUsesAddressArbitration is enabled, a call to J1939Nm_RxIndication indicating 
        reception of an AddressClaimed PG with one of the source addresses configured via 
        J1939NmNodePreferredAddress and a payload that has a higher numerical value than the NAME for 
        this source address configured via J1939NmNodeNameXxx shall trigger transmission of an 
        AddressClaimed PG for the according NodeChannel (see section [REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_CHANNELARBITRATION_FALSE</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1030</srcid><srcstatus/><internalId>328</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If J1939NmChannelUsesAddressArbitration is enabled, a call to J1939Nm_RxIndication indicating 
        reception of an AddressClaimed PG with one of the source addresses configured via 
        J1939NmNodePreferredAddress and a payload that has a lower numerical value than the NAME for 
        this source address configured via J1939NmNodeNameXxx shall induce a state change of the 
        according NodeChannel to the sub state 'AcLost' of state 'Offline'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLIAM_LOST</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_CHANNELARBITRATION_FALSE</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1041</srcid><srcstatus/><internalId>329</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RequestIndication shall trigger transmission of an AddressClaimed PG when the 
        addressed NodeChannel is in state 'NormalOperation' or sub state 'Claiming' of state 'Offline'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00022.1</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00022.2</srcid><srcstatus/><internalId>140</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RequestIndication shall trigger transmission of a CannotClaimAddress PG after 
        a delay calculated according to [SWS_J1939Nm_00068] when the addressed NodeChannel is in sub 
        state 'AcLost' of state 'Offline'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_AC_LOST</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_AC_LOST_GLOBAL</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1310</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1380</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value 
        An API was called while the module was uninitialized | J1939NM_E_UNINITJ1939Nm.J1939NM_E_UNINIT 
        0x01 
        The Init API was called twice | J1939NM_E_REINITJ1939Nm.J1939NM_E_REINIT | 0x02 
        J1939Nm_Init was called with an invalid configuration pointer | J1939NM_E_INIT_FAILEDJ1939Nm.
        J1939NM_E_INIT_FAILED | 0x03 
        An API service was called with a NULL pointer | J1939NM_E_PARAM_POINTERJ1939Nm.
        J1939NM_E_PARAM_POINTER | 0x10 
        An API service was called with a wrong ID | J1939NM_E_INVALID_PDU_SDU_IDJ1939Nm.
        J1939NM_E_INVALID_PDU_SDU_ID | 0x11 
        An API service was called with wrong network handle | J1939NM_E_INVALID_NETWORK_IDJ1939Nm.
        J1939NM_E_INVALID_NETWORK_ID | 0x12 
        An API was called with an unsupported PGN | J1939NM_E_INVALID_PGNJ1939Nm.J1939NM_E_INVALID_PGN 
        0x13 
        An API was called with an illegal priority | J1939NM_E_INVALID_PRIOJ1939Nm.
        J1939NM_E_INVALID_PRIO | 0x14 
        An API was called with an illegal node address | J1939NM_E_INVALID_ADDRESSJ1939Nm.
        J1939NM_E_INVALID_ADDRESS | 0x15 
        An API was called with an illegal node ID | J1939NM_E_INVALID_NODEJ1939Nm.
        J1939NM_E_INVALID_NODE | 0x16 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.1</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.2</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.3</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.4</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.5</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.6</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.7</srcid><srcstatus/><internalId>147</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.8</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.9</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00024.10</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module 
        shall check PduIdType parameters (SDU/PDU IDs) of its API functions against the configured IDs,
        and shall report the development error J1939NM_E_INVALID_PDU_SDU_ID when an unknown ID is 
        provided by the call.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PDUSDU_ID</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1123</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1883</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module 
        shall check NetworkHandleType parameters (network handles) of its API functions against the 
        referenced network handles of ComM, and shall report the development error 
        J1939NM_E_INVALID_NETWORK_ID when an unknown handle is provided by the call.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_556</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_747</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_794</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_850</srcid><srcstatus/><internalId>311</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_915</srcid><srcstatus/><internalId>317</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1240</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | &lt; User_AddressClaimedIndication 
        Syntax 
        void &lt; User_AddressClaimedIndication &gt; (NetworkHandleType channel, uint8 sourceAddress, const 
        uint8* name)
        Service ID [hex] | 0x20 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | channel | Channel on which the AC was received.
        sourceAddress | Address of the node that sent the AC or NULL address (0xFE)
        name | Pointer to the byte array containing the 64bit NAME.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Provides the content of received AddressClaimed (AC) PGs.
        Available via | J1939Nm_Externals.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_NULL_ADDRESS</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_INVALID_RXPDUID</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_986</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module | Header File | Imported Type 
        ComStack_Types | ComStack_Types.h | NetworkHandleType 
        ComStack_Types.h | PduIdType 
        ComStack_Types.h | PduInfoType 
        ComStack_Types.h | PduLengthType 
        Dem | Rte_Dem_Type.h | Dem_EventIdType 
        Rte_Dem_Type.h | Dem_EventStatusType 
        J1939Rm | Rte_J1939Rm_Type.h | J1939Rm_ExtIdInfoType 
        Rte_J1939Rm_Type.h | J1939Rm_ExtIdType 
        Nm | NmStack_types.h | Nm_ModeType 
        NmStack_types.h | Nm_StateType 
        Std | Std_Types.h | Std_ReturnType 
        Std_Types.h | Std_VersionInfoType 
      </description>
      <comment>
        This requirement is informational only.
        The J1939Nm module doesn't need to import all those types.
        It imports what it needs to compile.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.SWS_J1939Nm_00029</srcid><srcstatus/><internalId>247</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | J1939Nm_ConfigType 
        Kind | Structure 
        Elements | implementation specific 
        Type 
        Comment 
        Description | This is the base type for the configuration of the J1939 Network Management 
        module. A pointer to an instance of this structure will be used in the initialization of the 
        J1939 Network Management module. The content of this structure is defined in chapter 10 
        Configuration specification.
        Available via | J1939Nm.h 
      </description>
      <comment>
        The current implementation of the J1939Nm module does not 
        support post build initialization.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Nm.xgen_83</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/J1939Nm.xgen_170</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_Init 
        Syntax 
        void J1939Nm_Init (const J1939Nm_ConfigType* configPtr)
        Service ID [hex] | 0x01 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | configPtr | Pointer to selected configuration structure 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function initializes the J1939 Network Management module.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_337</srcid><srcstatus/><internalId>256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INIT</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>

      <id>J1939Nm.SWS_J1939Nm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_DeInit 
        Syntax 
        void J1939Nm_DeInit (void)
        Service ID [hex] | 0x02 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | This function resets the J1939 Network Management module to the uninitialized 
        state.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_DEINIT</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_474</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_GetVersionInfo 
        Syntax 
        void J1939Nm_GetVersionInfo (Std_VersionInfoType* versionInfo)
        Service ID [hex] | 0x03 
        Sync/Async | Synchronous 
        Reentrancy | Non Reentrant 
        Parameters (in) | None 
        Parameters (inout) | None 
        Parameters (out) | versionInfo | Pointer to where to store the version information of this 
        module.
        Return value | None 
        Description | Returns the version information of this module.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_GET_VERSION_INFO</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_502</srcid><srcstatus/><internalId>270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>2</version>
      <description>
        Service Name | J1939Nm_RxIndication 
        Syntax 
        void J1939Nm_RxIndication (PduIdType RxPduId, const PduInfoType* PduInfoPtr)
        Service ID [hex] | 0x42 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | RxPduId | ID of the received PDU.
        PduInfoPtr | Contains the length (SduLength) of the received PDU, a pointer to a buffer (
        SduDataPtr) containing the PDU, and the MetaData related to this PDU.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indication of a received PDU from a lower layer communication interface module.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_935</srcid><srcstatus/><internalId>318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_INVALID_RXPDUID</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_TxConfirmation 
        Syntax 
        void J1939Nm_TxConfirmation (PduIdType TxPduId, Std_ReturnType result)
        Service ID [hex] | 0x40 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in) | TxPduId | ID of the PDU that has been transmitted.
        result | E_OK: The PDU was transmitted. E_NOT_OK: Transmission of the PDU failed.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | The lower layer communication interface module confirms the transmission of a PDU,
        or the failure to transmit a PDU.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_TX_CONFIRMATION</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1089</srcid><srcstatus/><internalId>334</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_MainFunction 
        Syntax 
        void J1939Nm_MainFunction (void)
        Service ID [hex] | 0x04 
        Description | Main function of the J1939 Network Management module. Used for scheduling 
        purposes and timeout supervision.
        Available via | SchM_J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_PENDING_TX</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_PENDING_TX</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1414</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The frequency of invocations of J1939Nm_MainFunction is determined by the configuration 
        parameter J1939NmMainFunctionPeriod.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/J1939Nm_Bswmd.arxml.m4_175</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        BswM_J1939Nm_StateChangeNotification | BswM_J1939Nm.h | Notification of current J1939Nm state 
        after state changes.
        CanIf_Transmit | CanIf.h | Requests transmission of a PDU.
        Dem_SetEventStatus | Dem.h | Called by SW-Cs or BSW modules to report monitor status 
        information to the Dem. BSW modules calling Dem_SetEventStatus can safely ignore the return 
        value. This API will be available only if ({Dem/DemConfigSet/DemEventParameter/
        DemEventReportingType} == STANDARD_REPORTING)
        Nm_BusSleepMode | Nm.h | Notification that the network management has entered Bus-Sleep Mode.
        Nm_NetworkMode | Nm.h | Notification that the network management has entered Network Mode.
        Nm_StateChangeNotification | Nm.h | Notification that the state of the lower layer &lt;BusNm&gt; has 
        changed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.1</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.2</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.3</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.4</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.5</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00040.6</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description 
        Det_ReportError | Det.h | Service to report development errors.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INIT</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_391</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_RequestIndication 
        Syntax 
        void J1939Nm_RequestIndication (uint8 node, NetworkHandleType channel, uint32 requestedPgn, 
        const J1939Rm_ExtIdInfoType* extIdInfo, uint8 sourceAddress, uint8 destAddress, uint8 priority)
        Service ID [hex] | 0x47 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | node | Node by which the request was received.
        channel | Channel on which the request was received.
        requestedPgn | PGN of the requested PG.
        extIdInfo | Extended identifier bytes.
        sourceAddress | Address of the node that sent the Request PG.
        destAddress | Address of this node or 0xFF for broadcast.
        priority | Priority of the Request PG.
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | None 
        Description | Indicates reception of a Request or Request2 PG.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_AC_LOST_GLOBAL</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_SLEEP_MODE</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL_SLEEP_MODE</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1184</srcid><srcstatus/><internalId>345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_NetworkRequest 
        Syntax 
        Std_ReturnType J1939Nm_NetworkRequest (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x05 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Requesting of network has failed 
        Description | Request the network, since ECU needs to communicate on the bus.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_531</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_NetworkRelease 
        Syntax 
        Std_ReturnType J1939Nm_NetworkRelease (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x06 
        Sync/Async | Asynchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Releasing of network has failed 
        Description | Release the network, since ECU doesn't have to communicate on the bus.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_726</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_GetState 
        Syntax 
        Std_ReturnType J1939Nm_GetState (NetworkHandleType NetworkHandle, Nm_StateType* nmStatePtr, 
        Nm_ModeType* nmModePtr)
        Service ID [hex] | 0x0d 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant 
        Parameters (in) | NetworkHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | nmStatePtr | Pointer where state of the network management shall be copied 
        to.
        nmModePtr | Pointer where the mode of the network management shall be copied to.
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Getting of NM state has failed 
        Description | Returns the state and the mode of the network management.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_GET_NETWORK_MODE_STATE</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_771</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_PassiveStartUp 
        Syntax 
        Std_ReturnType J1939Nm_PassiveStartUp (NetworkHandleType nmChannelHandle)
        Service ID [hex] | 0x0f 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant (but not for the same NM-Channel)
        Parameters (in) | nmChannelHandle | Identification of the NM-channel 
        Parameters (inout) | None 
        Parameters (out) | None 
        Return value | Std_ReturnType | E_OK: No errorE_NOT_OK: Passive startup of network management 
        has failed 
        Description | Passive startup of the NM. It triggers the transition from Bus-Sleep Mode to the 
        Network Mode without requesting the network.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_LegacySymbolicNameValues</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_UserCallback</srcid><srcstatus/><internalId>480</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_PASSIVESTARTUP_CORRECT</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_PASSIVESTARTUP_NOINIT</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_895</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The &lt;User_AddressClaimedIndication&gt; function shall only be available if J1939NmUserCallout is 
        configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_NULL_ADDRESS</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_INVALID_RXPDUID</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_981</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If enabled via J1939NmUserCallout, the J1939Nm shall forward the source address and the content 
        of each AddressClaimed PG to the call-out function &lt;User_AddressClaimedIndication&gt; (see 
        SWS_J1939Nm_00028)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_NULL_ADDRESS</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_USER_CALLOUT_INVALID_RXPDUID</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_985</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When J1939Nm_TxConfirmation is called with result E_OK for the initial AddressClaimed PG of a 
        NodeChannel (transmitted during the transition to the 'Claiming' sub state), the J1939 Network 
        Management module shall start the delay timer for this NodeChannel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1136</srcid><srcstatus/><internalId>339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When CanIf_Transmit returns with E_NOT_OK or when J1939Nm_TxConfirmation is called with result 
        E_NOT_OK, the transmission of that PG shall be triggered again.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00062.1</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00062.2</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When all NodeChannels of a channel are configured for deferred online state (
        J1939NmNodeStartUpDelay enabled), the J1939 Network Management module shall report the state 
        change of these NodeChannels to the 'Offline' state immediately to the NM Interface via 
        Nm_StateChangeNotification(NM_STATE_OFFLINE)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_710</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the first NodeChannel of a channel changes its state to 'NormalOperation', the J1939 
        Network Management module shall report this state change immediately to the NM Interface via 
        Nm_StateChangeNotification(NM_STATE_NORMAL_OPERATION)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_FALSE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_669</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When a NodeChannel switches from state 'NormalOperation' to the sub state 'AcLost' of state '
        Offline', the J1939 Network Management module shall notify the Basic Software Mode Manager via 
        BswM_J1939Nm_StateChangeNotification(NM_STATE_OFFLINE)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ACKLOST_STATE_CHECK</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1637</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the last NodeChannel of a channel changes its state to 'Offline', the J1939 Network 
        Management module shall report this state change immediately to the NM Interface via 
        Nm_StateChangeNotification(NM_STATE_OFFLINE)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_708</srcid><srcstatus/><internalId>295</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1760</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when the 'sourceAddress'
        or the 'priority' are not in the valid range, or when 'node' is not one of the configured node 
        IDs (see J1939NmNodeId), or when 'requestedPgn' is not the PGN of AC, or when 'destAddress' is 
        not 0xFF or the address of the reported node. If DET reporting is enabled via 
        J1939NmDevErrorDetect, the J1939 Network Management module shall report the corresponding 
        development error: J1939NM_E_INVALID_NODE for 'node', J1939NM_E_INVALID_PGN for 'requestedPgn'
        J1939NM_E_INVALID_ADDRESS for 'sourceAddress' or 'destAddress', and J1939NM_E_INVALID_PRIO for 
        priority'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.1</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.2</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.3</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.4</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.5</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.6</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.7</srcid><srcstatus/><internalId>159</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.8</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.9</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00067.10</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00068</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The J1939Nm shall calculate a random number for delaying bus off recovery and transmission of a 
        CannotClaimAddress PG. The calculation shall use the NAME of a node as seed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00068.1</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00068.2</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>EB_Ref.SWS_J1939Nm_00068.3</srcid><srcstatus/><internalId>123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        When J1939Nm_GetBusOffDelay is called, J1939Nm shall return a random number based on the NAMEs 
        of all nodes attached to the reported channel. This random number gives the delay time, based 
        on the ticktime configured via J1939NmBusOffDelayTickPeriod.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.BusOff</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | J1939Nm_GetBusOffDelay 
        Syntax 
        void J1939Nm_GetBusOffDelay (NetworkHandleType network, uint8* delayCyclesPtr)
        Service ID [hex] | 0x10 
        Sync/Async | Synchronous 
        Reentrancy | Reentrant for different networks 
        Parameters (in) | network | CAN network where a BusOff occurred.
        Parameters (inout) | None 
        Parameters (out) | delayCyclesPtr | Number of CanSM base cycles to wait additionally to L1/L2 
        after a BusOff occurred.
        Return value | None 
        Description | This callout function returns the number of CanSM base cycles to wait 
        additionally to L1/L2 after a BusOff occurred.
        Available via | J1939Nm.h 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_828</srcid><srcstatus/><internalId>308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmChannelUsesAddressArbitration
        Parameter Type: Boolean
        Parent Containers: J1939NmChannel,
        Description: Defines whether the nodes attached to this channel use an initial address claim, 
        and whether they react to contending address claims of other nodes.
        Introduction: True: The initial address claim is sent, and the node reacts to address claims of 
        other nodes. False: The node only sends an address claim upon request, and does not react to 
        other address claims.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmGatewaySupport
        Parameter Type: Boolean
        Parent Containers: J1939NmGeneral,
        Description: Enables/disables support for claiming the addresses of routed messages.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00036</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmSharedAddressSpace
        Container Type: Sub-Container
        Parent Containers: J1939NmConfigSet,
        Description: Set of J1939NmChannels that share a common address space. Address claims will be 
        routed between these channels.
        Lower Multiplicity: 0
        infinite
        Post-Build-Variant-Multiplicity: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00037</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmSharedChannelRef
        Parameter Type: Reference
        Parent Containers: J1939NmSharedAddressSpace,
        Description: Reference to a channel that belongs to the shared address space.
        Lower Multiplicity: 2
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00038</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNode
        Container Type: Sub-Container
        Parent Containers: J1939NmConfigSet,
        Description: Logical node implemented in another ECU. Configures potential communication 
        partners. If this container is connected to more than one channel, the external ECU is linked 
        to the local ECU by each of these channels.
        Lower Multiplicity: 0
        infinite
        Post-Build-Variant-Multiplicity: false
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00039</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeId
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Unique identifier of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: false
        Value-Configuration Class: PRE-COMPILE, VARIANT-LINK-TIME
        Value-Configuration Class: PRE-COMPILE, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: true
        Max-Value: 65535 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00040</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameArbitraryAddressCapable
        Parameter Type: Boolean
        Parent Containers: J1939NmExternalNode,
        Description: Arbitrary Address Capable field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00041</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameECUInstance
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: ECU Instance field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 7 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00042</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameFunction
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Function field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 255 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00043</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameFunctionInstance
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Function Instance field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 31 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00044</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameIdentityNumber
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Identity Number field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 2097151 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00045</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameIndustryGroup
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Industry Group field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 7 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00046</srcid><srcstatus/><internalId>238</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameManufacturerCode
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Manufacturer Code field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 2047 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00047</srcid><srcstatus/><internalId>239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameVehicleSystem
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Vehicle System field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 127 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00048</srcid><srcstatus/><internalId>240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodePreferredAddress
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Source address of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: ECU
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 253 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00049</srcid><srcstatus/><internalId>241</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeNameVehicleSystemInstance
        Parameter Type: Integer
        Parent Containers: J1939NmExternalNode,
        Description: Vehicle System Instance field of the NAME of this external node.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Symbolic-Name-Value: false
        Max-Value: 15 (Type:
        Min-Value: 0 (Type:
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00050</srcid><srcstatus/><internalId>242</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeChannelRef
        Parameter Type: Reference
        Parent Containers: J1939NmExternalNode,
        Description: Reference to the channels of the local ECU this external node has access to.
        Lower Multiplicity: 1
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00051</srcid><srcstatus/><internalId>243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmExternalNodeGatewayedChannelRef
        Parameter Type: Reference
        Parent Containers: J1939NmExternalNode,
        Description: Reference to the channels on which messages to/from this external node shall be 
        gatewayed. The address claim from the external node will be replicated on these channels.
        Lower Multiplicity: 0
        infinite
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Multiplicity: true
        Post-Build-Variant-Value: true
        Multiplicity-Configuration Class: LINK, VARIANT-LINK-TIME
        Multiplicity-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Multiplicity-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmChannel
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00052</srcid><srcstatus/><internalId>244</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name: J1939NmNodeRef
        Parameter Type: Reference
        Parent Containers: J1939NmNodeSpecificDemEventParameterRefs,
        Description: Reference to J1939NmNode.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
        Scope: LOCAL
        Origin: AUTOSAR_ECUC
        Post-Build-Variant-Value: true
        Value-Configuration Class: LINK, VARIANT-LINK-TIME
        Value-Configuration Class: POST-BUILD, VARIANT-POST-BUILD
        Value-Configuration Class: PRE-COMPILE, VARIANT-PRE-COMPILE
        Destination: /AUTOSAR/EcucDefs/J1939Nm/J1939NmConfigSet/J1939NmNode
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If gateway support is enabled via J1939NmGatewaySupport, and the configuration contains a 
        J1939NmSharedAddressSpace, the J1939Nm shall transmit all AddressClaimed messages received on 
        one of the channels referenced by J1939NmSharedAddressSpace on all other channels referenced by 
        the same J1939NmSharedAddressSpace.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.J1939NmGatewaySupport</srcid><srcstatus/><internalId>245</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        If gateway support is enabled via J1939NmGatewaySupport, and the configuration contains a 
        J1939NmExternalNode, the channels referenced by J1939NmExternalNodeGatewayedChannelRef shall be 
        treated like internal node channels, with the difference that the state transition from 
        SleepMode to NetworkMode is triggered by the reception of an AddressClaimed message from the 
        external node and enters NormalOperation immediately, and the transition to SleepMode is 
        triggered by the reception of a CannotClaimAddress message from the same node.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.ECUC_J1939Nm_00072</srcid><srcstatus/><internalId>246</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall use a meta data item of type CAN_ID_32 to provide the 
        source address of transmitted AddressClaimed and CannotClaimAddress PGs. The source address 
        resides in the last (least significant) byte of the meta data item.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_CANIF_E_NOT_OK</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_284</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>J1939Nm.SWS_J1939Nm_00074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall use a meta data item of type CAN_ID_32 to determine 
        the source address of received AddressClaimed and CannotClaimAddress PGs. The source address 
        resides in the last (least significant) byte of the meta data item.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLIAM_LOST</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_971</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>J1939Nm.ECUC_J1939Nm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_SAEJ1939NetworkManagement.pdf, R20-11</source>
      <version>1</version>
      <description>
        See"J1939Nm_x_Module"
        Module Name | J1939NmJ1939Nm 
        Module Description | Configuration of the J1939 Network Management module.
        Post-Build Variant Support | true 
        Supported Config Variants | VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-PRE-COMPILE 
        Included containers: "J1939Nm_x_Included_Containers"
        Included Containers 
        Container Name | Multiplicity | Scope / Dependency 
        J1939NmConfigSet | 1 | This container contains the configuration parameters and sub containers 
        of the AUTOSAR J1939Nm module.
        J1939NmGeneral | 1 | Contains the general configuration parameters of the module.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Covered by development toolchain: VSMD check.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00001.1</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The implementation (J1939Nm.h) shall include the file J1939Nm_Types.h.
      </description>
      <releases>
      <release>AUTOSAR 4.2.2</release>
    </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/J1939Nm.h_11</srcid><srcstatus/><internalId>251</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>J1939Nm.ASR42.SWS_J1939Nm_00001</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00001.2</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        The callback header files (J1939Nm_Cbk.h) shall include the file J1939Nm_Types.h.
      </description>
        <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/J1939Nm_Cbk.h_7</srcid><srcstatus/><internalId>252</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ASR42.SWS_J1939Nm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00002.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_Init initializes all internal variables.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_409</srcid><srcstatus/><internalId>261</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00002.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_Init sets the J1939 Network Management module to the initialized state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_DEINIT</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_459</srcid><srcstatus/><internalId>265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00068.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Nm shall calculate a random number for delaying bus off recovery.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.BusOff</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00068.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939Nm shall calculate a random number for delaying transmission of a CannotClaimAddress PG.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_1</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_2</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1309</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1379</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00068.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The calculation shall use the NAME of a node as seed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.BusOff</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00068</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00009.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_NetworkRequest shall set all NodeChannels of the reported channel to
        'NetworkMode'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_582</srcid><srcstatus/><internalId>277</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_622</srcid><srcstatus/><internalId>282</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00009.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When all the NodeChannels of the reported channel set to 'NetworkMode', The J1939 NetworkManagement
        module shall notify this mode change to the NM Interface via Nm_NetworkMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_CHANNELARBITRATION_FALSE</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_703</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00009.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_NetworkRequest shall trigger transmission of an AddressClaimed PG for
        each NodeChannel where J1939NmChannelUsesAddressArbitration is enabled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_CHANNELARBITRATION_FALSE</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NODE_NAME_BYTE1_VALIDATION_TEST</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_632</srcid><srcstatus/><internalId>284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00010.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for deferred on-line state
        (J1939NmNodeStartUpDelay enabled), its NodeChannels shall enter the sub state 'Claiming' of
        the state 'Off-line' immediately after the switch from 'SleepMode' to 'NetworkMode'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CLAIMING_SUB_STATE_IMMEDIATE</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_651</srcid><srcstatus/><internalId>285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00010.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for deferred on-line state
        (J1939NmNodeStartUpDelay enabled), when its NodeChannels enter the sub state
        'Claiming' of the state 'Off-line', the J1939 NetworkManagement module shall report this
        state change to the Basic Software ModeManager via BswM_J1939Nm_StateChangeNotification
        (NM_STATE_OFFLINE).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CLAIMING_SUB_STATE_IMMEDIATE</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_657</srcid><srcstatus/><internalId>287</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2213</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2231</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00011.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for immediate on-line state
        (J1939NmNodeStartUpDelay disabled), its NodeChannels shall enter the state 'NormalOperation'
        immediately after the switch from 'SleepMode' to 'NetworkMode'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_FALSE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_664</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2223</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00011.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If a node of the J1939 Network Management module is configured for immediate on-line state
        (J1939NmNodeStartUpDelay disabled), when its NodeChannels shall enter the state
        'NormalOperation', the J1939 Network Management module shall report this state change to
        the Basic Software Mode Manager via BswM_J1939Nm_StateChangeNotification
        (NM_STATE_NORMAL_OPERATION).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_FALSE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_678</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00013.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When the delay timer of a NodeChannel expires ( NodeChannel has stayed for 250ms in state 'Claiming' after transmission of the initial AddressClaimed PG ),
        the J1939 Network Management module shall switch that NodeChannel to state 'NormalOperation'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1732</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00013.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When the delay timer of a NodeChannel expires ( NodeChannel has stayed for 250ms in state "Claiming" after transmission of the initial AddressClaimed PG ),
        it shall report this state change to the Basic Software Mode Manager via
        BswM_J1939Nm_StateChangeNotification(NM_STATE_NORMAL_OPERATION).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1737</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00014.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When a NodeChannel loses its address in 'NetworkMode',
        it shall switch to the sub state 'AcLost' of state 'Off-line'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1047</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ACKLOST_STATE_CHECK</srcid><srcstatus/><internalId>556</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_CHANNEL_SLEEP_CHECK</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_SAME_NODE_NAME_VALIDATION_TEST</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NODE_NAME_BYTE1_VALIDATION_TEST</srcid><srcstatus/><internalId>568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00014.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When a NodeChannel loses its address in 'NetworkMode',
        after a delay calculated according to [SWS_J1939Nm_00068],
        trigger transmission of a CannotClaimAddress PG.
      </description>
      <comment>
        This delay called as BusoffRandomDelay and it shall be processed in the
        J1939Nm_Mainfunction().
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1610</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_1</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_2</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00015.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_NetworkRelease shall set all NodeChannels of the reported channel to
        'SleepMode'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1452</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00015.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When all NodeChannels of the reported channel set to 'SleepMode' after call to
        J1939Nm_NetworkRelease, the J1939 NetworkManagement module shall notify this mode change to
        the NM Interface via Nm_BusSleepMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1463</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00015.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When all NodeChannels of the reported channel to set to 'SleepMode' after call of
        J1939Nm_NetworkRelease, The J1939 Network Management module shall report a state change to
        'SleepMode' to the NM Interface via Nm_StateChangeNotification(NM_STATE_BUS_SLEEP).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1466</srcid><srcstatus/><internalId>380</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00015.4</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When all NodeChannels of the reported channel to set to 'SleepMode' after call of
        J1939Nm_NetworkRelease, the J1939 NetworkManagement module shall report a state change to
        'SleepMode' to the BswM via BswM_J1939Nm_StateChangeNotification(NM_STATE_BUS_SLEEP).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1457</srcid><srcstatus/><internalId>377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00022.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RequestIndication shall trigger transmission of an AddressClaimed PG when
        the addressed NodeChannel is in state 'NormalOperation'.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1294</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1366</srcid><srcstatus/><internalId>367</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>542</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_AC_LOST_GLOBAL</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00022.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RequestIndication shall trigger transmission of an AddressClaimed PG when
        the addressed NodeChannel is in sub state 'Claiming' of state 'Off-line'.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1295</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1367</srcid><srcstatus/><internalId>368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM_CLAIMING_SUB_STATE</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>


    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error value is of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API was called     Development   J1939NM_E_UNINIT              0x01
        while the module
        was uninitialized.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_PASSIVESTARTUP_NOINIT</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_482</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_547</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_739</srcid><srcstatus/><internalId>299</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_785</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_843</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_907</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_996</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1101</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1233</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1427</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        The Init API was      Development   J1939NM_E_REINIT              0x02
        called twice.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_REINIT</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_392</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        J1939Nm_Init was      Development   J1939NM_E_INIT_FAILED         0x03
        called with an
        invalid configuration
        pointer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INVALID_POINTER</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.4</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API service was    Development   J1939NM_E_PARAM_POINTER       0x10
        called with a NULL
        pointer.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_NULL_POINTER</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_508</srcid><srcstatus/><internalId>271</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_803</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_858</srcid><srcstatus/><internalId>313</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1003</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.5</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code              Value [hex]
        An API service was    Development   J1939NM_E_INVALID_PDU_SDU_ID    0x11
        called with a wrong
        ID.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PDUSDU_ID</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1124</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1884</srcid><srcstatus/><internalId>398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.6</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API service was    Development   J1939NM_E_INVALID_NETWORK_ID  0x12
        called with wrong
        network handle.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_557</srcid><srcstatus/><internalId>276</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_748</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_795</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_851</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.7</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API was called     Development   J1939NM_E_INVALID_PGN         0x13
        with an unsupported
        PGN.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PGN</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1256</srcid><srcstatus/><internalId>352</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.8</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API was called     Development   J1939NM_E_INVALID_PRIO        0x14
        with an illegal
        priority.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PRIORITY</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1276</srcid><srcstatus/><internalId>359</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.9</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API was called     Development   J1939NM_E_INVALID_ADDRESS     0x15
        with an illegal
        node address.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_ADDRESS</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1893</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00024.10</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
        Type or error         Relevance     Related error code            Value [hex]
        An API was called     Development   J1939NM_E_INVALID_NODE        0x16
        with an illegal
        node ID.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1901</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00012.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Error Name: J1939NM_E_ADDRESS_LOST
        Short Description: The desired address could not be claimed.
        Long Description: During start-up of the ECU, all J1939Nm nodes need to send an address
          claim to the bus and wait for acceptance of the claimed address. If another ECU claims the
          same address and has a higher priority, the ECU loses its address and stops communication.
          This is a critical problem, because J1939Nm was not specified for networks where this can
          happen.
        Detection Criteria:
        Primary Parameters:
          Fail: When address claiming failed, because an AddressClaimed message with higher
                priority was received (see [SWS_J1939Nm_00021]), the J1939 Network Management
                module shall report the extended production error J1939NM_E_ADDRESS_LOST with
                event status DEM_EVENT_STATUS_PREFAILED to DEM.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_1</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_2</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</srcid><srcstatus/><internalId>505</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1647</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00012.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        Error Name: J1939NM_E_ADDRESS_LOST
        Short Description: The desired address could not be claimed.
        Long Description: During start-up of the ECU, all J1939Nm nodes need to send an address
          claim to the bus and wait for acceptance of the claimed address. If another ECU claims the
          same address and has a higher priority, the ECU loses its address and stops communication.
          This is a critical problem, because J1939Nm was not specified for networks where this can
          happen.
        Detection Criteria:
        Primary Parameters:
          Pass: When address claiming succeeded, because the J1939 Network Management entered the
                state 'NormalOperation' (see [SWS_J1939Nm_00011] and [SWS_J1939Nm_00013]), the J1939 Network
                Management module shall report the extended production error J1939NM_E_ADDRESS_LOST
                with event status DEM_EVENT_STATUS_PREPASSED to DEM.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_PENDING_TX</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_PENDING_TX</srcid><srcstatus/><internalId>520</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</srcid><srcstatus/><internalId>521</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1743</srcid><srcstatus/><internalId>391</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when the
        'sourceAddress' is not in the valid range.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_INVALID_SA</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1264</srcid><srcstatus/><internalId>354</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, when the 'sourceAddress' not in the
        valid range, the J1939 Network Management module shall report the corresponding development
        error: J1939NM_E_INVALID_ADDRESS for 'sourceAddress'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_ADDRESS</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1265</srcid><srcstatus/><internalId>355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when the 'priority'
        is not in the valid range.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_INVALID_PRIORITY</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1275</srcid><srcstatus/><internalId>358</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.4</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, when the 'priority' are not in the
        valid range, the J1939 Network Management module shall report the corresponding development
        error: J1939NM_E_INVALID_PRIO for 'priority'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PRIORITY</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1277</srcid><srcstatus/><internalId>360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.5</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when 'node' is not
        one of the configured node IDs(J1939NmNodeId).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_INVALID_NODE</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1247</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.6</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, when 'node' is not one of the
        configured node IDs(J1939NmNodeId), the J1939 Network Management module shall report the
        corresponding development error: J1939NM_E_INVALID_NODE for 'node'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1248</srcid><srcstatus/><internalId>350</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.7</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when the
        'requestedPgn' is not the PGN of AC.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_INVALID_PGN</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1257</srcid><srcstatus/><internalId>353</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.8</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, when the 'requestedPgn' is not the
        PGN of AC, the J1939 Network Management module shall report the corresponding development
        error: J1939NM_E_INVALID_PGN for 'requestedPgn'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PGN</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1255</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.9</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        The J1939 Network Management module shall ignore the request indication when the
        'destAddress' is not 0xFF or the address of the reported node.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_INVALID_DA</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1266</srcid><srcstatus/><internalId>356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00067.10</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, when the 'destAddress' is not 0xFF or
        the address of the reported node. the J1939 Network Management module shall report the
        corresponding development error: J1939NM_E_INVALID_ADDRESS for 'destAddress'.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_ADDRESS</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1267</srcid><srcstatus/><internalId>357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>2</version>
      <description>
        API function: BswM_J1939Nm_StateChangeNotification
        Header File:  BswM_J1939Nm.h
        Description:  Notification of current J1939Nm state after state changes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CLAIMING_SUB_STATE_IMMEDIATE</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_656</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2212</srcid><srcstatus/><internalId>424</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2230</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: CanIf_Transmit
        Header File:  CanIf.h
        Description:  Requests transmission of a PDU.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLIAM_LOST</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1580</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.3</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: Dem_SetEventStatus
        Header File:  Dem.h
        Description:  Called by SW-Cs or BSW modules to report monitor status information to the Dem.
        BSW modules calling Dem_SetEventStatus can safely ignore the return value. This API will be
        available only if ({Dem/DemConfigSet/DemEventParameter/DemEventReportingType} == STANDARD_REPORTING)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.J1939Nm.DemReporting</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</id>
      <status>approved</status>
      <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: Dem_ReportErrorStatus
        Header File: Dem.h
        Description: Queues the reported events from the BSW modules (API is only used by BSW modules). The interface has an asynchronous behavior, because the processing of the event is done within the Dem main function. OBD Events Suppression shall be ignored for this computation.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</srcid><srcstatus/><internalId>522</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_690</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1655</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.4</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: Nm_NetworkMode
        Header File:  Nm.h
        Description:  Notification that the network management has entered Network Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_704</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.5</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: Nm_BusSleepMode
        Header File:  Nm.h
        Description:  Notification that the network management has entered Sleep Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1462</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    
    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00040.6</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        API function: Nm_StateChangeNotification
        Header File:  Nm.h
        Description:  Notification that the state of the lower layer "BusNm" has changed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_TRUE</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_670</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00062.1</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When CanIf_Transmit returns with E_NOT_OK, the transmission of that PG shall be triggered again.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_NETWORK_REQUEST_CANIF_E_NOT_OK</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_CANIF_E_NOT_OK</srcid><srcstatus/><internalId>553</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ACKLOST_STATE_CHECK</srcid><srcstatus/><internalId>556</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM_CANIF_E_NOT_OK</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_TX_CONFIRMATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1526</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>EB_Ref.SWS_J1939Nm_00062.2</id>
      <status>approved</status>
       <source>EB Refinement</source>
      <version>1</version>
      <description>
        When J1939Nm_TxConfirmation is called with result E_NOT_OK,
        the transmission of that PG shall be triggered again.
      </description>
      <releases>
         <release>AUTOSAR R20-11</release>
       </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_PROCESS_TX_CONFIRM_E_NOT_OK</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_MAINFUNCTION_PROCESS_TX_CONFIRM_E_NOT_OK</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_TX_CONFIRMATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1148</srcid><srcstatus/><internalId>343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <!-- EB specific features ====================================================================== -->
    <specobject>
      <id>J1939Nm.EB.Invalid_Call</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939Nm report the DET error J1939NM_E_INVALID_CALL if one of the dummy functions added for compilation and linkage only was called.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2341</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2352</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2363</srcid><srcstatus/><internalId>436</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2374</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_CALL_SETUSERDATA</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_CALL_GETUSERDATA</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_CALL_GETPDUDATA</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_CALL_CHECKREMOTESLEEPINDICATION</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Invalid_MetaData</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM report the DET error J1939NM_E_INVALID_METADATA_HANDLE if one of the EcuC APIs used for setting or getting MetaData returned E_NOT_OK.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_293</srcid><srcstatus/><internalId>255</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_976</srcid><srcstatus/><internalId>320</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_ECUC_METADATA_ENOTOK</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Invalid_PduSduLength</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM report the DET error J1939NM_E_INVALID_PDU_SDULENGTH if sdu length is less than 8 bytes.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1012</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_PDUSDU_LENGTH</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.BroadcastRequestIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RequestIndication with broadcast destination address, shall trigger a transmission of AddressClaimed PG or CannotClaimAddress PG
        for all the nodes configured in the channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1333</srcid><srcstatus/><internalId>366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_AC_LOST_GLOBAL</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL_SLEEP_MODE</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
  
    <specobject>
       <id>J1939Nm.EB.PBSelectable.FileName</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        &lt;Mod&gt;[_*]_PBcfg.* to &lt;Mod&gt;_&lt;postBuildVariant&gt;[_*]_PBcfg.*
      </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_PBSELECTABLE</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_IS_VALID_CONFIG_SIGNTURE_OK</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_PLAT_SIG</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_COMP_SIG</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_LINK_SIG</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_PUB_SIG</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_E_NOK</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_OK</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_VALID</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
       <id>J1939Nm.EB.PBSelectable.TypeName</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
      If postBuildVariant returns a non-empty string, the module's post-build-time
      configuration type/variable names shall be changed in the following way:
      - J1939Nm[Const]ConfigLayoutType to J1939Nm&lt;postBuildVariant&gt;_[Const]ConfigLayoutType
    </description>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_PBSELECTABLE</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_IS_VALID_CONFIG_SIGNTURE_OK</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_PLAT_SIG</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_COMP_SIG</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_LINK_SIG</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_INV_PUB_SIG</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_E_NOK</srcid><srcstatus/><internalId>539</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_OK</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_VALID</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    
    <specobject>
       <id>J1939Nm.EB.PbRAM.J1939NmMaxChannel</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        Define pre compile configuration parameter to set the max number of  J1939Nm channel that can be used in post build variants
       </description>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_823</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
       <id>J1939Nm.EB.PbRAM.J1939NmMaxNodes</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        Define pre compile configuration parameter to set the max number of  J1939Nm nodes that can be used in post build variants
       </description>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_835</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.DEINIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_DeInit is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_481</srcid><srcstatus/><internalId>267</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.NETWORK_REQUEST</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_NetworkRequest is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_546</srcid><srcstatus/><internalId>273</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.NETWORK_RELEASE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_NetworkRelease is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_738</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.GET_STATE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_GetState is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_784</srcid><srcstatus/><internalId>303</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.BUS_OFF_DELAY</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_GetBusOffDelay is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_842</srcid><srcstatus/><internalId>309</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.PASSIVE_STARTUP</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_PassiveStartUp is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_906</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.RX_INDICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_RxIndication is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_995</srcid><srcstatus/><internalId>324</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.TX_CONFIRMATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_TxConfirmation is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1100</srcid><srcstatus/><internalId>335</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.REQUEST_INDICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_RequestIndication is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1232</srcid><srcstatus/><internalId>346</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DET.MAINFUNCTION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect, the J1939 Network Management module
        shall call Det_ReportError with the error code J1939NM_E_UNINIT when an API
        J1939Nm_MainFunction is called in uninitialized state.
      </description>
      <releases>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1426</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

	 <specobject>
      <id>J1939Nm.EB.NumberOfChannels</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Nm configuration generator shall reject configurations where
        more than 255 channels  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_45</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
	 <specobject>
      <id>J1939Nm.EB.NumberOfNodes</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> J1939Nm configuration generator shall reject configurations where
        more than 255 channels  are configured. 
	  </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_526</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.DynamicAddressEnabled.Enabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939Nm module shall support the Dynamic address claimed feature when at least one J1939Nm node has J1939NmNodeDynamicAddressCapable enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_840</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.DynamicAddressEnabled.Disabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If no J1939Nm node has J1939NmNodeDynamicAddressCapable enabled Dynamic address claimed support shall be disabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_841</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.Init</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When Dynamic Address claimed support is enabled, a call to J1939Nm_Init shall initialize each Nodechannel Address to its referred node' preferred address. 
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_438</srcid><srcstatus/><internalId>264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_ONLINE</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.State</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A call to J1939Nm_SetNodeAddress shall update the NodeChannel address to the provided address without changing the NodeChannel state or sub-state.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2036</srcid><srcstatus/><internalId>406</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NODE_STATE if the J1939Nm_SetNodeAddress API is called with a node in NM_STATE_NORMAL_OPERATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2026</srcid><srcstatus/><internalId>405</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_STATE</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>    

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidNetworkId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NETWORK_ID if the J1939Nm_SetNodeAddress API is called with invalid ComM channel id.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2015</srcid><srcstatus/><internalId>404</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>   

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.IllegalNode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM report the DET error J1939NM_E_INVALID_NODE if the J1939Nm_SetNodeAddress API is called with a node not available in the provided channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2045</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
  
    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.NotDynamic</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_NOT_DYNAMIC_NODE if the J1939Nm_SetNodeAddress API is called for a node not dynamic address capable (J1939NmNodeDynamicAddressCapable switched off).      
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2006</srcid><srcstatus/><internalId>403</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A call to J1939Nm_GetNodeAddress shall provide the current NodeChannel address of the given node and channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2093</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_ONLINE</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.IllegalNode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NODE if the J1939Nm_GetNodeAddress API is called with a node unavailable in the provided channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2099</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.InvalidNetworkId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NETWORK_ID if the GetNodeAddress API is called with invalid ComM channel id.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2082</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>   

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RetryAddressClaiming API shall change the specified NodeChannel to sub-state Claiming of state NM_STATE_OFFLINE and update the NodeChannel address to the given source address.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2191</srcid><srcstatus/><internalId>420</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2203</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_ONLINE</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.Offline</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939Nm retries to send an address claim with the new address while calling J1939Nm_RetryAddressClaiming API and the NodeChannel is in the sub-state AcLost of state NM_STATE_OFFLINE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2179</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NormalOperation</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939Nm retries to send an address claim with the new address while calling J1939Nm_RetryAddressClaiming API and the NodeChannel is in the sub-state AcLost of state NM_STATE_NORMAL_OPERATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2180</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_ONLINE</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NODE_STATE if the J1939Nm_RetryAddressClaiming API is called with a node in NM_STATE_BUS_SLEEP.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2242</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_STATE</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>    

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NotDynamic</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_NOT_DYNAMIC_NODE if the J1939Nm_RetryAddressClaiming API is called for a node not dynamic address capable (J1939NmNodeDynamicAddressCapable switched off).      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2147</srcid><srcstatus/><internalId>414</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidNetworkId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NETWORK_ID if the J1939Nm_RetryAddressClaiming API is called with invalid ComM channel id.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2156</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NETWORK_ID</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>   

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.IllegalNode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_INVALID_NODE if the J1939Nm_RetryAddressClaiming API is called with a node unavailable in the provided channel.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1996</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2136</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2170</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_INVALID_NODE</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.AcLostNode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A call to J1939Nm_RetryAddressClaiming API for a NodeChannel in the state NM_STATE_NORMAL_OPERATION is accepted only if it has a Null Address.
      </description>
      <comment>
        The referred node shall have a NULL Address due to another NodeChannel related to that node having lost its address.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2209</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.Uninitialized</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If DET reporting is enabled via J1939NmDevErrorDetect,
        The J1939NM shall report the DET error J1939NM_E_UNINIT if any of the following APIs is called when the module is in uninitialized state 
        J1939Nm_RetryAddressClaiming, J1939Nm_SetNodeAddress, J1939Nm_GetNodeAddress.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1988</srcid><srcstatus/><internalId>401</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2073</srcid><srcstatus/><internalId>408</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2128</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_CHECK_UNINIT</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.AcLost</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939Nm NodeChannels loses its address and the J1939Nm module changes its state from NM_STATE_NORMAL_OPERATION to sub-state 
        AcLost of state NM_STATE_OFFLINE, the J1939Nm module shall set the address of all NodeChannels that reference the same node 
        to NULL address (254) without changing their state. 
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1617</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_1</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_2</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939NmNodeAddressClaimedLostCallout
        Description: Pre-processor switch for enabling the J1939NmNodeAddressClaimedLostCallout and defining 
        the name of the callout function.
        J1939NmNodeAddressClaimedLostCallout shall be enabled only when 
        at least one node has J1939NmNodeDynamicAddressCapable enabled.
        Multiplicity: 0..1
        Type: FunctionRef
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class: Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Value Configuration Class:        Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_868</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout.Call</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        J1939NmNodeAddressClaimedLostCallout when enabled, the callout function shall be called whenever any NodeChannel loses its address and its J1939NmNodeDynamicAddressCapable is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1060</srcid><srcstatus/><internalId>333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.DynamicAddressClaimed.NodeDynamicAddressCapable</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name J1939NmNodeDynamicAddressCapable
        Description: Configuration parameter shall be used to enable/disable the Dynamic address capability per J1939Nm node and its assoicated functionality.
        Multiplicity: 0..1
        Type: Boolean
        Post-Build Variant Multiplicity: false
        Post-Build Variant Value: false
        Multiplicity Configuration Class: Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Value Configuration Class:        Pre-compile time X All Variants
                                          Link time       --
                                          Post-build time --
        Scope / Dependency scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm_Extension.xdm.m4_699</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    
    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.Channel</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, the module shall support the automatic baud rate detection for that channel
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_91</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_GREATSUCCESS</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_MULTIPLE_NODES</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.WaitTime</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled for a channel, the module shall have a wait time configured. For that channel the wait time shall represent
        the time between the attempts to capture the baudrates configured in the supported baud rate list.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_105</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_GREATSUCCESS</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_MULTIPLE_NODES</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    
    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.BaudRateList</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, a list of potential baudrates must be configured, which refference baudrates configured for can-controllers relevant 
        for the ComM channel
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/J1939Nm.xdm.m4_234</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.Callout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, the CanIf RX_HOOK must be configured. This lets the user know that there is activity on the ComChannel relevant to
        J1939Nm, denoting that the baudrate has been succesfully captured and that normal operation can resume
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Nm_Externals.h_18</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_GREATSUCCESS</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_MULTIPLE_NODES</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
   
    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.NodeChannelNetworkModeState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, all node-channel network-mode states relevant to the channel that is attempting to capture a baudrate 
        shall be set to NM_STATE_OFFLINE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_595</srcid><srcstatus/><internalId>281</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.NodeChannelOfflineSubState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, all node-channel offline substates relevant to the channel that is attempting to capture a baudrate 
        shall be set to J1939NM_OFFLINE_DETECTING_BAUDRATE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_592</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    
    <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.DET</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, if all possible baudrates have been attempted without success, a DET shall be raised
        with error ID J1939NM_E_BAUDRATE_FAIL_CAPTURE
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1805</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    
   <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.CanSmSetBaudrate</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, the api CanSM_SetBaudRate() shall be called and it shall attempt to set a new baudrate.
        If the call returns E_OK, J1939Nm shall proceed to wait a number of cycles (wait-time) untill either there has been communication detected on a channel
        or untill the wait-time expires and CanSM_SetBaudRate() is called again for the next baudrate.
        If the call returns E_NOT_OK this means that there is a transition ongoing in CanSM. No internal J1939Nm timers are changed, and the call is attempted again
        in the next J1939Nm_MainFunction() with the same parameters
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1815</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_GREATSUCCESS</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_MULTIPLE_NODES</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
       <specobject>
      <id>J1939Nm.EB.AutomaticBaudRateDetection.RetryBaudrates</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When J1939NmChannelAutomaticBaudrateDetection is enabled, if all baudrates in the configured baudrate list have been attempted and all of them have faied
        J1939Nm module shall attempt to capture the baudrates in the list again.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1808</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>J1939Nm.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_J1939Nm_VerifyCodeStub</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.J1939Nm.BusOff</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>20</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.DemReporting</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00036</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00037</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00038</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00039</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00040</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00041</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00042</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00043</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00044</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00045</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00046</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00047</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00048</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00049</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00050</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00051</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00052</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.J1939NmGatewaySupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.ECUC_J1939Nm_00072</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>dev.J1939Nm.SWS_J1939Nm_00029</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Nm_Cfg.h_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate/include/J1939Nm_Cfg.h</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.dsn.PrecompileTimeConfig</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Nm_Externals.h_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate/include/J1939Nm_Externals.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Callout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/J1939Nm_Types.h_10</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate/include/J1939Nm_Types.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ASR42.SWS_J1939Nm_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/J1939Nm.h_11</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/include/J1939Nm.h</sourcefile>
      <sourceline>11</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00001.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/J1939Nm_Cbk.h_7</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/include/J1939Nm_Cbk.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00001.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_173</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_284</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_390</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>390</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_391</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00002.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_438</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00002.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_481</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.DEINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_482</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.NETWORK_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_556</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>556</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_557</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.NodeChannelOfflineSubState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.DetectingBaudRate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.NodeChannelNetworkModeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_622</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_632</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>632</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_651</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_657</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>657</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00011.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_669</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_670</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>670</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00011.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_704</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>704</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_708</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>708</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_726</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>726</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.NETWORK_RELEASE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_771</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>771</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.GET_STATE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_794</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_803</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>803</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_828</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>828</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.BUS_OFF_DELAY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_858</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_906</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>906</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.PASSIVE_STARTUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_907</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>907</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_915</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>915</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00036</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_976</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_995</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>995</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.RX_INDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1003</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1003</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_PduSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1047</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1047</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.RxIndication.Offline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1049</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1049</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.RxIndication.NormalOp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout.Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1089</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.TX_CONFIRMATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalState.startupdelay</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1142</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1142</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.NoTxPending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.TxPendingAbort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1232</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.REQUEST_INDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1257</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1257</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.BroadcastRequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1414</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1414</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1426</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1426</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.MAINFUNCTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1453</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1453</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1457</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1457</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1462</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1462</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.AbortTxPending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1637</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1637</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1647</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1647</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1732</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1732</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1737</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1737</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.BaudRateDetectedNormalOp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1805</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.RetryBaudrates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1815</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.CanSmSetBaudrate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1884</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1884</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1988</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1988</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_1996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>1996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.NotDynamic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2015</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2015</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2026</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2026</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2045</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2045</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2082</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2082</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2136</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2136</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NotDynamic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2156</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.Offline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2185</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2185</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.RetryAddressClaiming.NormalOp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.InternalStates.RetryAddressClaiming.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2203</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2203</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.AcLostNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2212</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2223</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00011.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2306</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2306</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.TxPending</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Dsn.CanIfTransmissionState.TxAbort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2326</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2326</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2341</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2341</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/J1939Nm.c.m4_2374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/src/J1939Nm.c.m4</sourcefile>
      <sourceline>2374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ASR42.SWS_J1939Nm_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Channel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.WaitTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_234</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>234</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.BaudRateList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_823</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>823</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PbRAM.J1939NmMaxChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm.xdm.m4_835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm.xdm.m4</sourcefile>
      <sourceline>835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PbRAM.J1939NmMaxNodes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.NumberOfChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.NumberOfNodes</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.NodeDynamicAddressCapable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.DynamicAddressEnabled.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_841</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>841</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.DynamicAddressEnabled.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/J1939Nm_Extension.xdm.m4_868</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/config/J1939Nm_Extension.xdm.m4</sourcefile>
      <sourceline>868</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/J1939Nm_Bswmd.arxml.m4_175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate_swcd/swcd/J1939Nm_Bswmd.arxml.m4</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Nm.xgen_83</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate_var/xgen/J1939Nm.xgen</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/J1939Nm.xgen_170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/src/Autosar/generate_var/xgen/J1939Nm.xgen</sourcefile>
      <sourceline>170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>J1939Nm.dsn.PrecompileTimeConfig</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9294</sourceline>
      <version>1</version>
      <description>The J1939Nm shall provide a precompile-time configuration .</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/J1939Nm_Cfg.h_200</srcid><srcstatus/><internalId>248</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.TxPendingAbort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9304</sourceline>
      <version>1</version>
      <description>When CanIf_Transmit is called with E_OK_NOT and J1939Nm_TxConfirmation is also returned with result E_NOT_OK from J1939NM_TRANSMISSION_PENDING state, the J1939Nm shall enter the TRANSMISSION_ABORT state till it receives a valid response E_OK from CanIf_Transmit call</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1156</srcid><srcstatus/><internalId>344</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.NoTxPending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9314</sourceline>
      <version>1</version>
      <description>When the J1939Nm_TxConfirmation is called for the last transmission, the J1939Nm shall enter the state NO_TRANSMISSION_PENDING</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1142</srcid><srcstatus/><internalId>342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.AbortTxPending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9324</sourceline>
      <version>1</version>
      <description>When CanIf_Transmit is called with E_OK_NOT and J1939Nm_TxConfirmation is also returned with result E_NOT_OK from J1939NM_TRANSMISSION_PENDING state, the J1939Nm shall enter the TRANSMISSION_ABORT state till it receives a valid response E_OK from CanIf_Transmit call</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1529</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.TxPending</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9334</sourceline>
      <version>1</version>
      <description>When CanIf_Transmit is called, the J1939Nm shall enter the TRANSMISSION_PENDING state till it receives J1939Nm_TxConfirmation.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2306</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9344</sourceline>
      <version>1</version>
      <description>the CanIfTransmissionState shall be initially set to no pending transmission.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_398</srcid><srcstatus/><internalId>260</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.CanIfTransmissionState.TxAbort</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9354</sourceline>
      <version>1</version>
      <description>When CanIf_Transmit is called with E_OK_NOT, the J1939Nm shall enter the TRANSMISSION_ABORT state till it receives a valid response E_OK from CanIf_Transmit call.</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2313</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.NetworkRelease</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9364</sourceline>
      <version>1</version>
      <description>A Call to J1939Nm_NetworkRelease() shall set Nm channel to NM_MODE_BUS_SLEEP</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1453</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.RetryAddressClaiming.NormalOp</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9374</sourceline>
      <version>1</version>
      <description>Call to to J1939Nm_RetryAddressClaiming() to retry claiming new address for NormalOperation NodeChannel</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2185</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.RxIndication.NormalOp</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9384</sourceline>
      <version>1</version>
      <description>a call to J1939Nm_RxIndication(AC) with address claimed lost message</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1049</srcid><srcstatus/><internalId>332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalState.startupdelay</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9394</sourceline>
      <version>1</version>
      <description>when startupdelay is enabled, the NodeChannel wait for 250ms to become online </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1137</srcid><srcstatus/><internalId>340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.RetryAddressClaiming.AcLost</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9404</sourceline>
      <version>1</version>
      <description>Call to to J1939Nm_RetryAddressClaiming() to retry claiming new address for AcLost NodeChannel</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_2192</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.RxIndication.Offline</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9414</sourceline>
      <version>1</version>
      <description>Call to J1939Nm_RxIndication(AC) with address claimed lost message</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1048</srcid><srcstatus/><internalId>331</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.BaudRateDetectedNormalOp</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9424</sourceline>
      <version>1</version>
      <description>After a baudrate has been detected for a channel that has automatic baud rate detection enabled, the network request resumes and node-channel states return to normal values</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_1789</srcid><srcstatus/><internalId>393</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.NetworkRequest</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9434</sourceline>
      <version>1</version>
      <description>A call to J1939Nm_NetworkRequest shall set the requested Nm channel to NetworkMode</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_583</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_623</srcid><srcstatus/><internalId>283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.DetectingBaudRate</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9444</sourceline>
      <version>1</version>
      <description>When baudrate detection is enabled for a channel, all node-channel substates are set to OFFLINE_DETECTING_BAUDRATE</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_593</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>J1939Nm.EB.Dsn.InternalStates.Init</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/doc/project/design/pdf/J1939Nm_Design-profiled.xml</sourcefile>
      <sourceline>9454</sourceline>
      <version>1</version>
      <description>Call to J1939Nm_Init() shall set Mode to NM_BUS_SLEEP_MODE</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/J1939Nm.c.m4_424</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939Nm_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/build/reqm/common_req/J1939Nm_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(J1939Nm.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_GenTest_01001_Err_EcuC_Invalid_RxMetaDataItem</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error in case of invalid configuration for Tx MetaData Item
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01002_Err_CanIf_Invalid_TxPduId</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error in case any of the IDs not unique.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01003_Err_EcuC_NonConfigured_MetaDataItem</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error when MetaData Item for J1939NmRxPdu is not configured.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01004_Err_EcuC_Invalid_RxMetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test checks that the generator issues an error in case of invalid MetaDataTypeRef configured
    for J1939NmRxPdu-J1939NmRxPduRef
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01005_Err_EcuC_Invalid_TxMetaDataItem</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error in case of invalid configuration for Tx MetaData Item
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>TS_GenTest_01006_Err_EcuC_Invalid_TxMetaDataTypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_GenTest_01_InvalidConfiguration/source/application/J1939Nm_GenTest_01_InvalidConfiguration.h</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that the generator issues an error in case of invalid MetaDataTypeRef configured
  for J1939NmTxPdu-J1939NmTxPduRef
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.ECUC_J1939Nm_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_PBSELECTABLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_SelectablePostBuild/source/application/J1939Nm_PostBuild.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies that when PostBuildSelectable is enabled the generated files are the same
    as expected. The expected files have been place in the directory reference and if there is 
    no difference at all between the generated post build configuration files and those from the directory
    reference this test will be successful.
  
Test Object: 
    PostBuildSelectable.
  
Test Precondition: 
   Expected postbuild configuration files have been placed in directory reference.
   Postbuild selectable is enabled. 
  
Test Execution: 
    Compile test
  
Test Input: 
  
Test Output: 
    Test correctly generates and compiles.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_LegacySymbolicNameValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_SymbolicNameValues/source/application/Test.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking the symbolic name macros generated:
     - All symbolic names as defined according to AUTOSAR version == 4.2, rev.2 must be provided.
     - According to [TPS_ECUC_02108] the name of the symbol is composed of the module abbreviation
       &lt;MA&gt; of the declaring BSW Module followed by the literal "Conf_" followed by the shortName of
       the EcucParamConfContainerDef of the declaring module followed by the shortName of the
       EcucContainerValue container which holds the symbolicNameValue configuration parameter value.
       The value is the actual number assigned to that handle ID.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_UserCallback</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Compile/IN/J1939Nm_UserCallback/source/application/Test.c</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Checking the symbolic name macros generated:
     - All symbolic names as defined according to AUTOSAR version == 4.2, rev.2 must be provided.
     - According to [TPS_ECUC_02108] the name of the symbol is composed of the module abbreviation
       &lt;MA&gt; of the declaring BSW Module followed by the literal "Conf_" followed by the shortName of
       the EcucParamConfContainerDef of the declaring module followed by the shortName of the
       EcucContainerValue container which holds the symbolicNameValue configuration parameter value.
       The value is the actual number assigned to that handle ID.
  
Test Object: 
  
Test Precondition: 
  
Test Execution: 
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_CHECK_DEINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DeInit_Test/source/application/Tests.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_DeInit(), shall uninitialized the module and set to J1939NM_UNINIT.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm is set to J1939NM_UNINIT.
  
Test Execution: 
  1: VP 
       Call J1939Nm_NetworkRequest() and check that J1939Nm_NetworkRequest returns E_NOT_OK and calls Det_ReportError because the J1939Nm is set to J1939NM_UNINIT.
    2: Call the J1939Nm_Init() with non value zero to initialize the module.
    3: VP:
       Call J1939Nm_NetworkRequest() and check that J1939Nm_NetworkRequest returns E_OK.
    4: VP:
       Check that address claim is sent, and the the status of the channel is changed to Normal and this change reported to Nm module.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: Call the J1939Nm_DeInit() to De-initialize the module.
    6: VP:
       Check that J1939Nm_NetworkRequest and J1939Nm_TxConfirmation return E_NOT_OK and calls Det_ReportError because the J1939Nm is set to J1939NM_UNINIT.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00002.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_CHECK_UNINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that functions: J1939Nm_DeInit(), J1939Nm_NetworkRequest(), J1939Nm_NetworkRelease(),
      J1939Nm_GetState(), J1939Nm_GetBusOffDelay(), J1939Nm_PassiveStartUp(), J1939Nm_RxIndication(),
      J1939Nm_TxConfirmation(), J1939Nm_RequestIndication(), J1939Nm_MainFunction() shall be
      reported the DET error J1939NM_E_UNINIT during uninitialized state.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
    The global variable J1939Nm_InitState shall be set to J1939NM_UNINIT.
    Development error detection is enabled.
  
Test Execution: 
    1: VP:
       Check the global variable J1939Nm_InitState shall be set to J1939NM_UNINIT.
    2: Call the J1939Nm_DeInit() during uninitialized state.
    3: VP:
       Check that J1939Nm_DeInit() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported. 
    4: Call the J1939Nm_NetworkRequest() during uninitialized state.
    5: VP:
       Check that J1939Nm_NetworkRequest() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    6: Call the J1939Nm_NetworkRelease() during uninitialized state.
    7: VP:
       Check that J1939Nm_NetworkRelease() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    8: Call the J1939Nm_GetState() during uninitialized state.
    9: VP:
       Check that J1939Nm_GetState() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    10: Call the J1939Nm_GetBusOffDelay() during uninitialized state.
    11: VP:
       Check that J1939Nm_GetBusOffDelay() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    12: Call the J1939Nm_PassiveStartUp() during uninitialized state.
    13: VP:
       Check that J1939Nm_PassiveStartUp() aborts with the return value
       and reports a Development Error J1939NM_E_UNINIT.
    14: Call the J1939Nm_RxIndication() during uninitialized state.
    15: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    16: Call the J1939Nm_TxConfirmation() during uninitialized state.
    17: VP:
       Check that J1939Nm_TxConfirmation() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    18: Call the J1939Nm_RequestIndication() during uninitialized state.
    19: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    20: Call the J1939Nm_MainFunction() during uninitialized state.
    21: VP:
       Check that J1939Nm_MainFunction() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
m4_ifelse(PM_DynamicAddressEnabled,DYNAMIC_Enabled,\-:m4_dnl
    22: Call the J1939Nm_RetryAddressClaiming() during uninitialized state.
    23: VP:
       Check that J1939Nm_RetryAddressClaiming() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    24: Call the J1939Nm_SetNodeAddress() during uninitialized state.
    25: VP:
       Check that J1939Nm_SetNodeAddress() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
    26: Call the J1939Nm_GetNodeAddress() during uninitialized state.
    27: VP:
       Check that J1939Nm_GetNodeAddress() aborts with the return value
       J1939NM_E_UNINIT and no development error is reported.
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Input: 
    For the Pre-Compile configuration J1939Nm_Init() shall be called with zero value.
    For the Post Build configuration J1939Nm_Init() shall be called with Post build config address.  
  
Test Output: 
    The global variable J1939Nm_InitState shall be set to J1939NM_INIT.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DET.DEINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.NETWORK_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.NETWORK_RELEASE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.GET_STATE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.BUS_OFF_DELAY</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.PASSIVE_STARTUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.RX_INDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.TX_CONFIRMATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.REQUEST_INDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DET.MAINFUNCTION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Uninitialized</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_REINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_Init() shall report DET error J1939NM_E_REINIT, if it's called after
      initialization.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    Development error detection is enabled.
  
Test Execution: 
    1: VP:
       Check the global variable J1939Nm_InitState shall be set to J1939NM_UNINIT.
    2: Call the J1939Nm_Init() with non non zero value to initialize the module.
    3: VP:
       Check the global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    4: Call the J1939Nm_Init() with value zero, after initialize the module.
    5: VP:
       Check that J1939Nm_Init() aborts with the return value
       J1939NM_E_REINIT and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_INVALID_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_Init parameters, shall report DET error J1939NM_E_INIT_FAILED
      when a call provides a invalid pointer.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not intialized initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with NULL_PTR.
    2: Check that J1939Nm_Init() aborts with the return value
       J1939NM_E_INIT_FAILED and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_NULL_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_GetVersionInfo(), J1939Nm_GetState(), J1939Nm_GetBusOffDelay(),
      J1939Nm_RxIndication() parameters, shall report DET error J1939NM_E_PARAM_POINTER
      when a call provides a NULL pointer.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_GetVersionInfo() with NULL_PTR.
    3: VP:
       Check that J1939Nm_GetVersionInfo() aborts with the return value
       J1939NM_E_PARAM_POINTER and no development error is reported.
    4: Call the J1939Nm_GetState() with NULL_PTR.
    5: VP:
       Check that J1939Nm_GetState() aborts with the return value
       J1939NM_E_PARAM_POINTER and no development error is reported.
    6: Call the J1939Nm_GetBusOffDelay() with NULL_PTR.
    7: VP:
       Check that J1939Nm_GetBusOffDelay() aborts with the return value
       J1939NM_E_PARAM_POINTER and no development error is reported.
    8: Call the J1939Nm_RxIndication() with NULL_PTR.
    9: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_PARAM_POINTER and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_NETWORK_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_NetworkRequest(), J1939Nm_NetworkRelease(), J1939Nm_GetState(),
      J1939Nm_GetBusOffDelay(), J1939Nm_PassiveStartup(), J1939Nm_RequestIndication parameters,
      shall report DET error J1939NM_E_INVALID_NETWORK_ID when an unknown handle is provided by the
      call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with wrong Handle Id.
    3: VP:
       Check that J1939Nm_NetworkRequest() aborts with the return value
       J1939NM_E_INVALID_NETWORK_ID and no development error is reported.
    4: Call the J1939Nm_NetworkRelease() with wrong Handle Id.
    5: VP:
       Check that J1939Nm_NetworkRelease() aborts with the return value
       J1939NM_E_INVALID_NETWORK_ID and no development error is reported.
    6: Call the J1939Nm_GetState() with wrong Handle Id.
    7: VP:
       Check that J1939Nm_GetState() aborts with the return value
       J1939NM_E_INVALID_NETWORK_ID and no development error is reported.
    8: Call the J1939Nm_GetBusOffDelay() with wrong Handle Id.
    9: VP:
       Check that J1939Nm_GetBusOffDelay() aborts with the return value
       J1939NM_E_INVALID_NETWORK_ID and no development error is reported.
    10: Call the J1939Nm_RequestIndication() with wrong Handle Id.
    11: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_INVALID_NETWORK_ID and no development error is reported.
    12: Call the J1939Nm_PassiveStartup() with wrong Handle Id.
    13: VP:
       Check that Det_ReportError() was called with errorId corresponding
       to J1939NM_E_INVAID_NETWORK_ID
    14: Call the J1939Nm_SetNodeAddress() with wrong Handle Id.
    15: VP:
       Check that Det_ReportError() was called with errorId corresponding
       to J1939NM_E_INVAID_NETWORK_ID
    16: Call the J1939Nm_GetNodeAddress() with wrong Handle Id.
    17: VP:
       Check that Det_ReportError() was called with errorId corresponding
       to J1939NM_E_INVAID_NETWORK_ID
    18: Call the J1939Nm_RetryAddressClaiming() with wrong Handle Id.
    19: VP:
       Check that Det_ReportError() was called with errorId corresponding
       to J1939NM_E_INVAID_NETWORK_ID
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidNetworkId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_PDUSDU_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_RxIndication(), J1939Nm_TxConfirmation() shall report DET error
      J1939NM_E_INVALID_PDU_SDU_ID when an unknown ID is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() with unknown Id.
    3: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_INVALID_PDU_SDU_ID and no development error is reported.
    4: Call the J1939Nm_TxConfirmation() with unknown Id..
    5: VP:
       Check that J1939Nm_TxConfirmation() aborts with the return value
       J1939NM_E_INVALID_PDU_SDU_ID and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_PDUSDU_LENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>741</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_RxIndication() shall report DET error
      J1939NM_E_INVALID_PDU_SDULENGTH when an invalid sdu length is provided by the call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() with invalid sdu length.
    3: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_INVALID_PDU_SDULENGTH and development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_PduSduLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_ADDRESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_RxIndication(), J1939Nm_RequestIndication() shall report DET error
      J1939NM_E_INVALID_ADDRESS when the 'sourceAddress' not in the valid range.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() with invalid sourceAddress.
    3: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_INVALID_ADDRESS and no development error is reported.
    4: Call the J1939Nm_RequestIndication() with invalid sourceAddress.
    5: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_INVALID_ADDRESS and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_NODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_RxIndication(), J1939Nm_RequestIndication() shall report DET error
      J1939NM_E_INVALID_NODE when 'node' is not one of the configured node IDs(J1939NmNodeId).
      Test that API's J1939Nm_RetryAddressClaiming(), J1939Nm_SetNodeAddress(), J1939Nm_GetNodeAddress() shall report DET error
      J1939NM_E_INVALID_NODE when 'node' is not one of the configured node IDs(J1939NmNodeId).
      Test that API's J1939Nm_RetryAddressClaiming(), J1939Nm_SetNodeAddress() shall report DET error
      J1939NM_E_NOT_DYNAMIC_NODE when 'node' is not configured as J1939NmNodeDynamicAddressCapable.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() with invalid Node.
    3: VP:
       Check that J1939Nm_RxIndication() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    4: Call the J1939Nm_RequestIndication() with invalid Node.
    5: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    6: Call the J1939Nm_RetryAddressClaiming() with invalid Node.
    7: VP:
       Check that J1939Nm_RetryAddressClaiming() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    8: Call the J1939Nm_SetNodeAddress() with invalid Node.
    9: VP:
       Check that J1939Nm_SetNodeAddress() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    10: Call the J1939Nm_GetNodeAddress() with invalid Node.
    11: VP:
       Check that J1939Nm_GetNodeAddress() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    12: Call the J1939Nm_SetNodeAddress() with invalid Node (node doesn't exist).
    13: VP:
       Check that J1939Nm_SetNodeAddress() aborts with the return value
       J1939NM_E_NOT_DYNAMIC_NODE and no development error is reported.
    14: Call the J1939Nm_RetryAddressClaiming() with invalid Node (node doesn't exist).
    15: VP:
       Check that J1939Nm_RetryAddressClaiming() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    16: Call the J1939Nm_SetNodeAddress() with invalid Node.
    17: VP:
       Check that J1939Nm_SetNodeAddress() aborts with the return value
       J1939NM_E_INVALID_NODE and no development error is reported.
    18: Call the J1939Nm_RetryAddressClaiming() with invalid Node.
    19: VP:
       Check that J1939Nm_RetryAddressClaiming() aborts with the return value
       J1939NM_E_NOT_DYNAMIC_NODE and no development error is reported.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NotDynamic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.IllegalNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.NotDynamic</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_STATE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's J1939Nm_SetNodeAddress(),J1939Nm_RetryAddressClaiming(), shall report DET error
      J1939NM_E_INVALID_NODE_STATE when 'node' is in a wrong state.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RetryAddressClaiming() with Node in NM_STATE_BUS_SLEEP Mode.
    3: VP:
      Check that J1939Nm_RetryAddressClaiming() aborts with the return value
      J1939NM_E_INVALID_NODE_STATE and no development error is reported.
    5: Call the J1939Nm_SetNodeAddress() with invalid Node.
    6: VP:
      Check that J1939Nm_SetNodeAddress() aborts with the return value
      NM_STATE_NORMAL_OPERATION and no development error is reported
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.InvalidState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.InvalidState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_PGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RequestIndication() shall report DET error
      J1939NM_E_INVALID_PGN when the 'requestedPgn' is not the PGN of AC.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RequestIndication() with invalid requestedPgn.
    3: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_INVALID_PGN and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_PRIORITY</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1218</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RequestIndication() shall report DET error
      J1939NM_E_INVALID_PRIO when the 'Priority' are not in the valid range.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RequestIndication() with invalid Priority.
    3: VP:
       Check that J1939Nm_RequestIndication() aborts with the return value
       J1939NM_E_INVALID_PRIO and no development error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_CALL_SETUSERDATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Nm_SetUserData() shall report DET error
      J1939NM_E_INVALID_CALL .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_SetUserData().
    3: VP:
       Check that Det_ReportError() was called with errorId corresponding to J1939NM_E_INVALID_CALL.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_CALL_GETUSERDATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1335</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Nm_GetUserData() shall report DET error
      J1939NM_E_INVALID_CALL .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_GetUserData().
    3: VP:
       Check that Det_ReportError() was called with errorId corresponding to J1939NM_E_INVALID_CALL.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_CALL_GETPDUDATA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1393</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Nm_GetPduData() shall report DET error
      J1939NM_E_INVALID_CALL .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_GetPduData().
    3: VP:
       Check that Det_ReportError() was called with errorId corresponding to J1939NM_E_INVALID_CALL.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INVALID_CALL_CHECKREMOTESLEEPINDICATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1451</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that calling J1939Nm_CheckRemoteSleepIndication() shall report DET error
      J1939NM_E_INVALID_CALL .
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_CheckRemoteSleepIndication().
    3: VP:
       Check that Det_ReportError() was called with errorId corresponding to J1939NM_E_INVALID_CALL.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_ECUC_METADATA_ENOTOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DetError_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1509</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that API's EcuC_GetMetaDataCanId() or EcuC_SetMetaDataCanId() shall report DET error
      J1939NM_E_INVALID_METADATA_HANDLE when these EcuC functions returns E_NOT_OK.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Development error detection is enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() with valid input parameters.
    3: VP:
       Check that EcuC_GetMetaDataCanId() is called which returns E_NOT_OK
       and reports the DET Error J1939NM_E_INVALID_METADATA_HANDLE.
    4: Call the J1939Nm_NetworkRequest() with valid network handle.
    5: VP:
       Check that J1939Nm_NetworkRequest() function internally calls
       EcuC_SetMetaDataCanId() which returns E_NOT_OK and reports
       the DET Error J1939NM_E_INVALID_METADATA_HANDLE.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.Invalid_MetaData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_DYNAMIC_PROCESS_PENDING_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() process the pending transmission, 
      J1939Nm_MainFunction() trigger transmission of pending NodeChannels after receiving TxConfirmation from previous transmission.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be False for the requested channel.
    The channel should contain two NodeChannels. In this first NodeChannel will be processed in the
    J1939Nm_NetworkRequest() and the pending one will be processed in the J1939Nm_MainFunction().
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with channel zero(Containing two NodeChannels with
       StartupDelay as FALSE).
    3: VP:After sending the AC message, Check that J1939Nm Module sends the
       state change notifications to BswM Module and NM Module.
    4: Call the J1939Nm_TxConfirmation() to process the first NodeChannel.
    5: Call the J1939Nm_MainFunction() to process second NodeChannel.
    6: Call the J1939Nm_TxConfirmation() to process the second NodeChannel.
   
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_PROCESS_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() process the AddressClaim PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6: Call the J1939Nm_MainFunction() to process the 250ms delay for the AddressClaim PG.
    7: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>304</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() shall change the AddressClaim PG to Cannot ClaimAddress PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
   1: VP:
      Call the J1939Nm_Init() with non zero value to initialize the module.
   2: 
      Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
      StartupDelay as TRUE).
   3: VP:
      Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
   4: VP:
      Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
      Also check that J1939Nm Module sends the state change notifications to BswM Module.
   5: 
      Call the J1939Nm_TxConfirmation() to process the NodeChannel.
   6: 
      Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on Channel 1.
   7: 
      Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to Cannot ClaimAddress PG.
   8: VP:
      Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM_DYNAMIC</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   &lt;para&gt;
      Test that when DynamicAddressClaimed is enabled, J1939Nm_RxIndication() shall change the address of the AcLost Node to Null on all the referee channels 
      and shall trigger to Cannot ClaimAddress PG.
   &lt;/para&gt;

Test Object: None.
Test Precondition: 
   J1939Nm is initialized.
   J1939NmNodeDynamicAddressCapable flag shall be True for the requested nodes.

Test Execution: 
   1: VP:
      Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
      global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
   2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
      StartupDelay as TRUE).
   3: VP:
      Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
   4: VP:
      Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
      Also check that J1939Nm Module sends the state change notifications to BswM Module.
   5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
   6: VP: 
         CHECK if the address is the preferred address (0) on node 0
   7: VP: 
      CHECK if the address is the preferred address (0x80) on node 
   8: Call the  J1939Nm_NetworkRequest() to bring Channel 0 online
   9: VP: 
      CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
      and entered NETWORK_MODE
   10: VP:
      CHECK that NodeChannel 0,2 became in Normal Operation
   11: VP:
      Confirm Address claimed transmit for NodeChannel 0,2 (NodeChannel with
   StartupDelay as FALSE).
   12: VP: 
   Confirm that the current address is the Preferred address for node 0 
   13: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG (for node 0 on channel 1).
   14: VP:
      Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
   15: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
         Cannot ClaimAddress PG.
   16: VP:
      Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
      Also check that J1939Nm Module sends the state change notifications to BswM Module.
   17: VP: 
      Confirm that the current address is changed to NULL Address and the AcLostCallout Function is called.
   18: VP: 
      Confirm that the current address of Node 0 at channel 1 is changed to NULL Address without changing its state.

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>775</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   &lt;para&gt;
      Test that when DynamicAddressClaimed is enabled, J1939Nm_RxIndication() shall change the address of the AcLost Node to Null on all the referee channels 
      and shall trigger to Cannot ClaimAddress PG (for Nodes with StartupDelay Flag = TRUE).
      Also, J1939Nm_RetryAddressClaiming() shall set the node from NORMAL_OPERATION to Claiming of state OFFLINE.
    &lt;/para&gt;
    &lt;para&gt;
         Set node 3 address to be 0x03 instead of its preferred address 0x81
         Set node 3 address to be 0x84 instead of its preferred address 0x82
    &lt;/para&gt;

Test Object: None.
Test Precondition: 
   J1939Nm is initialized.
   StartupDelay flag shall be True for the requested channel.

Test Execution: 
   1: VP:
         Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
         global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
   2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
         StartupDelay as TRUE).
   3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
   4: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
   5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
   6: VP:
         Verify Address claimed message is sent for node 3 with new address (0x03U). 
   7: VP:
         Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   8: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   9: VP:
         Verify Address claimed message is sent for node 4 with new address (0x84U). 
   10: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   11: 
      Call J1939Nm_MainFunction() wait for startup delay to elapse 
   12: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (129) to (3) on node 3 
   13: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (0x82) to (0x84) on node 4 
   14: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed
      15: VP:
         CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
         and entered NETWORK_MODE after the first Node in the channel entered NM_STATE_NORMAL_OPERATION 
   16: 
      Call the  J1939Nm_NetworkRequest() to bring Channel 2 online 
   17: VP:
         Verify Address claimed message is sent for node 2. 
   18: VP: 
         CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
         and entered NETWORK_MODE
   19: VP:
         CHECK that NodeChannel 2 became in Normal Operation immediately after J1939Nm_NetworkRequest() 
         as startupdelay=false for node 2
   20: VP:
         Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   21: VP:
         Confirm that the address of node 3 on channel 2 is the dynamically setted address (0x03). 
   22: 
      wait to skip startup delay time (250ms) of node 3
   23: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed 
   24: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on channel 3 (for Node 3 at address 0x03U).
      as the node3 address already set to 0x03U via J1939Nm_SetNodeAddress(). 
   25: VP: 
      Address claim message is sent, the node 3 has higher priority name 
   26: VP: 
      No state change node will continue in normal operation 
   27: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on channel 3 (for Node 3 at address 0x03U).
         as the node3 address already set to 0x03U via J1939Nm_SetNodeAddress().
   28: VP:
         Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
   29: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
         Cannot ClaimAddress PG.
      30: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
   31: VP:
         Verify cannot claim message is sent (with null address) for node 3 . 
   32: VP:
         Verify that Node 3 on channel 3 entered sub-state AC_LOST of state OFFLINE 
         after the reception of address claimed message with high priority name 
   33:
      Confirm cannot claim message transmission. 
   34: VP:
         Check if the address is changed to NULL address  after AC_LOST on node 3
         on booth channels 2,3 
   35:
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140)
         on Normal Operation NodeChannel (Node 3 on Channel 2 , Node 3 startupdelay=true). 
         Node 3 received AcLost message on other Channel (channel 3), 
         thus address of the requested NodeChannel(Node 3 on Channel 2) is NULL 
   36: VP:
         Confirm that AddressClaimed message is sent with the new address via
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
   37: VP:
         check that state change notification cased by J1939Nm_RetryAddressClaiming, as the node goes to NM_STATE_OFFLINE 
         from NM_STATE_NORMAL_OPERATION.
   38: VP:
         confirmation AddressClaimed message transmission.
   39: 
         Wait for startup delay to elapse.
   40: VP:
         Node become online again after successful claim, and startup delay elapsed 
   41: VP:
         Verify that no pending processing, or transmissions by the module.

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>1269</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   &lt;para&gt;
      Test that when DynamicAddressClaimed is enabled, J1939Nm_RxIndication() shall change the address of the AcLost Node to Null on all the referred channels 
      and shall trigger to Cannot ClaimAddress PG .   
      Test that when AcLost happen for NodeChannel in offline state no BswM notification is reported as NodeChannel still on Offline state
      (Offline-Claiming -&gt; Offline-AcLost).
      - Call Network_Request(), wait for the NodeChannel to be in NORMAL_OPERATION (Node 3 on Channel 2 , startupdelay=true)
      - Simulate ACLost by receiving a high-priority message , J1939Nm sends can't claim message with BswM notification (OFFLINE), AcLost 
      - Retry with new address (0x8C)
      - Simulate AcLost again with the new address (0x8C) , No Notification to BswM (no State change NodeChannel still Offline)
      - Retry again for the second time with new address (0x8D)
      - wait for Startup delay to elapse, turning NodeChannel into NORMAL_OPERATION, notify BswM with state change (Normal Operation).
      &lt;/para&gt;

Test Object: None.
Test Precondition: 
   J1939Nm is initialized.
   StartupDelay flag shall be True for the requested channel.

Test Execution: 
   1: VP:
         Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
         global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
   2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
         StartupDelay as TRUE).
   3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
   4: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
   5: 
      Call the J1939Nm_TxConfirmation() to process the NodeChannel.
   6: VP:
         Verify Address claimed message is sent for node 3 with new address (0x03U). 
   7: VP:
         Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   8: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   9: VP:
         Verify Address claimed message is sent for node 4 with new address (0x84U). 
   10: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   11: 
      Call J1939Nm_MainFunction() wait for startup delay to elapse 
   12: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (129) to (0x03) on node 3 
   13: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (0x82) to (0x84) on node 4 
      14: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed
      9: VP:
         CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
      and entered NETWORK_MODE after the first Node in the channel entered NM_STATE_NORMAL_OPERATION 
   15: 
      Call the  J1939Nm_NetworkRequest() to bring Channel 2 online 
   16: VP:
      Verify Address claimed message is sent for node 2. 
   17: VP: 
      CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
      and entered NETWORK_MODE
   18: VP:
         CHECK that NodeChannel 2 became in Normal Operation immediately after J1939Nm_NetworkRequest() 
         as startupdelay=false for node 2
   19: VP:
      Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   20: VP:
      Verify Address claimed message is sent for node 2. 
   21: VP:
      Confirm that the address of node 3 on channel 2 is the dynamically setted address (0x03). 
   22: 
      wait to skip startup delay time (250ms) of node 3
   23: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed 
   24: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on channel 3 (for Node 3 at address 0x03U).
      as the node3 address already set to 0x03U via J1939Nm_SetNodeAddress().
   25: VP:
      Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
   26: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
      Cannot ClaimAddress PG.
   27: VP:
      Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
   28: VP:
         Verify cannot claim message is sent (with null address) for node 3 . 
   29: VP:
         Verify that Node 3 on channel 3 entered sub-state AC_LOST of state OFFLINE 
         after the reception of address claimed message with high priority name 
   30:
      Confirm cannot claim message transmission. 
   31: VP:
         Check if the address is changed to NULL address  after AC_LOST on node 3
         on booth channels 2,3 
   32:
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140)
         on Normal Operation NodeChannel (Node 3 on Channel 2 , Node 3 startupdelay=true). 
         Node 3 received AcLost message on other Channel (channel 3), 
         thus address of the requested NodeChannel(Node 3 on Channel 2) is NULL 
   33: VP:
         Confirm that AddressClaimed message is sent with the new address via
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
   34: VP:
         check that state change notification cased by J1939Nm_RetryAddressClaiming, as the node goes to NM_STATE_OFFLINE 
         from NM_STATE_NORMAL_OPERATION.
   35: VP:
         confirmation AddressClaimed message transmission.
   36:
         Receive claimed message with same address by Higher Name priority CA, while in claiming mode - Offline State 
   37: VP:
         Verify cannot claim message is sent (with null address) for node 3 . 
   38: 
      Confirm Can't claim message transmission on Channel 2
   39: VP: 
      Check that no BswM notification OFFLINE-OFFLINE transition 
   40:
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8D (141)
         on Normal Operation NodeChannel (Node 3 on Channel 2 , Node 3 startupdelay=true). 
         Node 3 received AcLost message on other Channel (channel 3), 
         thus address of the requested NodeChannel(Node 3 on Channel 2) is NULL 
   41: VP:
         Confirm that AddressClaimed message is sent with the new address via
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
   42: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
   43:
      wait for startup delay to elapse 
   44: VP:
         check that state change notification cased by J1939Nm_RetryAddressClaiming, as the node goes to NM_STATE_NORMAL_OPERATION 
	      (with the new claimed address).

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>1803</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   &lt;para&gt;
      When DynamicAddressClaimed is enabled, Test that J1939Nm_RxIndication() shall trigger transmission of an AddressClaimed PG for the
      according NodeChannel, if payload of the requested source address has a higher numerical value
      than the NAME for this configured source address (SWS_J1939Nm_00020).
      Also check test that J1939Nm_RxIndication() shall trigger transmission of an Cannot ClaimAddress PG for
      the according NodeChannel, if payload of the requested source address has a lower numerical value
      than the NAME for this configured source address.
   &lt;/para&gt;
   &lt;para&gt;
      Set the following nodes addresses dynamically before initialization 
         - Node 3 address to be 0x03 instead of its preferred address 0x81
         - Node 4 address to be 0x84 instead of its preferred address 0x82
      Received address claimed message on channel 3, for node 3 with node address = 0x03.
   &lt;/para&gt;

Test Object: None.
Test Precondition: 
   J1939Nm is initialized.
   StartupDelay flag shall be True for the requested channel.

Test Execution: 
   1: VP:
      Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
      global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
   2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
      StartupDelay as TRUE).
   3: VP:
      Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
   4: VP:
      Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
      Also check that J1939Nm Module sends the state change notifications to BswM Module.
   5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
   6: VP:
         Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   7: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   8: VP:
         Verify Address claimed message is sent for node 4 with new address (0x84U). 
   9: 
      Receive TxConfirmation for sent Address claimed of Node 3. 
   10: 
      Call J1939Nm_MainFunction() wait for startup delay to elapse 
   11: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (129) to (0x03) on node 3 
   12: VP: 
      CHECK if the address is updated from J1939NmNodePreferredAddress (0x82) to (0x84) on node 4 
   13: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed
      14: VP:
         CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
         and entered NETWORK_MODE after the first Node in the channel entered NM_STATE_NORMAL_OPERATION 
   15: 
      Call the  J1939Nm_NetworkRequest() to bring Channel 2 online 
   16: VP:
         Verify Address claimed message is sent for node 2. 
   17: VP: 
         CHECK that Nm_StateChangeNotification is called, and channel became in NORMAL_OPERATION State
         and entered NETWORK_MODE
   18: VP:
         CHECK that NodeChannel 2 became in Normal Operation immediately after J1939Nm_NetworkRequest() 
         as startupdelay=false for node 2
   19: VP:
         Verify that nodes on channel 3 switched to OFFLINE (CLAIMING) waiting for startupdelay to elapse. 
   20: VP:
         Verify Address claimed message is sent for node 2. 
   21: VP:
         Confirm that the address of node 3 on channel 2 is the dynamically setted address (0x03). 
   22: 
      wait to skip startup delay time (250ms) of node 3
   23: VP:
      Confirm that NodeChannel 3,4 entered in NM_STATE_NORMAL_OPERATION after startup delay elapsed 
   24: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on channel 3 (for Node 3 at address 0x03U).
      as the node3 address already set to 0x03U via J1939Nm_SetNodeAddress(). 
   25: VP: 
      Address claim message is sent, the node  3 has higher priority name 
   26: VP: 
      No state change node will continue in normal operation 
   27: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG on channel 3 (for Node 3 at address 0x03U).
      as the node3 address already set to 0x03U via J1939Nm_SetNodeAddress().
   28: VP:
         Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
   29: 
      Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
      Cannot ClaimAddress PG.
   30: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
   31:
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140)
         on Normal Operation NodeChannel (Node 3 on Channel 2 , Node 3 startupdelay=true). 
         Node 3 received AcLost message on other Channel (channel 3), 
         thus address of the requested NodeChannel(Node 3 on Channel 2) is NULL 
   32: VP:
         Confirm that AddressClaimed message is sent with the new address via
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
   33: VP:
         check that state change notification cased by J1939Nm_RetryAddressClaiming, as the node goes to NM_STATE_OFFLINE 
         from NM_STATE_NORMAL_OPERATION (with address = NULL).
   34: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.AcLost</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>2265</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      &lt;para&gt;
      Test that J1939Nm_RetryAddressClaiming() shall update the node address dynamically,
      and change the state of node from sub-state J1939NM_OFFLINE_ACLOST of state NM_STATE_OFFLINE 
      to NM_STATE_NORMAL_OPERATION when address is claimed.
      Test that J1939Nm_GetNodeAddress() gets the currently used address for given node channel.
      &lt;/para&gt;
   
Test Object: None.
Test Precondition: 
      J1939Nm is initialized.
   
Test Execution: 
      1: VP:
         Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
         global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
      2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
         J1939NmNodeDynamicAddressCapable = TRUE).
      3: VP: Call J1939Nm_GetNodeAddress() to get the NodeChannel inital address check if its the preferred address.
      3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
      4: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
      5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
      6: 
         Call J1939Nm_MainFunction()
      7: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG.
      8: VP:
         Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
      9: VP: 
         Confirm that the Callout function is called with the correct node and channel.
      10: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
         Cannot ClaimAddress PG.
      11: VP:
            Check that J1939Nm Module sends the state change notifications to BswM Module.
      12: 
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140)
      13: VP:
         Confirm that AddressClaimed message is sent with the new address via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit().
      14: VP: 
         check that no state change notification cased by J1939Nm_RetryAddressClaiming, as the node is NM_STATE_OFFLINE already.      
      15: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
      16: VP:
         Confirm that the address is claimed successfully by waiting for the startup delay
         with AddressClaimed messages received with same address from other ECUs (no address conflict occurred).
      
      17: VP: 
         Confirm that the node become in NM_STATE_NORMAL_OPERATION, by checking state change notification
         of state NM_STATE_NORMAL_OPERATION via BswM_J1939Nm_StateChangeNotification().
      18: VP: 
         Confirm that the node address is now the new requested address 0x8C (140) using J1939Nm_GetNodeAddress().
      19: VP: 
         Check that no Det errors occurred.

   
Test Input: 
   
Test Output: 
   </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.Offline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout.Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.AcLostNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_RETRIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>2549</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      &lt;para&gt;
      Test that Address claimed message is re-triggered when CanIf() returns E_NOT_OK for the same node.
      , And test that J1939Nm_RetryAddressClaiming() shall update the node address dynamically,
      and change the state of node from sub-state J1939NM_OFFLINE_ACLOST of state NM_STATE_OFFLINE 
      to NM_STATE_NORMAL_OPERATION when address is claimed.
      &lt;/para&gt;
   
Test Object: None.
Test Precondition: 
      J1939Nm is initialized.
   
Test Execution: 
      1: VP:
         Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
         global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
      2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
         J1939NmNodeDynamicAddressCapable = TRUE).
      3: VP: Call J1939Nm_GetNodeAddress() to get the NodeChannel inital address check if its the preferred address.
      3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
      4: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
      5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
      6: 
         Call J1939Nm_MainFunction()
      7: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG.
      8: VP:
         Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
      9: VP: 
         Confirm that the Callout function is called with the correct node and channel.
      10: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
         Cannot ClaimAddress PG.
      11: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
      12: 
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140) with CanIf Return E_NOT_OK
         to test that Address Claimed Transmission will be re-triggered for that node
      13: VP:
         Confirm that AddressClaimed message is sent with the new address via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
      14: VP: 
         check that no state change notification cased by J1939Nm_RetryAddressClaiming, as the node is NM_STATE_OFFLINE already.
      15:
         Set CanIf Transmit to E_OK
      16: VP:
         Confirm that the address is claimed successfully by waiting for the startup delay
         with AddressClaimed messages received with same address from other ECUs (no address conflict occurred).
      17: VP:
         Confirm that AddressClaimed message is re-triggered for sending after CanIf returned E_NOT_OK via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit(). 
      18: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
      19: VP:
         Confirm that the address is claimed successfully by waiting for the startup delay
         with AddressClaimed messages received with same address from other ECUs (no address conflict occurred).
      20: VP: 
         Confirm that after the re-triggering the node successfully claimed the address.
         ,And confirm that the node is in NM_STATE_NORMAL_OPERATION, by checking state change notification
         of state NM_STATE_NORMAL_OPERATION via BswM_J1939Nm_StateChangeNotification().
      21: VP: 
         Confirm that the node address is now the new requested address 0x8C (140) using J1939Nm_GetNodeAddress(). 
      22: VP: 
         Check that no Det errors occurred.
   
Test Input: 
   
Test Output: 
   </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.Offline</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.ACLostCallout.Call</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.AcLostNode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_RETRY_ADDRESSCLAIM_ONLINE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>2852</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      &lt;para&gt;
      Test that J1939Nm_RetryAddressClaiming() shall update the node address dynamically when the NodeChannel in
      NM_STATE_NORMAL_OPERATION, without notifying the BswM.
      Test that J1939Nm_GetNodeAddress() gets the currently used address for given node channel.
      Test the the J1939Nm_Init() API sets the node address to preferred address initially.
      &lt;/para&gt;
   
Test Object: None.
Test Precondition: 
      J1939Nm is initialized.
   
Test Execution: 
      1: VP:
         Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
         global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
      2: Call the J1939Nm_NetworkRequest() with channel One
      3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
      4: VP:
         Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
      5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
      6: 
         Call J1939Nm_MainFunction()
      7: VP:
         Check that the current node address on channel 0 is the preferred address Node 0 (address 0).
      8: 
         Call the J1939Nm_NetworkRequest() with channel Zero .
      09: VP:
         Confirm that AddressClaimed message is sent for node 0 via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit().
      10: VP:
         Confirm state change notification via BswM_J1939Nm_StateChangeNotification() for node 0.
      11: VP:
         Confirm state change notification via BswM_J1939Nm_StateChangeNotification() for node 2.
      12:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
      13: VP:
         Confirm that AddressClaimed message is sent with for node 2 
         EcuC_SetMetaDataCanId() and CanIf_Transmit().
      14:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
      15: VP:
         Confirm that no transmission was pending or and state change.
      16: 
         Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG of Node 0 at channel 1
      17: VP:
         Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
      18: 
         Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to Cannot ClaimAddress PG.
      19: VP:
         Also check that J1939Nm Module sends the state change notifications to BswM Module.
      20: VP:
         Check if the address is changed to NULL address  after AC_LOST on node 0 at channel 0,1  
      21: 
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140) on for node 0 at channel 0  
      22: VP:
         Confirm that AddressClaimed message is sent with the new address via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit().   
      23: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().  
      24: VP:
         Confirm that no state change notification is reported to BswM as the Node 0 is still in normal operation with NULL address 
         as has startup delay disabled (Node shall continue in NM_STATE_NORMAL_OPERATION with the new address)   
      25: VP: 
         Confirm that the node address now uses the requested address 0x8C (140) using J1939Nm_GetNodeAddress().   
      26: 
         Call J1939Nm_RetryAddressClaiming() to retry claiming new address 0x8C (140) on channel 1 (where the AcLost occurred)  
      27: VP:
         Confirm that AddressClaimed message is sent with the new address via 
         EcuC_SetMetaDataCanId() and CanIf_Transmit().   
      28: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().  
      29: VP:
         Confirm that the address is claimed successfully by waiting for the startup delay
         with AddressClaimed messages received with same address from other ECUs (no address conflict occurred).  
      30: VP:
         Confirm that the address is claimed successfully by waiting for the node to enter NM_STATE_NORMAL_OPERATION, by checking state change notification
         of state NM_STATE_NORMAL_OPERATION via BswM_J1939Nm_StateChangeNotification().  
      31: VP:
         Receive AddressClaimed message transmission confirmation J1939Nm_TxConfirmation().
      32: VP: 
         Confirm that the node address is now the new requested address 0x8C (140) using J1939Nm_GetNodeAddress().
   
Test Input: 
   
Test Output: 
   </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.GetNodeAddress</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.NormalOperation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.RetryAddressClaiming.UpdateState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_PROCESS_TX_CONFIRM_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>3260</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the re transmission of PG when E_NOT_OK is returned from J1939Nm_TxConfirmation.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be False for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with channel zero(Containing NodeChannels with
       StartupDelay as FALSE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: Call the J1939Nm_MainFunction() to process the NodeChannel.
    5: VP:
       Check the transmission status flag shall be set to J1939NM_TRANSMISSION_PENDING
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    6: VP:
       Check the CanIf_Transmit shall be called after E_NOT_OK is returned from J1939Nm_TxConfirmation.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_DYNAMIC_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_DynamicAddressClaimed/source/application/Tests.c.m4</sourcefile>
      <sourceline>3386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() shall change the AddressClaim PG to Cannot ClaimAddress PG
      and DEM Event is disabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6:        
        Call J1939Nm_MainFunction().
    7: Call the J1939Nm_MainFunction() to process the 250ms delay for the AddressClaim PG.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_GET_NETWORK_MODE_STATE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_GetState_Test/source/application/Tests.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
     This test returns the state and mode of the requested network.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: VP:
       Call J1939Nm_GetState to check that after initialization state is NM_STATE_BUS_SLEEP, and  mode is NM_MODE_BUS_SLEEP.
    3: Call the J1939Nm_NetworkRequest() with network handle zero.
    4: VP:
       Call J1939Nm_GetState to check that after J1939Nm_NetworkRequest mode is NM_MODE_NETWORK.
    5: Call the J1939Nm_NetworkRelease() with network handle zero, and then call J1939Nm_MainFunction.
    6: VP:
       Call J1939Nm_GetState to check that after J1939Nm_NetworkRelease state is NM_STATE_BUS_SLEEP, and mode is NM_MODE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_GET_VERSION_INFO</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_GetVersionInfo_Test/source/application/Tests.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_GetVersionInfo() shall read out version information of the module.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NM_VERSION_INFO_API macro shall be set.
  
Test Execution: 
    1: VP
       Check the global variable J1939Nm_InitState initial state shall be set to J1939NM_UNINIT.
    2: Call the J1939Nm_Init() with non zero value to initialize the module.
    3: VP:
       Check the global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    4: Call the J1939Nm_GetVersionInfo().
    5: VP:
       Check the vendorID shall be set to J1939NM_VENDOR_ID.
    6: VP:
       Check the moduleID shall be set to J1939NM_MODULE_ID.
    7: VP:
       Check the sw_major_version shall be set to J1939NM_SW_MAJOR_VERSION.
    8: VP:
       Check the sw_minor_version shall be set to J1939NM_SW_MINOR_VERSION.
    9: VP:
       Check the sw_patch_version shall be set to J1939NM_SW_PATCH_VERSION.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_CHECK_INIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: 
    1: VP: Call the J1939Nm_GetVersionInfo() before initialization and check that no det has reported.  
    2: Call the J1939Nm_Init() with non zero value to initialize the module.
    3: VP: Call the J1939Nm_Init() again and check that Det has reported for reinitialization
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_SLEEP_MODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the states of all node channels are set to Sleep Mode during Initialization.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() with non zero value to initialize the module.
    2: VP:
       Call the J1939Nm_GetState() with valid Network Handle and check that
       Sleep Mode is returned.
    3: VP:
       Call the J1939Nm_GetState() with invalid Network Handle and check that
       the function returns E_NOT_OK with default input state.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_IS_VALID_CONFIG_SIGNTURE_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>164</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the initializatio of J1939Nm module when it receives a valid configuration pointer with valid signatures
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: None.
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_INV_PLAT_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test case in which the Platform J1939NM tries to perform an initialization while using an invalid platform signature
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: None.
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_INV_COMP_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>270</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test case in which the Platform J1939NM tries to perform an initialization while using an invalid config signature
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: None.
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_INV_LINK_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>326</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test case in which the Platform J1939NM tries to perform an initialization while using an invalid link time cfg signature
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: None.
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_INV_PUB_SIG</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Init_Test/source/application/Tests.c</sourcefile>
      <sourceline>383</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       Test case in which the Platform J1939NM tries to perform an initialization while using an invalid public info signature
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
  
Test Execution: None.
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_PROCESS_PENDING_TX</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() process the pending transmission.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be False for the requested channel.
    The channel should contain two NodeChannels. In this first NodeChannel will be processed in the
    J1939Nm_NetworkRequest() and the pending one will be processed in the J1939Nm_MainFunction().
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel zero(Containing two NodeChannels with
       StartupDelay as FALSE).
    3: VP:After sending the AC message, Check that J1939Nm Module sends the
       state change notifications to BswM Module and NM Module.
       Also verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED
    4: VP:
       Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    5: Call the J1939Nm_TxConfirmation() to process the first NodeChannel.
    6: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
    7: Call the J1939Nm_MainFunction() to process second NodeChannel.
    8: VP:
       Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    9: Call the J1939Nm_TxConfirmation() to process the second NodeChannel.
    10: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_PROCESS_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() process the AddressClaim PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
    7: Call the J1939Nm_MainFunction() to process the 250ms delay for the AddressClaim PG.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_TO_CANNOTADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() shall change the AddressClaim PG to Cannot ClaimAddress PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
    7: Call the J1939Nm_RxIndication() to process the cannot ClaimAddress PG.
    8: VP:
       Check the NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
    9: Call the J1939Nm_MainFunction() to process the delay for the AddressClaim PG to
       Cannot ClaimAddress PG.
    10: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREFAILED.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00068.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_PROCESS_TX_CONFIRM_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>475</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the re transmission of PG when E_NOT_OK is returned from J1939Nm_TxConfirmation.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be False for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel zero(Containing NodeChannels with
       StartupDelay as FALSE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: Call the J1939Nm_MainFunction() to process the NodeChannel.
    5: VP:
       Check the transmission status flag shall be set to J1939NM_TRANSMISSION_PENDING
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    6: VP:
       Check the CanIf_Transmit shall be called after E_NOT_OK is returned from J1939Nm_TxConfirmation.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_CANNOTADDRESSCLAIM_DEM_EVENT_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() shall change the AddressClaim PG to Cannot ClaimAddress PG
      and DEM Event is disabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
    7: Call the J1939Nm_MainFunction() to process the 250ms delay for the AddressClaim PG.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00012.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_MAINFUNCTION_ADDRESSCLAIM_DEM_EVENT_ENABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_MainFunction_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>760</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_MainFunction() process the AddressClaim PG with DEM event configured.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    StartupDelay flag shall be True for the requested channel.
  
Test Execution: 
    1: VP:
       Call the J1939Nm_Init() with non zero value to initialize the module. and Check the
       global variable J1939Nm_InitState state shall be set to J1939NM_INIT.
    2: Call the J1939Nm_NetworkRequest() with channel One(Containing the NodeChannel with
       StartupDelay as TRUE).
    3: VP:
         Check the transmission by checking for EcuC_SetMetaDataCanId and CanIf_Transmit call.
    4: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: Call the J1939Nm_TxConfirmation() to process the NodeChannel.
    6: VP:
       Check the transmission status flag shall be set to J1939NM_NO_TRANSMISSION_PENDING.
    7: Call the J1939Nm_MainFunction() to process the 250ms delay for the AddressClaim PG.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
       Verify that Dem_ReportErrorStatus is reported with DEM_EVENT_STATUS_PREPASSED
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00013.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.ASR_42.Dem_Reporting</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_NETWORK_RELEASE_CHANNEL0</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRelease_Test/source/application/Tests.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRelease() shall set the reported channel of all NodeChannels to the
        SleepMode.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The NodeChannels of the reported channel shall be set to 'NetworkMode'.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module. 
    2: VP:
       Call the J1939Nm_NetworkRequest() with Handle Id zero, check that it returns E_OK.
    3: VP:
       Check the all NodeChannels of the reported channel shall trigger addressCliam.
       Also check that J1939Nm Module sends the state change notifications to BswM and NM Module.
    4: VP:
       Call the J1939Nm_NetworkRelease() with Handle Id zero, check that it returns E_OK.
    5: VP:
       Call the J1939Nm_GetState() with valid network handle and check that reported
       channel is be set to SleepMode.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    6: VP:
       Check the Nm_BusSleepMode of the reported channel shall be set to SleepMode.
    7: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_RELEASE_CHANNEL1</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRelease_Test/source/application/Tests.c</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRelease() shall update all NodeChannels of channel 1 to SleepMode,
      Also test the array access of multiple channels for Network release functionality.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The NodeChannels of the reported channel shall be set to 'NetworkMode'.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module. 
    2: VP:
       Call the J1939Nm_NetworkRequest() with Handle Id one, check that it returns E_OK.
    3: VP:
       Check the all NodeChannels of the reported channel shall trigger addressCliam.
       Also check that J1939Nm Module sends the state change notifications to BswM and NM Module.
    4: VP:
       Call the J1939Nm_NetworkRelease() with Handle Id one, check that it returns E_OK.
    5: VP:
       Call the J1939Nm_GetState() with valid network handle and check that reported
       channel is be set to SleepMode.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    6: VP:
       Check the Nm_BusSleepMode of the reported channel shall be set to SleepMode.
    7: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_BUS_SLEEP.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00015.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_BAUDRATE_CAPTURE_FAIL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_BaudRate_Test/source/application/Tests.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm shall correctly report a det error when attempting and failing to capture a baudrate
      from the list of configured baudrates on a channel.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
      1:  Call the J1939Nm_Init() non zero value to initialize the module.
      2:  VP Call J1939Nm_GetState to read the mode of a channel
      3:  VP Check that the mode of the requested channel is in sleep mode
      4:  Call the J1939Nm_NetworkRequest() with Handle Id zero
      5:  Call J1939Nm_GetState again to read the mode of a channel
      6:  Check that bswm has been notified that the with State_Offline due to not yet having a baudrate configured
      7:  Call main function in order to trigger a CanSM_SetBaudrate
      8:  Check that CanSM_SetBaudrate has been called for each configured baudrate
      9:  Check that a det error has been signaled because none of the baudrates have been accepted
      10: All baudrates have been attempted, none of them was okay, retry starting from the first one
      11: Check that CanSM_SetBaudrate has been called for the first configured baud-rate again
      12: Check that a det error again has been signaled because none of the baudrates have been accepted
      13: Deinit the module
      14: Sanity check, make sure no other functions were called
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Channel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.WaitTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.NodeChannelNetworkModeState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.CanSmSetBaudrate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.RetryBaudrates</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_BAUDRATE_CAPTURE_GREATSUCCESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_BaudRate_Test/source/application/Tests.c</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       Test that the network request is performed correctly after a succesful setting of the baudrate
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
      1 : Call the J1939Nm_Init() non zero value to initialize the module.
      2 : Call the J1939Nm_NetworkRequest() with Handle Id zero
      3 : Call J1939Nm_GetState again to read the mode of a channel
      4 : Simulate a problem in CANSM that makes CanSm SetBaudRate return E_NOT_OK, internal J1939Nm counters do not increase
      5 : CanSM recovers , J1939Nm proceding to attempt to capture baudrates
      6 : Call main function a number of times until all possible baudrates have had an attempt of being set
      7 : Check that CanSM_SetBaudrate has been called with BaudRateConfigID 0
      8 : CanIF calls J1939Nm_BaudRateDetection function, this signals that there has been communication on CanController with ID 0
      9 : Since there is activity on canController 0 this means that a baudrate has been captured sucesfully
          MainFunction resumes the previous network request now that there is activty on CAN
      10: Check that address claimed message has been sent
      11: Check states, there is activty on can controller 0, so the states are now in normal operation, and mode is Nm_NetworkMode
      12: Call the J1939Nm_TxConfirmation() to process the first NodeChannel
      13: Call J1939Nm_Mainfunction to process the first node channel
      14: Call the J1939Nm_TxConfirmation() to process the second NodeChannel
      15: Call J1939Nm_Mainfunction to process the second node channel
      16: Call the J1939Nm_TxConfirmation() to process the Third NodeChannel
      17: Loop until delay for node with startupdelay configured elapses and process the third nodechannel
      18: Check that the node with startupdelay is in normal operation
      19: De-initialize the module
      20: Sanity check, make sure trace is empty
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Callout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Channel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.WaitTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.CanSmSetBaudrate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_BAUDRATE_CAPTURE_MULTIPLE_NODES</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_BaudRate_Test/source/application/Tests.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
       Test that the network request is performed correctly after a succesful setting of the baudrate
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
      1 : Call the J1939Nm_Init() non zero value to initialize the module.
      2 : Call the J1939Nm_NetworkRequest() for comchannel 0 and 2
      3 : Call J1939Nm_GetState to read the mode of channel 0 and 2
      4 : Call main function to wait for CanSM to try to catch a baudrate on its own
      5 : No reception on channel, main function tries to capture a baudrate for channel 0 and for channel
      6 : Loop until channel 2 wait-time elapses and we call CanSM to attempt to capture a new baudrate
      7 : Wait time elapsed for channel 2, no baudrate captured, move to the next baudrate
      8 : Loop 4 more times untill the wait-time counter elapses for channel 1 and 2 at the same time, WaitTimer 1 is exactly twice as big as WaitTimer 2,
          so there is a "collision"
      9 : 2 CanSM_SetBaudrate calls are sent for both channels because the timers elapsed at the same time
      10: Canif calls macro to mark reception on channel 2, which is mapped by CanSM to canController 1
      11: Call J1939Nm_MainFunction to process channel 2 and switch nodechannels to normal operation
      12: Check states, there is activty on can controller 1, so the states are now in normal operation, and mode is Nm_NetworkMode, 2 nodes are set to normal operation
      13: CanIf calls macro to mark activity on ComM Channel 0
      14: Call main function to process channel 0*
      15: Check states, there is activty on can controller 0, so the states are now in normal operation, and mode is Nm_NetworkMode
      16: Call GetState and veryfiy states*
      17: Call the J1939Nm_TxConfirmation() to process the first NodeChannel
      18: Call J1939Nm_Mainfunction to process the first second node channel
      19: Call MainFunction a bunch of times to look for any random calls
      20: Do a network request on channel 3 to see that channels with no baudrate detection operate normally
      21: Check that state transitions are according to state machine
      22: De-initialize the module
      23: Sanity check, make sure trace is empty
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Callout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.Channel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.WaitTime</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.AutomaticBaudRateDetection.CanSmSetBaudrate</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall set the reported channel of all NodeChannels to the
        NetworkMode.
    &lt;/para&gt;
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall notify this mode change to the Nm_NetworkMode.
    &lt;/para&gt;
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall trigger transmission of an AddressClaimed PG for
        each NodeChannel where J1939NmChannelUsesAddressArbitration is enabled
    &lt;/para&gt;
  &lt;para&gt;
    Test that during initialization via J1939Nm_Init, the J1939 Network
      Management module shall silently assume the SleepMode for all NodeChannels
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState to read the mode of a channel
    3: VP
       Check that the mode of the requested channel is in sleep mode.
    4: Call the J1939Nm_NetworkRequest() with Handle Id zero.
    5: Call J1939Nm_GetState again to read the mode of a channel
    6: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
       Also check that J1939Nm Module sends the state change notifications to BswM Module
    7: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    8: VP:
       Check the CanIf_Transmit() shall be called.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall enter the sub state 'Claiming' of
        the state 'Off-line' immediately after the switch from 'SleepMode' to 'NetworkMode',
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmNodeStartUpDelay shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP:
     Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    4: VP:
       Check that J1939NmNodeStartUpDelay shall be enabled.
    5: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    6: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_CLAIMING.
    7: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module
    8: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG.
    9: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_NORMAL_OPERATION.
    10: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST_STARTUPDELAY_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall enter the state 'NormalOperation' immediately after
      the switch from 'SleepMode' to 'NetworkMode'.
    &lt;/para&gt;
  &lt;para&gt;
    Test that during initialization via J1939Nm_Init, the J1939 Network
      Management module shall silently assume the SleepMode for all NodeChannels
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    The J1939NmNodeStartUpDelay shall be Disabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState to read the mode of a channel.
       VP
       Check that the mode of the requested channel is in sleep mode.
    3: Call the J1939Nm_NetworkRequest() with Handle Id zero.
    4: Call J1939Nm_GetState again to read the mode of a channel
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode
    6: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    7: VP:
       Check that J1939NmNodeStartUpDelay shall be Disabled.
    8: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_NORMAL_OPERATION.
    9: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module
    10: Call the J1939Nm_TxConfirmation() to process the first NodeChannel.
    11: Call the J1939Nm_MainFunction() to process the second NodeChannel.
    12: Call the J1939Nm_TxConfirmation() to process the second NodeChannel.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00011.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00011.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST_CHANNELARBITRATION_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall ignore the request if
      J1939NmChannelUsesAddressArbitration is Disabled.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be Disabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP: 
     Call the J1939Nm_NetworkRequest() with Handle Id zero.
    3: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be Disabled.
    4: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST_MULTIPLE_NODES</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_NetworkRequest() shall handle multiple nodes of the channel.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    Four nodes should be configured. In this two nodes shall have startup delay as true and
    two nodes shall have startup delay as false.
  
Test Execution: 
      1: Call the J1939Nm_Init() non zero value to initialize the module.
      2: Call the J1939Nm_NetworkRequest() with Handle Id zero.
      3: VP:
           Check the J1939NmChannelUsesAddressArbitration shall be Disabled.
      4: VP:
           Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
      5: Check that J1939Nm Module sends the state change notifications to BswM Module.
      6: Check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NETWORK_REQUEST_CANIF_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_NetworkRequest_Test/source/application/Tests.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the CanIf_Transmit() returning E_NOT_OK and retransmission scenarios for J1939Nm_NetworkRequest() call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
      1: Call the J1939Nm_Init() non zero value to initialize the module.
      2: Initialize the return value of CanIf_Transmit() to E_NOT_OK
      3: Call the J1939Nm_NetworkRequest() with Handle Id 3
      4: VP: Check that CanIf_Transmit is called for the Node Configured also verify that EcuC_SetMetaDataCanId
         is called with CanId and Source Address in LSB.
      5: Check that J1939Nm Module sends the state change notifications to BswM Module.
      6: VP: Check that CanIf_Transmit is triggered again for the same Node as CanIf_Transmit returned E_NOT_OK
      7: VP: Check that CanIf_Transmit is triggered again for the same Node as CanIf_Transmit returned E_NOT_OK
      8: Update the return value of CanIf_Transmit() to E_OK
      9: VP: Check that CanIf_Transmit is triggered again for the same Node
      10: Trigger the J1939Nm_TxConfirmation for CanIf_Transmit
      11: VP: Check that CanIf_Transmit is triggered for next Node
      12: Repeat step 10-11 for the remaining nodes configured
      13: VP: Check that J1939Nm Module sends the state change notifications to BswM Module.
      14: VP: Check that trace is empty
      15 : DeInit the module
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_PASSIVESTARTUP_CORRECT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Passive_Test/source/application/Tests.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_PassiveStartUp() shall return E_NOT_OK even if all conditions are correct.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_PassiveStartUp() with Handle Id one and check the return.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_PASSIVESTARTUP_NOINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_Passive_Test/source/application/Tests.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_PassiveStartUp() shall return E_NOT_OK and report DET when the module is not initalized.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    1: Call the J1939Nm_PassiveStartUp() with Handle Id one and check the return.
    2: Check a DET is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00024.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_E_NOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_PbCfgM_ON/source/application/Tests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
    PbcfgM Not initialized.
    J1939Nm use PbcfgM(i.e define J1939Nm module in PbcfgM).
  
Test Execution: 
    1: call J1939Nm_Init with Null Pointer
    2: check PbfgM_GetConfig with return value E_NOT_OK
    3: check Det Error
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_PbCfgM_ON/source/application/Tests.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
    PbcfgM Not initialized.
    J1939Nm use PbcfgM(i.e define J1939Nm module in PbcfgM).
  
Test Execution: 
    1: initialize PbcfgM
    2: call J1939Nm_Init with Null Pointer
    3: check PbfgM_GetConfig with return value E_OK
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CHECK_INIT_PBCFGM_ON_WITH_VALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_PbCfgM_ON/source/application/Tests.c</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is not initialized.
    PbcfgM Not initialized.
    J1939Nm use PbcfgM(i.e define J1939Nm module in PbcfgM).
  
Test Execution: 
    1: initialize PbcfgM
    2: call J1939Nm_Init with valid Pointer
    3: check module initialization status, should be initialized
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RequestIndication() shall Indicates reception of a Request PG.
    &lt;/para&gt;
m4_ifelse(PM_DynamicAddressEnabled,DYNAMIC_Enabled,\-:m4_dnl
    &lt;para&gt;
   Test that the used address is the newly setted address via J1939Nm_SetNodeAddress.
    &lt;/para&gt;
:-/m4_ifelse( :endif: ))\-::-/m4_dnl
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Check the global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    4: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    5: VP:
       Check that J1939NmNodeStartUpDelay shall be enabled.
    6: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    7: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_CLAIMING.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    9: Call the J1939Nm_TxConfirmation() to start the delay.
    10: Call the J1939Nm_RequestIndication() for AddressClaim PG.
    11: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG.
    12: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_NORMAL_OPERATION.
    13: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.DynamicAddressClaimed.SetNodeAddress.State</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_AC_LOST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>198</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RequestIndication() shall Indicates reception of a Request PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Check the global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    4: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    5: VP:
       Check that J1939NmNodeStartUpDelay shall be enabled.
    6: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    7: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_CLAIMING.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    9: Call the J1939Nm_TxConfirmation() to start the delay.
    10: Call the J1939Nm_RxIndication() for Cannot ClaimAddress PG.
    11: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    12: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_ACLOST.
    13: Call the J1939Nm_RequestIndication() for Cannot ClaimAddress PG.
    14: Call the J1939Nm_MainFunction() to wait 250ms of delay of Cannot ClaimAddress PG.
    15: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    16: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with global destination address
      the module shall respond with all claimed addresses by all nodes.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Check the global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    4: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    5: VP:
       Check that J1939NmNodeStartUpDelay shall be enabled.
    6: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    7: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_CLAIMING.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    9: Call the J1939Nm_TxConfirmation() to start the delay.
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG and
        also check that J1939Nm Module sends the state change notifications to BswM Module.
    11: Update the return value of CanIf_Transmit() to E_NOT_OK
    12: Call the J1939Nm_RequestIndication() for AddressClaim PG.
    13: Check that the first node responds with AddressClaimed.
    14: Update the return value of CanIf_Transmit() to E_OK
    15: Check that the first node responds with AddressClaimed again as previous CanIf_Transmit was E_NOT_OK
    16: Call J1939Nm_TxConfirmation() to simulate the successful reception of AddressClaimed.
    17: Check that the second node responds with AddressClaimed.
    18: Call J1939Nm_TxConfirmation() to simulate the successful reception of AddressClaimed.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.BroadcastRequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_AC_LOST_GLOBAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with global destination address
      the module shall respond with all claimed addresses even nodes who's ack is lost.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Check the global variable J1939Nm_InitState shall be set to J1939NM_INIT.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    4: VP:
       Check the J1939NmChannelUsesAddressArbitration shall be enabled.
    5: VP:
       Check that J1939NmNodeStartUpDelay shall be enabled.
    6: VP:
       Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    7: VP:
       Check the all NodeChannelOfflineSubState shall be set to J1939NM_OFFLINE_CLAIMING.
    8: VP:
       Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    9: Call the J1939Nm_TxConfirmation() to start the delay.
    10: Call the J1939Nm_RxIndication() for Cannot ClaimAddress PG.
    11: Call the J1939Nm_RequestIndication() for broadcast(0xFF).
    12: Call the J1939Nm_MainFunction() to wait 250ms of delay of Cannot ClaimAddress PG.
    13: Check that the node that successfuly claimed an address responds and
        also check that J1939Nm Module sends the state change notifications to BswM Module..
    14: Call J1939Nm_TxConfirmation() to simulate the successful reception of AddressClaimed.
    15: Check that the node whose ACK lost will respond with cannot ClaimAddress.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.BroadcastRequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_INVALID_SA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>776</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with invalid
      source address, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with valid Handle Id-1.
    3: VP:
       Check that the AC message is sent for the first configured node with SA-0.
    4: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be set to NM_STATE_NORMAL_OPERATION.
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    6: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message.
    7: Call the J1939Nm_MainFunction() to trigger the AC message of second node.
    8: VP:
       Check that the AC message is sent for the second configured node with SA-128.
    9: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG
    11: Call the J1939Nm_RequestIndication() for AddressClaim PG with invalid Source Address
        and check if the request is ignored
    12: VP:
        Check that DET error is reported with J1939NM_E_INVALID_ADDRESS.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_INVALID_PRIORITY</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>901</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with invalid
      Priority parameter, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with valid Handle Id-1.
    3: VP:
       Check that the AC message is sent for the first configured node with SA-0.
    4: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be set to NM_STATE_NORMAL_OPERATION.
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    6: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message.
    7: Call the J1939Nm_MainFunction() to trigger the AC message of second node.
    8: VP:
       Check that the AC message is sent for the second configured node with SA-128.
    9: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG
    11: Call the J1939Nm_RequestIndication() for AddressClaim PG with invalid Priority
        and check if the request is ignored.
    12: Check that DET error is reported with J1939NM_E_INVALID_PRIO
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_INVALID_PGN</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1025</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with invalid
      PGN, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with valid Handle Id-1.
    3: VP:
       Check that the AC message is sent for the first configured node with SA-0.
    4: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be set to NM_STATE_NORMAL_OPERATION.
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    6: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message.
    7: Call the J1939Nm_MainFunction() to trigger the AC message of second node.
    8: VP:
       Check that the AC message is sent for the second configured node with SA-128.
    9: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG
    11: Call the J1939Nm_RequestIndication() for AddressClaim PG with invalid PGN
        and check if the request is ignored.
    12: VP:
        Check that DET error is reported with J1939NM_E_INVALID_PGN
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_INVALID_NODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1150</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with invalid
      Node Id, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with valid Handle Id-1.
    3: VP:
       Check that the AC message is sent for the first configured node with SA-0.
    4: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be set to NM_STATE_NORMAL_OPERATION.
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    6: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message.
    7: Call the J1939Nm_MainFunction() to trigger the AC message of second node.
    8: VP:
       Check that the AC message is sent for the second configured node with SA-128.
    9: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG
    11: Call the J1939Nm_RequestIndication() for AddressClaim PG with invalid Node Id
        and check if the request is ignored.
    12: VP:
        Check that DET error is reported with J1939NM_E_INVALID_NODE
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_INVALID_DA</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1274</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon receiving J1939Nm_RequestIndication() with invalid
      destination address, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with valid Handle Id-1.
    3: VP:
       Check that the AC message is sent for the first configured node with SA-0.
    4: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be set to NM_STATE_NORMAL_OPERATION.
    5: VP:
       Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    6: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message.
    7: Call the J1939Nm_MainFunction() to trigger the AC message of second node.
    8: VP:
       Check that the AC message is sent for the second configured node with SA-128.
    9: Call the J1939Nm_TxConfirmation() as acknowledgment for the AC message
    10: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG
    11: Call the J1939Nm_RequestIndication() for AddressClaim PG with invalid Destination address
        and check if the request is ignored.
    12: VP:
        Check that DET error is reported with J1939NM_E_INVALID_ADDRESS
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00067.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_SLEEP_MODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1398</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon J1939Nm_RequestIndication() call with specific destination address and NM Module is
      in bus sleep Mode, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_RequestIndication() for AddressClaim PG in NM_MODE_BUS_SLEEP mode
       and check if the request is ignored.
    3. Indicates that J1939Nm_RequestIndication is dropped
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_ADDRESSCLAIM_GLOBAL_SLEEP_MODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1456</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that upon J1939Nm_RequestIndication() call with global destination address and NM Module is
      in bus sleep Mode, J1939NM module shall ignore this request.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_RequestIndication() for AddressClaim PG with Global Destination Address
       in NM_MODE_BUS_SLEEP mode and check if the request is ignored.
    3: Indicates that J1939Nm_RequestIndication is dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.EB.BroadcastRequestIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_REQUEST_INDICATION_CANIF_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RequestIndication_Test/source/application/Tests.c.m4</sourcefile>
      <sourceline>1514</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the CanIf_Transmit() returning E_NOT_OK and retransmission scenarios for J1939Nm_RequestIndication() call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Initialize the return value of CanIf_Transmit() to E_NOT_OK.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    4: VP:Check the all NodeChannels of the reported channel shall be set to NetworkMode.
    5: VP:Check that J1939NmNodeStartUpDelay shall be enabled.
    6: VP:Check the all NodeChannelNetworkMode shall be set to NM_STATE_OFFLINE.
    7: VP:Check the Nm_StateChangeNotification shall be set to NM_STATE_OFFLINE.
    8: Check that J1939Nm Module sends the state change notifications to BswM Module.
    9: VP: Check that CanIf_Transmit is triggered again for the same Node as CanIf_Transmit returned E_NOT_OK
    10: VP: Check that CanIf_Transmit is triggered again for the same Node as CanIf_Transmit returned E_NOT_OK
    11: Update the return value of CanIf_Transmit() to E_OK
    12: VP: Check that CanIf_Transmit is triggered again for the same Node
    13: Call the J1939Nm_TxConfirmation() to start the delay.
    14: Call the J1939Nm_RequestIndication() for AddressClaim PG.
    15: Call the J1939Nm_MainFunction() to wait 250ms of delay of AddressClaim PG.
    16: VP:Check the all NodeChannelNetworkMode shall be set to NM_STATE_NORMAL_OPERATION.
    17: VP: Check the Nm_StateChangeNotification shall be set to NM_STATE_NORMAL_OPERATION.
        Also check that J1939Nm Module sends the state change notifications to BswM Module.
    18: Update the return value of CanIf_Transmit() to E_NOT_OK
    19: Trigger J1939Nm_RequestIndication with valid information
    20:VP: Check that J1939Nm Module sends the state change notifications to BswM Module
    21: VP: Check that CanIf_Transmit is triggered again as CanIf_Transmit returned E_NOT_OK
    22: VP: Check that CanIf_Transmit is triggered again for the same Node as CanIf_Transmit returned E_NOT_OK
    23: Update the return value of CanIf_Transmit() to E_OK
    24: VP: Check that CanIf_Transmit is triggered
    25: DeInit the module
    26: Check for Trace Empty
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RxIndication() shall trigger transmission of an AddressClaimed PG for the
      according NodeChannel, if payload of the requested source address has a higher numerical value
      than the NAME for this configured source address.
      SWS_J1939Nm_00020
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939NmUserCallout shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that all NodeChannels of the reported channel shall trigger transmission of an AddressClaimed PG (check for the first NodeChannel) [SWS_J1939Nm_00009].
    4: VP:
       Check the Nm_StateChangeNotification shall be called [SWS_J1939Nm_00064].
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation().
    7: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    8: VP:
       Check that AddressClaimed PG is called (check for the second NodeChannel) [SWS_J1939Nm_00009].
    9: Call the J1939Nm_TxConfirmation().
    10: Call the J1939Nm_RxIndication() for AddressClaim PG and verify that the call-out function
        J1939Nm_AddressClaimedIndication is called with valid parameters.
    11: VP:
       Check the EcuC_GetMetaDataCanId() shall be called.
    12: VP:
       Check the transmission of an AddressClaimed PG.
    13: Call the J1939Nm_TxConfirmation().
    14: Call the J1939Nm_MainFunction() to wait 250ms.
        And after 250 check that J1939Nm Module sends the state change notifications to BswM Module.
    15: VP:
       Check that trace is empty.
    16: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_ADDRESSCLIAM_LOST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>261</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RxIndication() shall trigger transmission of an Cannot ClaimAddress PG for
      the according NodeChannel, if payload of the requested source address has a lower numerical value
      than the NAME for this configured source address.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmNodeStartUpDelay shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that all NodeChannels of the reported channel shall trigger transmission of an AddressClaimed PG (check for the first NodeChannel) [SWS_J1939Nm_00009].
    4: VP:
       Check the Nm_StateChangeNotification shall be called [SWS_J1939Nm_00064].
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation().
    7: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    8: VP:
       Check that AddressClaimed PG is called (check for the second NodeChannel) [SWS_J1939Nm_00009].
    9: Call the J1939Nm_TxConfirmation().
    10: Call the J1939Nm_RxIndication() for AddressClaim PG.
    11: VP:
       Check the EcuC_GetMetaDataCanId() shall be called.
    12: Call the J1939Nm_MainFunction() to wait the BusOff delay.
    13: VP:
       Check the transmission of an CannotClaimAddress PG.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    14: Call the J1939Nm_TxConfirmation().
    15: VP:
       Check that trace is empty.
    16: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_ACKLOST_STATE_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Nm_RxIndication() call is triggered to lose the address of a nodeChannel in
      NetworkMode then the NM module shall switch to the sub state 'AcLost' of state 'Off-line'.
      Also tests the scenario of CanIf_Transmit returning E_NOT_OK and retransmission of the respective PGs.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and
       Check if the State and Mode are in NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    4: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network mode is in NM_MODE_NETWORK state
    5: VP:
       Check that first NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 0.
    6: VP:
       Check the Nm_StateChangeNotification and BswM_J1939Nm_StateChangeNotification
       shall be called with NM_STATE_NORMAL_OPERATION.
    7: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    8: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    9: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    10: VP:
        Check that Second NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 128.
    11: Call the J1939Nm_TxConfirmation() as a confirmation for second Address Claim PG.
    12: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network state and mode is in
        NM_STATE_NORMAL_OPERATION and NM_MODE_NETWORK state.
    13: Call J1939Nm_MainFunction() with additional delay (250mses + 250msecs). Indicates that the
        NM is in Network Mode
    14: Call the J1939Nm_RxIndication() for AddressClaim PG with higher value of the Name and
        check that J1939Nm Module sends the state change notifications to BswM Module
    15: VP:
        Check that an AddressClaimed PG with Source Address 128 is transmitted, as the name
        received via J1939Nm_RxIndication() is of higher value and of lower Priority.
    16: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    17: Call the J1939Nm_RxIndication() for AddressClaim PG with lower value of the Name.
        This will change the sub state of 2nd NodeChannel to AckLost.
    18: VP:
        Check that NM module shall switch to the sub state 'AcLost' for 2nd node of the channel,
        This is verified by calling J1939Nm_RequestIndication which will trigger CannotClaim Address
        on to the network after random delay [SWS_J1939Nm_00023].
    19: VP:
        Check that first NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 0 immediately
    20: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    21: Initialize the return value of CanIf_Transmit() to E_NOT_OK
    22: Wait for the Random Delay after which CannotClaim PG is sent
    23: VP:
        Check that Second NodeChannel of the reported channel shall trigger transmission of an
        CannotClaimAddress PG with Source Address as 128 after delay[SWS_J1939Nm_00023].
        and also check that J1939Nm Module sends the state change notifications to BswM Module.
    24: VP: Check that CanIf_Transmit() is called again according to SWS_J1939Nm_00062.
    25: VP: Check that CanIf_Transmit is called again as the return value of CanIf_Transmit was E_NOT_OK
    26: Initialize the return value of CanIf_Transmit() to E_OK
    27: VP:
        Check that Second NodeChannel of the reported channel shall trigger transmission of an
        CannotClaimAddress PG with Source Address as 128 after delay[SWS_J1939Nm_00023].
        and also check that J1939Nm Module sends the state change notifications to BswM Module.
    28: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    29: VP:
        Check that trace is empty.
    30: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM_CLAIMING_SUB_STATE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>769</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that a call to J1939Nm_RequestIndication shall trigger transmission of an AddressClaimed PG
      when the addressed NodeChannel is in state NormalOperation or sub state Claiming of state Offline.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that first NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 0.
    4: VP:
       Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    7: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    8: VP:
       Check that Second NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 128.
    9: Call the J1939Nm_RxIndication() (with higher value of name) before J1939Nm_TxConfirmation to
       simulate the scenario of calling J1939Nm_RxIndication before the previous transmission is pending.
    10: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit after RxIndication.
    11: Call the J1939Nm_MainFunction() to send the AddressClaimed PG.
    12: VP:
        Check that J1939Nm_RxIndication() is served after J1939Nm_TxConfirmation() is called and an
        AddressClaimed PG with Source Address 128 is transmitted, as the name received via
        J1939Nm_RxIndication() is of higher value and of lower priority
    13: Call J1939Nm_RequestIndication() before J1939Nm_TxConfirmation() to simulate a scenario of
        J1939Nm_RequestIndication being called when previous transmission state is still pending
        resulting in dropping the request.
        A call to J1939Nm_RequestIndication() for destination address 128 when sub state is Claiming,
        check the transmission of an AddressClaimed PG.[SWS_J1939Nm_00022].
    14: VP:
        Check for Trace empty as J1939Nm_TxConfirmation is not called for previous CanIf_Transmit.
    15: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit of 2nd AC PG.
    16: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    17: VP:
        Check that NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 128 for J1939Nm_RequestIndication() call.
    18: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    19: VP:
        Check that trace is empty.
    20: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00022.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_CLAIMING_SUB_STATE_IMMEDIATE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>987</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that NodeChannels shall enter the sub state Claiming of the state Off-line immediately
      after the switch from SleepMode to NetworkMode.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939NmNodeStartUpDelay should be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and Check if the State and Mode are in
       NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    4: Call J1939Nm_GetState() with NmChannel 1 and Check if the Networkmode is in NM_MODE_NETWORK
    5: VP:
       Check that first NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 0.
    6: VP:
       Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    7: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    8: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit
    9: Call J1939Nm_RequestIndication() for Channel 1 and Node 0 and check if AddressClaim Message PG
       is transmitted immediately without any J1939Nm_MainFunction() delay which in return concludes
       that the NodeChannel has entered sub state Claiming of state Off-line immediately SWS_J1939Nm_00022
    10: VP:
        Check that requested NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 0 immediately.
    11: Call the J1939Nm_TxConfirmation() as a confirmation of AC PG requested via RequestIndication
    12: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    13: VP:
        Check that Second NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 128.
    14: Call the J1939Nm_TxConfirmation() as a confirmation for second Address Claim PG.
    15: VP:
        Check that trace is empty.
    16: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00010.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00040.1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_CHANNEL_SLEEP_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1168</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      When a NodeChannel loses its address in 'NetworkMode', it shall switch to the sub state 'AcLost' of state 'Off-line'.
      This can be tested when J1939Nm_RxIndication() call is triggered to lose the address of a nodeChannel in
      NetworkMode.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
    J1939Nm has one node configured to a channel.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and
       Check if the State and Mode are in NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state.
    3: Call the J1939Nm_NetworkRequest() with Handle Id Two.
    4: Call J1939Nm_GetState() with NmChannel 2 and Check if the Network mode is in NM_MODE_NETWORK state
    5: VP:
       Check that NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 03.
    6: VP:
       Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    7: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    8: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    9: Call J1939Nm_MainFunction() with additional delay (250mses). Indicates that the
       NM is in Network Mode
    10: Call the J1939Nm_RxIndication() for AddressClaim PG with lower value of the Name.
    11: Wait for the Random Delay after which CannotClaim PG is sent.
    12: VP:
        Check that NodeChannel of the reported channel shall trigger transmission
        of an CannotClaimAddress PG ad also check that J1939Nm Module sends the state
        change notifications to BswM Module.
    13: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit
    14: Check the Nm_StateChangeNotification shall be called with NM_STATE_OFFLINE.
    15: Call J1939Nm_GetState() with NmChannel 2 and Check if the Network mode is in
        NM_MODE_BUS_SLEEP and state is in NM_STATE_OFFLINE.
    16: VP:
        Check that trace is empty.
    17: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_BUFFER_HANDLE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm module shall buffer the latest AddreessClaimed or CannotClaim Address,
      by blocking the Tx_Confirmation for broadcast J1939Nm_RequestIndication api and then triggering
      J1939Nm_RxIndication to loose the address and monitoring that J1939Nm transmits latest CannotClaim
      address instead of AddressCalim PG.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmNodeStartUpDelay shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that NodeChannel of the reported channel shall trigger transmission
       of an AddressClaimed PG with Source Address as 0.
    4: VP:
       Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit for first Node.
    7: Call the J1939Nm_MainFunction() to send the AddressClaimed PG.
    8: VP:
       Check that Second NodeChannel of the reported channel shall trigger transmission
       of an AddressClaimed PG with Source Address as 128.
    9: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit for Second Node.
    10: Call J1939Nm_MainFunction() with additional delay (250mses + 250msecs). Indicates
        that the NM is in Network Mode
    11: Call J1939Nm_RequestIndication() with destination address as FF(BroadCast).
    12: Call J1939Nm_MainFunction().
    13: VP:
        Check that first NodeChannel of the reported channel shall trigger transmission
        of an AddressClaimed PG with Source Address as 0 immediately.Also check that
        J1939Nm Module sends the state change notifications to BswM Module.
    14: Call the J1939Nm_RxIndication() before sending J1939Nm_TxConfirmation for previous CanIf_Transmit.
    15: Wait for the Random Delay.
    16: Call J1939Nm_TxConfirmation() after Random delay as a confirmation for CanIf_Transmit
        for first Node of Channel 1.
    17. Call J1939Nm_MainFunction() to trigger the next PG.
    18. VP: Check that Second NodeChannel of the reported channel shall trigger transmission
        of an CannotClaimAddress PG instedd of AC PG, as J1939Nm_RxIndication() call was received
        with higher priority PG.Also check that J1939Nm Module sends the state
        change notifications to BswM Module.
    19. Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    20. Call the J1939Nm_DeInit().
    21. VP: Check that trace is empty.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_CHANNELARBITRATION_FALSE</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      If J1939NmChannelUsesAddressArbitration is disabled, A call to J1939Nm_RxIndication() api does not
      trigger the transmission of an AddressClaimed PG if a pay-load with higher or lower Name is received.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be disabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and
       Check if the State and Mode are in NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state.
    3: Call the J1939Nm_NetworkRequest() with Handle Id Zero.
    4: Call J1939Nm_GetState() with NmChannel 0 and Check if the Network mode is in NM_MODE_NETWORK state
    5: VP: Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION
       Also check that J1939Nm Module sends the state change notifications to BswM Module for
       the two configured nodes, Node0 and Node2
    6: VP: Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009]
    7: Call J1939Nm_MainFunction() with additional delay (250mses). Indicates
       that the NM is in Network Mode
    8: Call the J1939Nm_RxIndication() for AddressClaim PG with higher value of the Name
    9: Wait for the Random Delay, just an additional to check if it does not send any
       CannotClaim PG as J1939NmChannelUsesAddressArbitration is disabled
    10: VP: Check that trace is empty, Indicates that no AddressClaimed PGs are triggered for higher
        value of the Name
    11: Call the J1939Nm_RxIndication() again for AddressClaim PG with lower value of the Name
    12: Wait for the Random Delay, just an additional to check if it does not send any
        CannotClaim PG as J1939NmChannelUsesAddressArbitration is disabled
    13: VP: Check that trace is empty, Indicates that no AddressClaimed PGs are triggered for lower
        value of the Name
    14: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_ADDRESSCLAIM_CANIF_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1728</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test the CanIf_Transmit() returning E_NOT_OK and retransmission scenarios for J1939Nm_RxIndication() call.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that all NodeChannels of the reported channel shall trigger transmission of an AddressClaimed PG (check for the first NodeChannel) [SWS_J1939Nm_00009].
    4: VP:
       Check the Nm_StateChangeNotification shall be called [SWS_J1939Nm_00064].
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation().
    7: Initialize the return value of CanIf_Transmit() to E_NOT_OK and
       Call the J1939Nm_MainFunction() to send the second AddressClaimed
       VP : Check that CanIf_Transmit is called
    8: VP:
       Check that AddressClaimed PG is called (check for the second NodeChannel) [SWS_J1939Nm_00009].
    9: Call the J1939Nm_TxConfirmation().
    10: Initialize the return value of CanIf_Transmit() to E_NOT_OK
    11: Call the J1939Nm_RxIndication() for AddressClaim PG.
    12: VP:
       Check the EcuC_GetMetaDataCanId() shall be called.
    13: VP:
       Check the transmission of an AddressClaimed PG.
    14: VP:
       Check the transmission of an AddressClaimed PG again as previous CanIf_Transmit call was called with
       E_NOT_OK
    15: Initialize the return value of CanIf_Transmit() to E_OK
    16: VP:
       Check the transmission of an AddressClaimed PG again
    17: Call the J1939Nm_TxConfirmation().
    18: Call the J1939Nm_MainFunction() to wait 250ms.
        And after 250 check that J1939Nm Module sends the state change notifications to BswM Module.
    19: VP:
       Check that trace is empty.
    20: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_USER_CALLOUT_NULL_ADDRESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>1989</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RxIndication() shall trigger a User Call-out function when the
      J1939Nm receives an AddressClaim PG with NULL as source address.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939NmUserCallout shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_NetworkRequest() with Handle Id one.
    3: VP:
       Check that all NodeChannels of the reported channel shall trigger transmission of an AddressClaimed PG (check for the first NodeChannel) [SWS_J1939Nm_00009].
    4: VP:
       Check the Nm_StateChangeNotification shall be called [SWS_J1939Nm_00064].
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    5: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    6: Call the J1939Nm_TxConfirmation().
    7: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    8: VP:
       Check that AddressClaimed PG is called (check for the second NodeChannel) [SWS_J1939Nm_00009].
    9: Call the J1939Nm_TxConfirmation().
    10: Call the J1939Nm_RxIndication() for AddressClaim PG.
    11: VP:
        Check that the call-out function J1939Nm_AddressClaimedIndication
        is called with valid parameters.
    12: VP:
       Check the EcuC_GetMetaDataCanId() shall be called.
    13: VP:
       Check that DET error is reported with J1939NM_E_INVALID_ADDRESS as NULL Address 0xFE
       is received J1939Nm_Rx_Indication() call.
    14: Call the J1939Nm_MainFunction() to wait 250ms.
        And after 250 check that J1939Nm Module sends the state change notifications to BswM Module.
    15: VP:
       Check that trace is empty.
    16: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_RX_INDICATION_USER_CALLOUT_INVALID_RXPDUID</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_RxIndication_Test/source/application/Tests.c</sourcefile>
      <sourceline>2183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_RxIndication() shall not trigger a User Call-out function when the
      received with invalid RxPduId.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    J1939NmUserCallout shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: Call the J1939Nm_RxIndication() for AddressClaim PG with invalid RxPduId.
    3: VP:
        Check that the call-out function J1939Nm_AddressClaimedIndication is not
        called by verifying EbTest_Callout_Count variable to Zero.
    4: VP:
       Check the EcuC_GetMetaDataCanId() shall be called.
    5: VP:
       Check that DET error is reported with J1939NM_E_INVALID_PDU_SDU_ID as J1939Nm_Rx_Indication()
       is received with invalid RxPduId
    6: VP:
       Check that trace is empty.
    7: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00036</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_TX_CONFIRMATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_TxConfirmation() shall confirms the transmission of an I-PDU for the lower
      layer communication interface module.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Call the J1939Nm_NetworkRequest() with Handle Id zero and check it returns E_OK.
    3: VP:
       Check that the first NodeChannel of the reported channel trigger addressClaim 
       transmission via CanIf_Transmit() and notified the Nm module with the new status.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    4: Call the J1939Nm_TxConfirmation() to process the first NodeChannel.
    5: Call the J1939Nm_MainFunction() to process the second NodeChannel.
    6: VP:
       Check that the first NodeChannel of the reported channel trigger addressClaim 
       transmission via CanIf_Transmit().
    7: Call the J1939Nm_TxConfirmation() to process the second NodeChannel.
    8: Call J1939Nm_TxConfirmation() again to address the C1-code coverage, Check that the request is dropped.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>J1939Nm.SWS_J1939Nm_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_TX_CONFIRMATION_ADDRESSCLAIM</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Conformance/IN/J1939Nm_TxConfirmation_Test/source/application/Tests.c</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that J1939Nm_TxConfirmation() is called for the initial AddressClaimed PG of a
      NodeChannel shall start the delay timer for this NodeChannel.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmNodeStartUpDelay shall be enabled.
  
Test Execution: 
    1: Call the J1939Nm_Init() non zero value to initialize the module.
    2: VP
       Call the J1939Nm_NetworkRequest() with Handle Id zero and check it returns E_OK.
    3: VP:
       Check that the first NodeChannel of the reported channel trigger addressClaim 
       transmission via CanIf_Transmit() and notified the Nm module with the new status.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    4: Call the J1939Nm_TxConfirmation() to process the first NodeChannel.
    5: Call the J1939Nm_MainFunction() to process the second NodeChannel.
    6: VP:
       Check that the first NodeChannel of the reported channel trigger addressClaim 
       transmission via CanIf_Transmit()
    7: Call the J1939Nm_MainFunction() six times without J1939Nm_TxConfirmation().
    8: Initialize the return value of CanIf_Transmit() to E_NOT_OK
    9: VP:
      Check that addressClaim transmission via CanIf_Transmit() is called again according to SWS_J1939Nm_00062
    10: VP: Check that CanIf_Transmit is called again as the return value of CanIf_Transmit was E_NOT_OK
    11: Initialize the return value of CanIf_Transmit() to E_OK
    12: VP:
      Check that addressClaim transmission via CanIf_Transmit() is called again according to SWS_J1939Nm_00062.
    13: Call the J1939Nm_TxConfirmation() to process the second NodeChannel.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00062.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_J1939NM_SAME_NODE_NAME_VALIDATION_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Implementation/IN/J1939Nm_Same_Node_Name_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Nm_RxIndication() call is triggered with same name then the request
      is ignored.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() with value Non zero to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and
       Check if the State and Mode are in NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state.
    3: Call the J1939Nm_NetworkRequest() with Handle Id one.
    4: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network mode is in NM_MODE_NETWORK state
    5: VP:
       Check that first NodeChannel of the reported channel shall trigger transmission of an
       AddressClaimed PG with Source Address as 0.
    6: VP:
       Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION.
       Also check that J1939Nm Module sends the state change notifications to BswM Module.
    7: VP:
       Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009].
    8: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    9: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    10: VP:
        Check that Second NodeChannel of the reported channel shall trigger transmission of an
        AddressClaimed PG with Source Address as 128.
    11: Call the J1939Nm_TxConfirmation() as a confirmation for second Address Claim PG.
    12: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network state and mode is in
        NM_STATE_NORMAL_OPERATION and NM_MODE_NETWORK state.
    13: Call J1939Nm_MainFunction() with additional delay (250mses + 250msecs). Indicates that the
        NM is in Network Mode
    14: Call the J1939Nm_RxIndication() for AddressClaim PG with higher value of the Name
        Also check that J1939Nm Module sends the state change notifications to BswM Module.
    15: VP:
        Check that an AddressClaimed PG with Source Address 128 is transmitted, as the name
        received via J1939Nm_RxIndication() is of higher value and of lower priority.
    16: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit.
    17: Call the J1939Nm_RxIndication() for AddressClaim PG with same value of the AC-PG Name
        to test the code coverage scenario.
    18: VP:
        Check that J1939Nm_RxIndication() ignores the call as the Address and Name value are same.
    19: Call the J1939Nm_DeInit().
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>TS_J1939NM_NODE_NAME_BYTE1_VALIDATION_TEST</id>
      <status>approved</status>
      <source>EB test case specification (asc_J1939Nm)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_J1939Nm/test/ts5/Implementation/IN/J1939Nm_Same_Node_Name_Validation_Test/source/application/Tests.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Test that when J1939Nm_RxIndication() call is triggered with lower priority name at the first byte J1939Nm module
      shall transmit Address claimed message.
      Test that when J1939Nm_RxIndication() call is triggered with higher priority name at the first byte J1939Nm module
      shall transmit Can't claimed message.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    J1939Nm is initialized.
    The J1939NmChannelUsesAddressArbitration shall be enabled.
    J1939Nm should be in AddressClaim state.
  
Test Execution: 
    1: Call the J1939Nm_Init() with value Non zero to initialize the module.
    2: Call J1939Nm_GetState() with Nm Channel and Check if the State and
     Mode are in NM_STATE_BUS_SLEEP and NM_MODE_BUS_SLEEP state
    3: Call the J1939Nm_NetworkRequest() with Handle Id one
    4: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network
     mode is in NM_MODE_NETWORK state
    5: VP: Check that first NodeChannel of the reported channel shall trigger transmission
      of an AddressClaimed PG with Source Address as 0.
    6: VP: Check the Nm_StateChangeNotification shall be called with NM_STATE_NORMAL_OPERATION
     Also check that J1939Nm Module sends the state change notifications to BswM Module.
    7: VP: Check the Nm_NetworkMode shall be called [SWS_J1939Nm_00009]
    8: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit
    9: Call the J1939Nm_MainFunction() to send the second AddressClaimed.
    10: VP: Check that Second NodeChannel of the reported channel shall trigger transmission
      of an AddressClaimed PG with Source Address as 128.
    11: Call the J1939Nm_TxConfirmation() as a confirmation for second Address Claim PG
    12: Call J1939Nm_GetState() with NmChannel 1 and Check if the Network state and
     mode is in NM_STATE_NORMAL_OPERATION and NM_MODE_NETWORK state
    13: Call J1939Nm_MainFunction() with additional delay (250mses + 250msecs). Indicates
     that the NM is in Network Mode
    14: Call the J1939Nm_RxIndication() for AddressClaim PG with higher value of the Name and
     Also check that J1939Nm Module sends the state change notifications to BswM Module.
    15: VP: Check that an AddressClaimed PG with Source Address 128 is transmitted, as the name
     received via J1939Nm_RxIndication() is of higher value and of lower priority.
    16: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit
    17: Call the J1939Nm_RxIndication() for AddressClaim PG with higher value of the AC-PG Name
     to test the code coverage scenario
    18: VP: Check that an AddressClaimed PG with Source Address 128 is transmitted, as the name
     received via J1939Nm_RxIndication() is of higher value and of lower priority.
    19: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit
    20: Call the J1939Nm_RxIndication() for AddressClaim PG with lower value of the AC-PG Name and higher priority
     to test the code coverage scenario
    21: Wait for bus off delay 
    22: VP: Check that an Can't Claimed Message with NULL Source Address is transmitted, as the name
     received via J1939Nm_RxIndication() is of lower value and of higher priority (on the first byte).
    23: VP: Check that an NodeChannel state changed to OFFLINE-AC Lost 
    24: Call the J1939Nm_TxConfirmation() as a confirmation for CanIf_Transmit on can't claim message
    25: Call the J1939Nm_DeInit()
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00014.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EB_Ref.SWS_J1939Nm_00009.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
